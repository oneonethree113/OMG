Public Class SHM00001
    Inherits System.Windows.Forms.Form

    Public FormIC As frmImportContainer
    Dim ShipmrkAttchmnt As SCM00001_ShpmrkAtchmt


    Dim dsNewRow As DataRow
    Dim mode As String
    Private Const sMODULE As String = "SH"
    Public rs_SYUSRRIGHT_Check As New DataSet
    Public rs_SHIPGDTL_SUM As New DataSet
    Public rs_SYSETINF As New DataSet
    Public rs_SHIPGHDR As New DataSet
    Public rs_SHIPGDTL As New DataSet
    Public rs_SHIPGDTL_dis As New DataSet
    Public rs_SHIPGDTL_display As New DataSet

    Public rs_SHIPGDTL_dis_tmp As New DataSet
    Public rs_SHINVHDR_tmp As New DataSet
    Public rs_SHIPGDTL_dis_tmp2 As New DataSet
    Public rs_SHINVHDR_tmp2 As New DataSet


    Public rs_SHIPGDTL_cov As New DataSet
    Public rs_shipgdtl_hdr As New DataSet

    Public rs_SHINVHDR As New DataSet

    Public rs_SHDISPRM_D As New DataSet
    Public rs_SHDISPRM_P As New DataSet
    Public rs_SHSHPMRK As New DataSet
    Public rs_SHSHPMRK_temp As New DataSet
    Public rs_SHDTLCTN As New DataSet
    Public rs_SHDTLCTN_cov As New DataSet

    Public rs_SCDTLCTN As New DataSet
    Public rs_CUCNTINF As New DataSet
    Public rs_SHCI_SHIPGDTL As New DataSet
    Public rs_SHCI_SHIPGDTL_cov As New DataSet

    Public rs_SCORDDTL As New DataSet
    Public rs_SHPCKDIM As New DataSet
    Public rs_SHPCKDIM_cov As New DataSet

    Public rs_SCCPTBKD As New DataSet
    Public rs_SHCPTBKD As New DataSet

    Public rs_SCDISPRM_D As New DataSet
    Public rs_SCDISPRM_P As New DataSet


    Public rs_SCSHPMRK As New DataSet

    Public rs_SCASSINF As New DataSet
    Public rs_SHINVHDR_CHK As New DataSet

    Public rs_SHPKDHIS As New DataSet
    Public rs_SHSMPINV As New DataSet

    Public rs_sainvhdr_cus1no As New DataSet
    Public rs_SHRMKVAL As New DataSet

    Dim rs_CUBASINF As New DataSet
    Dim rs_SHIPGDTL_cov_back As New DataSet
    Dim rs_SHPCKDIM_cov_back As New DataSet
    Dim rs_SHDTLCTN_cov_back As New DataSet

    Dim rs_VNCNTINF As New DataSet
    Dim rs_VNCNTINF2 As New DataSet

    Dim rs_SHIPGDTL_cov_list As New DataSet
    Dim rs_SHCPTBKD_cov_back As New DataSet

    Public rs_SHASSINF As New DataSet
    Public rs_SHASSINF_cov_back As New DataSet

    Public rs_save_only As New DataSet

    Public ShpQtyOK As Boolean
    Public Recordstatus_Dtl As Boolean


    Public sms As frmShipMarkSelect
    Public shm1_1 As SHM00001_1
    Public shm1_2 As SHM00001_2
    Public shm1_3 As SHM00001_3

    Public FrmINR00001 As INR00001
    Public FrmPKR00001 As PKR00001


    Dim dr() As DataRow

    Public flg_DisplayShipDetailData As Boolean
    Public flg_DisplayShipMarkData As Boolean


    Dim CanModify As Boolean ' Check for access right

    Dim Add_flag As Boolean     '*** Check for Add Record
    Dim sMode As String
    Private Const cModeInit As String = "Init"
    Private Const cModeAdd As String = "Add"
    Private Const cModeCopy As String = "Copy"
    Private Const cModeUpd As String = "Updating"
    Private Const cModeSave As String = "Save"
    Private Const cModeDel As String = "Delete"
    Private Const cModeRead As String = "ReadOnly"
    Private Const cModeClear As String = "Clear"
    Dim shpno As String
    Dim gi_saved_items_count As Integer
    Public no_Display_Detail As Boolean
    Public sReadingIndexS As String = 0
    Public sReadingIndexP As String = 0

    Public sReadingIndexI_I As String = 0
    Public sReadingIndexI_S As String = 0
    Public sReadingIndexI_P As String = 0

    Public sReadingIndexCB As String = 0


    Dim Insert_flag As Boolean
    Dim drNewRow As DataRow
    Dim PreviousTab As Integer = 0
    Public flg_DisplayInvoiceHeaderData As Boolean
    Dim isSorting As Boolean = False
    Dim flag_txtShpQty_KeyPress As Boolean
    Dim flag_txtPCQty_keypress As Boolean
    Dim flag_txtCartonFactor_KeyPress As Boolean
    Dim flag_cboCtrSiz_GotFocus As Boolean

    Dim maxshpseq As Integer
    Dim Grid_Got_Focus As String '*** Grid focus
    Dim richtext_focus As String
    Dim hdp_ordno_list As String
    Dim lstDis As New ArrayList
    Dim lstPre As New ArrayList
    Dim DisPreEditCellRow As Integer
    Dim DisPreEditCellCol As Integer
    Dim IsUpdated As Boolean
    Dim flag_txtJobNo_KeyPress As Boolean
    Dim flag_txtordNo_KeyPress As Boolean
    Dim flag_cboInvNo_KeyPress As Boolean
    Dim flag_cboInvNoM_KeyPress As Boolean
    Dim gi_grdPremium_row As Integer
    Dim gi_grdDiscount_row As Integer
    Dim gi_dg_sainvhdr_row As Integer
    Dim TmpSort As String
    Public flag_need_delete_container As Boolean
    Public delete_container_number As String
    Dim flag_checking As Boolean
    Dim cur_sc_no As String
    Dim cur_job_no As String
    Dim chk_cmin As Integer
    Dim flag_cboOrdNo_Click As Boolean
    Dim tmp_dg_sainvhdr_hsi_sminvno As String
    Dim tmp_dgPCKDIM_0_9
    Dim not_enter_colpck As Boolean
    Dim counter_msg_not_enter_colpck As Integer
    Public direction As String
    Public ListSortDirection_Descending As Integer
    Public ListSortDirection_Ascending As Integer
    Public flag_sorted As Boolean
    Public col_sorted As Integer
    Public last_dg_PCKDIM_row As Integer
    Public last_dg_PCKDIM_col As Integer
    Public loop_check_pckdim_count As Integer

    Dim tmp_sc_seq As Integer

    Public last_scjob_action As String ' SC/JOB
    Public flag_cellendedit As Boolean
    Public flag_display_not_for_change As Boolean
    Dim flag_cov_click As Boolean


    Dim CmdBatUpdate_Batchupdate_apply As Integer
    Dim CmdBatUpdate_Batchupdate_innvo As Integer

    Dim CmdBatUpdate_Batchupdate_apply2 As Integer
    Dim CmdBatUpdate_Batchupdate_innvo2 As Integer

    Dim mmdPrint_Right As Boolean = False


#Region " Datagrid Variable "
    Dim grdShpSum_Del As Integer
    Dim grdShpSum_COV As Integer
    Dim grdShpSum_hid_cocde As Integer
    Dim grdShpSum_hid_shpno As Integer
    Dim grdShpSum_hid_shpseq As Integer
    Dim grdShpSum_hid_invno As Integer
    Dim grdShpSum_hid_ctrsiz As Integer
    Dim grdShpSum_hid_ctrcfs As Integer
    Dim grdShpSum_hid_sealno As Integer
    Dim grdShpSum_hid_cuspo As Integer
    Dim grdShpSum_hid_jobno As Integer
    Dim grdShpSum_hid_ordno As Integer
    Dim grdShpSum_hid_purord As Integer
    Dim grdShpSum_hid_itmno As Integer
    Dim grdShpSum_hid_cusitm As Integer
    Dim grdShpSum_hid_colpck
    Dim grdShpSum_hid_cuscol As Integer
    Dim grdShpSum_hid_shpqty As Integer
    Dim grdShpSum_hid_untcde As Integer
    Dim grdShpSum_hid_ttlctn As Integer
    Dim grdShpSum_hid_ctnstr As Integer
    Dim grdShpSum_hid_ctnend As Integer
    Dim grdShpSum_hid_mtrdcm As Integer
    Dim grdShpSum_hid_actvol As Integer
    Dim grdShpSum_hid_ttlvol As Integer
    Dim grdShpSum_hid_grswgt As Integer
    Dim grdShpSum_hid_ttlgrs As Integer
    Dim grdShpSum_hid_netwgt As Integer
    Dim grdShpSum_hid_ttlnet As Integer
    Dim grdShpSum_hid_paytrm As Integer
    Dim grdShpSum_hid_paytrmdsc As Integer
    Dim grdShpSum_hid_prctrm As Integer
    Dim grdShpSum_hid_selprc As Integer
    Dim grdShpSum_hid_untsel As Integer
    Dim grdShpSum_hid_untamt As Integer
    Dim grdShpSum_hid_ttlamt As Integer
    Dim grdShpSum_hid_mannam As Integer
    Dim grdShpSum_hid_venno As Integer
    Dim grdShpSum_hid_cusven As Integer
    Dim grdShpSum_hid_pckrmk As Integer
    Dim grdShpSum_hid_creusr As Integer
    Dim grdShpSum_hid_alsitmno As Integer
    Dim grdShpSum_hid_alscolcde As Integer
    Dim grdShpSum_hid_custum As Integer

#End Region
#Region " Datagrid Variable2"
    Dim grdPremium_DEL As Integer
    Dim grdPremium_hdp_cde As Integer
    Dim grdPremium_hdp_dsc As Integer
    Dim grdPremium_hdp_pctamt As Integer
    Dim grdPremium_hdp_pct As Integer
    Dim grdPremium_hdp_amt As Integer
    Dim grdPremium_hdp_cocde As Integer
    Dim grdPremium_hdp_shpno As Integer
    Dim grdPremium_hdp_invno As Integer
    Dim grdPremium_hdp_type As Integer
    Dim grdPremium_hdp_seqno As Integer
    Dim grdPremium_hdp_creusr As Integer
#End Region
#Region " Datagrid Variable3"
    Dim grdDiscount_DEL As Integer
    Dim grdDiscount_hdp_cde As Integer
    Dim grdDiscount_hdp_dsc As Integer
    Dim grdDiscount_hdp_pctamt As Integer
    Dim grdDiscount_hdp_pct As Integer
    Dim grdDiscount_hdp_amt As Integer
    Dim grdDiscount_hdp_cocde As Integer
    Dim grdDiscount_hdp_shpno As Integer
    Dim grdDiscount_hdp_invno As Integer
    Dim grdDiscount_hdp_type As Integer
    Dim grdDiscount_hdp_seqno As Integer
    Dim grdDiscount_hdp_creusr As Integer
#End Region

#Region " Datagrid Variable4"
    Dim dgPCKDIM_hpd_cocde As Integer
    Dim dgPCKDIM_hpd_shpno As Integer
    Dim dgPCKDIM_hpd_shpseq As Integer
    Dim dgPCKDIM_hpd_pdseq As Integer
    Dim dgPCKDIM_hpd_pdnum As Integer
    Dim dgPCKDIM_hpd_dimtyp As Integer
    Dim dgPCKDIM_hpd_ctnnam As Integer
    Dim dgPCKDIM_hpd_des As Integer
    Dim dgPCKDIM_hpd_ctn As Integer
    Dim dgPCKDIM_hpd_l_cm As Integer
    Dim dgPCKDIM_hpd_w_cm As Integer
    Dim dgPCKDIM_hpd_h_cm As Integer
    Dim dgPCKDIM_hpd_cbm_cm As Integer
    Dim dgPCKDIM_hpd_ttlcbm_cm As Integer
    Dim dgPCKDIM_hpd_gw_kg As Integer
    Dim dgPCKDIM_hpd_ttlgw_kg As Integer
    Dim dgPCKDIM_hpd_nw_kg As Integer
    Dim dgPCKDIM_hpd_ttlnw_kg As Integer
    Dim dgPCKDIM_hpd_l_in As Integer
    Dim dgPCKDIM_hpd_w_in As Integer
    Dim dgPCKDIM_hpd_h_in As Integer
    Dim dgPCKDIM_hpd_cbm_in As Integer
    Dim dgPCKDIM_hpd_ttlcbm_in As Integer
    Dim dgPCKDIM_hpd_gw_lb As Integer
    Dim dgPCKDIM_hpd_ttlgw_lb As Integer
    Dim dgPCKDIM_hpd_nw_lb As Integer
    Dim dgPCKDIM_hpd_ttlnw_lb As Integer
    Dim dgPCKDIM_hpd_creusr As Integer
    Dim dgPCKDIM_hpd_updusr As Integer
    Dim dgPCKDIM_hpd_credat As Integer
    Dim dgPCKDIM_hpd_upddat

#End Region

    Dim dgSCCPTBKD_Del As Integer
    Dim dgSCCPTBKD_Mat As Integer
    Dim dgSCCPTBKD_Cur As Integer
    Dim dgSCCPTBKD_CstAmt As Integer
    Dim dgSCCPTBKD_CstPer As Integer
    Dim dgSCCPTBKD_Wgt As Integer

    Const dgvDisPre_Dele As Integer = 0
    Const dgvDisPre_Code As Integer = 5
    Const dgvDisPre_Desc As Integer = 6
    Const dgvDisPre_PctAmt As Integer = 7
    Const dgvDisPre_Pct As Integer = 8
    Const dgvDisPre_Amt As Integer = 9

    Const dg_sainvhdr_Del As Integer = 0
    Const dg_sainvhdr_hsi_cocde As Integer = 1
    Const dg_sainvhdr_hsi_cus1no As Integer = 2
    Const dg_sainvhdr_hsi_shpno As Integer = 3
    Const dg_sainvhdr_hsi_shinvno As Integer = 4
    Const dg_sainvhdr_hsi_sminvno As Integer = 5
    Const dg_sainvhdr_hsi_rmk As Integer = 6
    Const dg_sainvhdr_creusr As Integer = 7




#Region " Windows Form Designer generated code"
    Friend WithEvents btcSHM00001 As ERPSystem.BaseTabControl
    Friend WithEvents tpSHM00001_1 As System.Windows.Forms.TabPage
    Friend WithEvents tpSHM00001_2 As System.Windows.Forms.TabPage
    Friend WithEvents tpSHM00001_3 As System.Windows.Forms.TabPage
    Friend WithEvents cms_CopyNPaste As System.Windows.Forms.ContextMenuStrip
    Friend WithEvents smi_Copy As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents smi_Paste As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents txtShpNo As System.Windows.Forms.TextBox
    Friend WithEvents lblQutNo As System.Windows.Forms.Label
    Friend WithEvents cboCoCde As System.Windows.Forms.ComboBox
    Friend WithEvents Label1 As System.Windows.Forms.Label
    Friend WithEvents txtRvsDat As System.Windows.Forms.TextBox
    Friend WithEvents lblRvsDat As System.Windows.Forms.Label
    Friend WithEvents txtIssDat As System.Windows.Forms.TextBox
    Friend WithEvents lblIssDat As System.Windows.Forms.Label
    Friend WithEvents cboCus1No As System.Windows.Forms.ComboBox
    Friend WithEvents lblCus1No As System.Windows.Forms.Label
    Friend WithEvents cboCus2No As System.Windows.Forms.ComboBox
    Friend WithEvents txtCoNam As System.Windows.Forms.TextBox
    Friend WithEvents Label2 As System.Windows.Forms.Label
    Friend WithEvents lblQutSts As System.Windows.Forms.Label
    Friend WithEvents cboShpSts As System.Windows.Forms.ComboBox
    Friend WithEvents tpSHM00001_4 As System.Windows.Forms.TabPage
    Friend WithEvents tpSHM00001_5 As System.Windows.Forms.TabPage
    Friend WithEvents tpSHM00001_6 As System.Windows.Forms.TabPage
    Friend WithEvents GroupBox2 As System.Windows.Forms.GroupBox
    Friend WithEvents GroupBox1 As System.Windows.Forms.GroupBox
    Friend WithEvents gbPri As System.Windows.Forms.GroupBox
    Friend WithEvents lblCus1Zp As System.Windows.Forms.Label
    Friend WithEvents txtVes As System.Windows.Forms.TextBox
    Friend WithEvents cmdPickDate As System.Windows.Forms.Button
    Friend WithEvents txtVoy As System.Windows.Forms.TextBox
    Friend WithEvents txtSlnOnb As System.Windows.Forms.TextBox
    Friend WithEvents Label5 As System.Windows.Forms.Label
    Friend WithEvents txtArrDat As System.Windows.Forms.TextBox
    Friend WithEvents Label6 As System.Windows.Forms.Label
    Friend WithEvents txtCrrSo As System.Windows.Forms.TextBox
    Friend WithEvents txtDst As System.Windows.Forms.TextBox
    Friend WithEvents Label7 As System.Windows.Forms.Label
    Friend WithEvents txtCntyOrgn As System.Windows.Forms.TextBox
    Friend WithEvents txtPotLoa As System.Windows.Forms.TextBox
    Friend WithEvents txtGodDsc As System.Windows.Forms.TextBox
    Friend WithEvents Label4 As System.Windows.Forms.Label
    Friend WithEvents Label3 As System.Windows.Forms.Label
    Friend WithEvents Label9 As System.Windows.Forms.Label
    Friend WithEvents GroupBox3 As System.Windows.Forms.GroupBox
    Friend WithEvents txtBilStt As System.Windows.Forms.TextBox
    Friend WithEvents txtBilAdr As System.Windows.Forms.RichTextBox
    Friend WithEvents txtBilEnt As System.Windows.Forms.TextBox
    Friend WithEvents Label10 As System.Windows.Forms.Label
    Friend WithEvents cboBilCty As System.Windows.Forms.ComboBox
    Friend WithEvents txtBilZip As System.Windows.Forms.TextBox
    Friend WithEvents Label12 As System.Windows.Forms.Label
    Friend WithEvents txtTtlGwg As System.Windows.Forms.TextBox
    Friend WithEvents cboUntAmt As System.Windows.Forms.ComboBox
    Friend WithEvents txtTtlNwg As System.Windows.Forms.TextBox
    Friend WithEvents txtTtlAmt As System.Windows.Forms.TextBox
    Friend WithEvents GroupBox5 As System.Windows.Forms.GroupBox
    Friend WithEvents GroupBox6 As System.Windows.Forms.GroupBox
    Friend WithEvents txtShpSeq As System.Windows.Forms.TextBox
    Friend WithEvents Label13 As System.Windows.Forms.Label
    Friend WithEvents optCtrSiz3 As System.Windows.Forms.RadioButton
    Friend WithEvents optCtrSiz2 As System.Windows.Forms.RadioButton
    Friend WithEvents optCtrSiz1 As System.Windows.Forms.RadioButton
    Friend WithEvents optCtrSiz0 As System.Windows.Forms.RadioButton
    Friend WithEvents Label14 As System.Windows.Forms.Label
    Friend WithEvents optCtrSiz4 As System.Windows.Forms.RadioButton
    Friend WithEvents Label16 As System.Windows.Forms.Label
    Friend WithEvents txtSealNo As System.Windows.Forms.TextBox
    Friend WithEvents Label15 As System.Windows.Forms.Label
    Friend WithEvents txtCtrCfs As System.Windows.Forms.TextBox
    Friend WithEvents cboPckRmk As System.Windows.Forms.ComboBox
    Friend WithEvents txtOrdNo As System.Windows.Forms.TextBox
    Friend WithEvents Label19 As System.Windows.Forms.Label
    Friend WithEvents txtJobNo As System.Windows.Forms.TextBox
    Friend WithEvents Label18 As System.Windows.Forms.Label
    Friend WithEvents Label22 As System.Windows.Forms.Label
    Friend WithEvents Label20 As System.Windows.Forms.Label
    Friend WithEvents txtCusStyNo As System.Windows.Forms.TextBox
    Friend WithEvents Label21 As System.Windows.Forms.Label
    Friend WithEvents txtCusPo As System.Windows.Forms.TextBox
    Friend WithEvents Label24 As System.Windows.Forms.Label
    Friend WithEvents txtItmDsc As System.Windows.Forms.RichTextBox
    Friend WithEvents Label23 As System.Windows.Forms.Label
    Friend WithEvents txtCusItm As System.Windows.Forms.TextBox
    Friend WithEvents cboItmNo As System.Windows.Forms.ComboBox
    Friend WithEvents Label25 As System.Windows.Forms.Label
    Friend WithEvents chkPC As System.Windows.Forms.CheckBox
    Friend WithEvents Label30 As System.Windows.Forms.Label
    Friend WithEvents txtColDsc As System.Windows.Forms.TextBox
    Friend WithEvents Label29 As System.Windows.Forms.Label
    Friend WithEvents Label27 As System.Windows.Forms.Label
    Friend WithEvents txtCustUM As System.Windows.Forms.TextBox
    Friend WithEvents Label28 As System.Windows.Forms.Label
    Friend WithEvents txtCusCol As System.Windows.Forms.TextBox
    Friend WithEvents cboColPck As System.Windows.Forms.ComboBox
    Friend WithEvents Label26 As System.Windows.Forms.Label
    Friend WithEvents optSearch1 As System.Windows.Forms.RadioButton
    Friend WithEvents optSearch0 As System.Windows.Forms.RadioButton
    Friend WithEvents Label31 As System.Windows.Forms.Label
    Friend WithEvents lblpc As System.Windows.Forms.Label
    Friend WithEvents lblconftr As System.Windows.Forms.Label
    Friend WithEvents txtPC As System.Windows.Forms.TextBox
    Friend WithEvents txtConFtr As System.Windows.Forms.TextBox
    Friend WithEvents txtShpQty As System.Windows.Forms.TextBox
    Friend WithEvents Label34 As System.Windows.Forms.Label
    Friend WithEvents Label35 As System.Windows.Forms.Label
    Friend WithEvents Label36 As System.Windows.Forms.Label
    Friend WithEvents txtTtlCtnD As System.Windows.Forms.TextBox
    Friend WithEvents cmdMore As System.Windows.Forms.Button
    Friend WithEvents txtCtnEnd As System.Windows.Forms.TextBox
    Friend WithEvents txtCtnStr As System.Windows.Forms.TextBox
    Friend WithEvents Label37 As System.Windows.Forms.Label
    Friend WithEvents txtInrCtn As System.Windows.Forms.TextBox
    Friend WithEvents Label38 As System.Windows.Forms.Label
    Friend WithEvents txtUntCde As System.Windows.Forms.TextBox
    Friend WithEvents Label40 As System.Windows.Forms.Label
    Friend WithEvents txtVol As System.Windows.Forms.TextBox
    Friend WithEvents Label39 As System.Windows.Forms.Label
    Friend WithEvents txtMtrCtn As System.Windows.Forms.TextBox
    Friend WithEvents Label41 As System.Windows.Forms.Label
    Friend WithEvents Label42 As System.Windows.Forms.Label
    Friend WithEvents Label44 As System.Windows.Forms.Label
    Friend WithEvents Label43 As System.Windows.Forms.Label
    Friend WithEvents Label45 As System.Windows.Forms.Label
    Friend WithEvents txtTtlVolD As System.Windows.Forms.TextBox
    Friend WithEvents Label46 As System.Windows.Forms.Label
    Friend WithEvents txtActVol As System.Windows.Forms.TextBox
    Friend WithEvents txtMtrhcm As System.Windows.Forms.TextBox
    Friend WithEvents txtMtrwcm As System.Windows.Forms.TextBox
    Friend WithEvents txtMtrdcm As System.Windows.Forms.TextBox
    Friend WithEvents Label47 As System.Windows.Forms.Label
    Friend WithEvents Label48 As System.Windows.Forms.Label
    Friend WithEvents txtTtlNetD As System.Windows.Forms.TextBox
    Friend WithEvents txtNetWgt As System.Windows.Forms.TextBox
    Friend WithEvents Label49 As System.Windows.Forms.Label
    Friend WithEvents Label50 As System.Windows.Forms.Label
    Friend WithEvents txtTtlGrsD As System.Windows.Forms.TextBox
    Friend WithEvents txtGrsWgt As System.Windows.Forms.TextBox
    Friend WithEvents Label51 As System.Windows.Forms.Label
    Friend WithEvents Label52 As System.Windows.Forms.Label
    Friend WithEvents txtManAdr As System.Windows.Forms.TextBox
    Friend WithEvents cboManAdr As System.Windows.Forms.ComboBox
    Friend WithEvents txtManNam As System.Windows.Forms.TextBox
    Friend WithEvents txtCmpRmk As System.Windows.Forms.TextBox
    Friend WithEvents Label53 As System.Windows.Forms.Label
    Friend WithEvents Label54 As System.Windows.Forms.Label
    Friend WithEvents Label55 As System.Windows.Forms.Label
    Friend WithEvents Label56 As System.Windows.Forms.Label
    Friend WithEvents cboUntAmtD As System.Windows.Forms.ComboBox
    Friend WithEvents txtTtlAmtD As System.Windows.Forms.TextBox
    Friend WithEvents cboPCPrc As System.Windows.Forms.ComboBox
    Friend WithEvents txtSelPrcD As System.Windows.Forms.TextBox
    Friend WithEvents cboUntSelD As System.Windows.Forms.ComboBox
    Friend WithEvents txtInvNo As System.Windows.Forms.TextBox
    Friend WithEvents cmdConInv As System.Windows.Forms.Button
    Friend WithEvents cmdAss As System.Windows.Forms.Button
    Friend WithEvents chkDel As System.Windows.Forms.CheckBox
    Friend WithEvents cmdBck As System.Windows.Forms.Button
    Friend WithEvents cmdNxt As System.Windows.Forms.Button
    Friend WithEvents txtCusVen As System.Windows.Forms.TextBox
    Friend WithEvents txtVenNo As System.Windows.Forms.TextBox
    Friend WithEvents txtPurSeq As System.Windows.Forms.TextBox
    Friend WithEvents txtPurOrd As System.Windows.Forms.TextBox
    Friend WithEvents txtColCde As System.Windows.Forms.TextBox
    Friend WithEvents cboBilAdr As System.Windows.Forms.ComboBox
    Friend WithEvents cboPrcTrm As System.Windows.Forms.ComboBox
    Friend WithEvents cboPayTrm As System.Windows.Forms.ComboBox
    Friend WithEvents cbobank As System.Windows.Forms.ComboBox
    Friend WithEvents Label57 As System.Windows.Forms.Label
    Friend WithEvents GroupBox7 As System.Windows.Forms.GroupBox
    Friend WithEvents Label58 As System.Windows.Forms.Label
    Friend WithEvents Label59 As System.Windows.Forms.Label
    Friend WithEvents Label60 As System.Windows.Forms.Label
    Friend WithEvents cboInvNo As System.Windows.Forms.ComboBox
    Friend WithEvents Label61 As System.Windows.Forms.Label
    Friend WithEvents txtInvDat As System.Windows.Forms.TextBox
    Friend WithEvents chkClose As System.Windows.Forms.CheckBox
    Friend WithEvents optDocTyp0 As System.Windows.Forms.RadioButton
    Friend WithEvents optDocTyp2 As System.Windows.Forms.RadioButton
    Friend WithEvents optDocTyp1 As System.Windows.Forms.RadioButton
    Friend WithEvents Label62 As System.Windows.Forms.Label
    Friend WithEvents txtDoc As System.Windows.Forms.RichTextBox
    Friend WithEvents Label63 As System.Windows.Forms.Label
    Friend WithEvents Label64 As System.Windows.Forms.Label
    Friend WithEvents txtLcStmt As System.Windows.Forms.TextBox
    Friend WithEvents GroupBox8 As System.Windows.Forms.GroupBox
    Friend WithEvents TxtTtlCtnI As System.Windows.Forms.TextBox
    Friend WithEvents txtTtlAmtI As System.Windows.Forms.TextBox
    Friend WithEvents cboUntAmtI As System.Windows.Forms.ComboBox
    Friend WithEvents txtTtlVolI As System.Windows.Forms.TextBox
    Friend WithEvents Label65 As System.Windows.Forms.Label
    Friend WithEvents Label67 As System.Windows.Forms.Label
    Friend WithEvents Label68 As System.Windows.Forms.Label
    Friend WithEvents txtTtlHdpAmt As System.Windows.Forms.TextBox
    Friend WithEvents Label70 As System.Windows.Forms.Label
    Friend WithEvents txtAFamt As System.Windows.Forms.TextBox
    Friend WithEvents Label69 As System.Windows.Forms.Label
    Friend WithEvents txtInvAmt As System.Windows.Forms.TextBox
    Friend WithEvents Label66 As System.Windows.Forms.Label
    Friend WithEvents DataGrid2 As System.Windows.Forms.DataGridView
    Friend WithEvents cboInvNoP As System.Windows.Forms.ComboBox
    Friend WithEvents Label71 As System.Windows.Forms.Label
    Friend WithEvents Label73 As System.Windows.Forms.Label
    Friend WithEvents Label72 As System.Windows.Forms.Label
    Friend WithEvents grdPremium As System.Windows.Forms.DataGridView
    Friend WithEvents grdDiscount As System.Windows.Forms.DataGridView
    Friend WithEvents GroupBox10 As System.Windows.Forms.GroupBox
    Friend WithEvents DataGrid3 As System.Windows.Forms.DataGridView
    Friend WithEvents Label78 As System.Windows.Forms.Label
    Friend WithEvents Label79 As System.Windows.Forms.Label
    Friend WithEvents txtImgPth As System.Windows.Forms.TextBox
    Friend WithEvents txtImgNam As System.Windows.Forms.TextBox
    Friend WithEvents txtEngDsc As System.Windows.Forms.RichTextBox
    Friend WithEvents cboInvNoM As System.Windows.Forms.ComboBox
    Friend WithEvents cboOrdNo As System.Windows.Forms.ComboBox
    Friend WithEvents Label87 As System.Windows.Forms.Label
    Friend WithEvents Label82 As System.Windows.Forms.Label
    Friend WithEvents Label80 As System.Windows.Forms.Label
    Friend WithEvents Label81 As System.Windows.Forms.Label
    Friend WithEvents Picture1 As System.Windows.Forms.PictureBox
    Friend WithEvents Label74 As System.Windows.Forms.Label
    Friend WithEvents grdShpSum As System.Windows.Forms.DataGridView
    Friend WithEvents chkSmpShp As System.Windows.Forms.CheckBox
    Friend WithEvents txtCrr As System.Windows.Forms.TextBox
    Friend WithEvents txtOrdSeq As System.Windows.Forms.TextBox
    Friend WithEvents txtItmTyp As System.Windows.Forms.TextBox
    Friend WithEvents chkApprove As System.Windows.Forms.CheckBox
    Friend WithEvents mvwSlnOnb As System.Windows.Forms.MonthCalendar
    Friend WithEvents txtPrcTrm As System.Windows.Forms.TextBox
    Friend WithEvents txtOrgQty As System.Windows.Forms.TextBox
    Friend WithEvents txtOutQty As System.Windows.Forms.TextBox
    Friend WithEvents txtPayTrm As System.Windows.Forms.TextBox
    Friend WithEvents Label75 As System.Windows.Forms.Label
    Friend WithEvents txtCartonFactor As System.Windows.Forms.TextBox
    Friend WithEvents Label76 As System.Windows.Forms.Label
    Friend WithEvents GroupBox11 As System.Windows.Forms.GroupBox
    Friend WithEvents weight1 As System.Windows.Forms.RadioButton
    Friend WithEvents weight3 As System.Windows.Forms.RadioButton
    Friend WithEvents weight2 As System.Windows.Forms.RadioButton
    Friend WithEvents dgSCCPTBKD As System.Windows.Forms.DataGridView
    Friend WithEvents dgPCKDIM As System.Windows.Forms.DataGridView
    Friend WithEvents Label77 As System.Windows.Forms.Label
    Friend WithEvents lblPreInfo As System.Windows.Forms.Label
    Friend WithEvents lblDisInfo As System.Windows.Forms.Label
    Friend WithEvents grdPre As System.Windows.Forms.DataGridView
    Friend WithEvents grdDis As System.Windows.Forms.DataGridView
    Friend WithEvents GroupBox12 As System.Windows.Forms.GroupBox
    Friend WithEvents optitmsm As System.Windows.Forms.RadioButton
    Friend WithEvents optinvsm As System.Windows.Forms.RadioButton
    Friend WithEvents cmdSelSM As System.Windows.Forms.Button
    Friend WithEvents CmdCOV As System.Windows.Forms.Button
    Friend WithEvents lstCde_P As System.Windows.Forms.ListBox
    Friend WithEvents lstCde_D As System.Windows.Forms.ListBox
    Friend WithEvents cboCtrSiz As System.Windows.Forms.ComboBox
    Friend WithEvents GroupBox9 As System.Windows.Forms.GroupBox
    Friend WithEvents optFOB2 As System.Windows.Forms.RadioButton
    Friend WithEvents optFOB1 As System.Windows.Forms.RadioButton
    Friend WithEvents mvwcgrcvdat As System.Windows.Forms.MonthCalendar
    Friend WithEvents Label8 As System.Windows.Forms.Label
    Friend WithEvents cmdPickDate2 As System.Windows.Forms.Button
    Friend WithEvents txtcargorcvdat As System.Windows.Forms.TextBox
    Friend WithEvents Label84 As System.Windows.Forms.Label
    Friend WithEvents cboInvFooter As System.Windows.Forms.ComboBox
    Friend WithEvents Label86 As System.Windows.Forms.Label
    Friend WithEvents txtConsolNo As System.Windows.Forms.TextBox
    Friend WithEvents chkpckrmk As System.Windows.Forms.CheckBox
    Friend WithEvents Label17 As System.Windows.Forms.Label
    Friend WithEvents chkrpl As System.Windows.Forms.CheckBox
    Friend WithEvents Label88 As System.Windows.Forms.Label
    Friend WithEvents StatusBar As System.Windows.Forms.StatusBar
    Friend WithEvents StatusBarPanel1 As System.Windows.Forms.StatusBarPanel
    Friend WithEvents StatusBarPanel2 As System.Windows.Forms.StatusBarPanel
    Friend WithEvents cboCus2No_dtl As System.Windows.Forms.ComboBox
    Friend WithEvents lbl_cus2 As System.Windows.Forms.Label
    Friend WithEvents txtcus2no As System.Windows.Forms.TextBox
    Friend WithEvents cmdinscpb As System.Windows.Forms.Button
    Friend WithEvents cbo_scno As System.Windows.Forms.ComboBox
    Friend WithEvents Label32 As System.Windows.Forms.Label
    Friend WithEvents Label33 As System.Windows.Forms.Label
    Friend WithEvents Label89 As System.Windows.Forms.Label
    Friend WithEvents Label90 As System.Windows.Forms.Label
    Friend WithEvents Label91 As System.Windows.Forms.Label
    Friend WithEvents cboSort3 As System.Windows.Forms.ComboBox
    Friend WithEvents cboSort2 As System.Windows.Forms.ComboBox
    Friend WithEvents cboSort1 As System.Windows.Forms.ComboBox
    Friend WithEvents cmdShpmrkAttchmnt As System.Windows.Forms.Button
    Friend WithEvents txtmodvol As System.Windows.Forms.TextBox
    Friend WithEvents Label93 As System.Windows.Forms.Label
    Friend WithEvents txt_name_f1 As System.Windows.Forms.TextBox
    Friend WithEvents Label92 As System.Windows.Forms.Label
    Friend WithEvents Label94 As System.Windows.Forms.Label
    Friend WithEvents txt_dsc_f1 As System.Windows.Forms.TextBox
    Friend WithEvents Label95 As System.Windows.Forms.Label
    Friend WithEvents Label97 As System.Windows.Forms.Label
    Friend WithEvents Label96 As System.Windows.Forms.Label
    Friend WithEvents txt_dsc_f3 As System.Windows.Forms.TextBox
    Friend WithEvents txt_dsc_f2 As System.Windows.Forms.TextBox
    Friend WithEvents txt_name_f3 As System.Windows.Forms.TextBox
    Friend WithEvents txt_name_f2 As System.Windows.Forms.TextBox
    Friend WithEvents txtCover As System.Windows.Forms.RichTextBox
    Friend WithEvents txtItmShm As System.Windows.Forms.RichTextBox
    Friend WithEvents txtFtrRmk As System.Windows.Forms.RichTextBox
    Friend WithEvents txtEngRmk As System.Windows.Forms.RichTextBox
    Friend WithEvents cboPckListFooter As System.Windows.Forms.ComboBox
    Friend WithEvents txtBilRmk As System.Windows.Forms.RichTextBox
    Friend WithEvents Label98 As System.Windows.Forms.Label
    Friend WithEvents Label99 As System.Windows.Forms.Label
    Friend WithEvents ConvertToPlainTextToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents UndoToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mvw_a As System.Windows.Forms.MonthCalendar
    Friend WithEvents cmdPickDate_a As System.Windows.Forms.Button
    Friend WithEvents Label100 As System.Windows.Forms.Label
    Friend WithEvents txtexptaddr As System.Windows.Forms.RichTextBox
    Friend WithEvents txtexptnam As System.Windows.Forms.TextBox
    Friend WithEvents cboexptnam As System.Windows.Forms.ComboBox
    Friend WithEvents Label101 As System.Windows.Forms.Label
    Friend WithEvents Label102 As System.Windows.Forms.Label
    Friend WithEvents txtLcBank As System.Windows.Forms.TextBox
    Friend WithEvents txtLCNo As System.Windows.Forms.TextBox
    Friend WithEvents dg_sainvhdr As System.Windows.Forms.DataGridView
    Friend WithEvents Label85 As System.Windows.Forms.Label
    Friend WithEvents GroupBox13 As System.Windows.Forms.GroupBox
    Friend WithEvents Label103 As System.Windows.Forms.Label
    Friend WithEvents mvwLCdat As System.Windows.Forms.MonthCalendar
    Friend WithEvents cmdPickDate3 As System.Windows.Forms.Button
    Friend WithEvents txtLCdat As System.Windows.Forms.TextBox
    Friend WithEvents Label104 As System.Windows.Forms.Label
    Friend WithEvents Label105 As System.Windows.Forms.Label
    Friend WithEvents Label83 As System.Windows.Forms.Label
    Friend WithEvents txtresppo As System.Windows.Forms.TextBox
    Friend WithEvents Label106 As System.Windows.Forms.Label
    Friend WithEvents txtcussku As System.Windows.Forms.TextBox
    Friend WithEvents GroupBox4 As System.Windows.Forms.GroupBox
    Friend WithEvents rb_ctn As System.Windows.Forms.RadioButton
    Friend WithEvents rb_cfs As System.Windows.Forms.RadioButton
    Friend WithEvents txtTtlcbm As System.Windows.Forms.TextBox
    Friend WithEvents Label107 As System.Windows.Forms.Label
    Friend WithEvents txtTtlCtn As System.Windows.Forms.TextBox
    Friend WithEvents Label11 As System.Windows.Forms.Label
    Friend WithEvents GroupBox14 As System.Windows.Forms.GroupBox
    Friend WithEvents Label108 As System.Windows.Forms.Label
    Friend WithEvents Label109 As System.Windows.Forms.Label
    Friend WithEvents txtPCPrc As System.Windows.Forms.TextBox
    Friend WithEvents CmdBatUpdate As System.Windows.Forms.Button
    Friend WithEvents PanShpbchup As System.Windows.Forms.Panel
    Friend WithEvents CmdShpchupcancel As System.Windows.Forms.Button
    Friend WithEvents CmdShpchupok As System.Windows.Forms.Button
    Friend WithEvents DgShpbchup As System.Windows.Forms.DataGridView
    Friend WithEvents PanShpbchup2 As System.Windows.Forms.Panel
    Friend WithEvents CmdBatUpdate2 As System.Windows.Forms.Button
    Friend WithEvents DgShpbchup2 As System.Windows.Forms.DataGridView
    Friend WithEvents CmdShpchupcancel2 As System.Windows.Forms.Button
    Friend WithEvents CmdShpchupok2 As System.Windows.Forms.Button
    Friend WithEvents menuStrip As System.Windows.Forms.MenuStrip
    Friend WithEvents mmdAdd As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdSave As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdDelete As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdCopy As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdFind As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents t1 As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdClear As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents t2 As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdSearch As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents t3 As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdInsRow As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdDelRow As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents t4 As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdPrint As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents t5 As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdAttach As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents t6 As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdFunction As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdRel As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdApv As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents t7 As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdLink As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents t8 As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents mmdExit As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents PrintInvoiceToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
    Friend WithEvents PrintPackingListToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem

    Public rs_POM00010_AppList As New DataSet

    Public Sub New()
        MyBase.New()

        'This call is required by the Windows Form Designer.
        InitializeComponent()

        'Add any initialization after the InitializeComponent() call

    End Sub

    'Form overrides dispose to clean up the component list.
    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
        If disposing Then
            If Not (components Is Nothing) Then
                components.Dispose()
            End If
        End If
        MyBase.Dispose(disposing)
    End Sub

    'Required by the Windows Form Designer
    Private components As System.ComponentModel.IContainer

    'NOTE: The following procedure is required by the Windows Form Designer
    'It can be modified using the Windows Form Designer.  
    'Do not modify it using the code editor.
    <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
        Me.components = New System.ComponentModel.Container
        Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(SHM00001))
        Me.cms_CopyNPaste = New System.Windows.Forms.ContextMenuStrip(Me.components)
        Me.smi_Copy = New System.Windows.Forms.ToolStripMenuItem
        Me.smi_Paste = New System.Windows.Forms.ToolStripMenuItem
        Me.ConvertToPlainTextToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
        Me.UndoToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
        Me.txtShpNo = New System.Windows.Forms.TextBox
        Me.lblQutNo = New System.Windows.Forms.Label
        Me.cboCoCde = New System.Windows.Forms.ComboBox
        Me.Label1 = New System.Windows.Forms.Label
        Me.txtRvsDat = New System.Windows.Forms.TextBox
        Me.lblRvsDat = New System.Windows.Forms.Label
        Me.txtIssDat = New System.Windows.Forms.TextBox
        Me.lblIssDat = New System.Windows.Forms.Label
        Me.cboCus1No = New System.Windows.Forms.ComboBox
        Me.lblCus1No = New System.Windows.Forms.Label
        Me.cboCus2No = New System.Windows.Forms.ComboBox
        Me.txtCoNam = New System.Windows.Forms.TextBox
        Me.Label2 = New System.Windows.Forms.Label
        Me.lblQutSts = New System.Windows.Forms.Label
        Me.cboShpSts = New System.Windows.Forms.ComboBox
        Me.StatusBar = New System.Windows.Forms.StatusBar
        Me.StatusBarPanel1 = New System.Windows.Forms.StatusBarPanel
        Me.StatusBarPanel2 = New System.Windows.Forms.StatusBarPanel
        Me.menuStrip = New System.Windows.Forms.MenuStrip
        Me.mmdAdd = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdSave = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdDelete = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdCopy = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdFind = New System.Windows.Forms.ToolStripMenuItem
        Me.t1 = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdClear = New System.Windows.Forms.ToolStripMenuItem
        Me.t2 = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdSearch = New System.Windows.Forms.ToolStripMenuItem
        Me.t3 = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdInsRow = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdDelRow = New System.Windows.Forms.ToolStripMenuItem
        Me.t4 = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdPrint = New System.Windows.Forms.ToolStripMenuItem
        Me.PrintInvoiceToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
        Me.PrintPackingListToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
        Me.t5 = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdAttach = New System.Windows.Forms.ToolStripMenuItem
        Me.t6 = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdFunction = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdRel = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdApv = New System.Windows.Forms.ToolStripMenuItem
        Me.t7 = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdLink = New System.Windows.Forms.ToolStripMenuItem
        Me.t8 = New System.Windows.Forms.ToolStripMenuItem
        Me.mmdExit = New System.Windows.Forms.ToolStripMenuItem
        Me.btcSHM00001 = New ERPSystem.BaseTabControl
        Me.tpSHM00001_1 = New System.Windows.Forms.TabPage
        Me.GroupBox2 = New System.Windows.Forms.GroupBox
        Me.GroupBox13 = New System.Windows.Forms.GroupBox
        Me.CmdCOV = New System.Windows.Forms.Button
        Me.GroupBox12 = New System.Windows.Forms.GroupBox
        Me.optitmsm = New System.Windows.Forms.RadioButton
        Me.optinvsm = New System.Windows.Forms.RadioButton
        Me.chkApprove = New System.Windows.Forms.CheckBox
        Me.chkSmpShp = New System.Windows.Forms.CheckBox
        Me.txtCrr = New System.Windows.Forms.TextBox
        Me.GroupBox3 = New System.Windows.Forms.GroupBox
        Me.Label109 = New System.Windows.Forms.Label
        Me.Label108 = New System.Windows.Forms.Label
        Me.txtTtlcbm = New System.Windows.Forms.TextBox
        Me.Label107 = New System.Windows.Forms.Label
        Me.txtTtlAmt = New System.Windows.Forms.TextBox
        Me.Label12 = New System.Windows.Forms.Label
        Me.cboUntAmt = New System.Windows.Forms.ComboBox
        Me.txtTtlNwg = New System.Windows.Forms.TextBox
        Me.txtTtlGwg = New System.Windows.Forms.TextBox
        Me.txtTtlCtn = New System.Windows.Forms.TextBox
        Me.Label11 = New System.Windows.Forms.Label
        Me.txtGodDsc = New System.Windows.Forms.TextBox
        Me.GroupBox1 = New System.Windows.Forms.GroupBox
        Me.cboBilAdr = New System.Windows.Forms.ComboBox
        Me.txtBilZip = New System.Windows.Forms.TextBox
        Me.Label10 = New System.Windows.Forms.Label
        Me.cboBilCty = New System.Windows.Forms.ComboBox
        Me.txtBilStt = New System.Windows.Forms.TextBox
        Me.txtBilAdr = New System.Windows.Forms.RichTextBox
        Me.txtBilEnt = New System.Windows.Forms.TextBox
        Me.Label3 = New System.Windows.Forms.Label
        Me.Label9 = New System.Windows.Forms.Label
        Me.txtCrrSo = New System.Windows.Forms.TextBox
        Me.gbPri = New System.Windows.Forms.GroupBox
        Me.dg_sainvhdr = New System.Windows.Forms.DataGridView
        Me.Label85 = New System.Windows.Forms.Label
        Me.txtCntyOrgn = New System.Windows.Forms.TextBox
        Me.mvw_a = New System.Windows.Forms.MonthCalendar
        Me.cmdPickDate_a = New System.Windows.Forms.Button
        Me.Label99 = New System.Windows.Forms.Label
        Me.mvwSlnOnb = New System.Windows.Forms.MonthCalendar
        Me.txtDst = New System.Windows.Forms.TextBox
        Me.Label7 = New System.Windows.Forms.Label
        Me.txtArrDat = New System.Windows.Forms.TextBox
        Me.Label5 = New System.Windows.Forms.Label
        Me.txtPotLoa = New System.Windows.Forms.TextBox
        Me.Label6 = New System.Windows.Forms.Label
        Me.Label4 = New System.Windows.Forms.Label
        Me.cmdPickDate = New System.Windows.Forms.Button
        Me.txtVoy = New System.Windows.Forms.TextBox
        Me.txtSlnOnb = New System.Windows.Forms.TextBox
        Me.lblCus1Zp = New System.Windows.Forms.Label
        Me.txtVes = New System.Windows.Forms.TextBox
        Me.tpSHM00001_2 = New System.Windows.Forms.TabPage
        Me.GroupBox14 = New System.Windows.Forms.GroupBox
        Me.txtPCPrc = New System.Windows.Forms.TextBox
        Me.cmdConInv = New System.Windows.Forms.Button
        Me.Label55 = New System.Windows.Forms.Label
        Me.cmdMore = New System.Windows.Forms.Button
        Me.dgPCKDIM = New System.Windows.Forms.DataGridView
        Me.GroupBox11 = New System.Windows.Forms.GroupBox
        Me.weight1 = New System.Windows.Forms.RadioButton
        Me.weight3 = New System.Windows.Forms.RadioButton
        Me.weight2 = New System.Windows.Forms.RadioButton
        Me.txtItmShm = New System.Windows.Forms.RichTextBox
        Me.txtCtnEnd = New System.Windows.Forms.TextBox
        Me.Label54 = New System.Windows.Forms.Label
        Me.Label76 = New System.Windows.Forms.Label
        Me.cmdinscpb = New System.Windows.Forms.Button
        Me.Label36 = New System.Windows.Forms.Label
        Me.cmdBck = New System.Windows.Forms.Button
        Me.cmdNxt = New System.Windows.Forms.Button
        Me.chkDel = New System.Windows.Forms.CheckBox
        Me.txt_dsc_f3 = New System.Windows.Forms.TextBox
        Me.txtCtnStr = New System.Windows.Forms.TextBox
        Me.Label77 = New System.Windows.Forms.Label
        Me.Label35 = New System.Windows.Forms.Label
        Me.Label53 = New System.Windows.Forms.Label
        Me.dgSCCPTBKD = New System.Windows.Forms.DataGridView
        Me.Label34 = New System.Windows.Forms.Label
        Me.txt_dsc_f2 = New System.Windows.Forms.TextBox
        Me.Label75 = New System.Windows.Forms.Label
        Me.cboUntAmtD = New System.Windows.Forms.ComboBox
        Me.Label27 = New System.Windows.Forms.Label
        Me.txtTtlCtnD = New System.Windows.Forms.TextBox
        Me.txt_name_f3 = New System.Windows.Forms.TextBox
        Me.txtCartonFactor = New System.Windows.Forms.TextBox
        Me.lblpc = New System.Windows.Forms.Label
        Me.cmdAss = New System.Windows.Forms.Button
        Me.txt_name_f2 = New System.Windows.Forms.TextBox
        Me.lblconftr = New System.Windows.Forms.Label
        Me.txtTtlAmtD = New System.Windows.Forms.TextBox
        Me.Label97 = New System.Windows.Forms.Label
        Me.txtPC = New System.Windows.Forms.TextBox
        Me.cboManAdr = New System.Windows.Forms.ComboBox
        Me.txtConFtr = New System.Windows.Forms.TextBox
        Me.cboUntSelD = New System.Windows.Forms.ComboBox
        Me.Label96 = New System.Windows.Forms.Label
        Me.txtSelPrcD = New System.Windows.Forms.TextBox
        Me.txtShpQty = New System.Windows.Forms.TextBox
        Me.Label95 = New System.Windows.Forms.Label
        Me.txtInvNo = New System.Windows.Forms.TextBox
        Me.txt_dsc_f1 = New System.Windows.Forms.TextBox
        Me.Label31 = New System.Windows.Forms.Label
        Me.txtManAdr = New System.Windows.Forms.TextBox
        Me.txtManNam = New System.Windows.Forms.TextBox
        Me.Label94 = New System.Windows.Forms.Label
        Me.Label92 = New System.Windows.Forms.Label
        Me.Label93 = New System.Windows.Forms.Label
        Me.txt_name_f1 = New System.Windows.Forms.TextBox
        Me.Label28 = New System.Windows.Forms.Label
        Me.Label51 = New System.Windows.Forms.Label
        Me.chkPC = New System.Windows.Forms.CheckBox
        Me.txtCusCol = New System.Windows.Forms.TextBox
        Me.txtmodvol = New System.Windows.Forms.TextBox
        Me.txtCusVen = New System.Windows.Forms.TextBox
        Me.txtVenNo = New System.Windows.Forms.TextBox
        Me.cboPCPrc = New System.Windows.Forms.ComboBox
        Me.optSearch1 = New System.Windows.Forms.RadioButton
        Me.optSearch0 = New System.Windows.Forms.RadioButton
        Me.txtPurSeq = New System.Windows.Forms.TextBox
        Me.Label30 = New System.Windows.Forms.Label
        Me.txtPurOrd = New System.Windows.Forms.TextBox
        Me.txtVol = New System.Windows.Forms.TextBox
        Me.txtColCde = New System.Windows.Forms.TextBox
        Me.Label39 = New System.Windows.Forms.Label
        Me.txtMtrCtn = New System.Windows.Forms.TextBox
        Me.Label40 = New System.Windows.Forms.Label
        Me.Label56 = New System.Windows.Forms.Label
        Me.GroupBox5 = New System.Windows.Forms.GroupBox
        Me.txtCmpRmk = New System.Windows.Forms.TextBox
        Me.cboCus2No_dtl = New System.Windows.Forms.ComboBox
        Me.Label52 = New System.Windows.Forms.Label
        Me.txtTtlNetD = New System.Windows.Forms.TextBox
        Me.Label88 = New System.Windows.Forms.Label
        Me.txtNetWgt = New System.Windows.Forms.TextBox
        Me.Label49 = New System.Windows.Forms.Label
        Me.Label50 = New System.Windows.Forms.Label
        Me.txtTtlGrsD = New System.Windows.Forms.TextBox
        Me.txtGrsWgt = New System.Windows.Forms.TextBox
        Me.txtItmTyp = New System.Windows.Forms.TextBox
        Me.Label48 = New System.Windows.Forms.Label
        Me.Label47 = New System.Windows.Forms.Label
        Me.Label45 = New System.Windows.Forms.Label
        Me.txtTtlVolD = New System.Windows.Forms.TextBox
        Me.txtOrdSeq = New System.Windows.Forms.TextBox
        Me.Label46 = New System.Windows.Forms.Label
        Me.txtActVol = New System.Windows.Forms.TextBox
        Me.txtMtrhcm = New System.Windows.Forms.TextBox
        Me.txtMtrwcm = New System.Windows.Forms.TextBox
        Me.txtMtrdcm = New System.Windows.Forms.TextBox
        Me.Label44 = New System.Windows.Forms.Label
        Me.txtOrgQty = New System.Windows.Forms.TextBox
        Me.Label43 = New System.Windows.Forms.Label
        Me.Label42 = New System.Windows.Forms.Label
        Me.Label41 = New System.Windows.Forms.Label
        Me.Label37 = New System.Windows.Forms.Label
        Me.txtInrCtn = New System.Windows.Forms.TextBox
        Me.Label38 = New System.Windows.Forms.Label
        Me.txtUntCde = New System.Windows.Forms.TextBox
        Me.cboPckRmk = New System.Windows.Forms.ComboBox
        Me.txtColDsc = New System.Windows.Forms.TextBox
        Me.txtOutQty = New System.Windows.Forms.TextBox
        Me.Label29 = New System.Windows.Forms.Label
        Me.txtPrcTrm = New System.Windows.Forms.TextBox
        Me.txtPayTrm = New System.Windows.Forms.TextBox
        Me.GroupBox6 = New System.Windows.Forms.GroupBox
        Me.GroupBox4 = New System.Windows.Forms.GroupBox
        Me.rb_ctn = New System.Windows.Forms.RadioButton
        Me.rb_cfs = New System.Windows.Forms.RadioButton
        Me.Label106 = New System.Windows.Forms.Label
        Me.txtcussku = New System.Windows.Forms.TextBox
        Me.Label83 = New System.Windows.Forms.Label
        Me.txtresppo = New System.Windows.Forms.TextBox
        Me.txtcus2no = New System.Windows.Forms.TextBox
        Me.lbl_cus2 = New System.Windows.Forms.Label
        Me.chkrpl = New System.Windows.Forms.CheckBox
        Me.Label17 = New System.Windows.Forms.Label
        Me.chkpckrmk = New System.Windows.Forms.CheckBox
        Me.Label86 = New System.Windows.Forms.Label
        Me.txtConsolNo = New System.Windows.Forms.TextBox
        Me.cboCtrSiz = New System.Windows.Forms.ComboBox
        Me.Label24 = New System.Windows.Forms.Label
        Me.txtItmDsc = New System.Windows.Forms.RichTextBox
        Me.Label23 = New System.Windows.Forms.Label
        Me.txtCusItm = New System.Windows.Forms.TextBox
        Me.cboItmNo = New System.Windows.Forms.ComboBox
        Me.Label22 = New System.Windows.Forms.Label
        Me.Label20 = New System.Windows.Forms.Label
        Me.txtCusStyNo = New System.Windows.Forms.TextBox
        Me.Label21 = New System.Windows.Forms.Label
        Me.txtCusPo = New System.Windows.Forms.TextBox
        Me.txtOrdNo = New System.Windows.Forms.TextBox
        Me.Label19 = New System.Windows.Forms.Label
        Me.txtJobNo = New System.Windows.Forms.TextBox
        Me.Label18 = New System.Windows.Forms.Label
        Me.Label16 = New System.Windows.Forms.Label
        Me.txtSealNo = New System.Windows.Forms.TextBox
        Me.Label15 = New System.Windows.Forms.Label
        Me.txtCtrCfs = New System.Windows.Forms.TextBox
        Me.Label14 = New System.Windows.Forms.Label
        Me.txtShpSeq = New System.Windows.Forms.TextBox
        Me.Label13 = New System.Windows.Forms.Label
        Me.cboColPck = New System.Windows.Forms.ComboBox
        Me.Label26 = New System.Windows.Forms.Label
        Me.Label25 = New System.Windows.Forms.Label
        Me.optCtrSiz3 = New System.Windows.Forms.RadioButton
        Me.optCtrSiz4 = New System.Windows.Forms.RadioButton
        Me.optCtrSiz0 = New System.Windows.Forms.RadioButton
        Me.optCtrSiz1 = New System.Windows.Forms.RadioButton
        Me.optCtrSiz2 = New System.Windows.Forms.RadioButton
        Me.txtCustUM = New System.Windows.Forms.TextBox
        Me.tpSHM00001_3 = New System.Windows.Forms.TabPage
        Me.GroupBox9 = New System.Windows.Forms.GroupBox
        Me.optFOB2 = New System.Windows.Forms.RadioButton
        Me.optFOB1 = New System.Windows.Forms.RadioButton
        Me.GroupBox7 = New System.Windows.Forms.GroupBox
        Me.PanShpbchup2 = New System.Windows.Forms.Panel
        Me.CmdShpchupcancel2 = New System.Windows.Forms.Button
        Me.CmdShpchupok2 = New System.Windows.Forms.Button
        Me.DgShpbchup2 = New System.Windows.Forms.DataGridView
        Me.CmdBatUpdate2 = New System.Windows.Forms.Button
        Me.Label105 = New System.Windows.Forms.Label
        Me.Label104 = New System.Windows.Forms.Label
        Me.Label103 = New System.Windows.Forms.Label
        Me.mvwLCdat = New System.Windows.Forms.MonthCalendar
        Me.cmdPickDate3 = New System.Windows.Forms.Button
        Me.txtLCdat = New System.Windows.Forms.TextBox
        Me.txtLcBank = New System.Windows.Forms.TextBox
        Me.txtLCNo = New System.Windows.Forms.TextBox
        Me.Label101 = New System.Windows.Forms.Label
        Me.Label102 = New System.Windows.Forms.Label
        Me.Label100 = New System.Windows.Forms.Label
        Me.txtexptaddr = New System.Windows.Forms.RichTextBox
        Me.txtexptnam = New System.Windows.Forms.TextBox
        Me.cboexptnam = New System.Windows.Forms.ComboBox
        Me.Label98 = New System.Windows.Forms.Label
        Me.cboPckListFooter = New System.Windows.Forms.ComboBox
        Me.txtBilRmk = New System.Windows.Forms.RichTextBox
        Me.txtFtrRmk = New System.Windows.Forms.RichTextBox
        Me.txtCover = New System.Windows.Forms.RichTextBox
        Me.cboInvFooter = New System.Windows.Forms.ComboBox
        Me.Label84 = New System.Windows.Forms.Label
        Me.mvwcgrcvdat = New System.Windows.Forms.MonthCalendar
        Me.Label8 = New System.Windows.Forms.Label
        Me.cmdPickDate2 = New System.Windows.Forms.Button
        Me.txtcargorcvdat = New System.Windows.Forms.TextBox
        Me.GroupBox8 = New System.Windows.Forms.GroupBox
        Me.txtTtlHdpAmt = New System.Windows.Forms.TextBox
        Me.Label70 = New System.Windows.Forms.Label
        Me.txtInvAmt = New System.Windows.Forms.TextBox
        Me.Label66 = New System.Windows.Forms.Label
        Me.TxtTtlCtnI = New System.Windows.Forms.TextBox
        Me.txtTtlAmtI = New System.Windows.Forms.TextBox
        Me.cboUntAmtI = New System.Windows.Forms.ComboBox
        Me.txtTtlVolI = New System.Windows.Forms.TextBox
        Me.Label65 = New System.Windows.Forms.Label
        Me.Label67 = New System.Windows.Forms.Label
        Me.Label68 = New System.Windows.Forms.Label
        Me.Label64 = New System.Windows.Forms.Label
        Me.Label62 = New System.Windows.Forms.Label
        Me.txtDoc = New System.Windows.Forms.RichTextBox
        Me.optDocTyp2 = New System.Windows.Forms.RadioButton
        Me.optDocTyp1 = New System.Windows.Forms.RadioButton
        Me.optDocTyp0 = New System.Windows.Forms.RadioButton
        Me.chkClose = New System.Windows.Forms.CheckBox
        Me.txtInvDat = New System.Windows.Forms.TextBox
        Me.Label61 = New System.Windows.Forms.Label
        Me.Label58 = New System.Windows.Forms.Label
        Me.Label59 = New System.Windows.Forms.Label
        Me.Label60 = New System.Windows.Forms.Label
        Me.cboInvNo = New System.Windows.Forms.ComboBox
        Me.Label57 = New System.Windows.Forms.Label
        Me.cboPayTrm = New System.Windows.Forms.ComboBox
        Me.cboPrcTrm = New System.Windows.Forms.ComboBox
        Me.txtAFamt = New System.Windows.Forms.TextBox
        Me.cbobank = New System.Windows.Forms.ComboBox
        Me.Label69 = New System.Windows.Forms.Label
        Me.Label63 = New System.Windows.Forms.Label
        Me.txtLcStmt = New System.Windows.Forms.TextBox
        Me.DataGrid2 = New System.Windows.Forms.DataGridView
        Me.tpSHM00001_4 = New System.Windows.Forms.TabPage
        Me.cbo_scno = New System.Windows.Forms.ComboBox
        Me.Label32 = New System.Windows.Forms.Label
        Me.lblPreInfo = New System.Windows.Forms.Label
        Me.lblDisInfo = New System.Windows.Forms.Label
        Me.grdPre = New System.Windows.Forms.DataGridView
        Me.grdDis = New System.Windows.Forms.DataGridView
        Me.lstCde_P = New System.Windows.Forms.ListBox
        Me.lstCde_D = New System.Windows.Forms.ListBox
        Me.Label73 = New System.Windows.Forms.Label
        Me.Label72 = New System.Windows.Forms.Label
        Me.grdPremium = New System.Windows.Forms.DataGridView
        Me.grdDiscount = New System.Windows.Forms.DataGridView
        Me.cboInvNoP = New System.Windows.Forms.ComboBox
        Me.Label71 = New System.Windows.Forms.Label
        Me.tpSHM00001_5 = New System.Windows.Forms.TabPage
        Me.GroupBox10 = New System.Windows.Forms.GroupBox
        Me.PanShpbchup = New System.Windows.Forms.Panel
        Me.CmdShpchupcancel = New System.Windows.Forms.Button
        Me.CmdShpchupok = New System.Windows.Forms.Button
        Me.DgShpbchup = New System.Windows.Forms.DataGridView
        Me.CmdBatUpdate = New System.Windows.Forms.Button
        Me.txtEngRmk = New System.Windows.Forms.RichTextBox
        Me.cmdShpmrkAttchmnt = New System.Windows.Forms.Button
        Me.cmdSelSM = New System.Windows.Forms.Button
        Me.Label74 = New System.Windows.Forms.Label
        Me.Picture1 = New System.Windows.Forms.PictureBox
        Me.Label82 = New System.Windows.Forms.Label
        Me.Label80 = New System.Windows.Forms.Label
        Me.Label81 = New System.Windows.Forms.Label
        Me.DataGrid3 = New System.Windows.Forms.DataGridView
        Me.txtImgPth = New System.Windows.Forms.TextBox
        Me.txtImgNam = New System.Windows.Forms.TextBox
        Me.txtEngDsc = New System.Windows.Forms.RichTextBox
        Me.cboInvNoM = New System.Windows.Forms.ComboBox
        Me.cboOrdNo = New System.Windows.Forms.ComboBox
        Me.Label87 = New System.Windows.Forms.Label
        Me.Label78 = New System.Windows.Forms.Label
        Me.Label79 = New System.Windows.Forms.Label
        Me.tpSHM00001_6 = New System.Windows.Forms.TabPage
        Me.Label33 = New System.Windows.Forms.Label
        Me.Label89 = New System.Windows.Forms.Label
        Me.Label90 = New System.Windows.Forms.Label
        Me.Label91 = New System.Windows.Forms.Label
        Me.cboSort3 = New System.Windows.Forms.ComboBox
        Me.cboSort2 = New System.Windows.Forms.ComboBox
        Me.cboSort1 = New System.Windows.Forms.ComboBox
        Me.grdShpSum = New System.Windows.Forms.DataGridView
        Me.cms_CopyNPaste.SuspendLayout()
        CType(Me.StatusBarPanel1, System.ComponentModel.ISupportInitialize).BeginInit()
        CType(Me.StatusBarPanel2, System.ComponentModel.ISupportInitialize).BeginInit()
        Me.menuStrip.SuspendLayout()
        Me.btcSHM00001.SuspendLayout()
        Me.tpSHM00001_1.SuspendLayout()
        Me.GroupBox2.SuspendLayout()
        Me.GroupBox13.SuspendLayout()
        Me.GroupBox12.SuspendLayout()
        Me.GroupBox3.SuspendLayout()
        Me.GroupBox1.SuspendLayout()
        Me.gbPri.SuspendLayout()
        CType(Me.dg_sainvhdr, System.ComponentModel.ISupportInitialize).BeginInit()
        Me.tpSHM00001_2.SuspendLayout()
        Me.GroupBox14.SuspendLayout()
        CType(Me.dgPCKDIM, System.ComponentModel.ISupportInitialize).BeginInit()
        Me.GroupBox11.SuspendLayout()
        CType(Me.dgSCCPTBKD, System.ComponentModel.ISupportInitialize).BeginInit()
        Me.GroupBox5.SuspendLayout()
        Me.GroupBox6.SuspendLayout()
        Me.GroupBox4.SuspendLayout()
        Me.tpSHM00001_3.SuspendLayout()
        Me.GroupBox9.SuspendLayout()
        Me.GroupBox7.SuspendLayout()
        Me.PanShpbchup2.SuspendLayout()
        CType(Me.DgShpbchup2, System.ComponentModel.ISupportInitialize).BeginInit()
        Me.GroupBox8.SuspendLayout()
        CType(Me.DataGrid2, System.ComponentModel.ISupportInitialize).BeginInit()
        Me.tpSHM00001_4.SuspendLayout()
        CType(Me.grdPre, System.ComponentModel.ISupportInitialize).BeginInit()
        CType(Me.grdDis, System.ComponentModel.ISupportInitialize).BeginInit()
        CType(Me.grdPremium, System.ComponentModel.ISupportInitialize).BeginInit()
        CType(Me.grdDiscount, System.ComponentModel.ISupportInitialize).BeginInit()
        Me.tpSHM00001_5.SuspendLayout()
        Me.GroupBox10.SuspendLayout()
        Me.PanShpbchup.SuspendLayout()
        CType(Me.DgShpbchup, System.ComponentModel.ISupportInitialize).BeginInit()
        CType(Me.Picture1, System.ComponentModel.ISupportInitialize).BeginInit()
        CType(Me.DataGrid3, System.ComponentModel.ISupportInitialize).BeginInit()
        Me.tpSHM00001_6.SuspendLayout()
        CType(Me.grdShpSum, System.ComponentModel.ISupportInitialize).BeginInit()
        Me.SuspendLayout()
        '
        'cms_CopyNPaste
        '
        Me.cms_CopyNPaste.Items.AddRange(New System.Windows.Forms.ToolStripItem() {Me.smi_Copy, Me.smi_Paste, Me.ConvertToPlainTextToolStripMenuItem, Me.UndoToolStripMenuItem})
        Me.cms_CopyNPaste.Name = "cms_CopyNPaste"
        Me.cms_CopyNPaste.Size = New System.Drawing.Size(145, 92)
        '
        'smi_Copy
        '
        Me.smi_Copy.AutoSize = False
        Me.smi_Copy.Name = "smi_Copy"
        Me.smi_Copy.ShortcutKeys = CType((System.Windows.Forms.Keys.Control Or System.Windows.Forms.Keys.C), System.Windows.Forms.Keys)
        Me.smi_Copy.Size = New System.Drawing.Size(152, 22)
        Me.smi_Copy.Text = "Copy"
        Me.smi_Copy.ToolTipText = "Copy"
        '
        'smi_Paste
        '
        Me.smi_Paste.AutoSize = False
        Me.smi_Paste.Name = "smi_Paste"
        Me.smi_Paste.ShortcutKeys = CType((System.Windows.Forms.Keys.Control Or System.Windows.Forms.Keys.V), System.Windows.Forms.Keys)
        Me.smi_Paste.Size = New System.Drawing.Size(170, 22)
        Me.smi_Paste.Text = "Paste"
        Me.smi_Paste.ToolTipText = "Paste"
        '
        'ConvertToPlainTextToolStripMenuItem
        '
        Me.ConvertToPlainTextToolStripMenuItem.Name = "ConvertToPlainTextToolStripMenuItem"
        Me.ConvertToPlainTextToolStripMenuItem.ShortcutKeys = CType((System.Windows.Forms.Keys.Control Or System.Windows.Forms.Keys.T), System.Windows.Forms.Keys)
        Me.ConvertToPlainTextToolStripMenuItem.Size = New System.Drawing.Size(144, 22)
        Me.ConvertToPlainTextToolStripMenuItem.Text = "Convert"
        '
        'UndoToolStripMenuItem
        '
        Me.UndoToolStripMenuItem.Name = "UndoToolStripMenuItem"
        Me.UndoToolStripMenuItem.ShortcutKeys = CType((System.Windows.Forms.Keys.Control Or System.Windows.Forms.Keys.U), System.Windows.Forms.Keys)
        Me.UndoToolStripMenuItem.Size = New System.Drawing.Size(144, 22)
        Me.UndoToolStripMenuItem.Text = "Undo"
        '
        'txtShpNo
        '
        Me.txtShpNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtShpNo.Location = New System.Drawing.Point(184, 28)
        Me.txtShpNo.MaxLength = 10
        Me.txtShpNo.Name = "txtShpNo"
        Me.txtShpNo.Size = New System.Drawing.Size(78, 20)
        Me.txtShpNo.TabIndex = 4
        '
        'lblQutNo
        '
        Me.lblQutNo.AutoSize = True
        Me.lblQutNo.ForeColor = System.Drawing.Color.Red
        Me.lblQutNo.Location = New System.Drawing.Point(119, 32)
        Me.lblQutNo.Name = "lblQutNo"
        Me.lblQutNo.Size = New System.Drawing.Size(64, 12)
        Me.lblQutNo.TabIndex = 263
        Me.lblQutNo.Text = "Shipping No"
        '
        'cboCoCde
        '
        Me.cboCoCde.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboCoCde.FormattingEnabled = True
        Me.cboCoCde.Location = New System.Drawing.Point(42, 27)
        Me.cboCoCde.Name = "cboCoCde"
        Me.cboCoCde.Size = New System.Drawing.Size(70, 21)
        Me.cboCoCde.TabIndex = 1
        '
        'Label1
        '
        Me.Label1.AutoSize = True
        Me.Label1.ForeColor = System.Drawing.Color.MediumBlue
        Me.Label1.Location = New System.Drawing.Point(9, 32)
        Me.Label1.Name = "Label1"
        Me.Label1.Size = New System.Drawing.Size(34, 12)
        Me.Label1.TabIndex = 262
        Me.Label1.Text = "Comp"
        '
        'txtRvsDat
        '
        Me.txtRvsDat.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtRvsDat.Location = New System.Drawing.Point(476, 29)
        Me.txtRvsDat.MaxLength = 10
        Me.txtRvsDat.Name = "txtRvsDat"
        Me.txtRvsDat.Size = New System.Drawing.Size(74, 20)
        Me.txtRvsDat.TabIndex = 6
        '
        'lblRvsDat
        '
        Me.lblRvsDat.AutoSize = True
        Me.lblRvsDat.Location = New System.Drawing.Point(413, 31)
        Me.lblRvsDat.Name = "lblRvsDat"
        Me.lblRvsDat.Size = New System.Drawing.Size(60, 12)
        Me.lblRvsDat.TabIndex = 267
        Me.lblRvsDat.Text = "Revise Date"
        '
        'txtIssDat
        '
        Me.txtIssDat.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtIssDat.Location = New System.Drawing.Point(329, 28)
        Me.txtIssDat.MaxLength = 10
        Me.txtIssDat.Name = "txtIssDat"
        Me.txtIssDat.Size = New System.Drawing.Size(74, 20)
        Me.txtIssDat.TabIndex = 5
        '
        'lblIssDat
        '
        Me.lblIssDat.AutoSize = True
        Me.lblIssDat.Location = New System.Drawing.Point(275, 31)
        Me.lblIssDat.Name = "lblIssDat"
        Me.lblIssDat.Size = New System.Drawing.Size(52, 12)
        Me.lblIssDat.TabIndex = 266
        Me.lblIssDat.Text = "Issue Date"
        '
        'cboCus1No
        '
        Me.cboCus1No.FormattingEnabled = True
        Me.cboCus1No.Location = New System.Drawing.Point(634, 28)
        Me.cboCus1No.Name = "cboCus1No"
        Me.cboCus1No.Size = New System.Drawing.Size(162, 20)
        Me.cboCus1No.TabIndex = 6
        '
        'lblCus1No
        '
        Me.lblCus1No.AutoSize = True
        Me.lblCus1No.ForeColor = System.Drawing.Color.Green
        Me.lblCus1No.Location = New System.Drawing.Point(561, 32)
        Me.lblCus1No.Name = "lblCus1No"
        Me.lblCus1No.Size = New System.Drawing.Size(69, 12)
        Me.lblCus1No.TabIndex = 269
        Me.lblCus1No.Text = "Primary Cust."
        '
        'cboCus2No
        '
        Me.cboCus2No.FormattingEnabled = True
        Me.cboCus2No.Location = New System.Drawing.Point(960, 64)
        Me.cboCus2No.Name = "cboCus2No"
        Me.cboCus2No.Size = New System.Drawing.Size(105, 20)
        Me.cboCus2No.TabIndex = 270
        Me.cboCus2No.Visible = False
        '
        'txtCoNam
        '
        Me.txtCoNam.BackColor = System.Drawing.Color.Aqua
        Me.txtCoNam.Enabled = False
        Me.txtCoNam.Location = New System.Drawing.Point(699, 0)
        Me.txtCoNam.Name = "txtCoNam"
        Me.txtCoNam.Size = New System.Drawing.Size(48, 22)
        Me.txtCoNam.TabIndex = 2
        Me.txtCoNam.Visible = False
        '
        'Label2
        '
        Me.Label2.AutoSize = True
        Me.Label2.Location = New System.Drawing.Point(654, 2)
        Me.Label2.Name = "Label2"
        Me.Label2.Size = New System.Drawing.Size(84, 12)
        Me.Label2.TabIndex = 272
        Me.Label2.Text = "Company Name:"
        Me.Label2.Visible = False
        '
        'lblQutSts
        '
        Me.lblQutSts.AutoSize = True
        Me.lblQutSts.Location = New System.Drawing.Point(801, 32)
        Me.lblQutSts.Name = "lblQutSts"
        Me.lblQutSts.Size = New System.Drawing.Size(32, 12)
        Me.lblQutSts.TabIndex = 275
        Me.lblQutSts.Text = "Status"
        '
        'cboShpSts
        '
        Me.cboShpSts.FormattingEnabled = True
        Me.cboShpSts.Location = New System.Drawing.Point(837, 28)
        Me.cboShpSts.Name = "cboShpSts"
        Me.cboShpSts.Size = New System.Drawing.Size(113, 20)
        Me.cboShpSts.TabIndex = 3
        '
        'StatusBar
        '
        Me.StatusBar.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.StatusBar.Location = New System.Drawing.Point(0, 607)
        Me.StatusBar.Name = "StatusBar"
        Me.StatusBar.Panels.AddRange(New System.Windows.Forms.StatusBarPanel() {Me.StatusBarPanel1, Me.StatusBarPanel2})
        Me.StatusBar.ShowPanels = True
        Me.StatusBar.Size = New System.Drawing.Size(954, 24)
        Me.StatusBar.TabIndex = 276
        '
        'StatusBarPanel1
        '
        Me.StatusBarPanel1.AutoSize = System.Windows.Forms.StatusBarPanelAutoSize.Spring
        Me.StatusBarPanel1.Name = "StatusBarPanel1"
        Me.StatusBarPanel1.Width = 469
        '
        'StatusBarPanel2
        '
        Me.StatusBarPanel2.Alignment = System.Windows.Forms.HorizontalAlignment.Right
        Me.StatusBarPanel2.AutoSize = System.Windows.Forms.StatusBarPanelAutoSize.Spring
        Me.StatusBarPanel2.Name = "StatusBarPanel2"
        Me.StatusBarPanel2.Width = 469
        '
        'menuStrip
        '
        Me.menuStrip.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.menuStrip.Items.AddRange(New System.Windows.Forms.ToolStripItem() {Me.mmdAdd, Me.mmdSave, Me.mmdDelete, Me.mmdCopy, Me.mmdFind, Me.t1, Me.mmdClear, Me.t2, Me.mmdSearch, Me.t3, Me.mmdInsRow, Me.mmdDelRow, Me.t4, Me.mmdPrint, Me.t5, Me.mmdAttach, Me.t6, Me.mmdFunction, Me.t7, Me.mmdLink, Me.t8, Me.mmdExit})
        Me.menuStrip.Location = New System.Drawing.Point(0, 0)
        Me.menuStrip.Name = "menuStrip"
        Me.menuStrip.RenderMode = System.Windows.Forms.ToolStripRenderMode.Professional
        Me.menuStrip.Size = New System.Drawing.Size(954, 24)
        Me.menuStrip.TabIndex = 304
        Me.menuStrip.Text = "MenuStrip1"
        '
        'mmdAdd
        '
        Me.mmdAdd.BackColor = System.Drawing.SystemColors.Control
        Me.mmdAdd.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdAdd.Name = "mmdAdd"
        Me.mmdAdd.Size = New System.Drawing.Size(40, 20)
        Me.mmdAdd.Tag = "Add"
        Me.mmdAdd.Text = "&Add"
        '
        'mmdSave
        '
        Me.mmdSave.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdSave.Name = "mmdSave"
        Me.mmdSave.Size = New System.Drawing.Size(46, 20)
        Me.mmdSave.Text = "&Save"
        '
        'mmdDelete
        '
        Me.mmdDelete.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdDelete.Name = "mmdDelete"
        Me.mmdDelete.Size = New System.Drawing.Size(55, 20)
        Me.mmdDelete.Text = "&Delete"
        '
        'mmdCopy
        '
        Me.mmdCopy.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdCopy.Name = "mmdCopy"
        Me.mmdCopy.Size = New System.Drawing.Size(47, 20)
        Me.mmdCopy.Text = "&Copy"
        '
        'mmdFind
        '
        Me.mmdFind.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdFind.Name = "mmdFind"
        Me.mmdFind.Size = New System.Drawing.Size(43, 20)
        Me.mmdFind.Text = "&Find"
        '
        't1
        '
        Me.t1.AutoSize = False
        Me.t1.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text
        Me.t1.Enabled = False
        Me.t1.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.t1.Name = "t1"
        Me.t1.Size = New System.Drawing.Size(8, 20)
        Me.t1.Text = "|"
        '
        'mmdClear
        '
        Me.mmdClear.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdClear.Name = "mmdClear"
        Me.mmdClear.Size = New System.Drawing.Size(49, 20)
        Me.mmdClear.Text = "Cl&ear"
        '
        't2
        '
        Me.t2.AutoSize = False
        Me.t2.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text
        Me.t2.Enabled = False
        Me.t2.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.t2.Name = "t2"
        Me.t2.Size = New System.Drawing.Size(8, 20)
        Me.t2.Text = "|"
        '
        'mmdSearch
        '
        Me.mmdSearch.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdSearch.Name = "mmdSearch"
        Me.mmdSearch.Size = New System.Drawing.Size(58, 20)
        Me.mmdSearch.Text = "Searc&h"
        '
        't3
        '
        Me.t3.AutoSize = False
        Me.t3.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text
        Me.t3.Enabled = False
        Me.t3.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.t3.Name = "t3"
        Me.t3.Size = New System.Drawing.Size(8, 20)
        Me.t3.Text = "|"
        '
        'mmdInsRow
        '
        Me.mmdInsRow.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdInsRow.Name = "mmdInsRow"
        Me.mmdInsRow.Size = New System.Drawing.Size(64, 20)
        Me.mmdInsRow.Text = "In&s Row"
        '
        'mmdDelRow
        '
        Me.mmdDelRow.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdDelRow.Name = "mmdDelRow"
        Me.mmdDelRow.Size = New System.Drawing.Size(66, 20)
        Me.mmdDelRow.Text = "Del Ro&w"
        '
        't4
        '
        Me.t4.AutoSize = False
        Me.t4.Enabled = False
        Me.t4.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.t4.Name = "t4"
        Me.t4.Size = New System.Drawing.Size(8, 20)
        Me.t4.Text = "|"
        '
        'mmdPrint
        '
        Me.mmdPrint.DropDownItems.AddRange(New System.Windows.Forms.ToolStripItem() {Me.PrintInvoiceToolStripMenuItem, Me.PrintPackingListToolStripMenuItem})
        Me.mmdPrint.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdPrint.Name = "mmdPrint"
        Me.mmdPrint.Size = New System.Drawing.Size(44, 20)
        Me.mmdPrint.Text = "&Print"
        '
        'PrintInvoiceToolStripMenuItem
        '
        Me.PrintInvoiceToolStripMenuItem.Name = "PrintInvoiceToolStripMenuItem"
        Me.PrintInvoiceToolStripMenuItem.Size = New System.Drawing.Size(141, 22)
        Me.PrintInvoiceToolStripMenuItem.Text = "Invoice"
        '
        'PrintPackingListToolStripMenuItem
        '
        Me.PrintPackingListToolStripMenuItem.Name = "PrintPackingListToolStripMenuItem"
        Me.PrintPackingListToolStripMenuItem.Size = New System.Drawing.Size(141, 22)
        Me.PrintPackingListToolStripMenuItem.Text = "Packing List"
        '
        't5
        '
        Me.t5.AutoSize = False
        Me.t5.Enabled = False
        Me.t5.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.t5.Name = "t5"
        Me.t5.Size = New System.Drawing.Size(8, 20)
        Me.t5.Text = "|"
        '
        'mmdAttach
        '
        Me.mmdAttach.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdAttach.Name = "mmdAttach"
        Me.mmdAttach.Size = New System.Drawing.Size(52, 20)
        Me.mmdAttach.Text = "Attach"
        '
        't6
        '
        Me.t6.AutoSize = False
        Me.t6.Enabled = False
        Me.t6.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.t6.Name = "t6"
        Me.t6.Size = New System.Drawing.Size(8, 20)
        Me.t6.Text = "|"
        '
        'mmdFunction
        '
        Me.mmdFunction.DropDownItems.AddRange(New System.Windows.Forms.ToolStripItem() {Me.mmdRel, Me.mmdApv})
        Me.mmdFunction.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdFunction.Name = "mmdFunction"
        Me.mmdFunction.Size = New System.Drawing.Size(66, 20)
        Me.mmdFunction.Text = "Function"
        '
        'mmdRel
        '
        Me.mmdRel.Name = "mmdRel"
        Me.mmdRel.Size = New System.Drawing.Size(121, 22)
        Me.mmdRel.Text = "Release"
        '
        'mmdApv
        '
        Me.mmdApv.Name = "mmdApv"
        Me.mmdApv.Size = New System.Drawing.Size(121, 22)
        Me.mmdApv.Text = "Approval"
        '
        't7
        '
        Me.t7.AutoSize = False
        Me.t7.Enabled = False
        Me.t7.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.t7.Name = "t7"
        Me.t7.Size = New System.Drawing.Size(8, 20)
        Me.t7.Text = "|"
        '
        'mmdLink
        '
        Me.mmdLink.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.mmdLink.Name = "mmdLink"
        Me.mmdLink.Size = New System.Drawing.Size(42, 20)
        Me.mmdLink.Text = "Link"
        '
        't8
        '
        Me.t8.AutoSize = False
        Me.t8.Enabled = False
        Me.t8.Font = New System.Drawing.Font("Arial", 9.0!)
        Me.t8.Name = "t8"
        Me.t8.Size = New System.Drawing.Size(8, 20)
        Me.t8.Text = "|"
        '
        'mmdExit
        '
        Me.mmdExit.Name = "mmdExit"
        Me.mmdExit.Size = New System.Drawing.Size(38, 20)
        Me.mmdExit.Text = "E&xit"
        '
        'btcSHM00001
        '
        Me.btcSHM00001.Controls.Add(Me.tpSHM00001_1)
        Me.btcSHM00001.Controls.Add(Me.tpSHM00001_2)
        Me.btcSHM00001.Controls.Add(Me.tpSHM00001_3)
        Me.btcSHM00001.Controls.Add(Me.tpSHM00001_4)
        Me.btcSHM00001.Controls.Add(Me.tpSHM00001_5)
        Me.btcSHM00001.Controls.Add(Me.tpSHM00001_6)
        Me.btcSHM00001.DrawMode = System.Windows.Forms.TabDrawMode.OwnerDrawFixed
        Me.btcSHM00001.Location = New System.Drawing.Point(0, 49)
        Me.btcSHM00001.Name = "btcSHM00001"
        Me.btcSHM00001.SelectedIndex = 0
        Me.btcSHM00001.Size = New System.Drawing.Size(954, 559)
        Me.btcSHM00001.TabIndex = 44
        '
        'tpSHM00001_1
        '
        Me.tpSHM00001_1.Controls.Add(Me.GroupBox2)
        Me.tpSHM00001_1.Location = New System.Drawing.Point(4, 22)
        Me.tpSHM00001_1.Name = "tpSHM00001_1"
        Me.tpSHM00001_1.Padding = New System.Windows.Forms.Padding(3)
        Me.tpSHM00001_1.Size = New System.Drawing.Size(946, 533)
        Me.tpSHM00001_1.TabIndex = 0
        Me.tpSHM00001_1.Text = "(1) Shipping Header"
        Me.tpSHM00001_1.UseVisualStyleBackColor = True
        '
        'GroupBox2
        '
        Me.GroupBox2.Controls.Add(Me.GroupBox13)
        Me.GroupBox2.Controls.Add(Me.GroupBox12)
        Me.GroupBox2.Controls.Add(Me.chkApprove)
        Me.GroupBox2.Controls.Add(Me.chkSmpShp)
        Me.GroupBox2.Controls.Add(Me.txtCrr)
        Me.GroupBox2.Controls.Add(Me.GroupBox3)
        Me.GroupBox2.Controls.Add(Me.txtGodDsc)
        Me.GroupBox2.Controls.Add(Me.GroupBox1)
        Me.GroupBox2.Controls.Add(Me.txtCrrSo)
        Me.GroupBox2.Controls.Add(Me.gbPri)
        Me.GroupBox2.Location = New System.Drawing.Point(8, 6)
        Me.GroupBox2.Name = "GroupBox2"
        Me.GroupBox2.Size = New System.Drawing.Size(935, 514)
        Me.GroupBox2.TabIndex = 266
        Me.GroupBox2.TabStop = False
        '
        'GroupBox13
        '
        Me.GroupBox13.Controls.Add(Me.CmdCOV)
        Me.GroupBox13.Location = New System.Drawing.Point(441, 457)
        Me.GroupBox13.Name = "GroupBox13"
        Me.GroupBox13.Size = New System.Drawing.Size(488, 44)
        Me.GroupBox13.TabIndex = 374
        Me.GroupBox13.TabStop = False
        '
        'CmdCOV
        '
        Me.CmdCOV.Enabled = False
        Me.CmdCOV.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.CmdCOV.Location = New System.Drawing.Point(356, 17)
        Me.CmdCOV.Name = "CmdCOV"
        Me.CmdCOV.Size = New System.Drawing.Size(116, 21)
        Me.CmdCOV.TabIndex = 373
        Me.CmdCOV.TabStop = False
        Me.CmdCOV.Text = "Import COV"
        '
        'GroupBox12
        '
        Me.GroupBox12.Controls.Add(Me.optitmsm)
        Me.GroupBox12.Controls.Add(Me.optinvsm)
        Me.GroupBox12.Location = New System.Drawing.Point(15, 14)
        Me.GroupBox12.Name = "GroupBox12"
        Me.GroupBox12.Size = New System.Drawing.Size(400, 36)
        Me.GroupBox12.TabIndex = 357
        Me.GroupBox12.TabStop = False
        '
        'optitmsm
        '
        Me.optitmsm.AutoSize = True
        Me.optitmsm.Location = New System.Drawing.Point(7, 14)
        Me.optitmsm.Name = "optitmsm"
        Me.optitmsm.Size = New System.Drawing.Size(96, 16)
        Me.optitmsm.TabIndex = 353
        Me.optitmsm.Text = "Item Ship Mark"
        Me.optitmsm.UseVisualStyleBackColor = True
        '
        'optinvsm
        '
        Me.optinvsm.AutoSize = True
        Me.optinvsm.Checked = True
        Me.optinvsm.Location = New System.Drawing.Point(128, 14)
        Me.optinvsm.Name = "optinvsm"
        Me.optinvsm.Size = New System.Drawing.Size(113, 16)
        Me.optinvsm.TabIndex = 354
        Me.optinvsm.TabStop = True
        Me.optinvsm.Text = "Invoice Ship Mark "
        Me.optinvsm.UseVisualStyleBackColor = True
        '
        'chkApprove
        '
        Me.chkApprove.AutoSize = True
        Me.chkApprove.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.chkApprove.Location = New System.Drawing.Point(729, 0)
        Me.chkApprove.Name = "chkApprove"
        Me.chkApprove.Size = New System.Drawing.Size(66, 17)
        Me.chkApprove.TabIndex = 356
        Me.chkApprove.Text = "Approve"
        Me.chkApprove.UseVisualStyleBackColor = True
        Me.chkApprove.Visible = False
        '
        'chkSmpShp
        '
        Me.chkSmpShp.AutoSize = True
        Me.chkSmpShp.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.chkSmpShp.Location = New System.Drawing.Point(199, 0)
        Me.chkSmpShp.Name = "chkSmpShp"
        Me.chkSmpShp.Size = New System.Drawing.Size(61, 17)
        Me.chkSmpShp.TabIndex = 355
        Me.chkSmpShp.Text = "Sample"
        Me.chkSmpShp.UseVisualStyleBackColor = True
        Me.chkSmpShp.Visible = False
        '
        'txtCrr
        '
        Me.txtCrr.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCrr.Location = New System.Drawing.Point(176, 459)
        Me.txtCrr.MaxLength = 200
        Me.txtCrr.Name = "txtCrr"
        Me.txtCrr.Size = New System.Drawing.Size(230, 20)
        Me.txtCrr.TabIndex = 13
        Me.txtCrr.Visible = False
        '
        'GroupBox3
        '
        Me.GroupBox3.Controls.Add(Me.Label109)
        Me.GroupBox3.Controls.Add(Me.Label108)
        Me.GroupBox3.Controls.Add(Me.txtTtlcbm)
        Me.GroupBox3.Controls.Add(Me.Label107)
        Me.GroupBox3.Controls.Add(Me.txtTtlAmt)
        Me.GroupBox3.Controls.Add(Me.Label12)
        Me.GroupBox3.Controls.Add(Me.cboUntAmt)
        Me.GroupBox3.Controls.Add(Me.txtTtlNwg)
        Me.GroupBox3.Controls.Add(Me.txtTtlGwg)
        Me.GroupBox3.Controls.Add(Me.txtTtlCtn)
        Me.GroupBox3.Controls.Add(Me.Label11)
        Me.GroupBox3.Location = New System.Drawing.Point(439, 318)
        Me.GroupBox3.Name = "GroupBox3"
        Me.GroupBox3.Size = New System.Drawing.Size(488, 139)
        Me.GroupBox3.TabIndex = 276
        Me.GroupBox3.TabStop = False
        Me.GroupBox3.Text = "Shipping Summary Information"
        '
        'Label109
        '
        Me.Label109.AutoSize = True
        Me.Label109.Location = New System.Drawing.Point(18, 88)
        Me.Label109.Name = "Label109"
        Me.Label109.Size = New System.Drawing.Size(61, 24)
        Me.Label109.TabIndex = 293
        Me.Label109.Text = "Grand Total" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Amount"
        '
        'Label108
        '
        Me.Label108.AutoSize = True
        Me.Label108.Location = New System.Drawing.Point(266, 56)
        Me.Label108.Name = "Label108"
        Me.Label108.Size = New System.Drawing.Size(51, 12)
        Me.Label108.TabIndex = 292
        Me.Label108.Text = "Total NW"
        '
        'txtTtlcbm
        '
        Me.txtTtlcbm.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlcbm.Location = New System.Drawing.Point(358, 20)
        Me.txtTtlcbm.MaxLength = 10
        Me.txtTtlcbm.Name = "txtTtlcbm"
        Me.txtTtlcbm.Size = New System.Drawing.Size(114, 20)
        Me.txtTtlcbm.TabIndex = 291
        '
        'Label107
        '
        Me.Label107.AutoSize = True
        Me.Label107.Location = New System.Drawing.Point(265, 20)
        Me.Label107.Name = "Label107"
        Me.Label107.Size = New System.Drawing.Size(87, 12)
        Me.Label107.TabIndex = 290
        Me.Label107.Text = "Total  ACT CBM"
        '
        'txtTtlAmt
        '
        Me.txtTtlAmt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlAmt.Location = New System.Drawing.Point(271, 89)
        Me.txtTtlAmt.MaxLength = 10
        Me.txtTtlAmt.Name = "txtTtlAmt"
        Me.txtTtlAmt.Size = New System.Drawing.Size(201, 20)
        Me.txtTtlAmt.TabIndex = 289
        '
        'Label12
        '
        Me.Label12.AutoSize = True
        Me.Label12.Location = New System.Drawing.Point(18, 53)
        Me.Label12.Name = "Label12"
        Me.Label12.Size = New System.Drawing.Size(51, 12)
        Me.Label12.TabIndex = 288
        Me.Label12.Text = "Total GW"
        '
        'cboUntAmt
        '
        Me.cboUntAmt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboUntAmt.FormattingEnabled = True
        Me.cboUntAmt.Location = New System.Drawing.Point(109, 88)
        Me.cboUntAmt.Name = "cboUntAmt"
        Me.cboUntAmt.Size = New System.Drawing.Size(137, 21)
        Me.cboUntAmt.TabIndex = 286
        '
        'txtTtlNwg
        '
        Me.txtTtlNwg.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlNwg.Location = New System.Drawing.Point(358, 53)
        Me.txtTtlNwg.MaxLength = 10
        Me.txtTtlNwg.Name = "txtTtlNwg"
        Me.txtTtlNwg.Size = New System.Drawing.Size(114, 20)
        Me.txtTtlNwg.TabIndex = 285
        '
        'txtTtlGwg
        '
        Me.txtTtlGwg.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlGwg.Location = New System.Drawing.Point(109, 53)
        Me.txtTtlGwg.MaxLength = 10
        Me.txtTtlGwg.Name = "txtTtlGwg"
        Me.txtTtlGwg.Size = New System.Drawing.Size(137, 20)
        Me.txtTtlGwg.TabIndex = 287
        '
        'txtTtlCtn
        '
        Me.txtTtlCtn.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlCtn.Location = New System.Drawing.Point(109, 20)
        Me.txtTtlCtn.MaxLength = 10
        Me.txtTtlCtn.Name = "txtTtlCtn"
        Me.txtTtlCtn.Size = New System.Drawing.Size(137, 20)
        Me.txtTtlCtn.TabIndex = 284
        '
        'Label11
        '
        Me.Label11.AutoSize = True
        Me.Label11.Location = New System.Drawing.Point(18, 20)
        Me.Label11.Name = "Label11"
        Me.Label11.Size = New System.Drawing.Size(59, 12)
        Me.Label11.TabIndex = 276
        Me.Label11.Text = "Total of ctn"
        '
        'txtGodDsc
        '
        Me.txtGodDsc.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtGodDsc.Location = New System.Drawing.Point(117, 497)
        Me.txtGodDsc.MaxLength = 10
        Me.txtGodDsc.Name = "txtGodDsc"
        Me.txtGodDsc.Size = New System.Drawing.Size(93, 20)
        Me.txtGodDsc.TabIndex = 279
        Me.txtGodDsc.Visible = False
        '
        'GroupBox1
        '
        Me.GroupBox1.Controls.Add(Me.cboBilAdr)
        Me.GroupBox1.Controls.Add(Me.txtBilZip)
        Me.GroupBox1.Controls.Add(Me.Label10)
        Me.GroupBox1.Controls.Add(Me.cboBilCty)
        Me.GroupBox1.Controls.Add(Me.txtBilStt)
        Me.GroupBox1.Controls.Add(Me.txtBilAdr)
        Me.GroupBox1.Controls.Add(Me.txtBilEnt)
        Me.GroupBox1.Controls.Add(Me.Label3)
        Me.GroupBox1.Controls.Add(Me.Label9)
        Me.GroupBox1.Location = New System.Drawing.Point(442, 14)
        Me.GroupBox1.Name = "GroupBox1"
        Me.GroupBox1.Size = New System.Drawing.Size(488, 298)
        Me.GroupBox1.TabIndex = 267
        Me.GroupBox1.TabStop = False
        '
        'cboBilAdr
        '
        Me.cboBilAdr.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboBilAdr.FormattingEnabled = True
        Me.cboBilAdr.Location = New System.Drawing.Point(127, 42)
        Me.cboBilAdr.Name = "cboBilAdr"
        Me.cboBilAdr.Size = New System.Drawing.Size(345, 21)
        Me.cboBilAdr.TabIndex = 16
        '
        'txtBilZip
        '
        Me.txtBilZip.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtBilZip.Location = New System.Drawing.Point(127, 189)
        Me.txtBilZip.MaxLength = 20
        Me.txtBilZip.Name = "txtBilZip"
        Me.txtBilZip.Size = New System.Drawing.Size(140, 20)
        Me.txtBilZip.TabIndex = 20
        '
        'Label10
        '
        Me.Label10.AutoSize = True
        Me.Label10.BackColor = System.Drawing.Color.Transparent
        Me.Label10.ForeColor = System.Drawing.Color.Green
        Me.Label10.Location = New System.Drawing.Point(277, 165)
        Me.Label10.Name = "Label10"
        Me.Label10.Size = New System.Drawing.Size(44, 12)
        Me.Label10.TabIndex = 282
        Me.Label10.Text = "Country"
        '
        'cboBilCty
        '
        Me.cboBilCty.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboBilCty.FormattingEnabled = True
        Me.cboBilCty.Location = New System.Drawing.Point(331, 162)
        Me.cboBilCty.Name = "cboBilCty"
        Me.cboBilCty.Size = New System.Drawing.Size(141, 21)
        Me.cboBilCty.TabIndex = 19
        '
        'txtBilStt
        '
        Me.txtBilStt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtBilStt.Location = New System.Drawing.Point(126, 162)
        Me.txtBilStt.MaxLength = 20
        Me.txtBilStt.Name = "txtBilStt"
        Me.txtBilStt.Size = New System.Drawing.Size(141, 20)
        Me.txtBilStt.TabIndex = 18
        '
        'txtBilAdr
        '
        Me.txtBilAdr.ContextMenuStrip = Me.cms_CopyNPaste
        Me.txtBilAdr.Location = New System.Drawing.Point(126, 67)
        Me.txtBilAdr.Name = "txtBilAdr"
        Me.txtBilAdr.Size = New System.Drawing.Size(346, 87)
        Me.txtBilAdr.TabIndex = 17
        Me.txtBilAdr.Text = ""
        '
        'txtBilEnt
        '
        Me.txtBilEnt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtBilEnt.Location = New System.Drawing.Point(127, 17)
        Me.txtBilEnt.MaxLength = 100
        Me.txtBilEnt.Name = "txtBilEnt"
        Me.txtBilEnt.Size = New System.Drawing.Size(346, 20)
        Me.txtBilEnt.TabIndex = 15
        '
        'Label3
        '
        Me.Label3.AutoSize = True
        Me.Label3.Location = New System.Drawing.Point(13, 163)
        Me.Label3.Name = "Label3"
        Me.Label3.Size = New System.Drawing.Size(80, 36)
        Me.Label3.TabIndex = 275
        Me.Label3.Text = "State/Province" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Postal/ZIP Code"
        '
        'Label9
        '
        Me.Label9.AutoSize = True
        Me.Label9.BackColor = System.Drawing.Color.Transparent
        Me.Label9.ForeColor = System.Drawing.Color.Green
        Me.Label9.Location = New System.Drawing.Point(13, 19)
        Me.Label9.Name = "Label9"
        Me.Label9.Size = New System.Drawing.Size(77, 48)
        Me.Label9.TabIndex = 274
        Me.Label9.Text = "Billing Entity" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Billing Address"
        '
        'txtCrrSo
        '
        Me.txtCrrSo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCrrSo.Location = New System.Drawing.Point(230, 497)
        Me.txtCrrSo.MaxLength = 20
        Me.txtCrrSo.Name = "txtCrrSo"
        Me.txtCrrSo.Size = New System.Drawing.Size(230, 20)
        Me.txtCrrSo.TabIndex = 14
        Me.txtCrrSo.Visible = False
        '
        'gbPri
        '
        Me.gbPri.Controls.Add(Me.dg_sainvhdr)
        Me.gbPri.Controls.Add(Me.Label85)
        Me.gbPri.Controls.Add(Me.txtCntyOrgn)
        Me.gbPri.Controls.Add(Me.mvw_a)
        Me.gbPri.Controls.Add(Me.cmdPickDate_a)
        Me.gbPri.Controls.Add(Me.Label99)
        Me.gbPri.Controls.Add(Me.mvwSlnOnb)
        Me.gbPri.Controls.Add(Me.txtDst)
        Me.gbPri.Controls.Add(Me.Label7)
        Me.gbPri.Controls.Add(Me.txtArrDat)
        Me.gbPri.Controls.Add(Me.Label5)
        Me.gbPri.Controls.Add(Me.txtPotLoa)
        Me.gbPri.Controls.Add(Me.Label6)
        Me.gbPri.Controls.Add(Me.Label4)
        Me.gbPri.Controls.Add(Me.cmdPickDate)
        Me.gbPri.Controls.Add(Me.txtVoy)
        Me.gbPri.Controls.Add(Me.txtSlnOnb)
        Me.gbPri.Controls.Add(Me.lblCus1Zp)
        Me.gbPri.Controls.Add(Me.txtVes)
        Me.gbPri.Location = New System.Drawing.Point(15, 51)
        Me.gbPri.Name = "gbPri"
        Me.gbPri.Size = New System.Drawing.Size(400, 458)
        Me.gbPri.TabIndex = 266
        Me.gbPri.TabStop = False
        '
        'dg_sainvhdr
        '
        Me.dg_sainvhdr.AllowUserToAddRows = False
        Me.dg_sainvhdr.AllowUserToDeleteRows = False
        Me.dg_sainvhdr.ColumnHeadersHeight = 20
        Me.dg_sainvhdr.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        Me.dg_sainvhdr.Location = New System.Drawing.Point(11, 243)
        Me.dg_sainvhdr.Name = "dg_sainvhdr"
        Me.dg_sainvhdr.RowHeadersWidth = 20
        Me.dg_sainvhdr.RowTemplate.DefaultCellStyle.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.dg_sainvhdr.RowTemplate.Height = 16
        Me.dg_sainvhdr.Size = New System.Drawing.Size(361, 209)
        Me.dg_sainvhdr.TabIndex = 373
        '
        'Label85
        '
        Me.Label85.AutoSize = True
        Me.Label85.Location = New System.Drawing.Point(9, 220)
        Me.Label85.Name = "Label85"
        Me.Label85.Size = New System.Drawing.Size(107, 12)
        Me.Label85.TabIndex = 374
        Me.Label85.Text = "Sample Document No"
        '
        'txtCntyOrgn
        '
        Me.txtCntyOrgn.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCntyOrgn.Location = New System.Drawing.Point(141, 190)
        Me.txtCntyOrgn.MaxLength = 10
        Me.txtCntyOrgn.Name = "txtCntyOrgn"
        Me.txtCntyOrgn.Size = New System.Drawing.Size(230, 20)
        Me.txtCntyOrgn.TabIndex = 272
        '
        'mvw_a
        '
        Me.mvw_a.AccessibleDescription = ""
        Me.mvw_a.Location = New System.Drawing.Point(128, 126)
        Me.mvw_a.Name = "mvw_a"
        Me.mvw_a.TabIndex = 372
        '
        'cmdPickDate_a
        '
        Me.cmdPickDate_a.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdPickDate_a.Location = New System.Drawing.Point(268, 99)
        Me.cmdPickDate_a.Name = "cmdPickDate_a"
        Me.cmdPickDate_a.Size = New System.Drawing.Size(24, 22)
        Me.cmdPickDate_a.TabIndex = 371
        Me.cmdPickDate_a.TabStop = False
        Me.cmdPickDate_a.Text = "..."
        '
        'Label99
        '
        Me.Label99.AutoSize = True
        Me.Label99.Location = New System.Drawing.Point(297, 103)
        Me.Label99.Name = "Label99"
        Me.Label99.Size = New System.Drawing.Size(73, 12)
        Me.Label99.TabIndex = 283
        Me.Label99.Text = "(mm/dd/yyyy)"
        '
        'mvwSlnOnb
        '
        Me.mvwSlnOnb.Location = New System.Drawing.Point(157, 69)
        Me.mvwSlnOnb.Name = "mvwSlnOnb"
        Me.mvwSlnOnb.TabIndex = 282
        '
        'txtDst
        '
        Me.txtDst.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtDst.Location = New System.Drawing.Point(141, 160)
        Me.txtDst.MaxLength = 60
        Me.txtDst.Name = "txtDst"
        Me.txtDst.Size = New System.Drawing.Size(230, 20)
        Me.txtDst.TabIndex = 14
        '
        'Label7
        '
        Me.Label7.AutoSize = True
        Me.Label7.Location = New System.Drawing.Point(7, 163)
        Me.Label7.Name = "Label7"
        Me.Label7.Size = New System.Drawing.Size(90, 36)
        Me.Label7.TabIndex = 273
        Me.Label7.Text = "Destination  " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Country of Origin"
        '
        'txtArrDat
        '
        Me.txtArrDat.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtArrDat.Location = New System.Drawing.Point(141, 103)
        Me.txtArrDat.MaxLength = 10
        Me.txtArrDat.Name = "txtArrDat"
        Me.txtArrDat.Size = New System.Drawing.Size(123, 20)
        Me.txtArrDat.TabIndex = 11
        '
        'Label5
        '
        Me.Label5.AutoSize = True
        Me.Label5.Location = New System.Drawing.Point(7, 104)
        Me.Label5.Name = "Label5"
        Me.Label5.Size = New System.Drawing.Size(95, 12)
        Me.Label5.TabIndex = 269
        Me.Label5.Text = "Arrival Date (ETA)"
        '
        'txtPotLoa
        '
        Me.txtPotLoa.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtPotLoa.Location = New System.Drawing.Point(141, 132)
        Me.txtPotLoa.MaxLength = 30
        Me.txtPotLoa.Name = "txtPotLoa"
        Me.txtPotLoa.Size = New System.Drawing.Size(230, 20)
        Me.txtPotLoa.TabIndex = 12
        '
        'Label6
        '
        Me.Label6.AutoSize = True
        Me.Label6.BackColor = System.Drawing.Color.Transparent
        Me.Label6.ForeColor = System.Drawing.Color.Green
        Me.Label6.Location = New System.Drawing.Point(7, 133)
        Me.Label6.Name = "Label6"
        Me.Label6.Size = New System.Drawing.Size(79, 12)
        Me.Label6.TabIndex = 270
        Me.Label6.Text = "Port of Loading"
        '
        'Label4
        '
        Me.Label4.AutoSize = True
        Me.Label4.Location = New System.Drawing.Point(298, 75)
        Me.Label4.Name = "Label4"
        Me.Label4.Size = New System.Drawing.Size(73, 12)
        Me.Label4.TabIndex = 265
        Me.Label4.Text = "(mm/dd/yyyy)"
        '
        'cmdPickDate
        '
        Me.cmdPickDate.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdPickDate.Location = New System.Drawing.Point(269, 71)
        Me.cmdPickDate.Name = "cmdPickDate"
        Me.cmdPickDate.Size = New System.Drawing.Size(24, 22)
        Me.cmdPickDate.TabIndex = 10
        Me.cmdPickDate.Text = "..."
        '
        'txtVoy
        '
        Me.txtVoy.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtVoy.Location = New System.Drawing.Point(141, 48)
        Me.txtVoy.MaxLength = 30
        Me.txtVoy.Name = "txtVoy"
        Me.txtVoy.Size = New System.Drawing.Size(227, 20)
        Me.txtVoy.TabIndex = 8
        '
        'txtSlnOnb
        '
        Me.txtSlnOnb.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtSlnOnb.Location = New System.Drawing.Point(141, 74)
        Me.txtSlnOnb.MaxLength = 10
        Me.txtSlnOnb.Name = "txtSlnOnb"
        Me.txtSlnOnb.Size = New System.Drawing.Size(123, 20)
        Me.txtSlnOnb.TabIndex = 9
        '
        'lblCus1Zp
        '
        Me.lblCus1Zp.AutoSize = True
        Me.lblCus1Zp.BackColor = System.Drawing.Color.Transparent
        Me.lblCus1Zp.ForeColor = System.Drawing.Color.Green
        Me.lblCus1Zp.Location = New System.Drawing.Point(7, 26)
        Me.lblCus1Zp.Name = "lblCus1Zp"
        Me.lblCus1Zp.Size = New System.Drawing.Size(108, 60)
        Me.lblCus1Zp.TabIndex = 264
        Me.lblCus1Zp.Text = "Vessel" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Voyage" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Sailing on/abt (ETD)  "
        '
        'txtVes
        '
        Me.txtVes.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtVes.Location = New System.Drawing.Point(141, 20)
        Me.txtVes.MaxLength = 30
        Me.txtVes.Name = "txtVes"
        Me.txtVes.Size = New System.Drawing.Size(228, 20)
        Me.txtVes.TabIndex = 7
        '
        'tpSHM00001_2
        '
        Me.tpSHM00001_2.Controls.Add(Me.GroupBox14)
        Me.tpSHM00001_2.Controls.Add(Me.txtmodvol)
        Me.tpSHM00001_2.Controls.Add(Me.txtCusVen)
        Me.tpSHM00001_2.Controls.Add(Me.txtVenNo)
        Me.tpSHM00001_2.Controls.Add(Me.cboPCPrc)
        Me.tpSHM00001_2.Controls.Add(Me.optSearch1)
        Me.tpSHM00001_2.Controls.Add(Me.optSearch0)
        Me.tpSHM00001_2.Controls.Add(Me.txtPurSeq)
        Me.tpSHM00001_2.Controls.Add(Me.Label30)
        Me.tpSHM00001_2.Controls.Add(Me.txtPurOrd)
        Me.tpSHM00001_2.Controls.Add(Me.txtVol)
        Me.tpSHM00001_2.Controls.Add(Me.txtColCde)
        Me.tpSHM00001_2.Controls.Add(Me.Label39)
        Me.tpSHM00001_2.Controls.Add(Me.txtMtrCtn)
        Me.tpSHM00001_2.Controls.Add(Me.Label40)
        Me.tpSHM00001_2.Controls.Add(Me.Label56)
        Me.tpSHM00001_2.Controls.Add(Me.GroupBox5)
        Me.tpSHM00001_2.Controls.Add(Me.GroupBox6)
        Me.tpSHM00001_2.Controls.Add(Me.optCtrSiz3)
        Me.tpSHM00001_2.Controls.Add(Me.optCtrSiz4)
        Me.tpSHM00001_2.Controls.Add(Me.optCtrSiz0)
        Me.tpSHM00001_2.Controls.Add(Me.optCtrSiz1)
        Me.tpSHM00001_2.Controls.Add(Me.optCtrSiz2)
        Me.tpSHM00001_2.Controls.Add(Me.txtCustUM)
        Me.tpSHM00001_2.Location = New System.Drawing.Point(4, 22)
        Me.tpSHM00001_2.Name = "tpSHM00001_2"
        Me.tpSHM00001_2.Padding = New System.Windows.Forms.Padding(3)
        Me.tpSHM00001_2.Size = New System.Drawing.Size(946, 533)
        Me.tpSHM00001_2.TabIndex = 1
        Me.tpSHM00001_2.Text = "(2) Shipping Details"
        Me.tpSHM00001_2.UseVisualStyleBackColor = True
        '
        'GroupBox14
        '
        Me.GroupBox14.Controls.Add(Me.txtPCPrc)
        Me.GroupBox14.Controls.Add(Me.cmdConInv)
        Me.GroupBox14.Controls.Add(Me.Label55)
        Me.GroupBox14.Controls.Add(Me.cmdMore)
        Me.GroupBox14.Controls.Add(Me.dgPCKDIM)
        Me.GroupBox14.Controls.Add(Me.GroupBox11)
        Me.GroupBox14.Controls.Add(Me.txtItmShm)
        Me.GroupBox14.Controls.Add(Me.txtCtnEnd)
        Me.GroupBox14.Controls.Add(Me.Label54)
        Me.GroupBox14.Controls.Add(Me.Label76)
        Me.GroupBox14.Controls.Add(Me.cmdinscpb)
        Me.GroupBox14.Controls.Add(Me.Label36)
        Me.GroupBox14.Controls.Add(Me.cmdBck)
        Me.GroupBox14.Controls.Add(Me.cmdNxt)
        Me.GroupBox14.Controls.Add(Me.chkDel)
        Me.GroupBox14.Controls.Add(Me.txt_dsc_f3)
        Me.GroupBox14.Controls.Add(Me.txtCtnStr)
        Me.GroupBox14.Controls.Add(Me.Label77)
        Me.GroupBox14.Controls.Add(Me.Label35)
        Me.GroupBox14.Controls.Add(Me.Label53)
        Me.GroupBox14.Controls.Add(Me.dgSCCPTBKD)
        Me.GroupBox14.Controls.Add(Me.Label34)
        Me.GroupBox14.Controls.Add(Me.txt_dsc_f2)
        Me.GroupBox14.Controls.Add(Me.Label75)
        Me.GroupBox14.Controls.Add(Me.cboUntAmtD)
        Me.GroupBox14.Controls.Add(Me.Label27)
        Me.GroupBox14.Controls.Add(Me.txtTtlCtnD)
        Me.GroupBox14.Controls.Add(Me.txt_name_f3)
        Me.GroupBox14.Controls.Add(Me.txtCartonFactor)
        Me.GroupBox14.Controls.Add(Me.lblpc)
        Me.GroupBox14.Controls.Add(Me.cmdAss)
        Me.GroupBox14.Controls.Add(Me.txt_name_f2)
        Me.GroupBox14.Controls.Add(Me.lblconftr)
        Me.GroupBox14.Controls.Add(Me.txtTtlAmtD)
        Me.GroupBox14.Controls.Add(Me.Label97)
        Me.GroupBox14.Controls.Add(Me.txtPC)
        Me.GroupBox14.Controls.Add(Me.cboManAdr)
        Me.GroupBox14.Controls.Add(Me.txtConFtr)
        Me.GroupBox14.Controls.Add(Me.cboUntSelD)
        Me.GroupBox14.Controls.Add(Me.Label96)
        Me.GroupBox14.Controls.Add(Me.txtSelPrcD)
        Me.GroupBox14.Controls.Add(Me.txtShpQty)
        Me.GroupBox14.Controls.Add(Me.Label95)
        Me.GroupBox14.Controls.Add(Me.txtInvNo)
        Me.GroupBox14.Controls.Add(Me.txt_dsc_f1)
        Me.GroupBox14.Controls.Add(Me.Label31)
        Me.GroupBox14.Controls.Add(Me.txtManAdr)
        Me.GroupBox14.Controls.Add(Me.txtManNam)
        Me.GroupBox14.Controls.Add(Me.Label94)
        Me.GroupBox14.Controls.Add(Me.Label92)
        Me.GroupBox14.Controls.Add(Me.Label93)
        Me.GroupBox14.Controls.Add(Me.txt_name_f1)
        Me.GroupBox14.Controls.Add(Me.Label28)
        Me.GroupBox14.Controls.Add(Me.Label51)
        Me.GroupBox14.Controls.Add(Me.chkPC)
        Me.GroupBox14.Controls.Add(Me.txtCusCol)
        Me.GroupBox14.Location = New System.Drawing.Point(8, 141)
        Me.GroupBox14.Name = "GroupBox14"
        Me.GroupBox14.Size = New System.Drawing.Size(938, 374)
        Me.GroupBox14.TabIndex = 386
        Me.GroupBox14.TabStop = False
        '
        'txtPCPrc
        '
        Me.txtPCPrc.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtPCPrc.Location = New System.Drawing.Point(765, 266)
        Me.txtPCPrc.MaxLength = 10
        Me.txtPCPrc.Name = "txtPCPrc"
        Me.txtPCPrc.Size = New System.Drawing.Size(49, 20)
        Me.txtPCPrc.TabIndex = 386
        '
        'cmdConInv
        '
        Me.cmdConInv.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdConInv.Location = New System.Drawing.Point(825, 301)
        Me.cmdConInv.Name = "cmdConInv"
        Me.cmdConInv.Size = New System.Drawing.Size(102, 34)
        Me.cmdConInv.TabIndex = 333
        Me.cmdConInv.TabStop = False
        Me.cmdConInv.Text = " (Container)   (&Invoice)"
        '
        'Label55
        '
        Me.Label55.AutoSize = True
        Me.Label55.Location = New System.Drawing.Point(525, 271)
        Me.Label55.Name = "Label55"
        Me.Label55.Size = New System.Drawing.Size(98, 12)
        Me.Label55.TabIndex = 340
        Me.Label55.Text = "Unit Price/Item : PC"
        '
        'cmdMore
        '
        Me.cmdMore.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdMore.Location = New System.Drawing.Point(576, 16)
        Me.cmdMore.Name = "cmdMore"
        Me.cmdMore.Size = New System.Drawing.Size(50, 25)
        Me.cmdMore.TabIndex = 317
        Me.cmdMore.TabStop = False
        Me.cmdMore.Text = "&More"
        '
        'dgPCKDIM
        '
        Me.dgPCKDIM.AllowUserToAddRows = False
        Me.dgPCKDIM.AllowUserToDeleteRows = False
        Me.dgPCKDIM.ColumnHeadersHeight = 20
        Me.dgPCKDIM.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        Me.dgPCKDIM.Location = New System.Drawing.Point(7, 71)
        Me.dgPCKDIM.Name = "dgPCKDIM"
        Me.dgPCKDIM.RowHeadersWidth = 20
        Me.dgPCKDIM.RowTemplate.DefaultCellStyle.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.dgPCKDIM.RowTemplate.Height = 16
        Me.dgPCKDIM.Size = New System.Drawing.Size(925, 94)
        Me.dgPCKDIM.TabIndex = 326
        '
        'GroupBox11
        '
        Me.GroupBox11.Controls.Add(Me.weight1)
        Me.GroupBox11.Controls.Add(Me.weight3)
        Me.GroupBox11.Controls.Add(Me.weight2)
        Me.GroupBox11.Location = New System.Drawing.Point(186, 38)
        Me.GroupBox11.Name = "GroupBox11"
        Me.GroupBox11.Size = New System.Drawing.Size(313, 29)
        Me.GroupBox11.TabIndex = 357
        Me.GroupBox11.TabStop = False
        '
        'weight1
        '
        Me.weight1.AutoSize = True
        Me.weight1.Location = New System.Drawing.Point(7, 7)
        Me.weight1.Name = "weight1"
        Me.weight1.Size = New System.Drawing.Size(52, 16)
        Me.weight1.TabIndex = 323
        Me.weight1.TabStop = True
        Me.weight1.Text = "kg/cm"
        Me.weight1.UseVisualStyleBackColor = True
        '
        'weight3
        '
        Me.weight3.AutoSize = True
        Me.weight3.Location = New System.Drawing.Point(184, 8)
        Me.weight3.Name = "weight3"
        Me.weight3.Size = New System.Drawing.Size(116, 16)
        Me.weight3.TabIndex = 325
        Me.weight3.TabStop = True
        Me.weight3.Text = "kg && lbs/cm && Inch"
        Me.weight3.UseVisualStyleBackColor = True
        '
        'weight2
        '
        Me.weight2.AutoSize = True
        Me.weight2.Location = New System.Drawing.Point(89, 8)
        Me.weight2.Name = "weight2"
        Me.weight2.Size = New System.Drawing.Size(60, 16)
        Me.weight2.TabIndex = 324
        Me.weight2.TabStop = True
        Me.weight2.Text = "lbs/Inch"
        Me.weight2.UseVisualStyleBackColor = True
        '
        'txtItmShm
        '
        Me.txtItmShm.ContextMenuStrip = Me.cms_CopyNPaste
        Me.txtItmShm.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.0!)
        Me.txtItmShm.Location = New System.Drawing.Point(644, 168)
        Me.txtItmShm.Name = "txtItmShm"
        Me.txtItmShm.Size = New System.Drawing.Size(283, 20)
        Me.txtItmShm.TabIndex = 385
        Me.txtItmShm.Text = ""
        '
        'txtCtnEnd
        '
        Me.txtCtnEnd.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCtnEnd.Location = New System.Drawing.Point(525, 18)
        Me.txtCtnEnd.MaxLength = 10
        Me.txtCtnEnd.Name = "txtCtnEnd"
        Me.txtCtnEnd.Size = New System.Drawing.Size(45, 20)
        Me.txtCtnEnd.TabIndex = 315
        '
        'Label54
        '
        Me.Label54.AutoSize = True
        Me.Label54.Location = New System.Drawing.Point(525, 295)
        Me.Label54.Name = "Label54"
        Me.Label54.Size = New System.Drawing.Size(92, 12)
        Me.Label54.TabIndex = 341
        Me.Label54.Text = "Total mount / Item"
        '
        'Label76
        '
        Me.Label76.AutoSize = True
        Me.Label76.Location = New System.Drawing.Point(7, 47)
        Me.Label76.Name = "Label76"
        Me.Label76.Size = New System.Drawing.Size(154, 12)
        Me.Label76.TabIndex = 352
        Me.Label76.Text = "Packing Dimension Information"
        '
        'cmdinscpb
        '
        Me.cmdinscpb.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdinscpb.Location = New System.Drawing.Point(199, 168)
        Me.cmdinscpb.Name = "cmdinscpb"
        Me.cmdinscpb.Size = New System.Drawing.Size(68, 20)
        Me.cmdinscpb.TabIndex = 372
        Me.cmdinscpb.TabStop = False
        Me.cmdinscpb.Text = "I&ns Row"
        '
        'Label36
        '
        Me.Label36.AutoSize = True
        Me.Label36.Location = New System.Drawing.Point(641, 22)
        Me.Label36.Name = "Label36"
        Me.Label36.Size = New System.Drawing.Size(59, 12)
        Me.Label36.TabIndex = 341
        Me.Label36.Text = "Total of ctn"
        '
        'cmdBck
        '
        Me.cmdBck.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdBck.Location = New System.Drawing.Point(587, 335)
        Me.cmdBck.Name = "cmdBck"
        Me.cmdBck.Size = New System.Drawing.Size(48, 27)
        Me.cmdBck.TabIndex = 335
        Me.cmdBck.TabStop = False
        Me.cmdBck.Text = "&Back"
        '
        'cmdNxt
        '
        Me.cmdNxt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdNxt.Location = New System.Drawing.Point(650, 335)
        Me.cmdNxt.Name = "cmdNxt"
        Me.cmdNxt.Size = New System.Drawing.Size(48, 27)
        Me.cmdNxt.TabIndex = 336
        Me.cmdNxt.TabStop = False
        Me.cmdNxt.Text = "&Next"
        '
        'chkDel
        '
        Me.chkDel.AutoSize = True
        Me.chkDel.Font = New System.Drawing.Font("Arial", 8.25!)
        Me.chkDel.Location = New System.Drawing.Point(755, 343)
        Me.chkDel.Name = "chkDel"
        Me.chkDel.Size = New System.Drawing.Size(150, 18)
        Me.chkDel.TabIndex = 337
        Me.chkDel.Text = "Delete (Checked if delete)"
        Me.chkDel.UseVisualStyleBackColor = True
        '
        'txt_dsc_f3
        '
        Me.txt_dsc_f3.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txt_dsc_f3.Location = New System.Drawing.Point(315, 319)
        Me.txt_dsc_f3.MaxLength = 150
        Me.txt_dsc_f3.Name = "txt_dsc_f3"
        Me.txt_dsc_f3.Size = New System.Drawing.Size(195, 20)
        Me.txt_dsc_f3.TabIndex = 384
        '
        'txtCtnStr
        '
        Me.txtCtnStr.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCtnStr.Location = New System.Drawing.Point(461, 18)
        Me.txtCtnStr.MaxLength = 10
        Me.txtCtnStr.Name = "txtCtnStr"
        Me.txtCtnStr.Size = New System.Drawing.Size(44, 20)
        Me.txtCtnStr.TabIndex = 314
        '
        'Label77
        '
        Me.Label77.AutoSize = True
        Me.Label77.Location = New System.Drawing.Point(7, 174)
        Me.Label77.Name = "Label77"
        Me.Label77.Size = New System.Drawing.Size(98, 12)
        Me.Label77.TabIndex = 370
        Me.Label77.Text = "Material breakdown"
        '
        'Label35
        '
        Me.Label35.AutoSize = True
        Me.Label35.BackColor = System.Drawing.Color.Transparent
        Me.Label35.ForeColor = System.Drawing.Color.Green
        Me.Label35.Location = New System.Drawing.Point(506, 21)
        Me.Label35.Name = "Label35"
        Me.Label35.Size = New System.Drawing.Size(18, 12)
        Me.Label35.TabIndex = 336
        Me.Label35.Text = "To"
        '
        'Label53
        '
        Me.Label53.AutoSize = True
        Me.Label53.Location = New System.Drawing.Point(525, 319)
        Me.Label53.Name = "Label53"
        Me.Label53.Size = New System.Drawing.Size(85, 12)
        Me.Label53.TabIndex = 342
        Me.Label53.Text = "Assigned Invoice"
        '
        'dgSCCPTBKD
        '
        Me.dgSCCPTBKD.AllowUserToAddRows = False
        Me.dgSCCPTBKD.AllowUserToDeleteRows = False
        Me.dgSCCPTBKD.ColumnHeadersHeight = 20
        Me.dgSCCPTBKD.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        Me.dgSCCPTBKD.Location = New System.Drawing.Point(7, 192)
        Me.dgSCCPTBKD.Name = "dgSCCPTBKD"
        Me.dgSCCPTBKD.RowHeadersWidth = 20
        Me.dgSCCPTBKD.RowTemplate.DefaultCellStyle.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.dgSCCPTBKD.RowTemplate.Height = 16
        Me.dgSCCPTBKD.Size = New System.Drawing.Size(503, 69)
        Me.dgSCCPTBKD.TabIndex = 327
        '
        'Label34
        '
        Me.Label34.AutoSize = True
        Me.Label34.BackColor = System.Drawing.Color.Transparent
        Me.Label34.ForeColor = System.Drawing.Color.Green
        Me.Label34.Location = New System.Drawing.Point(428, 22)
        Me.Label34.Name = "Label34"
        Me.Label34.Size = New System.Drawing.Size(52, 12)
        Me.Label34.TabIndex = 335
        Me.Label34.Text = "CTN:  Fm"
        '
        'txt_dsc_f2
        '
        Me.txt_dsc_f2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txt_dsc_f2.Location = New System.Drawing.Point(315, 295)
        Me.txt_dsc_f2.MaxLength = 150
        Me.txt_dsc_f2.Name = "txt_dsc_f2"
        Me.txt_dsc_f2.Size = New System.Drawing.Size(195, 20)
        Me.txt_dsc_f2.TabIndex = 383
        '
        'Label75
        '
        Me.Label75.AutoSize = True
        Me.Label75.Location = New System.Drawing.Point(534, 50)
        Me.Label75.Name = "Label75"
        Me.Label75.Size = New System.Drawing.Size(69, 12)
        Me.Label75.TabIndex = 345
        Me.Label75.Text = "Carton Factor"
        '
        'cboUntAmtD
        '
        Me.cboUntAmtD.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboUntAmtD.FormattingEnabled = True
        Me.cboUntAmtD.Location = New System.Drawing.Point(644, 290)
        Me.cboUntAmtD.Name = "cboUntAmtD"
        Me.cboUntAmtD.Size = New System.Drawing.Size(59, 21)
        Me.cboUntAmtD.TabIndex = 344
        '
        'Label27
        '
        Me.Label27.AutoSize = True
        Me.Label27.Location = New System.Drawing.Point(818, 340)
        Me.Label27.Name = "Label27"
        Me.Label27.Size = New System.Drawing.Size(46, 12)
        Me.Label27.TabIndex = 323
        Me.Label27.Text = "Cust Um"
        Me.Label27.Visible = False
        '
        'txtTtlCtnD
        '
        Me.txtTtlCtnD.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlCtnD.Location = New System.Drawing.Point(707, 18)
        Me.txtTtlCtnD.MaxLength = 10
        Me.txtTtlCtnD.Name = "txtTtlCtnD"
        Me.txtTtlCtnD.Size = New System.Drawing.Size(50, 20)
        Me.txtTtlCtnD.TabIndex = 318
        '
        'txt_name_f3
        '
        Me.txt_name_f3.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txt_name_f3.Location = New System.Drawing.Point(94, 319)
        Me.txt_name_f3.MaxLength = 150
        Me.txt_name_f3.Name = "txt_name_f3"
        Me.txt_name_f3.Size = New System.Drawing.Size(181, 20)
        Me.txt_name_f3.TabIndex = 382
        '
        'txtCartonFactor
        '
        Me.txtCartonFactor.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCartonFactor.Location = New System.Drawing.Point(620, 48)
        Me.txtCartonFactor.MaxLength = 10
        Me.txtCartonFactor.Name = "txtCartonFactor"
        Me.txtCartonFactor.Size = New System.Drawing.Size(78, 20)
        Me.txtCartonFactor.TabIndex = 316
        '
        'lblpc
        '
        Me.lblpc.AutoSize = True
        Me.lblpc.Location = New System.Drawing.Point(280, 20)
        Me.lblpc.Name = "lblpc"
        Me.lblpc.Size = New System.Drawing.Size(19, 12)
        Me.lblpc.TabIndex = 334
        Me.lblpc.Text = "PC"
        '
        'cmdAss
        '
        Me.cmdAss.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdAss.Location = New System.Drawing.Point(825, 265)
        Me.cmdAss.Name = "cmdAss"
        Me.cmdAss.Size = New System.Drawing.Size(102, 34)
        Me.cmdAss.TabIndex = 334
        Me.cmdAss.TabStop = False
        Me.cmdAss.Text = "Ass&ortment"
        '
        'txt_name_f2
        '
        Me.txt_name_f2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txt_name_f2.Location = New System.Drawing.Point(94, 295)
        Me.txt_name_f2.MaxLength = 150
        Me.txt_name_f2.Name = "txt_name_f2"
        Me.txt_name_f2.Size = New System.Drawing.Size(181, 20)
        Me.txt_name_f2.TabIndex = 381
        '
        'lblconftr
        '
        Me.lblconftr.AutoSize = True
        Me.lblconftr.Location = New System.Drawing.Point(130, 20)
        Me.lblconftr.Name = "lblconftr"
        Me.lblconftr.Size = New System.Drawing.Size(41, 12)
        Me.lblconftr.TabIndex = 333
        Me.lblconftr.Text = "Con.Ftr"
        '
        'txtTtlAmtD
        '
        Me.txtTtlAmtD.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlAmtD.Location = New System.Drawing.Point(711, 290)
        Me.txtTtlAmtD.MaxLength = 10
        Me.txtTtlAmtD.Name = "txtTtlAmtD"
        Me.txtTtlAmtD.Size = New System.Drawing.Size(103, 20)
        Me.txtTtlAmtD.TabIndex = 345
        '
        'Label97
        '
        Me.Label97.AutoSize = True
        Me.Label97.Location = New System.Drawing.Point(278, 321)
        Me.Label97.Name = "Label97"
        Me.Label97.Size = New System.Drawing.Size(27, 12)
        Me.Label97.TabIndex = 380
        Me.Label97.Text = "Desc"
        '
        'txtPC
        '
        Me.txtPC.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtPC.Location = New System.Drawing.Point(231, 18)
        Me.txtPC.MaxLength = 10
        Me.txtPC.Name = "txtPC"
        Me.txtPC.Size = New System.Drawing.Size(45, 20)
        Me.txtPC.TabIndex = 319
        '
        'cboManAdr
        '
        Me.cboManAdr.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboManAdr.FormattingEnabled = True
        Me.cboManAdr.Location = New System.Drawing.Point(644, 192)
        Me.cboManAdr.Name = "cboManAdr"
        Me.cboManAdr.Size = New System.Drawing.Size(282, 21)
        Me.cboManAdr.TabIndex = 330
        '
        'txtConFtr
        '
        Me.txtConFtr.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtConFtr.Location = New System.Drawing.Point(180, 18)
        Me.txtConFtr.MaxLength = 10
        Me.txtConFtr.Name = "txtConFtr"
        Me.txtConFtr.Size = New System.Drawing.Size(45, 20)
        Me.txtConFtr.TabIndex = 313
        '
        'cboUntSelD
        '
        Me.cboUntSelD.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboUntSelD.FormattingEnabled = True
        Me.cboUntSelD.Location = New System.Drawing.Point(644, 266)
        Me.cboUntSelD.Name = "cboUntSelD"
        Me.cboUntSelD.Size = New System.Drawing.Size(59, 21)
        Me.cboUntSelD.TabIndex = 346
        '
        'Label96
        '
        Me.Label96.AutoSize = True
        Me.Label96.Location = New System.Drawing.Point(278, 297)
        Me.Label96.Name = "Label96"
        Me.Label96.Size = New System.Drawing.Size(27, 12)
        Me.Label96.TabIndex = 379
        Me.Label96.Text = "Desc"
        '
        'txtSelPrcD
        '
        Me.txtSelPrcD.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtSelPrcD.Location = New System.Drawing.Point(711, 266)
        Me.txtSelPrcD.MaxLength = 10
        Me.txtSelPrcD.Name = "txtSelPrcD"
        Me.txtSelPrcD.Size = New System.Drawing.Size(52, 20)
        Me.txtSelPrcD.TabIndex = 347
        '
        'txtShpQty
        '
        Me.txtShpQty.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtShpQty.Location = New System.Drawing.Point(84, 18)
        Me.txtShpQty.MaxLength = 10
        Me.txtShpQty.Name = "txtShpQty"
        Me.txtShpQty.Size = New System.Drawing.Size(45, 20)
        Me.txtShpQty.TabIndex = 313
        '
        'Label95
        '
        Me.Label95.AutoSize = True
        Me.Label95.Location = New System.Drawing.Point(278, 273)
        Me.Label95.Name = "Label95"
        Me.Label95.Size = New System.Drawing.Size(27, 12)
        Me.Label95.TabIndex = 378
        Me.Label95.Text = "Desc"
        '
        'txtInvNo
        '
        Me.txtInvNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtInvNo.Location = New System.Drawing.Point(644, 314)
        Me.txtInvNo.MaxLength = 10
        Me.txtInvNo.Name = "txtInvNo"
        Me.txtInvNo.Size = New System.Drawing.Size(170, 20)
        Me.txtInvNo.TabIndex = 350
        '
        'txt_dsc_f1
        '
        Me.txt_dsc_f1.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txt_dsc_f1.Location = New System.Drawing.Point(315, 271)
        Me.txt_dsc_f1.MaxLength = 150
        Me.txt_dsc_f1.Name = "txt_dsc_f1"
        Me.txt_dsc_f1.Size = New System.Drawing.Size(195, 20)
        Me.txt_dsc_f1.TabIndex = 377
        '
        'Label31
        '
        Me.Label31.AutoSize = True
        Me.Label31.BackColor = System.Drawing.Color.Transparent
        Me.Label31.ForeColor = System.Drawing.Color.Green
        Me.Label31.Location = New System.Drawing.Point(7, 20)
        Me.Label31.Name = "Label31"
        Me.Label31.Size = New System.Drawing.Size(63, 12)
        Me.Label31.TabIndex = 329
        Me.Label31.Text = "Shipped Qty"
        '
        'txtManAdr
        '
        Me.txtManAdr.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtManAdr.Location = New System.Drawing.Point(644, 239)
        Me.txtManAdr.MaxLength = 300
        Me.txtManAdr.Name = "txtManAdr"
        Me.txtManAdr.Size = New System.Drawing.Size(282, 20)
        Me.txtManAdr.TabIndex = 331
        '
        'txtManNam
        '
        Me.txtManNam.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtManNam.Location = New System.Drawing.Point(644, 215)
        Me.txtManNam.MaxLength = 200
        Me.txtManNam.Name = "txtManNam"
        Me.txtManNam.Size = New System.Drawing.Size(283, 20)
        Me.txtManNam.TabIndex = 329
        '
        'Label94
        '
        Me.Label94.AutoSize = True
        Me.Label94.Location = New System.Drawing.Point(7, 319)
        Me.Label94.Name = "Label94"
        Me.Label94.Size = New System.Drawing.Size(67, 12)
        Me.Label94.TabIndex = 376
        Me.Label94.Text = "Field 3 Name"
        '
        'Label92
        '
        Me.Label92.AutoSize = True
        Me.Label92.Location = New System.Drawing.Point(7, 271)
        Me.Label92.Name = "Label92"
        Me.Label92.Size = New System.Drawing.Size(67, 12)
        Me.Label92.TabIndex = 373
        Me.Label92.Text = "Field 1 Name"
        '
        'Label93
        '
        Me.Label93.AutoSize = True
        Me.Label93.Location = New System.Drawing.Point(7, 295)
        Me.Label93.Name = "Label93"
        Me.Label93.Size = New System.Drawing.Size(67, 12)
        Me.Label93.TabIndex = 375
        Me.Label93.Text = "Field 2 Name"
        '
        'txt_name_f1
        '
        Me.txt_name_f1.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txt_name_f1.Location = New System.Drawing.Point(94, 271)
        Me.txt_name_f1.MaxLength = 150
        Me.txt_name_f1.Name = "txt_name_f1"
        Me.txt_name_f1.Size = New System.Drawing.Size(181, 20)
        Me.txt_name_f1.TabIndex = 374
        '
        'Label28
        '
        Me.Label28.AutoSize = True
        Me.Label28.Location = New System.Drawing.Point(768, 22)
        Me.Label28.Name = "Label28"
        Me.Label28.Size = New System.Drawing.Size(84, 12)
        Me.Label28.TabIndex = 321
        Me.Label28.Text = "Cust Color Code"
        '
        'Label51
        '
        Me.Label51.AutoSize = True
        Me.Label51.Location = New System.Drawing.Point(525, 170)
        Me.Label51.Name = "Label51"
        Me.Label51.Size = New System.Drawing.Size(98, 72)
        Me.Label51.TabIndex = 337
        Me.Label51.Text = "Item Ship Marks" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Manufacturer Name" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Manuf Addr"
        '
        'chkPC
        '
        Me.chkPC.AutoSize = True
        Me.chkPC.Font = New System.Drawing.Font("Arial", 8.25!)
        Me.chkPC.Location = New System.Drawing.Point(316, 18)
        Me.chkPC.Name = "chkPC"
        Me.chkPC.Size = New System.Drawing.Size(92, 18)
        Me.chkPC.TabIndex = 308
        Me.chkPC.Text = "Convert to PC"
        Me.chkPC.UseVisualStyleBackColor = True
        '
        'txtCusCol
        '
        Me.txtCusCol.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCusCol.Location = New System.Drawing.Point(858, 18)
        Me.txtCusCol.MaxLength = 30
        Me.txtCusCol.Name = "txtCusCol"
        Me.txtCusCol.Size = New System.Drawing.Size(73, 20)
        Me.txtCusCol.TabIndex = 310
        '
        'txtmodvol
        '
        Me.txtmodvol.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtmodvol.Location = New System.Drawing.Point(143, 620)
        Me.txtmodvol.MaxLength = 10
        Me.txtmodvol.Name = "txtmodvol"
        Me.txtmodvol.Size = New System.Drawing.Size(61, 20)
        Me.txtmodvol.TabIndex = 362
        Me.txtmodvol.Visible = False
        '
        'txtCusVen
        '
        Me.txtCusVen.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCusVen.Location = New System.Drawing.Point(473, 613)
        Me.txtCusVen.MaxLength = 10
        Me.txtCusVen.Name = "txtCusVen"
        Me.txtCusVen.Size = New System.Drawing.Size(34, 20)
        Me.txtCusVen.TabIndex = 350
        Me.txtCusVen.Visible = False
        '
        'txtVenNo
        '
        Me.txtVenNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtVenNo.Location = New System.Drawing.Point(439, 613)
        Me.txtVenNo.MaxLength = 10
        Me.txtVenNo.Name = "txtVenNo"
        Me.txtVenNo.Size = New System.Drawing.Size(34, 20)
        Me.txtVenNo.TabIndex = 349
        Me.txtVenNo.Visible = False
        '
        'cboPCPrc
        '
        Me.cboPCPrc.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboPCPrc.FormattingEnabled = True
        Me.cboPCPrc.Location = New System.Drawing.Point(638, 609)
        Me.cboPCPrc.Name = "cboPCPrc"
        Me.cboPCPrc.Size = New System.Drawing.Size(75, 21)
        Me.cboPCPrc.TabIndex = 348
        Me.cboPCPrc.Visible = False
        '
        'optSearch1
        '
        Me.optSearch1.AutoSize = True
        Me.optSearch1.Location = New System.Drawing.Point(832, 669)
        Me.optSearch1.Name = "optSearch1"
        Me.optSearch1.Size = New System.Drawing.Size(49, 16)
        Me.optSearch1.TabIndex = 328
        Me.optSearch1.Text = "S/C #"
        Me.optSearch1.UseVisualStyleBackColor = True
        Me.optSearch1.Visible = False
        '
        'optSearch0
        '
        Me.optSearch0.AutoSize = True
        Me.optSearch0.Location = New System.Drawing.Point(694, 671)
        Me.optSearch0.Name = "optSearch0"
        Me.optSearch0.Size = New System.Drawing.Size(59, 16)
        Me.optSearch0.TabIndex = 327
        Me.optSearch0.Text = "Job No."
        Me.optSearch0.UseVisualStyleBackColor = True
        Me.optSearch0.Visible = False
        '
        'txtPurSeq
        '
        Me.txtPurSeq.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtPurSeq.Location = New System.Drawing.Point(400, 613)
        Me.txtPurSeq.MaxLength = 10
        Me.txtPurSeq.Name = "txtPurSeq"
        Me.txtPurSeq.Size = New System.Drawing.Size(41, 20)
        Me.txtPurSeq.TabIndex = 348
        Me.txtPurSeq.Visible = False
        '
        'Label30
        '
        Me.Label30.AutoSize = True
        Me.Label30.Location = New System.Drawing.Point(588, 672)
        Me.Label30.Name = "Label30"
        Me.Label30.Size = New System.Drawing.Size(54, 12)
        Me.Label30.TabIndex = 326
        Me.Label30.Text = "Search by:"
        Me.Label30.Visible = False
        '
        'txtPurOrd
        '
        Me.txtPurOrd.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtPurOrd.Location = New System.Drawing.Point(374, 613)
        Me.txtPurOrd.MaxLength = 10
        Me.txtPurOrd.Name = "txtPurOrd"
        Me.txtPurOrd.Size = New System.Drawing.Size(26, 20)
        Me.txtPurOrd.TabIndex = 347
        Me.txtPurOrd.Visible = False
        '
        'txtVol
        '
        Me.txtVol.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtVol.Location = New System.Drawing.Point(64, 623)
        Me.txtVol.MaxLength = 10
        Me.txtVol.Name = "txtVol"
        Me.txtVol.Size = New System.Drawing.Size(61, 20)
        Me.txtVol.TabIndex = 316
        Me.txtVol.Visible = False
        '
        'txtColCde
        '
        Me.txtColCde.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtColCde.Location = New System.Drawing.Point(336, 613)
        Me.txtColCde.MaxLength = 10
        Me.txtColCde.Name = "txtColCde"
        Me.txtColCde.Size = New System.Drawing.Size(41, 20)
        Me.txtColCde.TabIndex = 346
        Me.txtColCde.Visible = False
        '
        'Label39
        '
        Me.Label39.AutoSize = True
        Me.Label39.Location = New System.Drawing.Point(16, 601)
        Me.Label39.Name = "Label39"
        Me.Label39.Size = New System.Drawing.Size(36, 12)
        Me.Label39.TabIndex = 315
        Me.Label39.Text = "Master"
        Me.Label39.Visible = False
        '
        'txtMtrCtn
        '
        Me.txtMtrCtn.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtMtrCtn.Location = New System.Drawing.Point(64, 601)
        Me.txtMtrCtn.MaxLength = 10
        Me.txtMtrCtn.Name = "txtMtrCtn"
        Me.txtMtrCtn.Size = New System.Drawing.Size(61, 20)
        Me.txtMtrCtn.TabIndex = 314
        Me.txtMtrCtn.Visible = False
        '
        'Label40
        '
        Me.Label40.AutoSize = True
        Me.Label40.Location = New System.Drawing.Point(18, 622)
        Me.Label40.Name = "Label40"
        Me.Label40.Size = New System.Drawing.Size(31, 12)
        Me.Label40.TabIndex = 317
        Me.Label40.Text = "CBM"
        Me.Label40.Visible = False
        '
        'Label56
        '
        Me.Label56.AutoSize = True
        Me.Label56.Location = New System.Drawing.Point(531, 615)
        Me.Label56.Name = "Label56"
        Me.Label56.Size = New System.Drawing.Size(74, 12)
        Me.Label56.TabIndex = 339
        Me.Label56.Text = "Unit Price / PC"
        Me.Label56.Visible = False
        '
        'GroupBox5
        '
        Me.GroupBox5.Controls.Add(Me.txtCmpRmk)
        Me.GroupBox5.Controls.Add(Me.cboCus2No_dtl)
        Me.GroupBox5.Controls.Add(Me.Label52)
        Me.GroupBox5.Controls.Add(Me.txtTtlNetD)
        Me.GroupBox5.Controls.Add(Me.Label88)
        Me.GroupBox5.Controls.Add(Me.txtNetWgt)
        Me.GroupBox5.Controls.Add(Me.Label49)
        Me.GroupBox5.Controls.Add(Me.Label50)
        Me.GroupBox5.Controls.Add(Me.txtTtlGrsD)
        Me.GroupBox5.Controls.Add(Me.txtGrsWgt)
        Me.GroupBox5.Controls.Add(Me.txtItmTyp)
        Me.GroupBox5.Controls.Add(Me.Label48)
        Me.GroupBox5.Controls.Add(Me.Label47)
        Me.GroupBox5.Controls.Add(Me.Label45)
        Me.GroupBox5.Controls.Add(Me.txtTtlVolD)
        Me.GroupBox5.Controls.Add(Me.txtOrdSeq)
        Me.GroupBox5.Controls.Add(Me.Label46)
        Me.GroupBox5.Controls.Add(Me.txtActVol)
        Me.GroupBox5.Controls.Add(Me.txtMtrhcm)
        Me.GroupBox5.Controls.Add(Me.txtMtrwcm)
        Me.GroupBox5.Controls.Add(Me.txtMtrdcm)
        Me.GroupBox5.Controls.Add(Me.Label44)
        Me.GroupBox5.Controls.Add(Me.txtOrgQty)
        Me.GroupBox5.Controls.Add(Me.Label43)
        Me.GroupBox5.Controls.Add(Me.Label42)
        Me.GroupBox5.Controls.Add(Me.Label41)
        Me.GroupBox5.Controls.Add(Me.Label37)
        Me.GroupBox5.Controls.Add(Me.txtInrCtn)
        Me.GroupBox5.Controls.Add(Me.Label38)
        Me.GroupBox5.Controls.Add(Me.txtUntCde)
        Me.GroupBox5.Controls.Add(Me.cboPckRmk)
        Me.GroupBox5.Controls.Add(Me.txtColDsc)
        Me.GroupBox5.Controls.Add(Me.txtOutQty)
        Me.GroupBox5.Controls.Add(Me.Label29)
        Me.GroupBox5.Controls.Add(Me.txtPrcTrm)
        Me.GroupBox5.Controls.Add(Me.txtPayTrm)
        Me.GroupBox5.Location = New System.Drawing.Point(125, 604)
        Me.GroupBox5.Name = "GroupBox5"
        Me.GroupBox5.Size = New System.Drawing.Size(435, 151)
        Me.GroupBox5.TabIndex = 294
        Me.GroupBox5.TabStop = False
        Me.GroupBox5.Visible = False
        '
        'txtCmpRmk
        '
        Me.txtCmpRmk.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCmpRmk.Location = New System.Drawing.Point(298, 135)
        Me.txtCmpRmk.MaxLength = 10
        Me.txtCmpRmk.Name = "txtCmpRmk"
        Me.txtCmpRmk.Size = New System.Drawing.Size(71, 20)
        Me.txtCmpRmk.TabIndex = 340
        '
        'cboCus2No_dtl
        '
        Me.cboCus2No_dtl.FormattingEnabled = True
        Me.cboCus2No_dtl.Location = New System.Drawing.Point(130, -6)
        Me.cboCus2No_dtl.Name = "cboCus2No_dtl"
        Me.cboCus2No_dtl.Size = New System.Drawing.Size(23, 20)
        Me.cboCus2No_dtl.TabIndex = 359
        Me.cboCus2No_dtl.Visible = False
        '
        'Label52
        '
        Me.Label52.AutoSize = True
        Me.Label52.Location = New System.Drawing.Point(202, 135)
        Me.Label52.Name = "Label52"
        Me.Label52.Size = New System.Drawing.Size(67, 12)
        Me.Label52.TabIndex = 338
        Me.Label52.Text = "W.M. Comp."
        '
        'txtTtlNetD
        '
        Me.txtTtlNetD.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlNetD.Location = New System.Drawing.Point(298, 111)
        Me.txtTtlNetD.MaxLength = 10
        Me.txtTtlNetD.Name = "txtTtlNetD"
        Me.txtTtlNetD.Size = New System.Drawing.Size(71, 20)
        Me.txtTtlNetD.TabIndex = 336
        '
        'Label88
        '
        Me.Label88.AutoSize = True
        Me.Label88.Location = New System.Drawing.Point(103, 2)
        Me.Label88.Name = "Label88"
        Me.Label88.Size = New System.Drawing.Size(44, 12)
        Me.Label88.TabIndex = 351
        Me.Label88.Text = "Consol#"
        Me.Label88.Visible = False
        '
        'txtNetWgt
        '
        Me.txtNetWgt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtNetWgt.Location = New System.Drawing.Point(123, 111)
        Me.txtNetWgt.MaxLength = 10
        Me.txtNetWgt.Name = "txtNetWgt"
        Me.txtNetWgt.Size = New System.Drawing.Size(71, 20)
        Me.txtNetWgt.TabIndex = 335
        '
        'Label49
        '
        Me.Label49.AutoSize = True
        Me.Label49.Location = New System.Drawing.Point(202, 111)
        Me.Label49.Name = "Label49"
        Me.Label49.Size = New System.Drawing.Size(73, 12)
        Me.Label49.TabIndex = 334
        Me.Label49.Text = "TTL NW (Kg)"
        '
        'Label50
        '
        Me.Label50.AutoSize = True
        Me.Label50.BackColor = System.Drawing.Color.Transparent
        Me.Label50.ForeColor = System.Drawing.Color.Green
        Me.Label50.Location = New System.Drawing.Point(6, 111)
        Me.Label50.Name = "Label50"
        Me.Label50.Size = New System.Drawing.Size(95, 12)
        Me.Label50.TabIndex = 333
        Me.Label50.Text = "Net Wgt/Ctn : (Kg)"
        '
        'txtTtlGrsD
        '
        Me.txtTtlGrsD.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlGrsD.Location = New System.Drawing.Point(298, 87)
        Me.txtTtlGrsD.MaxLength = 10
        Me.txtTtlGrsD.Name = "txtTtlGrsD"
        Me.txtTtlGrsD.Size = New System.Drawing.Size(71, 20)
        Me.txtTtlGrsD.TabIndex = 332
        '
        'txtGrsWgt
        '
        Me.txtGrsWgt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtGrsWgt.Location = New System.Drawing.Point(123, 87)
        Me.txtGrsWgt.MaxLength = 10
        Me.txtGrsWgt.Name = "txtGrsWgt"
        Me.txtGrsWgt.Size = New System.Drawing.Size(71, 20)
        Me.txtGrsWgt.TabIndex = 331
        '
        'txtItmTyp
        '
        Me.txtItmTyp.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtItmTyp.Location = New System.Drawing.Point(95, -5)
        Me.txtItmTyp.MaxLength = 10
        Me.txtItmTyp.Name = "txtItmTyp"
        Me.txtItmTyp.Size = New System.Drawing.Size(29, 20)
        Me.txtItmTyp.TabIndex = 343
        Me.txtItmTyp.Visible = False
        '
        'Label48
        '
        Me.Label48.AutoSize = True
        Me.Label48.Location = New System.Drawing.Point(202, 87)
        Me.Label48.Name = "Label48"
        Me.Label48.Size = New System.Drawing.Size(73, 12)
        Me.Label48.TabIndex = 330
        Me.Label48.Text = "TTL GW (Kg)"
        '
        'Label47
        '
        Me.Label47.AutoSize = True
        Me.Label47.BackColor = System.Drawing.Color.Transparent
        Me.Label47.ForeColor = System.Drawing.Color.Green
        Me.Label47.Location = New System.Drawing.Point(6, 87)
        Me.Label47.Name = "Label47"
        Me.Label47.Size = New System.Drawing.Size(105, 12)
        Me.Label47.TabIndex = 329
        Me.Label47.Text = "Gross Wgt/Ctn : (Kg)"
        '
        'Label45
        '
        Me.Label45.AutoSize = True
        Me.Label45.Location = New System.Drawing.Point(202, 63)
        Me.Label45.Name = "Label45"
        Me.Label45.Size = New System.Drawing.Size(67, 12)
        Me.Label45.TabIndex = 328
        Me.Label45.Text = "TTL CBM    "
        '
        'txtTtlVolD
        '
        Me.txtTtlVolD.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlVolD.Location = New System.Drawing.Point(298, 63)
        Me.txtTtlVolD.MaxLength = 10
        Me.txtTtlVolD.Name = "txtTtlVolD"
        Me.txtTtlVolD.Size = New System.Drawing.Size(71, 20)
        Me.txtTtlVolD.TabIndex = 327
        '
        'txtOrdSeq
        '
        Me.txtOrdSeq.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtOrdSeq.Location = New System.Drawing.Point(70, -5)
        Me.txtOrdSeq.MaxLength = 10
        Me.txtOrdSeq.Name = "txtOrdSeq"
        Me.txtOrdSeq.Size = New System.Drawing.Size(19, 20)
        Me.txtOrdSeq.TabIndex = 342
        Me.txtOrdSeq.Visible = False
        '
        'Label46
        '
        Me.Label46.AutoSize = True
        Me.Label46.Location = New System.Drawing.Point(6, 63)
        Me.Label46.Name = "Label46"
        Me.Label46.Size = New System.Drawing.Size(84, 12)
        Me.Label46.TabIndex = 326
        Me.Label46.Text = "Actual CBM/Ctn"
        '
        'txtActVol
        '
        Me.txtActVol.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtActVol.Location = New System.Drawing.Point(123, 63)
        Me.txtActVol.MaxLength = 10
        Me.txtActVol.Name = "txtActVol"
        Me.txtActVol.Size = New System.Drawing.Size(71, 20)
        Me.txtActVol.TabIndex = 325
        '
        'txtMtrhcm
        '
        Me.txtMtrhcm.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtMtrhcm.Location = New System.Drawing.Point(332, 37)
        Me.txtMtrhcm.MaxLength = 10
        Me.txtMtrhcm.Name = "txtMtrhcm"
        Me.txtMtrhcm.Size = New System.Drawing.Size(61, 20)
        Me.txtMtrhcm.TabIndex = 324
        '
        'txtMtrwcm
        '
        Me.txtMtrwcm.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtMtrwcm.Location = New System.Drawing.Point(218, 36)
        Me.txtMtrwcm.MaxLength = 10
        Me.txtMtrwcm.Name = "txtMtrwcm"
        Me.txtMtrwcm.Size = New System.Drawing.Size(61, 20)
        Me.txtMtrwcm.TabIndex = 323
        '
        'txtMtrdcm
        '
        Me.txtMtrdcm.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtMtrdcm.Location = New System.Drawing.Point(123, 36)
        Me.txtMtrdcm.MaxLength = 10
        Me.txtMtrdcm.Name = "txtMtrdcm"
        Me.txtMtrdcm.Size = New System.Drawing.Size(61, 20)
        Me.txtMtrdcm.TabIndex = 322
        '
        'Label44
        '
        Me.Label44.AutoSize = True
        Me.Label44.BackColor = System.Drawing.Color.Transparent
        Me.Label44.ForeColor = System.Drawing.Color.Green
        Me.Label44.Location = New System.Drawing.Point(311, 41)
        Me.Label44.Name = "Label44"
        Me.Label44.Size = New System.Drawing.Size(13, 12)
        Me.Label44.TabIndex = 321
        Me.Label44.Text = "H"
        '
        'txtOrgQty
        '
        Me.txtOrgQty.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtOrgQty.Location = New System.Drawing.Point(65, -22)
        Me.txtOrgQty.MaxLength = 10
        Me.txtOrgQty.Name = "txtOrgQty"
        Me.txtOrgQty.Size = New System.Drawing.Size(10, 20)
        Me.txtOrgQty.TabIndex = 348
        Me.txtOrgQty.Visible = False
        '
        'Label43
        '
        Me.Label43.AutoSize = True
        Me.Label43.BackColor = System.Drawing.Color.Transparent
        Me.Label43.ForeColor = System.Drawing.Color.Green
        Me.Label43.Location = New System.Drawing.Point(194, 41)
        Me.Label43.Name = "Label43"
        Me.Label43.Size = New System.Drawing.Size(16, 12)
        Me.Label43.TabIndex = 320
        Me.Label43.Text = "W"
        '
        'Label42
        '
        Me.Label42.AutoSize = True
        Me.Label42.BackColor = System.Drawing.Color.Transparent
        Me.Label42.ForeColor = System.Drawing.Color.Green
        Me.Label42.Location = New System.Drawing.Point(103, 41)
        Me.Label42.Name = "Label42"
        Me.Label42.Size = New System.Drawing.Size(12, 12)
        Me.Label42.TabIndex = 319
        Me.Label42.Text = "L"
        '
        'Label41
        '
        Me.Label41.AutoSize = True
        Me.Label41.BackColor = System.Drawing.Color.Transparent
        Me.Label41.ForeColor = System.Drawing.Color.Green
        Me.Label41.Location = New System.Drawing.Point(6, 34)
        Me.Label41.Name = "Label41"
        Me.Label41.Size = New System.Drawing.Size(80, 12)
        Me.Label41.TabIndex = 318
        Me.Label41.Text = "Dimension (cm)"
        '
        'Label37
        '
        Me.Label37.AutoSize = True
        Me.Label37.Location = New System.Drawing.Point(85, 11)
        Me.Label37.Name = "Label37"
        Me.Label37.Size = New System.Drawing.Size(30, 12)
        Me.Label37.TabIndex = 313
        Me.Label37.Text = "Inner"
        '
        'txtInrCtn
        '
        Me.txtInrCtn.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtInrCtn.Location = New System.Drawing.Point(123, 11)
        Me.txtInrCtn.MaxLength = 10
        Me.txtInrCtn.Name = "txtInrCtn"
        Me.txtInrCtn.Size = New System.Drawing.Size(61, 20)
        Me.txtInrCtn.TabIndex = 312
        '
        'Label38
        '
        Me.Label38.AutoSize = True
        Me.Label38.Location = New System.Drawing.Point(6, 11)
        Me.Label38.Name = "Label38"
        Me.Label38.Size = New System.Drawing.Size(26, 12)
        Me.Label38.TabIndex = 311
        Me.Label38.Text = "U/M"
        '
        'txtUntCde
        '
        Me.txtUntCde.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtUntCde.Location = New System.Drawing.Point(43, 11)
        Me.txtUntCde.MaxLength = 10
        Me.txtUntCde.Name = "txtUntCde"
        Me.txtUntCde.Size = New System.Drawing.Size(36, 20)
        Me.txtUntCde.TabIndex = 310
        '
        'cboPckRmk
        '
        Me.cboPckRmk.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboPckRmk.FormattingEnabled = True
        Me.cboPckRmk.Location = New System.Drawing.Point(-25, 0)
        Me.cboPckRmk.Name = "cboPckRmk"
        Me.cboPckRmk.Size = New System.Drawing.Size(268, 21)
        Me.cboPckRmk.TabIndex = 301
        Me.cboPckRmk.Visible = False
        '
        'txtColDsc
        '
        Me.txtColDsc.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtColDsc.Location = New System.Drawing.Point(-13, -22)
        Me.txtColDsc.MaxLength = 10
        Me.txtColDsc.Name = "txtColDsc"
        Me.txtColDsc.Size = New System.Drawing.Size(17, 20)
        Me.txtColDsc.TabIndex = 312
        Me.txtColDsc.Visible = False
        '
        'txtOutQty
        '
        Me.txtOutQty.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtOutQty.Location = New System.Drawing.Point(49, -22)
        Me.txtOutQty.MaxLength = 10
        Me.txtOutQty.Name = "txtOutQty"
        Me.txtOutQty.Size = New System.Drawing.Size(10, 20)
        Me.txtOutQty.TabIndex = 347
        Me.txtOutQty.Visible = False
        '
        'Label29
        '
        Me.Label29.AutoSize = True
        Me.Label29.Location = New System.Drawing.Point(-70, -20)
        Me.Label29.Name = "Label29"
        Me.Label29.Size = New System.Drawing.Size(47, 12)
        Me.Label29.TabIndex = 324
        Me.Label29.Text = "Col Desc"
        Me.Label29.Visible = False
        '
        'txtPrcTrm
        '
        Me.txtPrcTrm.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtPrcTrm.Location = New System.Drawing.Point(15, -23)
        Me.txtPrcTrm.MaxLength = 10
        Me.txtPrcTrm.Name = "txtPrcTrm"
        Me.txtPrcTrm.Size = New System.Drawing.Size(10, 20)
        Me.txtPrcTrm.TabIndex = 345
        Me.txtPrcTrm.Visible = False
        '
        'txtPayTrm
        '
        Me.txtPayTrm.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtPayTrm.Location = New System.Drawing.Point(33, -22)
        Me.txtPayTrm.MaxLength = 10
        Me.txtPayTrm.Name = "txtPayTrm"
        Me.txtPayTrm.Size = New System.Drawing.Size(10, 20)
        Me.txtPayTrm.TabIndex = 346
        Me.txtPayTrm.Visible = False
        '
        'GroupBox6
        '
        Me.GroupBox6.Controls.Add(Me.GroupBox4)
        Me.GroupBox6.Controls.Add(Me.Label106)
        Me.GroupBox6.Controls.Add(Me.txtcussku)
        Me.GroupBox6.Controls.Add(Me.Label83)
        Me.GroupBox6.Controls.Add(Me.txtresppo)
        Me.GroupBox6.Controls.Add(Me.txtcus2no)
        Me.GroupBox6.Controls.Add(Me.lbl_cus2)
        Me.GroupBox6.Controls.Add(Me.chkrpl)
        Me.GroupBox6.Controls.Add(Me.Label17)
        Me.GroupBox6.Controls.Add(Me.chkpckrmk)
        Me.GroupBox6.Controls.Add(Me.Label86)
        Me.GroupBox6.Controls.Add(Me.txtConsolNo)
        Me.GroupBox6.Controls.Add(Me.cboCtrSiz)
        Me.GroupBox6.Controls.Add(Me.Label24)
        Me.GroupBox6.Controls.Add(Me.txtItmDsc)
        Me.GroupBox6.Controls.Add(Me.Label23)
        Me.GroupBox6.Controls.Add(Me.txtCusItm)
        Me.GroupBox6.Controls.Add(Me.cboItmNo)
        Me.GroupBox6.Controls.Add(Me.Label22)
        Me.GroupBox6.Controls.Add(Me.Label20)
        Me.GroupBox6.Controls.Add(Me.txtCusStyNo)
        Me.GroupBox6.Controls.Add(Me.Label21)
        Me.GroupBox6.Controls.Add(Me.txtCusPo)
        Me.GroupBox6.Controls.Add(Me.txtOrdNo)
        Me.GroupBox6.Controls.Add(Me.Label19)
        Me.GroupBox6.Controls.Add(Me.txtJobNo)
        Me.GroupBox6.Controls.Add(Me.Label18)
        Me.GroupBox6.Controls.Add(Me.Label16)
        Me.GroupBox6.Controls.Add(Me.txtSealNo)
        Me.GroupBox6.Controls.Add(Me.Label15)
        Me.GroupBox6.Controls.Add(Me.txtCtrCfs)
        Me.GroupBox6.Controls.Add(Me.Label14)
        Me.GroupBox6.Controls.Add(Me.txtShpSeq)
        Me.GroupBox6.Controls.Add(Me.Label13)
        Me.GroupBox6.Controls.Add(Me.cboColPck)
        Me.GroupBox6.Controls.Add(Me.Label26)
        Me.GroupBox6.Controls.Add(Me.Label25)
        Me.GroupBox6.Location = New System.Drawing.Point(6, -1)
        Me.GroupBox6.Name = "GroupBox6"
        Me.GroupBox6.Size = New System.Drawing.Size(940, 147)
        Me.GroupBox6.TabIndex = 293
        Me.GroupBox6.TabStop = False
        '
        'GroupBox4
        '
        Me.GroupBox4.Controls.Add(Me.rb_ctn)
        Me.GroupBox4.Controls.Add(Me.rb_cfs)
        Me.GroupBox4.Location = New System.Drawing.Point(95, 8)
        Me.GroupBox4.Name = "GroupBox4"
        Me.GroupBox4.Size = New System.Drawing.Size(133, 28)
        Me.GroupBox4.TabIndex = 292
        Me.GroupBox4.TabStop = False
        '
        'rb_ctn
        '
        Me.rb_ctn.AutoSize = True
        Me.rb_ctn.Checked = True
        Me.rb_ctn.Location = New System.Drawing.Point(7, 8)
        Me.rb_ctn.Name = "rb_ctn"
        Me.rb_ctn.Size = New System.Drawing.Size(69, 16)
        Me.rb_ctn.TabIndex = 293
        Me.rb_ctn.TabStop = True
        Me.rb_ctn.Text = "Container"
        Me.rb_ctn.UseVisualStyleBackColor = True
        '
        'rb_cfs
        '
        Me.rb_cfs.AutoSize = True
        Me.rb_cfs.Location = New System.Drawing.Point(86, 8)
        Me.rb_cfs.Name = "rb_cfs"
        Me.rb_cfs.Size = New System.Drawing.Size(43, 16)
        Me.rb_cfs.TabIndex = 294
        Me.rb_cfs.Text = "CFS"
        Me.rb_cfs.UseVisualStyleBackColor = True
        '
        'Label106
        '
        Me.Label106.AutoSize = True
        Me.Label106.Location = New System.Drawing.Point(440, 119)
        Me.Label106.Name = "Label106"
        Me.Label106.Size = New System.Drawing.Size(33, 12)
        Me.Label106.TabIndex = 365
        Me.Label106.Text = "SKU#"
        '
        'txtcussku
        '
        Me.txtcussku.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtcussku.Location = New System.Drawing.Point(498, 114)
        Me.txtcussku.MaxLength = 20
        Me.txtcussku.Name = "txtcussku"
        Me.txtcussku.Size = New System.Drawing.Size(130, 20)
        Me.txtcussku.TabIndex = 364
        '
        'Label83
        '
        Me.Label83.AutoSize = True
        Me.Label83.Location = New System.Drawing.Point(440, 67)
        Me.Label83.Name = "Label83"
        Me.Label83.Size = New System.Drawing.Size(51, 12)
        Me.Label83.TabIndex = 363
        Me.Label83.Text = "Resp PO#"
        '
        'txtresppo
        '
        Me.txtresppo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtresppo.Location = New System.Drawing.Point(498, 62)
        Me.txtresppo.MaxLength = 20
        Me.txtresppo.Name = "txtresppo"
        Me.txtresppo.Size = New System.Drawing.Size(130, 20)
        Me.txtresppo.TabIndex = 362
        '
        'txtcus2no
        '
        Me.txtcus2no.Enabled = False
        Me.txtcus2no.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtcus2no.Location = New System.Drawing.Point(789, 12)
        Me.txtcus2no.MaxLength = 10
        Me.txtcus2no.Name = "txtcus2no"
        Me.txtcus2no.Size = New System.Drawing.Size(143, 20)
        Me.txtcus2no.TabIndex = 361
        Me.txtcus2no.Visible = False
        '
        'lbl_cus2
        '
        Me.lbl_cus2.AutoSize = True
        Me.lbl_cus2.ForeColor = System.Drawing.Color.Black
        Me.lbl_cus2.Location = New System.Drawing.Point(730, 16)
        Me.lbl_cus2.Name = "lbl_cus2"
        Me.lbl_cus2.Size = New System.Drawing.Size(48, 12)
        Me.lbl_cus2.TabIndex = 360
        Me.lbl_cus2.Text = "Sec. Cust"
        Me.lbl_cus2.Visible = False
        '
        'chkrpl
        '
        Me.chkrpl.AutoSize = True
        Me.chkrpl.Enabled = False
        Me.chkrpl.Location = New System.Drawing.Point(632, 14)
        Me.chkrpl.Name = "chkrpl"
        Me.chkrpl.Size = New System.Drawing.Size(84, 16)
        Me.chkrpl.TabIndex = 300
        Me.chkrpl.Text = "Replacement"
        Me.chkrpl.UseVisualStyleBackColor = True
        '
        'Label17
        '
        Me.Label17.AutoSize = True
        Me.Label17.Location = New System.Drawing.Point(8, 119)
        Me.Label17.Name = "Label17"
        Me.Label17.Size = New System.Drawing.Size(61, 12)
        Me.Label17.TabIndex = 358
        Me.Label17.Text = "Rmk for PL"
        '
        'chkpckrmk
        '
        Me.chkpckrmk.AutoSize = True
        Me.chkpckrmk.Font = New System.Drawing.Font("Arial", 6.25!)
        Me.chkpckrmk.Location = New System.Drawing.Point(86, 120)
        Me.chkpckrmk.Name = "chkpckrmk"
        Me.chkpckrmk.Size = New System.Drawing.Size(146, 16)
        Me.chkpckrmk.TabIndex = 298
        Me.chkpckrmk.Text = "Part of 1x40'HQ(Reefer Dry)"
        Me.chkpckrmk.UseVisualStyleBackColor = True
        '
        'Label86
        '
        Me.Label86.AutoSize = True
        Me.Label86.Location = New System.Drawing.Point(237, 19)
        Me.Label86.Name = "Label86"
        Me.Label86.Size = New System.Drawing.Size(44, 12)
        Me.Label86.TabIndex = 351
        Me.Label86.Text = "Consol#"
        '
        'txtConsolNo
        '
        Me.txtConsolNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtConsolNo.Location = New System.Drawing.Point(300, 14)
        Me.txtConsolNo.MaxLength = 20
        Me.txtConsolNo.Name = "txtConsolNo"
        Me.txtConsolNo.Size = New System.Drawing.Size(130, 20)
        Me.txtConsolNo.TabIndex = 299
        '
        'cboCtrSiz
        '
        Me.cboCtrSiz.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboCtrSiz.FormattingEnabled = True
        Me.cboCtrSiz.Location = New System.Drawing.Point(98, 41)
        Me.cboCtrSiz.Name = "cboCtrSiz"
        Me.cboCtrSiz.Size = New System.Drawing.Size(130, 21)
        Me.cboCtrSiz.TabIndex = 295
        '
        'Label24
        '
        Me.Label24.AutoSize = True
        Me.Label24.Location = New System.Drawing.Point(632, 38)
        Me.Label24.Name = "Label24"
        Me.Label24.Size = New System.Drawing.Size(41, 12)
        Me.Label24.TabIndex = 315
        Me.Label24.Text = "Itm Dsc"
        '
        'txtItmDsc
        '
        Me.txtItmDsc.ContextMenuStrip = Me.cms_CopyNPaste
        Me.txtItmDsc.Location = New System.Drawing.Point(685, 36)
        Me.txtItmDsc.Name = "txtItmDsc"
        Me.txtItmDsc.Size = New System.Drawing.Size(249, 45)
        Me.txtItmDsc.TabIndex = 307
        Me.txtItmDsc.Text = ""
        '
        'Label23
        '
        Me.Label23.AutoSize = True
        Me.Label23.Location = New System.Drawing.Point(237, 118)
        Me.Label23.Name = "Label23"
        Me.Label23.Size = New System.Drawing.Size(54, 12)
        Me.Label23.TabIndex = 313
        Me.Label23.Text = "Cust. Itm#"
        '
        'txtCusItm
        '
        Me.txtCusItm.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCusItm.Location = New System.Drawing.Point(300, 115)
        Me.txtCusItm.MaxLength = 20
        Me.txtCusItm.Name = "txtCusItm"
        Me.txtCusItm.Size = New System.Drawing.Size(130, 20)
        Me.txtCusItm.TabIndex = 306
        '
        'cboItmNo
        '
        Me.cboItmNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboItmNo.FormattingEnabled = True
        Me.cboItmNo.Location = New System.Drawing.Point(300, 90)
        Me.cboItmNo.Name = "cboItmNo"
        Me.cboItmNo.Size = New System.Drawing.Size(130, 21)
        Me.cboItmNo.TabIndex = 305
        '
        'Label22
        '
        Me.Label22.AutoSize = True
        Me.Label22.BackColor = System.Drawing.Color.Transparent
        Me.Label22.ForeColor = System.Drawing.Color.Green
        Me.Label22.Location = New System.Drawing.Point(237, 93)
        Me.Label22.Name = "Label22"
        Me.Label22.Size = New System.Drawing.Size(32, 12)
        Me.Label22.TabIndex = 310
        Me.Label22.Text = "Item#"
        '
        'Label20
        '
        Me.Label20.AutoSize = True
        Me.Label20.Location = New System.Drawing.Point(440, 94)
        Me.Label20.Name = "Label20"
        Me.Label20.Size = New System.Drawing.Size(34, 12)
        Me.Label20.TabIndex = 309
        Me.Label20.Text = "Style#"
        '
        'txtCusStyNo
        '
        Me.txtCusStyNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCusStyNo.Location = New System.Drawing.Point(498, 89)
        Me.txtCusStyNo.MaxLength = 20
        Me.txtCusStyNo.Name = "txtCusStyNo"
        Me.txtCusStyNo.Size = New System.Drawing.Size(130, 20)
        Me.txtCusStyNo.TabIndex = 304
        '
        'Label21
        '
        Me.Label21.AutoSize = True
        Me.Label21.Location = New System.Drawing.Point(237, 66)
        Me.Label21.Name = "Label21"
        Me.Label21.Size = New System.Drawing.Size(49, 12)
        Me.Label21.TabIndex = 307
        Me.Label21.Text = "Cust PO#"
        '
        'txtCusPo
        '
        Me.txtCusPo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCusPo.Location = New System.Drawing.Point(300, 63)
        Me.txtCusPo.MaxLength = 20
        Me.txtCusPo.Name = "txtCusPo"
        Me.txtCusPo.Size = New System.Drawing.Size(130, 20)
        Me.txtCusPo.TabIndex = 303
        '
        'txtOrdNo
        '
        Me.txtOrdNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtOrdNo.Location = New System.Drawing.Point(498, 36)
        Me.txtOrdNo.MaxLength = 20
        Me.txtOrdNo.Name = "txtOrdNo"
        Me.txtOrdNo.Size = New System.Drawing.Size(130, 20)
        Me.txtOrdNo.TabIndex = 302
        '
        'Label19
        '
        Me.Label19.AutoSize = True
        Me.Label19.BackColor = System.Drawing.Color.Transparent
        Me.Label19.ForeColor = System.Drawing.Color.Green
        Me.Label19.Location = New System.Drawing.Point(440, 41)
        Me.Label19.Name = "Label19"
        Me.Label19.Size = New System.Drawing.Size(31, 12)
        Me.Label19.TabIndex = 304
        Me.Label19.Text = "S/C #"
        '
        'txtJobNo
        '
        Me.txtJobNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtJobNo.Location = New System.Drawing.Point(300, 37)
        Me.txtJobNo.MaxLength = 20
        Me.txtJobNo.Name = "txtJobNo"
        Me.txtJobNo.Size = New System.Drawing.Size(130, 20)
        Me.txtJobNo.TabIndex = 301
        '
        'Label18
        '
        Me.Label18.AutoSize = True
        Me.Label18.BackColor = System.Drawing.Color.Transparent
        Me.Label18.ForeColor = System.Drawing.Color.Green
        Me.Label18.Location = New System.Drawing.Point(237, 43)
        Me.Label18.Name = "Label18"
        Me.Label18.Size = New System.Drawing.Size(41, 12)
        Me.Label18.TabIndex = 302
        Me.Label18.Text = "Job No."
        '
        'Label16
        '
        Me.Label16.AutoSize = True
        Me.Label16.Location = New System.Drawing.Point(8, 95)
        Me.Label16.Name = "Label16"
        Me.Label16.Size = New System.Drawing.Size(30, 12)
        Me.Label16.TabIndex = 298
        Me.Label16.Text = "Seal#"
        '
        'txtSealNo
        '
        Me.txtSealNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtSealNo.Location = New System.Drawing.Point(98, 92)
        Me.txtSealNo.MaxLength = 20
        Me.txtSealNo.Name = "txtSealNo"
        Me.txtSealNo.Size = New System.Drawing.Size(130, 20)
        Me.txtSealNo.TabIndex = 297
        '
        'Label15
        '
        Me.Label15.AutoSize = True
        Me.Label15.Location = New System.Drawing.Point(8, 68)
        Me.Label15.Name = "Label15"
        Me.Label15.Size = New System.Drawing.Size(34, 12)
        Me.Label15.TabIndex = 296
        Me.Label15.Text = "CTR#"
        '
        'txtCtrCfs
        '
        Me.txtCtrCfs.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCtrCfs.Location = New System.Drawing.Point(98, 66)
        Me.txtCtrCfs.MaxLength = 20
        Me.txtCtrCfs.Name = "txtCtrCfs"
        Me.txtCtrCfs.Size = New System.Drawing.Size(130, 20)
        Me.txtCtrCfs.TabIndex = 296
        '
        'Label14
        '
        Me.Label14.AutoSize = True
        Me.Label14.BackColor = System.Drawing.Color.Transparent
        Me.Label14.ForeColor = System.Drawing.Color.Green
        Me.Label14.Location = New System.Drawing.Point(5, 45)
        Me.Label14.Name = "Label14"
        Me.Label14.Size = New System.Drawing.Size(73, 12)
        Me.Label14.TabIndex = 290
        Me.Label14.Text = "Container Size"
        '
        'txtShpSeq
        '
        Me.txtShpSeq.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtShpSeq.Location = New System.Drawing.Point(57, 15)
        Me.txtShpSeq.MaxLength = 10
        Me.txtShpSeq.Name = "txtShpSeq"
        Me.txtShpSeq.Size = New System.Drawing.Size(30, 20)
        Me.txtShpSeq.TabIndex = 287
        '
        'Label13
        '
        Me.Label13.AutoSize = True
        Me.Label13.ForeColor = System.Drawing.Color.Red
        Me.Label13.Location = New System.Drawing.Point(5, 17)
        Me.Label13.Name = "Label13"
        Me.Label13.Size = New System.Drawing.Size(42, 12)
        Me.Label13.TabIndex = 288
        Me.Label13.Text = "Seq No."
        '
        'cboColPck
        '
        Me.cboColPck.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboColPck.FormattingEnabled = True
        Me.cboColPck.Location = New System.Drawing.Point(632, 115)
        Me.cboColPck.Name = "cboColPck"
        Me.cboColPck.Size = New System.Drawing.Size(302, 21)
        Me.cboColPck.TabIndex = 309
        '
        'Label26
        '
        Me.Label26.AutoSize = True
        Me.Label26.BackColor = System.Drawing.Color.Transparent
        Me.Label26.ForeColor = System.Drawing.Color.Green
        Me.Label26.Location = New System.Drawing.Point(634, 92)
        Me.Label26.Name = "Label26"
        Me.Label26.Size = New System.Drawing.Size(54, 12)
        Me.Label26.TabIndex = 318
        Me.Label26.Text = "Col && Pck"
        '
        'Label25
        '
        Me.Label25.AutoSize = True
        Me.Label25.Location = New System.Drawing.Point(718, 90)
        Me.Label25.Name = "Label25"
        Me.Label25.Size = New System.Drawing.Size(171, 12)
        Me.Label25.TabIndex = 316
        Me.Label25.Text = "Color Code / UM / Inr / Mtr / CBM"
        '
        'optCtrSiz3
        '
        Me.optCtrSiz3.AutoSize = True
        Me.optCtrSiz3.Location = New System.Drawing.Point(288, 674)
        Me.optCtrSiz3.Name = "optCtrSiz3"
        Me.optCtrSiz3.Size = New System.Drawing.Size(37, 16)
        Me.optCtrSiz3.TabIndex = 294
        Me.optCtrSiz3.Text = "45'"
        Me.optCtrSiz3.UseVisualStyleBackColor = True
        '
        'optCtrSiz4
        '
        Me.optCtrSiz4.AutoSize = True
        Me.optCtrSiz4.Checked = True
        Me.optCtrSiz4.Location = New System.Drawing.Point(92, 658)
        Me.optCtrSiz4.Name = "optCtrSiz4"
        Me.optCtrSiz4.Size = New System.Drawing.Size(43, 16)
        Me.optCtrSiz4.TabIndex = 289
        Me.optCtrSiz4.TabStop = True
        Me.optCtrSiz4.Text = "CFS"
        Me.optCtrSiz4.UseVisualStyleBackColor = True
        '
        'optCtrSiz0
        '
        Me.optCtrSiz0.AutoSize = True
        Me.optCtrSiz0.Location = New System.Drawing.Point(93, 674)
        Me.optCtrSiz0.Name = "optCtrSiz0"
        Me.optCtrSiz0.Size = New System.Drawing.Size(37, 16)
        Me.optCtrSiz0.TabIndex = 291
        Me.optCtrSiz0.Text = "20'"
        Me.optCtrSiz0.UseVisualStyleBackColor = True
        '
        'optCtrSiz1
        '
        Me.optCtrSiz1.AutoSize = True
        Me.optCtrSiz1.Location = New System.Drawing.Point(144, 674)
        Me.optCtrSiz1.Name = "optCtrSiz1"
        Me.optCtrSiz1.Size = New System.Drawing.Size(65, 16)
        Me.optCtrSiz1.TabIndex = 292
        Me.optCtrSiz1.Text = "40' (8.5')"
        Me.optCtrSiz1.UseVisualStyleBackColor = True
        '
        'optCtrSiz2
        '
        Me.optCtrSiz2.AutoSize = True
        Me.optCtrSiz2.Location = New System.Drawing.Point(217, 674)
        Me.optCtrSiz2.Name = "optCtrSiz2"
        Me.optCtrSiz2.Size = New System.Drawing.Size(61, 16)
        Me.optCtrSiz2.TabIndex = 293
        Me.optCtrSiz2.Text = "40'(HQ)"
        Me.optCtrSiz2.UseVisualStyleBackColor = True
        '
        'txtCustUM
        '
        Me.txtCustUM.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtCustUM.Location = New System.Drawing.Point(934, 530)
        Me.txtCustUM.MaxLength = 6
        Me.txtCustUM.Name = "txtCustUM"
        Me.txtCustUM.Size = New System.Drawing.Size(51, 20)
        Me.txtCustUM.TabIndex = 311
        Me.txtCustUM.Visible = False
        '
        'tpSHM00001_3
        '
        Me.tpSHM00001_3.Controls.Add(Me.GroupBox9)
        Me.tpSHM00001_3.Controls.Add(Me.GroupBox7)
        Me.tpSHM00001_3.Controls.Add(Me.txtAFamt)
        Me.tpSHM00001_3.Controls.Add(Me.cbobank)
        Me.tpSHM00001_3.Controls.Add(Me.Label69)
        Me.tpSHM00001_3.Controls.Add(Me.Label63)
        Me.tpSHM00001_3.Controls.Add(Me.txtLcStmt)
        Me.tpSHM00001_3.Controls.Add(Me.DataGrid2)
        Me.tpSHM00001_3.Location = New System.Drawing.Point(4, 22)
        Me.tpSHM00001_3.Name = "tpSHM00001_3"
        Me.tpSHM00001_3.Padding = New System.Windows.Forms.Padding(3)
        Me.tpSHM00001_3.Size = New System.Drawing.Size(946, 533)
        Me.tpSHM00001_3.TabIndex = 2
        Me.tpSHM00001_3.Text = "(3) Invoice"
        Me.tpSHM00001_3.UseVisualStyleBackColor = True
        '
        'GroupBox9
        '
        Me.GroupBox9.Controls.Add(Me.optFOB2)
        Me.GroupBox9.Controls.Add(Me.optFOB1)
        Me.GroupBox9.ForeColor = System.Drawing.Color.Black
        Me.GroupBox9.Location = New System.Drawing.Point(326, 525)
        Me.GroupBox9.Name = "GroupBox9"
        Me.GroupBox9.Size = New System.Drawing.Size(241, 76)
        Me.GroupBox9.TabIndex = 367
        Me.GroupBox9.TabStop = False
        Me.GroupBox9.Text = "Invoice Amount Format"
        Me.GroupBox9.Visible = False
        '
        'optFOB2
        '
        Me.optFOB2.AutoSize = True
        Me.optFOB2.Location = New System.Drawing.Point(17, 45)
        Me.optFOB2.Name = "optFOB2"
        Me.optFOB2.Size = New System.Drawing.Size(45, 16)
        Me.optFOB2.TabIndex = 357
        Me.optFOB2.TabStop = True
        Me.optFOB2.Text = "FOB"
        Me.optFOB2.UseVisualStyleBackColor = True
        '
        'optFOB1
        '
        Me.optFOB1.AutoSize = True
        Me.optFOB1.Location = New System.Drawing.Point(17, 20)
        Me.optFOB1.Name = "optFOB1"
        Me.optFOB1.Size = New System.Drawing.Size(186, 16)
        Me.optFOB1.TabIndex = 356
        Me.optFOB1.TabStop = True
        Me.optFOB1.Text = "Less 5% on Item, Add 5% on Total"
        Me.optFOB1.UseVisualStyleBackColor = True
        '
        'GroupBox7
        '
        Me.GroupBox7.Controls.Add(Me.PanShpbchup2)
        Me.GroupBox7.Controls.Add(Me.CmdBatUpdate2)
        Me.GroupBox7.Controls.Add(Me.Label105)
        Me.GroupBox7.Controls.Add(Me.Label104)
        Me.GroupBox7.Controls.Add(Me.Label103)
        Me.GroupBox7.Controls.Add(Me.mvwLCdat)
        Me.GroupBox7.Controls.Add(Me.cmdPickDate3)
        Me.GroupBox7.Controls.Add(Me.txtLCdat)
        Me.GroupBox7.Controls.Add(Me.txtLcBank)
        Me.GroupBox7.Controls.Add(Me.txtLCNo)
        Me.GroupBox7.Controls.Add(Me.Label101)
        Me.GroupBox7.Controls.Add(Me.Label102)
        Me.GroupBox7.Controls.Add(Me.Label100)
        Me.GroupBox7.Controls.Add(Me.txtexptaddr)
        Me.GroupBox7.Controls.Add(Me.txtexptnam)
        Me.GroupBox7.Controls.Add(Me.cboexptnam)
        Me.GroupBox7.Controls.Add(Me.Label98)
        Me.GroupBox7.Controls.Add(Me.cboPckListFooter)
        Me.GroupBox7.Controls.Add(Me.txtBilRmk)
        Me.GroupBox7.Controls.Add(Me.txtFtrRmk)
        Me.GroupBox7.Controls.Add(Me.txtCover)
        Me.GroupBox7.Controls.Add(Me.cboInvFooter)
        Me.GroupBox7.Controls.Add(Me.Label84)
        Me.GroupBox7.Controls.Add(Me.mvwcgrcvdat)
        Me.GroupBox7.Controls.Add(Me.Label8)
        Me.GroupBox7.Controls.Add(Me.cmdPickDate2)
        Me.GroupBox7.Controls.Add(Me.txtcargorcvdat)
        Me.GroupBox7.Controls.Add(Me.GroupBox8)
        Me.GroupBox7.Controls.Add(Me.Label64)
        Me.GroupBox7.Controls.Add(Me.Label62)
        Me.GroupBox7.Controls.Add(Me.txtDoc)
        Me.GroupBox7.Controls.Add(Me.optDocTyp2)
        Me.GroupBox7.Controls.Add(Me.optDocTyp1)
        Me.GroupBox7.Controls.Add(Me.optDocTyp0)
        Me.GroupBox7.Controls.Add(Me.chkClose)
        Me.GroupBox7.Controls.Add(Me.txtInvDat)
        Me.GroupBox7.Controls.Add(Me.Label61)
        Me.GroupBox7.Controls.Add(Me.Label58)
        Me.GroupBox7.Controls.Add(Me.Label59)
        Me.GroupBox7.Controls.Add(Me.Label60)
        Me.GroupBox7.Controls.Add(Me.cboInvNo)
        Me.GroupBox7.Controls.Add(Me.Label57)
        Me.GroupBox7.Controls.Add(Me.cboPayTrm)
        Me.GroupBox7.Controls.Add(Me.cboPrcTrm)
        Me.GroupBox7.Location = New System.Drawing.Point(8, 6)
        Me.GroupBox7.Name = "GroupBox7"
        Me.GroupBox7.Size = New System.Drawing.Size(942, 515)
        Me.GroupBox7.TabIndex = 348
        Me.GroupBox7.TabStop = False
        '
        'PanShpbchup2
        '
        Me.PanShpbchup2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
        Me.PanShpbchup2.Controls.Add(Me.CmdShpchupcancel2)
        Me.PanShpbchup2.Controls.Add(Me.CmdShpchupok2)
        Me.PanShpbchup2.Controls.Add(Me.DgShpbchup2)
        Me.PanShpbchup2.Location = New System.Drawing.Point(426, 14)
        Me.PanShpbchup2.Name = "PanShpbchup2"
        Me.PanShpbchup2.Size = New System.Drawing.Size(41, 25)
        Me.PanShpbchup2.TabIndex = 392
        Me.PanShpbchup2.Visible = False
        '
        'CmdShpchupcancel2
        '
        Me.CmdShpchupcancel2.Location = New System.Drawing.Point(115, 317)
        Me.CmdShpchupcancel2.Name = "CmdShpchupcancel2"
        Me.CmdShpchupcancel2.Size = New System.Drawing.Size(79, 23)
        Me.CmdShpchupcancel2.TabIndex = 2
        Me.CmdShpchupcancel2.Text = "Cancel"
        Me.CmdShpchupcancel2.UseVisualStyleBackColor = True
        '
        'CmdShpchupok2
        '
        Me.CmdShpchupok2.Location = New System.Drawing.Point(19, 317)
        Me.CmdShpchupok2.Name = "CmdShpchupok2"
        Me.CmdShpchupok2.Size = New System.Drawing.Size(79, 23)
        Me.CmdShpchupok2.TabIndex = 1
        Me.CmdShpchupok2.Text = "OK"
        Me.CmdShpchupok2.UseVisualStyleBackColor = True
        '
        'DgShpbchup2
        '
        Me.DgShpbchup2.AllowUserToAddRows = False
        Me.DgShpbchup2.AllowUserToDeleteRows = False
        Me.DgShpbchup2.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize
        Me.DgShpbchup2.Location = New System.Drawing.Point(10, 5)
        Me.DgShpbchup2.Name = "DgShpbchup2"
        Me.DgShpbchup2.ReadOnly = True
        Me.DgShpbchup2.RowTemplate.Height = 24
        Me.DgShpbchup2.Size = New System.Drawing.Size(195, 306)
        Me.DgShpbchup2.TabIndex = 376
        '
        'CmdBatUpdate2
        '
        Me.CmdBatUpdate2.Location = New System.Drawing.Point(615, 13)
        Me.CmdBatUpdate2.Name = "CmdBatUpdate2"
        Me.CmdBatUpdate2.Size = New System.Drawing.Size(170, 25)
        Me.CmdBatUpdate2.TabIndex = 393
        Me.CmdBatUpdate2.Text = "Batch updae invoice (infomation)"
        Me.CmdBatUpdate2.UseVisualStyleBackColor = True
        '
        'Label105
        '
        Me.Label105.AutoSize = True
        Me.Label105.BackColor = System.Drawing.Color.Transparent
        Me.Label105.ForeColor = System.Drawing.Color.Black
        Me.Label105.Location = New System.Drawing.Point(472, 95)
        Me.Label105.Name = "Label105"
        Me.Label105.Size = New System.Drawing.Size(87, 12)
        Me.Label105.TabIndex = 390
        Me.Label105.Text = "L/C Issuing Bank"
        '
        'Label104
        '
        Me.Label104.AutoSize = True
        Me.Label104.BackColor = System.Drawing.Color.Transparent
        Me.Label104.ForeColor = System.Drawing.Color.Black
        Me.Label104.Location = New System.Drawing.Point(12, 89)
        Me.Label104.Name = "Label104"
        Me.Label104.Size = New System.Drawing.Size(29, 12)
        Me.Label104.TabIndex = 389
        Me.Label104.Text = "L/C#"
        '
        'Label103
        '
        Me.Label103.AutoSize = True
        Me.Label103.Location = New System.Drawing.Point(262, 93)
        Me.Label103.Name = "Label103"
        Me.Label103.Size = New System.Drawing.Size(26, 12)
        Me.Label103.TabIndex = 388
        Me.Label103.Text = "Date"
        '
        'mvwLCdat
        '
        Me.mvwLCdat.AccessibleDescription = ""
        Me.mvwLCdat.Location = New System.Drawing.Point(85, 167)
        Me.mvwLCdat.Name = "mvwLCdat"
        Me.mvwLCdat.TabIndex = 387
        '
        'cmdPickDate3
        '
        Me.cmdPickDate3.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdPickDate3.Location = New System.Drawing.Point(433, 89)
        Me.cmdPickDate3.Name = "cmdPickDate3"
        Me.cmdPickDate3.Size = New System.Drawing.Size(24, 22)
        Me.cmdPickDate3.TabIndex = 385
        Me.cmdPickDate3.TabStop = False
        Me.cmdPickDate3.Text = "..."
        '
        'txtLCdat
        '
        Me.txtLCdat.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtLCdat.Location = New System.Drawing.Point(305, 90)
        Me.txtLCdat.MaxLength = 10
        Me.txtLCdat.Name = "txtLCdat"
        Me.txtLCdat.Size = New System.Drawing.Size(123, 20)
        Me.txtLCdat.TabIndex = 386
        '
        'txtLcBank
        '
        Me.txtLcBank.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtLcBank.Location = New System.Drawing.Point(585, 92)
        Me.txtLcBank.MaxLength = 300
        Me.txtLcBank.Name = "txtLcBank"
        Me.txtLcBank.Size = New System.Drawing.Size(324, 20)
        Me.txtLcBank.TabIndex = 384
        '
        'txtLCNo
        '
        Me.txtLCNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtLCNo.Location = New System.Drawing.Point(130, 89)
        Me.txtLCNo.MaxLength = 30
        Me.txtLCNo.Name = "txtLCNo"
        Me.txtLCNo.Size = New System.Drawing.Size(130, 20)
        Me.txtLCNo.TabIndex = 383
        '
        'Label101
        '
        Me.Label101.AutoSize = True
        Me.Label101.Location = New System.Drawing.Point(18, 432)
        Me.Label101.Name = "Label101"
        Me.Label101.Size = New System.Drawing.Size(29, 12)
        Me.Label101.TabIndex = 382
        Me.Label101.Text = "Addr"
        '
        'Label102
        '
        Me.Label102.AutoSize = True
        Me.Label102.Location = New System.Drawing.Point(16, 403)
        Me.Label102.Name = "Label102"
        Me.Label102.Size = New System.Drawing.Size(32, 12)
        Me.Label102.TabIndex = 381
        Me.Label102.Text = "Name"
        '
        'Label100
        '
        Me.Label100.AutoSize = True
        Me.Label100.Location = New System.Drawing.Point(12, 358)
        Me.Label100.Name = "Label100"
        Me.Label100.Size = New System.Drawing.Size(230, 12)
        Me.Label100.TabIndex = 380
        Me.Label100.Text = "Exporter Information(for WM && PB Air Only) :"
        '
        'txtexptaddr
        '
        Me.txtexptaddr.ContextMenuStrip = Me.cms_CopyNPaste
        Me.txtexptaddr.Location = New System.Drawing.Point(57, 426)
        Me.txtexptaddr.Name = "txtexptaddr"
        Me.txtexptaddr.Size = New System.Drawing.Size(471, 81)
        Me.txtexptaddr.TabIndex = 379
        Me.txtexptaddr.Text = ""
        '
        'txtexptnam
        '
        Me.txtexptnam.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtexptnam.Location = New System.Drawing.Point(57, 401)
        Me.txtexptnam.MaxLength = 200
        Me.txtexptnam.Name = "txtexptnam"
        Me.txtexptnam.Size = New System.Drawing.Size(280, 20)
        Me.txtexptnam.TabIndex = 378
        '
        'cboexptnam
        '
        Me.cboexptnam.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboexptnam.FormattingEnabled = True
        Me.cboexptnam.Location = New System.Drawing.Point(57, 374)
        Me.cboexptnam.Name = "cboexptnam"
        Me.cboexptnam.Size = New System.Drawing.Size(280, 21)
        Me.cboexptnam.TabIndex = 391
        '
        'Label98
        '
        Me.Label98.AutoSize = True
        Me.Label98.Location = New System.Drawing.Point(12, 312)
        Me.Label98.Name = "Label98"
        Me.Label98.Size = New System.Drawing.Size(75, 24)
        Me.Label98.TabIndex = 377
        Me.Label98.Text = "Packing List " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Footer Remark"
        '
        'cboPckListFooter
        '
        Me.cboPckListFooter.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboPckListFooter.FormattingEnabled = True
        Me.cboPckListFooter.Location = New System.Drawing.Point(130, 279)
        Me.cboPckListFooter.Name = "cboPckListFooter"
        Me.cboPckListFooter.Size = New System.Drawing.Size(298, 21)
        Me.cboPckListFooter.TabIndex = 360
        '
        'txtBilRmk
        '
        Me.txtBilRmk.ContextMenuStrip = Me.cms_CopyNPaste
        Me.txtBilRmk.Location = New System.Drawing.Point(130, 305)
        Me.txtBilRmk.Name = "txtBilRmk"
        Me.txtBilRmk.Size = New System.Drawing.Size(779, 52)
        Me.txtBilRmk.TabIndex = 361
        Me.txtBilRmk.Text = ""
        '
        'txtFtrRmk
        '
        Me.txtFtrRmk.ContextMenuStrip = Me.cms_CopyNPaste
        Me.txtFtrRmk.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.0!)
        Me.txtFtrRmk.Location = New System.Drawing.Point(130, 213)
        Me.txtFtrRmk.Name = "txtFtrRmk"
        Me.txtFtrRmk.Size = New System.Drawing.Size(779, 62)
        Me.txtFtrRmk.TabIndex = 359
        Me.txtFtrRmk.Text = ""
        '
        'txtCover
        '
        Me.txtCover.ContextMenuStrip = Me.cms_CopyNPaste
        Me.txtCover.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.0!)
        Me.txtCover.Location = New System.Drawing.Point(130, 166)
        Me.txtCover.Name = "txtCover"
        Me.txtCover.Size = New System.Drawing.Size(779, 20)
        Me.txtCover.TabIndex = 357
        Me.txtCover.Text = ""
        '
        'cboInvFooter
        '
        Me.cboInvFooter.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboInvFooter.FormattingEnabled = True
        Me.cboInvFooter.Location = New System.Drawing.Point(130, 189)
        Me.cboInvFooter.Name = "cboInvFooter"
        Me.cboInvFooter.Size = New System.Drawing.Size(298, 21)
        Me.cboInvFooter.TabIndex = 358
        '
        'Label84
        '
        Me.Label84.AutoSize = True
        Me.Label84.Location = New System.Drawing.Point(12, 140)
        Me.Label84.Name = "Label84"
        Me.Label84.Size = New System.Drawing.Size(98, 12)
        Me.Label84.TabIndex = 371
        Me.Label84.Text = "Cargo Receive Date"
        '
        'mvwcgrcvdat
        '
        Me.mvwcgrcvdat.AccessibleDescription = ""
        Me.mvwcgrcvdat.Location = New System.Drawing.Point(94, 84)
        Me.mvwcgrcvdat.Name = "mvwcgrcvdat"
        Me.mvwcgrcvdat.TabIndex = 370
        '
        'Label8
        '
        Me.Label8.AutoSize = True
        Me.Label8.Location = New System.Drawing.Point(293, 143)
        Me.Label8.Name = "Label8"
        Me.Label8.Size = New System.Drawing.Size(73, 12)
        Me.Label8.TabIndex = 368
        Me.Label8.Text = "(mm/dd/yyyy)"
        '
        'cmdPickDate2
        '
        Me.cmdPickDate2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cmdPickDate2.Location = New System.Drawing.Point(267, 139)
        Me.cmdPickDate2.Name = "cmdPickDate2"
        Me.cmdPickDate2.Size = New System.Drawing.Size(24, 22)
        Me.cmdPickDate2.TabIndex = 356
        Me.cmdPickDate2.TabStop = False
        Me.cmdPickDate2.Text = "..."
        '
        'txtcargorcvdat
        '
        Me.txtcargorcvdat.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtcargorcvdat.Location = New System.Drawing.Point(131, 140)
        Me.txtcargorcvdat.MaxLength = 10
        Me.txtcargorcvdat.Name = "txtcargorcvdat"
        Me.txtcargorcvdat.Size = New System.Drawing.Size(128, 20)
        Me.txtcargorcvdat.TabIndex = 367
        '
        'GroupBox8
        '
        Me.GroupBox8.Controls.Add(Me.txtTtlHdpAmt)
        Me.GroupBox8.Controls.Add(Me.Label70)
        Me.GroupBox8.Controls.Add(Me.txtInvAmt)
        Me.GroupBox8.Controls.Add(Me.Label66)
        Me.GroupBox8.Controls.Add(Me.TxtTtlCtnI)
        Me.GroupBox8.Controls.Add(Me.txtTtlAmtI)
        Me.GroupBox8.Controls.Add(Me.cboUntAmtI)
        Me.GroupBox8.Controls.Add(Me.txtTtlVolI)
        Me.GroupBox8.Controls.Add(Me.Label65)
        Me.GroupBox8.Controls.Add(Me.Label67)
        Me.GroupBox8.Controls.Add(Me.Label68)
        Me.GroupBox8.ForeColor = System.Drawing.Color.Black
        Me.GroupBox8.Location = New System.Drawing.Point(534, 371)
        Me.GroupBox8.Name = "GroupBox8"
        Me.GroupBox8.Size = New System.Drawing.Size(375, 126)
        Me.GroupBox8.TabIndex = 365
        Me.GroupBox8.TabStop = False
        Me.GroupBox8.Text = "Invoice Summary Information :"
        '
        'txtTtlHdpAmt
        '
        Me.txtTtlHdpAmt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlHdpAmt.Location = New System.Drawing.Point(187, 67)
        Me.txtTtlHdpAmt.MaxLength = 10
        Me.txtTtlHdpAmt.Name = "txtTtlHdpAmt"
        Me.txtTtlHdpAmt.Size = New System.Drawing.Size(84, 20)
        Me.txtTtlHdpAmt.TabIndex = 356
        '
        'Label70
        '
        Me.Label70.AutoSize = True
        Me.Label70.Location = New System.Drawing.Point(11, 70)
        Me.Label70.Name = "Label70"
        Me.Label70.Size = New System.Drawing.Size(75, 12)
        Me.Label70.TabIndex = 355
        Me.Label70.Text = "Disc/Prem Amt"
        '
        'txtInvAmt
        '
        Me.txtInvAmt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtInvAmt.Location = New System.Drawing.Point(187, 43)
        Me.txtInvAmt.MaxLength = 10
        Me.txtInvAmt.Name = "txtInvAmt"
        Me.txtInvAmt.Size = New System.Drawing.Size(84, 20)
        Me.txtInvAmt.TabIndex = 352
        '
        'Label66
        '
        Me.Label66.AutoSize = True
        Me.Label66.Location = New System.Drawing.Point(11, 47)
        Me.Label66.Name = "Label66"
        Me.Label66.Size = New System.Drawing.Size(69, 12)
        Me.Label66.TabIndex = 351
        Me.Label66.Text = "Net Inv Amt  "
        '
        'TxtTtlCtnI
        '
        Me.TxtTtlCtnI.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.TxtTtlCtnI.Location = New System.Drawing.Point(99, 96)
        Me.TxtTtlCtnI.MaxLength = 10
        Me.TxtTtlCtnI.Name = "TxtTtlCtnI"
        Me.TxtTtlCtnI.Size = New System.Drawing.Size(59, 20)
        Me.TxtTtlCtnI.TabIndex = 350
        '
        'txtTtlAmtI
        '
        Me.txtTtlAmtI.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlAmtI.Location = New System.Drawing.Point(187, 17)
        Me.txtTtlAmtI.MaxLength = 10
        Me.txtTtlAmtI.Name = "txtTtlAmtI"
        Me.txtTtlAmtI.Size = New System.Drawing.Size(84, 20)
        Me.txtTtlAmtI.TabIndex = 349
        '
        'cboUntAmtI
        '
        Me.cboUntAmtI.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboUntAmtI.FormattingEnabled = True
        Me.cboUntAmtI.Location = New System.Drawing.Point(97, 16)
        Me.cboUntAmtI.Name = "cboUntAmtI"
        Me.cboUntAmtI.Size = New System.Drawing.Size(75, 21)
        Me.cboUntAmtI.TabIndex = 348
        '
        'txtTtlVolI
        '
        Me.txtTtlVolI.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtTtlVolI.Location = New System.Drawing.Point(257, 96)
        Me.txtTtlVolI.MaxLength = 10
        Me.txtTtlVolI.Name = "txtTtlVolI"
        Me.txtTtlVolI.Size = New System.Drawing.Size(84, 20)
        Me.txtTtlVolI.TabIndex = 347
        '
        'Label65
        '
        Me.Label65.AutoSize = True
        Me.Label65.Location = New System.Drawing.Point(11, 96)
        Me.Label65.Name = "Label65"
        Me.Label65.Size = New System.Drawing.Size(59, 12)
        Me.Label65.TabIndex = 342
        Me.Label65.Text = "Total of ctn"
        '
        'Label67
        '
        Me.Label67.AutoSize = True
        Me.Label67.Location = New System.Drawing.Point(165, 96)
        Me.Label67.Name = "Label67"
        Me.Label67.Size = New System.Drawing.Size(86, 12)
        Me.Label67.TabIndex = 340
        Me.Label67.Text = "Total Mod CBM "
        '
        'Label68
        '
        Me.Label68.AutoSize = True
        Me.Label68.Location = New System.Drawing.Point(11, 21)
        Me.Label68.Name = "Label68"
        Me.Label68.Size = New System.Drawing.Size(70, 12)
        Me.Label68.TabIndex = 339
        Me.Label68.Text = "Total Amount"
        '
        'Label64
        '
        Me.Label64.AutoSize = True
        Me.Label64.Location = New System.Drawing.Point(12, 164)
        Me.Label64.Name = "Label64"
        Me.Label64.Size = New System.Drawing.Size(205, 36)
        Me.Label64.TabIndex = 361
        Me.Label64.Text = "Covering                                                    " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Footer Remarks "
        '
        'Label62
        '
        Me.Label62.AutoSize = True
        Me.Label62.Location = New System.Drawing.Point(439, 121)
        Me.Label62.Name = "Label62"
        Me.Label62.Size = New System.Drawing.Size(62, 24)
        Me.Label62.TabIndex = 359
        Me.Label62.Text = "Shipping " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Document #"
        '
        'txtDoc
        '
        Me.txtDoc.ContextMenuStrip = Me.cms_CopyNPaste
        Me.txtDoc.Location = New System.Drawing.Point(518, 118)
        Me.txtDoc.Name = "txtDoc"
        Me.txtDoc.Size = New System.Drawing.Size(198, 46)
        Me.txtDoc.TabIndex = 355
        Me.txtDoc.Text = ""
        '
        'optDocTyp2
        '
        Me.optDocTyp2.AutoSize = True
        Me.optDocTyp2.Location = New System.Drawing.Point(296, 119)
        Me.optDocTyp2.Name = "optDocTyp2"
        Me.optDocTyp2.Size = New System.Drawing.Size(59, 16)
        Me.optDocTyp2.TabIndex = 354
        Me.optDocTyp2.TabStop = True
        Me.optDocTyp2.Text = "AWB #"
        Me.optDocTyp2.UseVisualStyleBackColor = True
        '
        'optDocTyp1
        '
        Me.optDocTyp1.AutoSize = True
        Me.optDocTyp1.Location = New System.Drawing.Point(213, 118)
        Me.optDocTyp1.Name = "optDocTyp1"
        Me.optDocTyp1.Size = New System.Drawing.Size(54, 16)
        Me.optDocTyp1.TabIndex = 353
        Me.optDocTyp1.TabStop = True
        Me.optDocTyp1.Text = "FCR #"
        Me.optDocTyp1.UseVisualStyleBackColor = True
        '
        'optDocTyp0
        '
        Me.optDocTyp0.AutoSize = True
        Me.optDocTyp0.Location = New System.Drawing.Point(135, 118)
        Me.optDocTyp0.Name = "optDocTyp0"
        Me.optDocTyp0.Size = New System.Drawing.Size(50, 16)
        Me.optDocTyp0.TabIndex = 352
        Me.optDocTyp0.TabStop = True
        Me.optDocTyp0.Text = "B/L #"
        Me.optDocTyp0.UseVisualStyleBackColor = True
        '
        'chkClose
        '
        Me.chkClose.AutoSize = True
        Me.chkClose.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.chkClose.Location = New System.Drawing.Point(823, 16)
        Me.chkClose.Name = "chkClose"
        Me.chkClose.Size = New System.Drawing.Size(52, 17)
        Me.chkClose.TabIndex = 354
        Me.chkClose.Text = "Close"
        Me.chkClose.UseVisualStyleBackColor = True
        Me.chkClose.Visible = False
        '
        'txtInvDat
        '
        Me.txtInvDat.Enabled = False
        Me.txtInvDat.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtInvDat.Location = New System.Drawing.Point(490, 15)
        Me.txtInvDat.MaxLength = 10
        Me.txtInvDat.Name = "txtInvDat"
        Me.txtInvDat.Size = New System.Drawing.Size(114, 20)
        Me.txtInvDat.TabIndex = 353
        '
        'Label61
        '
        Me.Label61.AutoSize = True
        Me.Label61.ForeColor = System.Drawing.Color.MediumBlue
        Me.Label61.Location = New System.Drawing.Point(322, 19)
        Me.Label61.Name = "Label61"
        Me.Label61.Size = New System.Drawing.Size(152, 12)
        Me.Label61.TabIndex = 352
        Me.Label61.Text = "Invoice Date (Revised  && Print)"
        '
        'Label58
        '
        Me.Label58.AutoSize = True
        Me.Label58.BackColor = System.Drawing.Color.Transparent
        Me.Label58.ForeColor = System.Drawing.Color.Green
        Me.Label58.Location = New System.Drawing.Point(12, 119)
        Me.Label58.Name = "Label58"
        Me.Label58.Size = New System.Drawing.Size(83, 12)
        Me.Label58.TabIndex = 351
        Me.Label58.Text = "Document Type "
        '
        'Label59
        '
        Me.Label59.AutoSize = True
        Me.Label59.BackColor = System.Drawing.Color.Transparent
        Me.Label59.ForeColor = System.Drawing.Color.Green
        Me.Label59.Location = New System.Drawing.Point(12, 60)
        Me.Label59.Name = "Label59"
        Me.Label59.Size = New System.Drawing.Size(77, 12)
        Me.Label59.TabIndex = 350
        Me.Label59.Text = "Payment Terms"
        '
        'Label60
        '
        Me.Label60.AutoSize = True
        Me.Label60.BackColor = System.Drawing.Color.Transparent
        Me.Label60.ForeColor = System.Drawing.Color.Green
        Me.Label60.Location = New System.Drawing.Point(12, 38)
        Me.Label60.Name = "Label60"
        Me.Label60.Size = New System.Drawing.Size(66, 12)
        Me.Label60.TabIndex = 349
        Me.Label60.Text = "Price Terms  "
        '
        'cboInvNo
        '
        Me.cboInvNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboInvNo.FormattingEnabled = True
        Me.cboInvNo.Location = New System.Drawing.Point(130, 14)
        Me.cboInvNo.Name = "cboInvNo"
        Me.cboInvNo.Size = New System.Drawing.Size(120, 21)
        Me.cboInvNo.TabIndex = 349
        '
        'Label57
        '
        Me.Label57.AutoSize = True
        Me.Label57.ForeColor = System.Drawing.Color.Red
        Me.Label57.Location = New System.Drawing.Point(12, 17)
        Me.Label57.Name = "Label57"
        Me.Label57.Size = New System.Drawing.Size(57, 12)
        Me.Label57.TabIndex = 347
        Me.Label57.Text = "Invoice No"
        '
        'cboPayTrm
        '
        Me.cboPayTrm.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboPayTrm.FormattingEnabled = True
        Me.cboPayTrm.Location = New System.Drawing.Point(130, 62)
        Me.cboPayTrm.Name = "cboPayTrm"
        Me.cboPayTrm.Size = New System.Drawing.Size(779, 21)
        Me.cboPayTrm.TabIndex = 351
        '
        'cboPrcTrm
        '
        Me.cboPrcTrm.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboPrcTrm.FormattingEnabled = True
        Me.cboPrcTrm.Location = New System.Drawing.Point(130, 38)
        Me.cboPrcTrm.Name = "cboPrcTrm"
        Me.cboPrcTrm.Size = New System.Drawing.Size(195, 21)
        Me.cboPrcTrm.TabIndex = 350
        '
        'txtAFamt
        '
        Me.txtAFamt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtAFamt.Location = New System.Drawing.Point(978, 502)
        Me.txtAFamt.MaxLength = 10
        Me.txtAFamt.Name = "txtAFamt"
        Me.txtAFamt.Size = New System.Drawing.Size(84, 20)
        Me.txtAFamt.TabIndex = 354
        Me.txtAFamt.Visible = False
        '
        'cbobank
        '
        Me.cbobank.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cbobank.FormattingEnabled = True
        Me.cbobank.Location = New System.Drawing.Point(438, 462)
        Me.cbobank.Name = "cbobank"
        Me.cbobank.Size = New System.Drawing.Size(283, 21)
        Me.cbobank.TabIndex = 346
        Me.cbobank.Visible = False
        '
        'Label69
        '
        Me.Label69.AutoSize = True
        Me.Label69.Location = New System.Drawing.Point(890, 506)
        Me.Label69.Name = "Label69"
        Me.Label69.Size = New System.Drawing.Size(69, 12)
        Me.Label69.TabIndex = 353
        Me.Label69.Text = "Adjusted Amt"
        Me.Label69.Visible = False
        '
        'Label63
        '
        Me.Label63.AutoSize = True
        Me.Label63.Location = New System.Drawing.Point(327, 456)
        Me.Label63.Name = "Label63"
        Me.Label63.Size = New System.Drawing.Size(85, 24)
        Me.Label63.TabIndex = 360
        Me.Label63.Text = "Draft Negotiated " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Through"
        Me.Label63.Visible = False
        '
        'txtLcStmt
        '
        Me.txtLcStmt.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtLcStmt.Location = New System.Drawing.Point(184, 433)
        Me.txtLcStmt.MaxLength = 10
        Me.txtLcStmt.Name = "txtLcStmt"
        Me.txtLcStmt.Size = New System.Drawing.Size(596, 20)
        Me.txtLcStmt.TabIndex = 364
        Me.txtLcStmt.Visible = False
        '
        'DataGrid2
        '
        Me.DataGrid2.AllowUserToAddRows = False
        Me.DataGrid2.AllowUserToDeleteRows = False
        Me.DataGrid2.ColumnHeadersHeight = 20
        Me.DataGrid2.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        Me.DataGrid2.Location = New System.Drawing.Point(542, 514)
        Me.DataGrid2.Name = "DataGrid2"
        Me.DataGrid2.RowHeadersWidth = 20
        Me.DataGrid2.RowTemplate.DefaultCellStyle.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.DataGrid2.RowTemplate.Height = 16
        Me.DataGrid2.Size = New System.Drawing.Size(260, 87)
        Me.DataGrid2.TabIndex = 366
        Me.DataGrid2.Visible = False
        '
        'tpSHM00001_4
        '
        Me.tpSHM00001_4.Controls.Add(Me.cbo_scno)
        Me.tpSHM00001_4.Controls.Add(Me.Label32)
        Me.tpSHM00001_4.Controls.Add(Me.lblPreInfo)
        Me.tpSHM00001_4.Controls.Add(Me.lblDisInfo)
        Me.tpSHM00001_4.Controls.Add(Me.grdPre)
        Me.tpSHM00001_4.Controls.Add(Me.grdDis)
        Me.tpSHM00001_4.Controls.Add(Me.lstCde_P)
        Me.tpSHM00001_4.Controls.Add(Me.lstCde_D)
        Me.tpSHM00001_4.Controls.Add(Me.Label73)
        Me.tpSHM00001_4.Controls.Add(Me.Label72)
        Me.tpSHM00001_4.Controls.Add(Me.grdPremium)
        Me.tpSHM00001_4.Controls.Add(Me.grdDiscount)
        Me.tpSHM00001_4.Controls.Add(Me.cboInvNoP)
        Me.tpSHM00001_4.Controls.Add(Me.Label71)
        Me.tpSHM00001_4.Location = New System.Drawing.Point(4, 22)
        Me.tpSHM00001_4.Name = "tpSHM00001_4"
        Me.tpSHM00001_4.Size = New System.Drawing.Size(946, 533)
        Me.tpSHM00001_4.TabIndex = 3
        Me.tpSHM00001_4.Text = "(4) Discount/Premium"
        Me.tpSHM00001_4.UseVisualStyleBackColor = True
        '
        'cbo_scno
        '
        Me.cbo_scno.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cbo_scno.FormattingEnabled = True
        Me.cbo_scno.Location = New System.Drawing.Point(102, 6)
        Me.cbo_scno.Name = "cbo_scno"
        Me.cbo_scno.Size = New System.Drawing.Size(120, 21)
        Me.cbo_scno.TabIndex = 378
        '
        'Label32
        '
        Me.Label32.AutoSize = True
        Me.Label32.ForeColor = System.Drawing.Color.Black
        Me.Label32.Location = New System.Drawing.Point(30, 9)
        Me.Label32.Name = "Label32"
        Me.Label32.Size = New System.Drawing.Size(39, 12)
        Me.Label32.TabIndex = 378
        Me.Label32.Text = "SC No:"
        '
        'lblPreInfo
        '
        Me.lblPreInfo.AutoSize = True
        Me.lblPreInfo.Location = New System.Drawing.Point(438, 126)
        Me.lblPreInfo.Name = "lblPreInfo"
        Me.lblPreInfo.Size = New System.Drawing.Size(161, 12)
        Me.lblPreInfo.TabIndex = 376
        Me.lblPreInfo.Text = "Premiums Information (from SC)"
        '
        'lblDisInfo
        '
        Me.lblDisInfo.AutoSize = True
        Me.lblDisInfo.Location = New System.Drawing.Point(438, 15)
        Me.lblDisInfo.Name = "lblDisInfo"
        Me.lblDisInfo.Size = New System.Drawing.Size(160, 12)
        Me.lblDisInfo.TabIndex = 374
        Me.lblDisInfo.Text = "Discounts Information (from SC)"
        '
        'grdPre
        '
        Me.grdPre.AllowUserToAddRows = False
        Me.grdPre.AllowUserToDeleteRows = False
        Me.grdPre.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize
        Me.grdPre.Location = New System.Drawing.Point(36, 144)
        Me.grdPre.Name = "grdPre"
        Me.grdPre.RowTemplate.Height = 17
        Me.grdPre.Size = New System.Drawing.Size(883, 96)
        Me.grdPre.TabIndex = 377
        '
        'grdDis
        '
        Me.grdDis.AllowUserToAddRows = False
        Me.grdDis.AllowUserToDeleteRows = False
        Me.grdDis.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize
        Me.grdDis.Location = New System.Drawing.Point(36, 33)
        Me.grdDis.Name = "grdDis"
        Me.grdDis.RowTemplate.Height = 17
        Me.grdDis.Size = New System.Drawing.Size(883, 90)
        Me.grdDis.TabIndex = 375
        '
        'lstCde_P
        '
        Me.lstCde_P.FormattingEnabled = True
        Me.lstCde_P.ItemHeight = 12
        Me.lstCde_P.Location = New System.Drawing.Point(298, 571)
        Me.lstCde_P.Name = "lstCde_P"
        Me.lstCde_P.Size = New System.Drawing.Size(412, 4)
        Me.lstCde_P.TabIndex = 373
        '
        'lstCde_D
        '
        Me.lstCde_D.FormattingEnabled = True
        Me.lstCde_D.ItemHeight = 12
        Me.lstCde_D.Location = New System.Drawing.Point(179, 548)
        Me.lstCde_D.Name = "lstCde_D"
        Me.lstCde_D.Size = New System.Drawing.Size(425, 4)
        Me.lstCde_D.TabIndex = 372
        Me.lstCde_D.Visible = False
        '
        'Label73
        '
        Me.Label73.AutoSize = True
        Me.Label73.Location = New System.Drawing.Point(32, 387)
        Me.Label73.Name = "Label73"
        Me.Label73.Size = New System.Drawing.Size(110, 12)
        Me.Label73.TabIndex = 371
        Me.Label73.Text = "Premiums Information"
        '
        'Label72
        '
        Me.Label72.AutoSize = True
        Me.Label72.Location = New System.Drawing.Point(32, 270)
        Me.Label72.Name = "Label72"
        Me.Label72.Size = New System.Drawing.Size(109, 12)
        Me.Label72.TabIndex = 369
        Me.Label72.Text = "Discounts Information"
        '
        'grdPremium
        '
        Me.grdPremium.AllowUserToAddRows = False
        Me.grdPremium.AllowUserToDeleteRows = False
        Me.grdPremium.ColumnHeadersHeight = 20
        Me.grdPremium.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        Me.grdPremium.Location = New System.Drawing.Point(36, 405)
        Me.grdPremium.Name = "grdPremium"
        Me.grdPremium.RowHeadersWidth = 20
        Me.grdPremium.RowTemplate.DefaultCellStyle.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.grdPremium.RowTemplate.Height = 16
        Me.grdPremium.Size = New System.Drawing.Size(883, 102)
        Me.grdPremium.TabIndex = 368
        '
        'grdDiscount
        '
        Me.grdDiscount.AllowUserToAddRows = False
        Me.grdDiscount.AllowUserToDeleteRows = False
        Me.grdDiscount.ColumnHeadersHeight = 20
        Me.grdDiscount.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        Me.grdDiscount.Location = New System.Drawing.Point(36, 288)
        Me.grdDiscount.Name = "grdDiscount"
        Me.grdDiscount.RowHeadersWidth = 20
        Me.grdDiscount.RowTemplate.DefaultCellStyle.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.grdDiscount.RowTemplate.Height = 16
        Me.grdDiscount.Size = New System.Drawing.Size(883, 96)
        Me.grdDiscount.TabIndex = 367
        '
        'cboInvNoP
        '
        Me.cboInvNoP.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboInvNoP.FormattingEnabled = True
        Me.cboInvNoP.Location = New System.Drawing.Point(102, 246)
        Me.cboInvNoP.Name = "cboInvNoP"
        Me.cboInvNoP.Size = New System.Drawing.Size(120, 21)
        Me.cboInvNoP.TabIndex = 379
        '
        'Label71
        '
        Me.Label71.AutoSize = True
        Me.Label71.ForeColor = System.Drawing.Color.Red
        Me.Label71.Location = New System.Drawing.Point(30, 249)
        Me.Label71.Name = "Label71"
        Me.Label71.Size = New System.Drawing.Size(60, 12)
        Me.Label71.TabIndex = 349
        Me.Label71.Text = "Invoice No:"
        '
        'tpSHM00001_5
        '
        Me.tpSHM00001_5.Controls.Add(Me.GroupBox10)
        Me.tpSHM00001_5.Location = New System.Drawing.Point(4, 22)
        Me.tpSHM00001_5.Name = "tpSHM00001_5"
        Me.tpSHM00001_5.Size = New System.Drawing.Size(946, 533)
        Me.tpSHM00001_5.TabIndex = 4
        Me.tpSHM00001_5.Text = "(5) Ship Mark"
        Me.tpSHM00001_5.UseVisualStyleBackColor = True
        '
        'GroupBox10
        '
        Me.GroupBox10.Controls.Add(Me.PanShpbchup)
        Me.GroupBox10.Controls.Add(Me.CmdBatUpdate)
        Me.GroupBox10.Controls.Add(Me.txtEngRmk)
        Me.GroupBox10.Controls.Add(Me.cmdShpmrkAttchmnt)
        Me.GroupBox10.Controls.Add(Me.cmdSelSM)
        Me.GroupBox10.Controls.Add(Me.Label74)
        Me.GroupBox10.Controls.Add(Me.Picture1)
        Me.GroupBox10.Controls.Add(Me.Label82)
        Me.GroupBox10.Controls.Add(Me.Label80)
        Me.GroupBox10.Controls.Add(Me.Label81)
        Me.GroupBox10.Controls.Add(Me.DataGrid3)
        Me.GroupBox10.Controls.Add(Me.txtImgPth)
        Me.GroupBox10.Controls.Add(Me.txtImgNam)
        Me.GroupBox10.Controls.Add(Me.txtEngDsc)
        Me.GroupBox10.Controls.Add(Me.cboInvNoM)
        Me.GroupBox10.Controls.Add(Me.cboOrdNo)
        Me.GroupBox10.Controls.Add(Me.Label87)
        Me.GroupBox10.Controls.Add(Me.Label78)
        Me.GroupBox10.Controls.Add(Me.Label79)
        Me.GroupBox10.Location = New System.Drawing.Point(7, 6)
        Me.GroupBox10.Name = "GroupBox10"
        Me.GroupBox10.Size = New System.Drawing.Size(936, 509)
        Me.GroupBox10.TabIndex = 349
        Me.GroupBox10.TabStop = False
        '
        'PanShpbchup
        '
        Me.PanShpbchup.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
        Me.PanShpbchup.Controls.Add(Me.CmdShpchupcancel)
        Me.PanShpbchup.Controls.Add(Me.CmdShpchupok)
        Me.PanShpbchup.Controls.Add(Me.DgShpbchup)
        Me.PanShpbchup.Location = New System.Drawing.Point(733, 368)
        Me.PanShpbchup.Name = "PanShpbchup"
        Me.PanShpbchup.Padding = New System.Windows.Forms.Padding(3)
        Me.PanShpbchup.Size = New System.Drawing.Size(42, 24)
        Me.PanShpbchup.TabIndex = 380
        Me.PanShpbchup.Visible = False
        '
        'CmdShpchupcancel
        '
        Me.CmdShpchupcancel.Location = New System.Drawing.Point(114, 318)
        Me.CmdShpchupcancel.Name = "CmdShpchupcancel"
        Me.CmdShpchupcancel.Size = New System.Drawing.Size(75, 23)
        Me.CmdShpchupcancel.TabIndex = 377
        Me.CmdShpchupcancel.Text = "Cancel"
        Me.CmdShpchupcancel.UseVisualStyleBackColor = True
        '
        'CmdShpchupok
        '
        Me.CmdShpchupok.Location = New System.Drawing.Point(22, 318)
        Me.CmdShpchupok.Name = "CmdShpchupok"
        Me.CmdShpchupok.Size = New System.Drawing.Size(75, 23)
        Me.CmdShpchupok.TabIndex = 376
        Me.CmdShpchupok.Text = "OK"
        Me.CmdShpchupok.UseVisualStyleBackColor = True
        '
        'DgShpbchup
        '
        Me.DgShpbchup.AllowUserToAddRows = False
        Me.DgShpbchup.AllowUserToDeleteRows = False
        Me.DgShpbchup.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize
        Me.DgShpbchup.Location = New System.Drawing.Point(6, 6)
        Me.DgShpbchup.Name = "DgShpbchup"
        Me.DgShpbchup.ReadOnly = True
        Me.DgShpbchup.RowTemplate.Height = 24
        Me.DgShpbchup.Size = New System.Drawing.Size(195, 306)
        Me.DgShpbchup.TabIndex = 375
        '
        'CmdBatUpdate
        '
        Me.CmdBatUpdate.Location = New System.Drawing.Point(585, 17)
        Me.CmdBatUpdate.Name = "CmdBatUpdate"
        Me.CmdBatUpdate.Size = New System.Drawing.Size(200, 22)
        Me.CmdBatUpdate.TabIndex = 379
        Me.CmdBatUpdate.TabStop = False
        Me.CmdBatUpdate.Text = "Batch update invoice (Ship Mark)"
        '
        'txtEngRmk
        '
        Me.txtEngRmk.Font = New System.Drawing.Font("Microsoft Sans Serif", 9.0!)
        Me.txtEngRmk.Location = New System.Drawing.Point(434, 403)
        Me.txtEngRmk.Name = "txtEngRmk"
        Me.txtEngRmk.Size = New System.Drawing.Size(506, 20)
        Me.txtEngRmk.TabIndex = 378
        Me.txtEngRmk.Text = ""
        Me.txtEngRmk.Visible = False
        '
        'cmdShpmrkAttchmnt
        '
        Me.cmdShpmrkAttchmnt.Location = New System.Drawing.Point(292, 40)
        Me.cmdShpmrkAttchmnt.Name = "cmdShpmrkAttchmnt"
        Me.cmdShpmrkAttchmnt.Size = New System.Drawing.Size(200, 22)
        Me.cmdShpmrkAttchmnt.TabIndex = 377
        Me.cmdShpmrkAttchmnt.Text = "View SC Shipmark Attachments"
        Me.cmdShpmrkAttchmnt.UseVisualStyleBackColor = True
        '
        'cmdSelSM
        '
        Me.cmdSelSM.Location = New System.Drawing.Point(292, 17)
        Me.cmdSelSM.Name = "cmdSelSM"
        Me.cmdSelSM.Size = New System.Drawing.Size(200, 22)
        Me.cmdSelSM.TabIndex = 376
        Me.cmdSelSM.TabStop = False
        Me.cmdSelSM.Text = "Select Ship Mark from SC/ Customer Master"
        '
        'Label74
        '
        Me.Label74.AutoSize = True
        Me.Label74.Location = New System.Drawing.Point(661, 68)
        Me.Label74.Name = "Label74"
        Me.Label74.Size = New System.Drawing.Size(34, 12)
        Me.Label74.TabIndex = 371
        Me.Label74.Text = "Image"
        Me.Label74.Visible = False
        '
        'Picture1
        '
        Me.Picture1.Location = New System.Drawing.Point(664, 93)
        Me.Picture1.Name = "Picture1"
        Me.Picture1.Size = New System.Drawing.Size(241, 268)
        Me.Picture1.TabIndex = 370
        Me.Picture1.TabStop = False
        Me.Picture1.Visible = False
        '
        'Label82
        '
        Me.Label82.AutoSize = True
        Me.Label82.Location = New System.Drawing.Point(10, 97)
        Me.Label82.Name = "Label82"
        Me.Label82.Size = New System.Drawing.Size(93, 24)
        Me.Label82.TabIndex = 369
        Me.Label82.Text = "SC Ship Mark" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "English Descripton"
        '
        'Label80
        '
        Me.Label80.AutoSize = True
        Me.Label80.Location = New System.Drawing.Point(316, 406)
        Me.Label80.Name = "Label80"
        Me.Label80.Size = New System.Drawing.Size(84, 12)
        Me.Label80.TabIndex = 368
        Me.Label80.Text = "English Remarks"
        Me.Label80.Visible = False
        '
        'Label81
        '
        Me.Label81.AutoSize = True
        Me.Label81.Location = New System.Drawing.Point(316, 380)
        Me.Label81.Name = "Label81"
        Me.Label81.Size = New System.Drawing.Size(57, 12)
        Me.Label81.TabIndex = 367
        Me.Label81.Text = "Image Path"
        Me.Label81.Visible = False
        '
        'DataGrid3
        '
        Me.DataGrid3.AllowUserToAddRows = False
        Me.DataGrid3.AllowUserToDeleteRows = False
        Me.DataGrid3.ColumnHeadersHeight = 20
        Me.DataGrid3.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        Me.DataGrid3.Location = New System.Drawing.Point(331, 435)
        Me.DataGrid3.Name = "DataGrid3"
        Me.DataGrid3.RowHeadersWidth = 20
        Me.DataGrid3.RowTemplate.DefaultCellStyle.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.DataGrid3.RowTemplate.Height = 16
        Me.DataGrid3.Size = New System.Drawing.Size(482, 54)
        Me.DataGrid3.TabIndex = 366
        Me.DataGrid3.Visible = False
        '
        'txtImgPth
        '
        Me.txtImgPth.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtImgPth.Location = New System.Drawing.Point(435, 378)
        Me.txtImgPth.MaxLength = 200
        Me.txtImgPth.Name = "txtImgPth"
        Me.txtImgPth.Size = New System.Drawing.Size(303, 20)
        Me.txtImgPth.TabIndex = 363
        Me.txtImgPth.Visible = False
        '
        'txtImgNam
        '
        Me.txtImgNam.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.txtImgNam.Location = New System.Drawing.Point(129, 68)
        Me.txtImgNam.MaxLength = 30
        Me.txtImgNam.Name = "txtImgNam"
        Me.txtImgNam.Size = New System.Drawing.Size(303, 20)
        Me.txtImgNam.TabIndex = 373
        '
        'txtEngDsc
        '
        Me.txtEngDsc.ContextMenuStrip = Me.cms_CopyNPaste
        Me.txtEngDsc.Location = New System.Drawing.Point(129, 94)
        Me.txtEngDsc.Name = "txtEngDsc"
        Me.txtEngDsc.Size = New System.Drawing.Size(794, 409)
        Me.txtEngDsc.TabIndex = 374
        Me.txtEngDsc.Text = ""
        '
        'cboInvNoM
        '
        Me.cboInvNoM.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboInvNoM.FormattingEnabled = True
        Me.cboInvNoM.Location = New System.Drawing.Point(129, 14)
        Me.cboInvNoM.Name = "cboInvNoM"
        Me.cboInvNoM.Size = New System.Drawing.Size(145, 21)
        Me.cboInvNoM.TabIndex = 371
        '
        'cboOrdNo
        '
        Me.cboOrdNo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboOrdNo.FormattingEnabled = True
        Me.cboOrdNo.Location = New System.Drawing.Point(129, 41)
        Me.cboOrdNo.Name = "cboOrdNo"
        Me.cboOrdNo.Size = New System.Drawing.Size(145, 21)
        Me.cboOrdNo.TabIndex = 372
        '
        'Label87
        '
        Me.Label87.AutoSize = True
        Me.Label87.ForeColor = System.Drawing.Color.Red
        Me.Label87.Location = New System.Drawing.Point(10, 17)
        Me.Label87.Name = "Label87"
        Me.Label87.Size = New System.Drawing.Size(57, 12)
        Me.Label87.TabIndex = 347
        Me.Label87.Text = "Invoice No"
        '
        'Label78
        '
        Me.Label78.AutoSize = True
        Me.Label78.Location = New System.Drawing.Point(10, 71)
        Me.Label78.Name = "Label78"
        Me.Label78.Size = New System.Drawing.Size(91, 12)
        Me.Label78.TabIndex = 340
        Me.Label78.Text = "SC Ship Mark File"
        '
        'Label79
        '
        Me.Label79.AutoSize = True
        Me.Label79.Location = New System.Drawing.Point(10, 45)
        Me.Label79.Name = "Label79"
        Me.Label79.Size = New System.Drawing.Size(31, 12)
        Me.Label79.TabIndex = 339
        Me.Label79.Text = "S/C #"
        '
        'tpSHM00001_6
        '
        Me.tpSHM00001_6.Controls.Add(Me.Label33)
        Me.tpSHM00001_6.Controls.Add(Me.Label89)
        Me.tpSHM00001_6.Controls.Add(Me.Label90)
        Me.tpSHM00001_6.Controls.Add(Me.Label91)
        Me.tpSHM00001_6.Controls.Add(Me.cboSort3)
        Me.tpSHM00001_6.Controls.Add(Me.cboSort2)
        Me.tpSHM00001_6.Controls.Add(Me.cboSort1)
        Me.tpSHM00001_6.Controls.Add(Me.grdShpSum)
        Me.tpSHM00001_6.Location = New System.Drawing.Point(4, 22)
        Me.tpSHM00001_6.Name = "tpSHM00001_6"
        Me.tpSHM00001_6.Size = New System.Drawing.Size(946, 533)
        Me.tpSHM00001_6.TabIndex = 5
        Me.tpSHM00001_6.Text = "(6) Summary"
        Me.tpSHM00001_6.UseVisualStyleBackColor = True
        '
        'Label33
        '
        Me.Label33.AutoSize = True
        Me.Label33.Location = New System.Drawing.Point(92, 12)
        Me.Label33.Name = "Label33"
        Me.Label33.Size = New System.Drawing.Size(19, 12)
        Me.Label33.TabIndex = 400
        Me.Label33.Text = "(1)"
        '
        'Label89
        '
        Me.Label89.AutoSize = True
        Me.Label89.Location = New System.Drawing.Point(490, 12)
        Me.Label89.Name = "Label89"
        Me.Label89.Size = New System.Drawing.Size(19, 12)
        Me.Label89.TabIndex = 399
        Me.Label89.Text = "(3)"
        '
        'Label90
        '
        Me.Label90.AutoSize = True
        Me.Label90.Location = New System.Drawing.Point(288, 13)
        Me.Label90.Name = "Label90"
        Me.Label90.Size = New System.Drawing.Size(19, 12)
        Me.Label90.TabIndex = 398
        Me.Label90.Text = "(2)"
        '
        'Label91
        '
        Me.Label91.AutoSize = True
        Me.Label91.Location = New System.Drawing.Point(24, 12)
        Me.Label91.Name = "Label91"
        Me.Label91.Size = New System.Drawing.Size(45, 12)
        Me.Label91.TabIndex = 397
        Me.Label91.Text = "Sorting :"
        '
        'cboSort3
        '
        Me.cboSort3.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboSort3.FormattingEnabled = True
        Me.cboSort3.Location = New System.Drawing.Point(513, 11)
        Me.cboSort3.Name = "cboSort3"
        Me.cboSort3.Size = New System.Drawing.Size(118, 21)
        Me.cboSort3.TabIndex = 396
        '
        'cboSort2
        '
        Me.cboSort2.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboSort2.FormattingEnabled = True
        Me.cboSort2.Location = New System.Drawing.Point(311, 10)
        Me.cboSort2.Name = "cboSort2"
        Me.cboSort2.Size = New System.Drawing.Size(118, 21)
        Me.cboSort2.TabIndex = 395
        '
        'cboSort1
        '
        Me.cboSort1.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
        Me.cboSort1.FormattingEnabled = True
        Me.cboSort1.Location = New System.Drawing.Point(119, 11)
        Me.cboSort1.Name = "cboSort1"
        Me.cboSort1.Size = New System.Drawing.Size(118, 21)
        Me.cboSort1.TabIndex = 394
        '
        'grdShpSum
        '
        Me.grdShpSum.AllowUserToAddRows = False
        Me.grdShpSum.AllowUserToDeleteRows = False
        Me.grdShpSum.ColumnHeadersHeight = 20
        Me.grdShpSum.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        Me.grdShpSum.Location = New System.Drawing.Point(2, 44)
        Me.grdShpSum.Name = "grdShpSum"
        Me.grdShpSum.RowHeadersWidth = 20
        Me.grdShpSum.RowTemplate.DefaultCellStyle.Font = New System.Drawing.Font("Arial", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
        Me.grdShpSum.RowTemplate.Height = 16
        Me.grdShpSum.Size = New System.Drawing.Size(943, 477)
        Me.grdShpSum.TabIndex = 367
        '
        'SHM00001
        '
        Me.AutoScaleBaseSize = New System.Drawing.Size(5, 15)
        Me.ClientSize = New System.Drawing.Size(954, 631)
        Me.Controls.Add(Me.menuStrip)
        Me.Controls.Add(Me.StatusBar)
        Me.Controls.Add(Me.cboShpSts)
        Me.Controls.Add(Me.lblQutSts)
        Me.Controls.Add(Me.cboCus2No)
        Me.Controls.Add(Me.txtCoNam)
        Me.Controls.Add(Me.Label2)
        Me.Controls.Add(Me.txtRvsDat)
        Me.Controls.Add(Me.cboCus1No)
        Me.Controls.Add(Me.lblRvsDat)
        Me.Controls.Add(Me.lblCus1No)
        Me.Controls.Add(Me.txtIssDat)
        Me.Controls.Add(Me.lblIssDat)
        Me.Controls.Add(Me.cboCoCde)
        Me.Controls.Add(Me.txtShpNo)
        Me.Controls.Add(Me.Label1)
        Me.Controls.Add(Me.lblQutNo)
        Me.Controls.Add(Me.btcSHM00001)
        Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
        Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
        Me.MainMenuStrip = Me.menuStrip
        Me.MaximizeBox = False
        Me.Name = "SHM00001"
        Me.Text = "SHM00001 - Shipping Maintenance (SHM01)"
        Me.cms_CopyNPaste.ResumeLayout(False)
        CType(Me.StatusBarPanel1, System.ComponentModel.ISupportInitialize).EndInit()
        CType(Me.StatusBarPanel2, System.ComponentModel.ISupportInitialize).EndInit()
        Me.menuStrip.ResumeLayout(False)
        Me.menuStrip.PerformLayout()
        Me.btcSHM00001.ResumeLayout(False)
        Me.tpSHM00001_1.ResumeLayout(False)
        Me.GroupBox2.ResumeLayout(False)
        Me.GroupBox2.PerformLayout()
        Me.GroupBox13.ResumeLayout(False)
        Me.GroupBox12.ResumeLayout(False)
        Me.GroupBox12.PerformLayout()
        Me.GroupBox3.ResumeLayout(False)
        Me.GroupBox3.PerformLayout()
        Me.GroupBox1.ResumeLayout(False)
        Me.GroupBox1.PerformLayout()
        Me.gbPri.ResumeLayout(False)
        Me.gbPri.PerformLayout()
        CType(Me.dg_sainvhdr, System.ComponentModel.ISupportInitialize).EndInit()
        Me.tpSHM00001_2.ResumeLayout(False)
        Me.tpSHM00001_2.PerformLayout()
        Me.GroupBox14.ResumeLayout(False)
        Me.GroupBox14.PerformLayout()
        CType(Me.dgPCKDIM, System.ComponentModel.ISupportInitialize).EndInit()
        Me.GroupBox11.ResumeLayout(False)
        Me.GroupBox11.PerformLayout()
        CType(Me.dgSCCPTBKD, System.ComponentModel.ISupportInitialize).EndInit()
        Me.GroupBox5.ResumeLayout(False)
        Me.GroupBox5.PerformLayout()
        Me.GroupBox6.ResumeLayout(False)
        Me.GroupBox6.PerformLayout()
        Me.GroupBox4.ResumeLayout(False)
        Me.GroupBox4.PerformLayout()
        Me.tpSHM00001_3.ResumeLayout(False)
        Me.tpSHM00001_3.PerformLayout()
        Me.GroupBox9.ResumeLayout(False)
        Me.GroupBox9.PerformLayout()
        Me.GroupBox7.ResumeLayout(False)
        Me.GroupBox7.PerformLayout()
        Me.PanShpbchup2.ResumeLayout(False)
        CType(Me.DgShpbchup2, System.ComponentModel.ISupportInitialize).EndInit()
        Me.GroupBox8.ResumeLayout(False)
        Me.GroupBox8.PerformLayout()
        CType(Me.DataGrid2, System.ComponentModel.ISupportInitialize).EndInit()
        Me.tpSHM00001_4.ResumeLayout(False)
        Me.tpSHM00001_4.PerformLayout()
        CType(Me.grdPre, System.ComponentModel.ISupportInitialize).EndInit()
        CType(Me.grdDis, System.ComponentModel.ISupportInitialize).EndInit()
        CType(Me.grdPremium, System.ComponentModel.ISupportInitialize).EndInit()
        CType(Me.grdDiscount, System.ComponentModel.ISupportInitialize).EndInit()
        Me.tpSHM00001_5.ResumeLayout(False)
        Me.GroupBox10.ResumeLayout(False)
        Me.GroupBox10.PerformLayout()
        Me.PanShpbchup.ResumeLayout(False)
        CType(Me.DgShpbchup, System.ComponentModel.ISupportInitialize).EndInit()
        CType(Me.Picture1, System.ComponentModel.ISupportInitialize).EndInit()
        CType(Me.DataGrid3, System.ComponentModel.ISupportInitialize).EndInit()
        Me.tpSHM00001_6.ResumeLayout(False)
        Me.tpSHM00001_6.PerformLayout()
        CType(Me.grdShpSum, System.ComponentModel.ISupportInitialize).EndInit()
        Me.ResumeLayout(False)
        Me.PerformLayout()

    End Sub
#End Region

    Dim addition As String
    Public Recordstatus As Boolean
    Dim UserEditCombo As Boolean
    Dim Recorddisplay As Boolean
    'Dim bSetToInit As Boolean
    Dim sCheckedLevel As String = "C"

    'Dim ClaimAmt_Header As Boolean

    Public rs_CUBASINF_P As New DataSet
    Public rs_CUBASINF_P_SALES As New DataSet
    Public rs_CUBASINF_S As New DataSet
    Public rs_CUBASINF_S_All As New DataSet
    Public rs_VNBASINF As New DataSet
    Public rs_SYUSRRIGHT_0 As New DataSet
    Public rs_SYUSRRIGHT_except_0 As New DataSet

    Public rs_SYCLMTYP As New DataSet

    Public rs_CAORDHDR As New DataSet
    Public rs_CAORDITM As New DataSet
    Public rs_CAORDDTL As New DataSet
    Public rs_CAREMHDR As New DataSet
    Public rs_CAREMITM As New DataSet

    Public rs_search_CAORDDTL As New DataSet
    Public rs_CAORDDTL_ALL As New DataSet
    Public rs_Currency As New DataSet
    Public rs_CLAIMSTS As New DataSet
    Public rs_SYCOMINF As New DataSet
    Public rs_DOC_GEN As New DataSet
    Public rs_SYCUREX As New DataSet

    'Dim ApprovalLimitPer_I As Decimal
    'Dim ApprovalLimitPer_E As Decimal
    Dim ApprovalLimitPer As Decimal = 1.0
    Dim ApprovalRights As Boolean
    Dim SuperApprovalRights As Boolean

    Dim Enq_right_local As Boolean
    Dim Del_right_local As Boolean

    'Check for update or read mode
    Dim sClaimStatus As String

    Dim sHdrPriCust As String
    Dim sHdrSecCust As String
    Dim sHdrVendor As String
    Dim sHdrClaimBy As String
    Dim sHdrClaimType As String
    Dim sDtlClaimType As String
    Dim sDtlPV As String
    Dim sDtlOrdQtyUM As String

    Dim nHdrSearchBy As Integer

    Dim sReadingSeq_Item As String = 1
    Dim sReadingSeq As String = 1

    Dim sHdrClaimAmtPer As String

    Private Const cHdrAppLmtChkPer As Decimal = 0.01
    Private Const cDtlAppLmtChkPer As Decimal = 0.25

    Dim list_sc_of_inv As String
    Dim pdm_strNewVal As String
    Dim pdm_strOldVal As String



    Private Sub SHM00001_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        ''Me.Icon = ERP00000.Icon
        ''Timer1.Enabled = False

        'Marco added for fixing rigid company code problem at 20031101 start
        'TouchCocde = False
        'Marco added for fixing rigid company code problem at 20031101 end

        ''Dim v

        ''#If useMTS Then
        ''    Set objBSGate = CreateObject("ucpBS_Gate.clsBSGate", serverName)
        ''#Else
        ''        objBSGate = CreateObject("ucpBS_Gate.clsBSGate")
        ''#End If

        Formstartup(Me.Name)
        Cursor = Cursors.WaitCursor
        mvwSlnOnb.SendToBack()
        mvwSlnOnb.Visible = False
        mvw_a.SendToBack()
        mvw_a.Visible = False
        mvwcgrcvdat.SendToBack()
        mvwcgrcvdat.Visible = False
        mvwLCdat.SendToBack()
        mvwLCdat.Visible = False





        ''For Each v In Me.Controls
        ''    If IsDataGrid(v) Then
        ''        v.BackColor = &H80000004 ' Gray color
        ''    End If
        ''Next

        Call FillCompCombo(gsUsrID, cboCoCde)         'Get availble Company
        Call GetDefaultCompany(cboCoCde, txtCoNam)

        gspStr = "sp_select_SYUSRRIGHT_Check '" & cboCoCde.Text & "','" & gsUsrID & "','" & txtShpNo.Text & "','" & sMODULE & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SYUSRRIGHT_Check, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SYUSRRIGHT_Check :" & rtnStr)
            Exit Sub
        End If
        '''
        If Not rs_SYUSRRIGHT_Check.Tables("RESULT") Is Nothing Then
            If rs_SYUSRRIGHT_Check.Tables("RESULT").Rows.Count = 0 Then
                MsgBox("You have no Right access this document.")
                Exit Sub
            Else
                'Call display_Header()
                'Call setStatus(cModeUpd)
                'sMode = cModeUpd
            End If

        End If

        'Update_RVSDAT = False

        Enq_right_local = Enq_right
        Del_right_local = Del_right

        'Call GetDefaultCompany(Me)

        '*** Display Default Company *****
        '    rs_SYUSRPRF.MoveFirst
        '    While Not rs_SYUSRPRF.EOF
        '        If rs_SYUSRPRF("yuc_flgdef") = "Y" Then
        '            cboCoCde.Text = rs_SYUSRPRF("yuc_cocde")
        '            txtCoNam.Text = ChangeCompany(cboCoCde.Text, Me.Name)
        '
        '        End If
        'rs_SYUSRPRF.MoveNext()
        'Wend


        Call fillParameter()

        '*** Folder 1   **********

        txtShpNo.MaxLength = 20

        txtVes.MaxLength = 30
        txtVoy.MaxLength = 30
        txtPotLoa.MaxLength = 30
        txtDst.MaxLength = 60
        txtCntyOrgn.MaxLength = 200
        '        txtCrr.MaxLength = 20
        txtCrrSo.MaxLength = 20
        txtGodDsc.MaxLength = 200

        txtBilEnt.MaxLength = 100
        txtBilAdr.MaxLength = 200
        txtBilStt.MaxLength = 20
        txtBilZip.MaxLength = 20
        txtBilRmk.MaxLength = 4000

        txtTtlCtn.MaxLength = 14
        txtTtlNwg.MaxLength = 14
        txtTtlGwg.MaxLength = 14
        txtTtlAmt.MaxLength = 14

        cboShpSts.Items.Clear()
        cboShpSts.Items.Add("OPE - Open")
        cboShpSts.Items.Add("REL - Released")
        cboShpSts.Items.Add("CLO - Close")
        cboShpSts.Items.Add("CAN - Cancel")
        cboShpSts.Items.Add("HLD - Waiting for Approval")


        '*** Folder 2   **********
        txtShpSeq.MaxLength = 6
        txtCtrCfs.MaxLength = 20
        txtSealNo.MaxLength = 20

        txtJobNo.MaxLength = 20
        txtOrdNo.MaxLength = 20
        txtCusPo.MaxLength = 20
        txtCusStyNo.MaxLength = 30
        txtCusItm.MaxLength = 20

        txtColCde.MaxLength = 10
        txtColDsc.MaxLength = 300
        txtShpQty.MaxLength = 6
        'Rem by Lester Wu on 2005-09-12
        'txtUntCdeD.MaxLength = 6

        txtCtnStr.MaxLength = 5
        txtCtnEnd.MaxLength = 5

        txtMtrdcm.MaxLength = 10
        txtMtrwcm.MaxLength = 10
        txtMtrhcm.MaxLength = 10
        txtActVol.MaxLength = 12

        txtGrsWgt.MaxLength = 10
        txtNetWgt.MaxLength = 10

        '*** Adjusted Maximum Length of Item Ship Mark from 800 to 300 to fit DB ***** By Lewis on 8/3/2003
        txtItmShm.MaxLength = 300
        txtCmpRmk.MaxLength = 125

        txtManNam.MaxLength = 200
        txtManAdr.MaxLength = 300


        txtTtlCtnD.MaxLength = 10
        txtTtlVolD.MaxLength = 14
        txtTtlNetD.MaxLength = 14
        txtTtlGrsD.MaxLength = 14


        txtSelPrcD.MaxLength = 12
        txtTtlAmtD.MaxLength = 14

        txtInvNo.MaxLength = 20



        flg_DisplayShipDetailData = True

        If gsCompany = "UCPP" Then
            optSearch0.Checked = True
            optSearch1.Checked = False
        Else
            optSearch0.Checked = False
            optSearch1.Checked = True
        End If

        flg_DisplayShipDetailData = False


        '*** Folder 3   **********
        '   txtDoc.MaxLength = 200
        'Lester Wu , reset maxlenght of cover and ftr rmk to 2000
        'txtCover.MaxLength = 4000
        'txtFtrRmk.MaxLength = 4000
        '  txtCover.MaxLength = 2000
        ' txtFtrRmk.MaxLength = 2000
        'txtLcStmt.MaxLength = 2000


        'cboBank.AddItem "Hong Kong Bank"
        'cboBank.AddItem "Hong Kong Standard Bank"

        '*** Folder 4   **********

        '*** Folder 5   **********
        'txtEngDsc.MaxLength = 1600
        'txtEngRmk.MaxLength = 1600

        '*************************

        '*** Folder 6   **********
        Dim S As String
        Dim rs() As ADOR.Recordset

        '*** Get Summary Record set Template

        gspStr = "sp_list_SHIPGDTL_SUM '" & cboCoCde.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL_SUM, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SYUSRRIGHT_Check :" & rtnStr)
            Exit Sub
        End If

        If rs_SHIPGDTL_SUM.Tables("RESULT").Rows.Count = 0 Then
        Else
        End If



        gspStr = "sp_select_SHPCKDIM '',''"
        rtnLong = execute_SQLStatement(gspStr, rs_SHPCKDIM, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading cmdAddClick sp_select_SHPCKDIM :" & rtnStr)
            Exit Sub
        End If

        For i2 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Columns.Count - 1
            rs_SHPCKDIM.Tables("RESULT").Columns(i2).ReadOnly = False
        Next i2



        gspStr = "sp_select_SHDTLCTN '" & cboCoCde.Text & "','" & "rgkri3o" & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHDTLCTN, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
            Exit Sub
        End If
        '1110

        '*************************

        '***Get the Current User's access right form the DB
        '    If (DB Value = CanModify) Then  'Get the Value from Database
        CanModify = True
        '    Else
        '        CanModify = False
        '    End If

        Me.KeyPreview = True

        '        Call setStatus("Init")

        '       Call Formstartup(Me.Name)   'Set the form Sartup position


        'If gsUsrGrp = "MGT-S" Then
        '    chkDiCoTi.Visible = True
        'Else
        '    chkDiCoTi.Visible = False
        'End If

        txtSlnOnb.Text = ""

        txtCoNam.Text = ChangeCompany(cboCoCde.Text, Me.Name)
        Cursor = Cursors.Default

        If optinvsm.Checked = True Then
            txtItmShm.Enabled = False
            cmdSelSM.Enabled = True
        Else
            txtItmShm.Enabled = True
            cmdSelSM.Enabled = False
        End If

        cboSort1.Items.Add("N/A")
        cboSort1.Items.Add("Container")
        cboSort1.Items.Add("Invoice")
        cboSort1.Items.Add("SC#")
        cboSort1.Items.Add("Cust PO")
        cboSort1.SelectedIndex = 0

        cboSort2.Items.Add("N/A")
        cboSort2.Items.Add("Container")
        cboSort2.Items.Add("Invoice")
        cboSort2.Items.Add("SC#")
        cboSort2.Items.Add("Cust PO")
        cboSort2.SelectedIndex = 0

        cboSort3.Items.Add("N/A")
        cboSort3.Items.Add("Container")
        cboSort3.Items.Add("Invoice")
        cboSort3.Items.Add("SC#")
        cboSort3.Items.Add("Cust PO")
        cboSort3.SelectedIndex = 0


        Dim drAccess() As DataRow = rs_SYUSRGRP_right.Tables("RESULT").Select("yug_usrfun = 'INR00001' and yug_usrgrp = '" & gsUsrGrp & "'")
        If drAccess.Length = 0 Then
            mmdPrint_Right = False
        Else
            mmdPrint_Right = True
        End If



        Call setStatus(cModeInit)


    End Sub

    'Take out the filling process from form load to be a Sub-routine for for by change comany
    Private Sub fillParameter()
        Dim systype As String

        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        systype = "02" '***  
        gspStr = "sp_select_SYSETINF '', '" & systype & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SYSETINF, rtnStr)
        gspStr = ""

        '''''' Cursor = Cursors.Default

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading fillParameter sp_select_SYSETINFC :" & rtnStr)
            Exit Sub
        End If

        If rs_SYSETINF.Tables("RESULT").Rows.Count > 0 Then

            cboBilCty.Items.Clear()
            cboBilCty.Text = ""

            dr = rs_SYSETINF.Tables("RESULT").Select("ysi_cde <> 'test'")

            If Not dr Is Nothing Then
                If dr.Length > 0 Then
                    For index As Integer = 0 To dr.Length - 1
                        cboBilCty.Items.Add(Trim(dr(index)("ysi_cde")) + " - " + Trim(dr(index)("ysi_dsc")))
                    Next index
                End If
            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If




        systype = "03" '*** For Price Terms
        gspStr = "sp_select_SYSETINF '', '" & systype & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SYSETINF, rtnStr)
        gspStr = ""

        '''''' Cursor = Cursors.Default

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading fillParameter sp_select_SYSETINFC :" & rtnStr)
            Exit Sub
        End If

        If rs_SYSETINF.Tables("RESULT").Rows.Count > 0 Then

            cboPrcTrm.Items.Clear()
            cboPrcTrm.Text = ""

            dr = rs_SYSETINF.Tables("RESULT").Select("ysi_cde <> 'test'")

            If Not dr Is Nothing Then
                If dr.Length > 0 Then
                    For index As Integer = 0 To dr.Length - 1
                        cboPrcTrm.Items.Add(Trim(dr(index)("ysi_cde")) + " - " + Trim(dr(index)("ysi_dsc")))
                    Next index
                End If
            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If




        systype = "04" '*** 
        gspStr = "sp_select_SYSETINF '', '" & systype & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SYSETINF, rtnStr)
        gspStr = ""

        '''''' Cursor = Cursors.Default

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading fillParameter sp_select_SYSETINFC :" & rtnStr)
            Exit Sub
        End If

        If rs_SYSETINF.Tables("RESULT").Rows.Count > 0 Then

            cboPayTrm.Items.Clear()
            cboPayTrm.Text = ""

            dr = rs_SYSETINF.Tables("RESULT").Select("ysi_cde <> 'test'")

            If Not dr Is Nothing Then
                If dr.Length > 0 Then
                    For index As Integer = 0 To dr.Length - 1
                        cboPayTrm.Items.Add(Trim(dr(index)("ysi_cde")) + " - " + Trim(dr(index)("ysi_dsc")))
                    Next index
                End If
            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If



        systype = "11" '*** 
        gspStr = "sp_select_SYSETINF '', '" & systype & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SYSETINF, rtnStr)
        gspStr = ""

        '''''' Cursor = Cursors.Default

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading fillParameter sp_select_SYSETINFC :" & rtnStr)
            Exit Sub
        End If

        If rs_SYSETINF.Tables("RESULT").Rows.Count > 0 Then

            cboPckRmk.Items.Clear()
            cboPckRmk.Text = ""

            dr = rs_SYSETINF.Tables("RESULT").Select("ysi_cde <> 'test'")

            If Not dr Is Nothing Then
                If dr.Length > 0 Then
                    For index As Integer = 0 To dr.Length - 1
                        cboPckRmk.Items.Add(Trim(dr(index)("ysi_cde")) + " - " + Trim(dr(index)("ysi_dsc")))
                    Next index
                End If
            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If



        systype = "14" '*** 
        gspStr = "sp_select_SYSETINF '', '" & systype & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SYSETINF, rtnStr)
        gspStr = ""

        '''''' Cursor = Cursors.Default

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading fillParameter sp_select_SYSETINFC :" & rtnStr)
            Exit Sub
        End If

        If rs_SYSETINF.Tables("RESULT").Rows.Count > 0 Then

            cbobank.Items.Clear()
            cbobank.Text = ""

            dr = rs_SYSETINF.Tables("RESULT").Select("ysi_cde <> 'test'")

            If Not dr Is Nothing Then
                If dr.Length > 0 Then
                    For index As Integer = 0 To dr.Length - 1
                        cbobank.Items.Add(Trim(dr(index)("ysi_cde")) + " - " + Trim(dr(index)("ysi_dsc")))
                    Next index
                End If
            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If





        '*** Fill up Discount Code List box
        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_select_SYDISPRM  '" & cboCoCde.Text.Trim & "', '" & "D" & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SYSETINF, rtnStr)
        gspStr = ""

        '''''' Cursor = Cursors.Default

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading fillParameter sp_select_SYSETINFC :" & rtnStr)
            Exit Sub
        End If

        If rs_SYSETINF.Tables("RESULT").Rows.Count > 0 Then

            dr = rs_SYSETINF.Tables("RESULT").Select("ydp_cde <> 'test'")
            lstDis.Clear()

            If Not dr Is Nothing Then
                If dr.Length > 0 Then
                    For index As Integer = 0 To dr.Length - 1
                        lstDis.Add(dr(index).Item("ydp_cde") & " - " & dr(index).Item("ydp_dsc"))
                    Next index
                End If
            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If

        '*** Fill up Premium Code List box

        'Marco Added for fixing global company code problem at 20040108
        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_select_SYDISPRM  '" & cboCoCde.Text.Trim & "', '" & "P" & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SYSETINF, rtnStr)
        gspStr = ""

        '''''' Cursor = Cursors.Default

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading fillParameter sp_select_SYSETINFC :" & rtnStr)
            Exit Sub
        End If

        If rs_SYSETINF.Tables("RESULT").Rows.Count > 0 Then


            dr = rs_SYSETINF.Tables("RESULT").Select("ydp_cde <> 'test'")
            lstPre.Clear()

            If Not dr Is Nothing Then
                If dr.Length > 0 Then
                    For index As Integer = 0 To dr.Length - 1
                        lstPre.Add(dr(index).Item("ydp_cde") & " - " & dr(index).Item("ydp_dsc"))
                    Next index
                End If
            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If




        '**************************************************************
        '*** Fill Combo box End ***************************************
        '**************************************************************

        '**************************************************************
        '*** Fill List box      ***************************************
        '**************************************************************



        '**************************************************************
        '*** Fill List box END  ***************************************
        '**************************************************************
        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        'gspStr = "sp_list_CUBASINF_SHM00001 '" & cboCoCde.Text & "','" & "P" & "'"
        'rtnLong = execute_SQLStatement(gspStr, rs_CUBASINF_P, rtnStr)
        'gspStr = ""

        ''''''' Cursor = Cursors.Default

        'If rtnLong <> RC_SUCCESS Then
        '    MsgBox("Error on loading fillParameter sp_select_CUBASINF_PC :" & rtnStr)
        '    Exit Sub
        'End If

        gspStr = "sp_select_CUBASINF_P '" & cboCoCde.Text & "','Primary'"
        Me.Cursor = Windows.Forms.Cursors.WaitCursor
        rtnLong = execute_SQLStatement(gspStr, rs_CUBASINF_P, rtnStr)
        Me.Cursor = Windows.Forms.Cursors.Default
        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading SHM00001  sp_select_CUBASINF_P : " & rtnStr)
            Exit Sub
        End If

        If rs_CUBASINF_P.Tables("RESULT").Rows.Count > 0 Then
            cboCus1No.Items.Clear()
            cboCus1No.Text = ""


            dr = rs_CUBASINF_P.Tables("RESULT").Select("cbi_cusno >= '50000'")


            If Not dr Is Nothing Then
                If dr.Length > 0 Then
                    For index As Integer = 0 To dr.Length - 1
                        cboCus1No.Items.Add(dr(index)("cbi_cusno") + " - " + dr(index)("cbi_cussna"))
                    Next index
                End If
            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If

        cboCtrSiz.Items.Clear()
        cboCtrSiz.Items.Add("20'")
        cboCtrSiz.Items.Add("40'(SD)")
        cboCtrSiz.Items.Add("40'(HQ)")
        cboCtrSiz.Items.Add("40'HQ(Reefer Dry)")
        cboCtrSiz.Items.Add("45'")
        cboCtrSiz.Items.Add("53'")
        '        cboCtrSiz.Items.Add("CFS")





    End Sub
    Private Sub mmdAdd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdAdd.Click
        If checkFocus(Me) Then Exit Sub

        Dim S As String
        Dim i As Integer


        '        Call setStatus("ADD")
        txtShpNo.Text = ""
        txtShpNo.Enabled = False
        '        If cboCus1No.Items.Count > 0 Then cboCus1No_Click()
        '        If cboCus1No.Enabled And cboCus1No.Visible Then cboCus1No.Focus()

        txtRvsDat.Text = Format(Date.Today, "MM/dd/yyyy").ToString
        txtIssDat.Text = Format(Date.Today, "MM/dd/yyyy").ToString

        txtSlnOnb.Text = ""

        txtLcStmt.Text = "      " & Chr(34) & "DRAWN UNDER HK + SHANGHAI BANKING CORPORATION LTD. LETTER OF CREDIT NUMBER" & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & "       DC HKH914936 DATED 22 JUN,2010." & Chr(34) & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & "       WE HEREBY CERTIFY THAT:" & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & " (A). THAT PRODUCT(S) FROM SUPPLIERS/FACTORIES WERE NOT MINED," & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & "        PRODUCED, MANUFACTURED, ASSEMBLED OR PACKAGED BY THE USE" & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & "        OF EITHER FORCED LABOR, PRISON LABOR, OR CHILD LABOR" & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & "        AS DEFINED BY U.S.A. LAWS OR AS DEFINED BY THE RESPECTIVE" & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & "        LAWS OF THAT COUNTRY" & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & " (B). THAT PRODUCT(S) FROM SUPPLIERS/FACTORIES DO NOT INVOLVE" & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & "        TRANSHIPMENTS OF MERCHANDISE FOR THE PURPOSE OF MISLABELING," & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & "        EVADING QUOTA, OR COUNTRY OF ORIGIN RESTRICTIONS OR AVOIDING" & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & "        COMPLIANCE WITH FORCED LABOR, PRISON LABOR OR CHILD LABOR LAWS." & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & " (C). THIS SHIPMENT CONTAINS NO REGULATED WOOD PACKAGING MATERIALS." & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & vbNewLine
        txtLcStmt.Text = txtLcStmt.Text & " (D). MERCHANDISE OF EACH PURCHASE ORDER IS SHIPPED COMPLETE." & vbNewLine



        Add_flag = True

        Call cmdAddClick()

        '        Call formInit(cModeAdd)
        weight1.Checked = True
        weight1.Checked = True

        Dim rs As New DataSet

        gspStr = "sp_select_CUBASINF_PRI '" & cboCoCde.Text & "','" & LCase(gsUsrID) & "','" & "SC" & "'"

        Me.Cursor = Windows.Forms.Cursors.WaitCursor
        rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)

        Me.Cursor = Windows.Forms.Cursors.Default

        If rtnLong <> RC_SUCCESS Then  '*** An error has occured
            MsgBox("Error on loading SCM00001 #046 sp_select_CUBASINF_PRI : " & rtnStr)
            Exit Sub
        Else
            rs_CUBASINF_P = rs.Copy()
        End If

        If rs_CUBASINF_P.Tables("RESULT").Rows.Count > 0 Then
            cboCus1No.Items.Clear()
            cboCus1No.Text = ""


            dr = rs_CUBASINF_P.Tables("RESULT").Select("cbi_cusno >= '50000'")


            If Not dr Is Nothing Then
                If dr.Length > 0 Then
                    For index As Integer = 0 To dr.Length - 1
                        cboCus1No.Items.Add(dr(index)("cbi_cusno") + " - " + dr(index)("cbi_cussna"))
                    Next index
                End If
            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If

        Recordstatus = True
        cboCus1No.Focus()


    End Sub

  

    Private Sub GroupBox7_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GroupBox7.Enter

    End Sub

    Private Sub txtCover_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 

        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtCover.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtCover.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cover") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cover") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub Label81_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub mmdSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdSave.Click

        '''save like Shipping  
        ''' test


        ''If btcSHM00001.SelectedIndex <> 1 Then
        ''    MsgBox("Please save item in Details Page (2)!")
        ''    Exit Sub
        ''End If

       If checkFocus(Me) Then Exit Sub

        Cursor = Cursors.WaitCursor
        Call cmdSaveClick()
        Cursor = Cursors.Default
        txtShpNo.Focus()


        '''

        '''
    End Sub


    Private Sub cmdSaveClick()
        Cursor = Cursors.WaitCursor

        Dim tmpshpno As String
        Dim tmpcocde As String

        'If sMode <> cModeAdd Then
        '    tmpshpno = txtShpNo.Text
        '    tmpcocde = cboCoCde.Text
        'End If


        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Cursor = Cursors.Default
            Exit Sub
        End If

        If check_ShippingHeader() = False Then
            Cursor = Cursors.Default
            Exit Sub
        End If



        If Not InputIsValid() Then
            '            save_ok = False
            '           bolCheckDetail = True      'Lester Wu 2004/09/15 set check detail to false
            Cursor = Cursors.Default
            Exit Sub
        End If

        If check_ShippingDetail() = False Then
            Cursor = Cursors.Default
            Exit Sub
        End If

        'If check_ShippingDetail2() = False Then
        '    Cursor = Cursors.Default
        '    Exit Sub
        'End If

        If check_SHDISPRM(rs_SHDISPRM_P) = False Then
            Cursor = Cursors.Default
            Exit Sub
        End If
        If check_SHDISPRM(rs_SHDISPRM_D) = False Then
            Cursor = Cursors.Default
            Exit Sub
        End If

        If check_SHSHPMRK() = False Then
            Cursor = Cursors.Default
            Exit Sub
        End If

        If check_SHINVHDR() = False Then
            Cursor = Cursors.Default
            Exit Sub
        End If

        If check_ShippingDetail_COV() = False Then
            Cursor = Cursors.Default
            Exit Sub
        End If



        If sMode = cModeAdd Then

            If txtShpNo.Text.Trim <> "" Then
                Call setStatus(cModeClear)
                Call setStatus(cModeInit)
                Call setStatus(cModeClear)
                Call setStatus(cModeInit)
                MsgBox("Error on loading cmdSaveClick :" & rtnStr)
            End If

            gsCompany = Trim(cboCoCde.Text)
            Call Update_gs_Value(gsCompany)

            gspStr = "sp_select_DOC_GEN '" & cboCoCde.Text & "','SH','" & gsUsrID & "'"
            rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading cmdSaveClick sp_select_DOC_GEN :" & rtnStr)
                Cursor = Cursors.Default
                Exit Sub
            End If

            shpno = rs.Tables("RESULT").Rows(0)(0).ToString
            txtShpNo.Text = shpno
            'update all transaction with Shipping Number
        End If



        If Recordstatus = False Then
            MsgBox("No update for the Shipping, Shipping not saved!")
            '        Cursor = Cursors.Default  
            Exit Sub
        End If

        '20140710
        'temp


        'Call check_Status()
        Call fill_SHIPGHDR()

        'If delete_All() = True Then
        '    MsgBox("Cannot delete all details line records.")
        '            Cursor = Cursors.Default  
        ' Exit Sub
        'End If


        ' rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_shpno") = shpno

        'Dim i As Integer
        'For i = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
        '    rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpno") = shpno
        '    'rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpno") = shpno
        'Next i
        Call cal_header_sum()
        If save_ShippingHeader() = False Then
            MsgBox("Error on saving Shipping")
            Cursor = Cursors.Default
            Exit Sub
        End If


        If save_SHSMPINV() = False Then
            MsgBox("Error on saving Shipping")
            Cursor = Cursors.Default
            Exit Sub
        End If

        Call fill_SHIPGDTL()
        cal_all_inv_sum()
        ''''''''''''''''

        For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno")) Then
                rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno") = Trim(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno"))
            End If
        Next
        '20151105

        If save_SHINVHDR() = False Then
            MsgBox("Error on saving Shipping")
            Cursor = Cursors.Default
            Cursor = Cursors.Default
            Exit Sub
        End If


        If save_ShippingDetail() = False Then
            MsgBox("Error on saving Shipping Detail")
            Cursor = Cursors.Default
            Exit Sub
        End If

        If save_SHCPTBKD() = False Then
            MsgBox("Error on saving Material/Component Shipping Detail")
            Cursor = Cursors.Default
            Cursor = Cursors.Default
            Exit Sub
        End If

        If save_SHASSINF() = False Then
            MsgBox("Error on saving SHASSINF Shipping Detail")
            Cursor = Cursors.Default
            Exit Sub
        End If



        If save_ShippingDetail_Cov() = False Then
            MsgBox("Error on saving COV Shipping Detail")
            Cursor = Cursors.Default
            Exit Sub
        End If



        If save_SHDISPRM_rvdat(rs_SHDISPRM_P) = False Then
            MsgBox("Error on saving Shipping")
            Cursor = Cursors.Default
            Cursor = Cursors.Default
            Exit Sub
        End If

        If save_SHDISPRM_rvdat(rs_SHDISPRM_D) = False Then
            MsgBox("Error on saving Shipping")
            Cursor = Cursors.Default
            Exit Sub
        End If

        Call cal_pre_dis()
        '20150828

        cal_all_inv_sum()
        ''''''''''''''''
        '20150619

        If save_SHINVHDR_2() = False Then
            MsgBox("Error on saving Shipping")
            Cursor = Cursors.Default
            Exit Sub
        End If

        If save_SHSHPMRK() = False Then
            MsgBox("Error on saving Shipping")
            Cursor = Cursors.Default
            Exit Sub
        End If


        If save_SHDISPRM(rs_SHDISPRM_P) = False Then
            MsgBox("Error on saving Shipping")
            Cursor = Cursors.Default
            Cursor = Cursors.Default
            Exit Sub
        End If

        If save_SHDISPRM(rs_SHDISPRM_D) = False Then
            MsgBox("Error on saving Shipping")
            Cursor = Cursors.Default
            Exit Sub
        End If

        If check_SHDISPRM_SCDISPRM() = False Then
            MsgBox("Warning: SC with Discount/Premiums Information, but Invoice without Discount/Premiums information.")
        End If

        ''Call check_Status()
        'Call fill_SHINVHDR()
        ''rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_shpno") = shpno

        'If save_ShinvHeader() = False Then
        '    MsgBox("Error on saving Shipping Header")
        '            Cursor = Cursors.Default  
        ' Exit Sub
        'End If

        'If sMode = cModeAdd Then
        '    tmpcocde = cboCoCde.Text
        '    tmpshpno = shpno
        'End If


        If flag_need_delete_container = True Then
            flag_need_delete_container = False

            Dim ctncfs_a = Split(delete_container_number, ";")

            For i As Integer = 0 To UBound(ctncfs_a) - 1
                Call delete_container(ctncfs_a(i))
            Next




        End If

        MsgBox("Shipping Saved : " & txtShpNo.Text)

        Call setStatus(cModeClear)
        Call setStatus(cModeInit)
        Call setStatus(cModeClear)
        Call setStatus(cModeInit)

        btcSHM00001.SelectedIndex = 0


        Cursor = Cursors.Default

    End Sub

    Private Function check_ShippingHeader() As Boolean
        check_ShippingHeader = False

        '    '''20140211
        '    Call set_qutsts()

        '    Dim i As Integer
        '    Dim Y As Integer
        '    Dim inCombo As Boolean

        '    '*** Primary Customer
        '    If cboCus1No.Text <> "" And cboCus1No.Enabled = True And cboCus1No.Items.Count > 0 Then
        '        inCombo = False
        '        i = cboCus1No.Items.Count
        '        For Y = 0 To i - 1
        '            If Trim(cboCus1No.Text) = Trim(cboCus1No.Items(Y)) Then
        '                inCombo = True
        '            End If
        '        Next

        '        If inCombo = False Then
        '            'If no_need_check_btcindex = False Then
        '            MsgBox("Primary Customer - Data is Invalid, please select in Drop Down List.")
        '            'End If
        '            ''btcSHM00001.SelectedIndex = 0
        '            'no_need_check_btcindex = True
        '            cboCus1No.Enabled = True
        '            If cboCus1No.Enabled And cboCus1No.Visible Then cboCus1No.Focus()
        '            Exit Function
        '        End If
        '    End If

        '    '*** Contact Person - Primary Customer
        '    If cboCus1Cp.Text <> "" And cboCus1Cp.Enabled = True And cboCus1Cp.Items.Count > 0 Then
        '        inCombo = False
        '        i = cboCus1Cp.Items.Count
        '        For Y = 0 To i - 1
        '            If Trim(cboCus1Cp.Text) = Trim(cboCus1Cp.Items(Y)) Then
        '                inCombo = True
        '            End If
        '        Next

        '        If inCombo = False Then
        '            MsgBox("Contact Person of Primary Customer - Data is Invalid, please select in Drop Down List.")
        '            ''btcSHM00001.SelectedIndex = 0
        '            cboCus1Cp.Enabled = True
        '            If cboCus1Cp.Enabled And cboCus1Cp.Visible Then cboCus1Cp.Focus()
        '            Exit Function
        '        End If
        '    End If

        '    '*** Secondary Customer
        '    If cboCus2No.Text <> "" And cboCus2No.Enabled = True And cboCus2No.Items.Count > 0 Then
        '        inCombo = False
        '        i = cboCus2No.Items.Count
        '        For Y = 0 To i - 1
        '            If Trim(cboCus2No.Text) = Trim(cboCus2No.Items(Y)) Then
        '                inCombo = True
        '            End If
        '        Next

        '        If inCombo = False Then
        '            MsgBox("Secondary Customer - Data is Invalid, please select in Drop Down List.")
        '            ''btcSHM00001.SelectedIndex = 0
        '            'no_need_check_btcindex = True
        '            cboCus2No.Enabled = True
        '            If cboCus2No.Enabled And cboCus2No.Visible Then cboCus2No.Focus()
        '            Exit Function
        '        End If
        '    End If

        '    '*** Contact Person - Secondary Customer
        '    If cboCus2Cp.Text <> "" And cboCus2Cp.Enabled = True And cboCus2Cp.Items.Count > 0 Then
        '        inCombo = False
        '        i = cboCus2Cp.Items.Count
        '        For Y = 0 To i - 1
        '            If Trim(cboCus2Cp.Text) = Trim(Replace(cboCus2Cp.Items(Y), vbCrLf, "")) Then
        '                '                If Trim(cboCus2Cp.Text) = Trim(cboCus2Cp.Items(Y)) Then
        '                inCombo = True
        '            End If
        '        Next

        '        If inCombo = False Then
        '            MsgBox("Contact Person of Secondary Customer - Data is Invalid, please select in Drop Down List.")
        '            ''btcSHM00001.SelectedIndex = 0
        '            'no_need_check_btcindex = True
        '            cboCus2Cp.Enabled = True
        '            If cboCus2Cp.Enabled And cboCus2Cp.Visible Then cboCus2Cp.Focus()
        '            Exit Function
        '        End If
        '    End If

        '    '*** Agent
        '    If cboCusAgt.Text <> "" And cboCusAgt.Enabled = True And cboCusAgt.Items.Count > 0 Then
        '        inCombo = False
        '        i = cboCusAgt.Items.Count
        '        For Y = 0 To i - 1
        '            If Trim(cboCusAgt.Text) = Trim(cboCusAgt.Items(Y)) Then
        '                inCombo = True
        '            End If
        '        Next

        '        If inCombo = False Then
        '            MsgBox("Agent - Data is Invalid, please select in Drop Down List.")
        '            ''btcSHM00001.SelectedIndex = 0
        '            'no_need_check_btcindex = True
        '            cboCusAgt.Enabled = True
        '            If cboCusAgt.Enabled And cboCusAgt.Visible Then cboCusAgt.Focus()
        '            Exit Function
        '        End If
        '    End If

        '    '*** Phase 2
        '    '*** Sales Division (Team)
        '    If cboSalDiv.Text <> "" And cboSalDiv.Enabled = True And cboSalDiv.Items.Count > 0 Then
        '        inCombo = False
        '        i = cboSalDiv.Items.Count
        '        For Y = 0 To i - 1
        '            If Trim(cboSalDiv.Text) = Trim(cboSalDiv.Items(Y)) Then
        '                inCombo = True
        '            End If
        '        Next

        '        If inCombo = False Then
        '            MsgBox("Sales Division (Team) - Data is Invalid, please select in Drop Down List.")
        '            ''btcSHM00001.SelectedIndex = 0
        '            'no_need_check_btcindex = True
        '            cboSalDiv.Enabled = True
        '            If cboSalDiv.Enabled And cboSalDiv.Visible Then cboSalDiv.Focus()
        '            Exit Function
        '        End If
        '    End If

        '    '*** Sales Rep
        '    If cboSalRep.Text = "" Then
        '        If Trim(cboCus1No.Text) <> "" Then

        '            MsgBox("Sales Rep - Data is Invalid, please select in Drop Down List.")
        '            cboSalRep.Enabled = True
        '        End If
        '        '   MsgBox("Sales Rep - Data is Invalid, please select in Drop Down List.")
        '        ''btcSHM00001.SelectedIndex = 0
        '        'no_need_check_btcindex = True
        '        'cboSalRep.Enabled = True
        '        If cboSalRep.Enabled And cboSalRep.Visible Then cboSalRep.Focus()
        '        Exit Function
        '    ElseIf cboSalRep.Text <> "" And cboSalRep.Enabled = True And cboSalRep.Items.Count > 0 Then
        '        inCombo = False
        '        i = cboSalRep.Items.Count
        '        For Y = 0 To i - 1
        '            If Trim(cboSalRep.Text) = Trim(cboSalRep.Items(Y)) Then
        '                inCombo = True
        '            End If
        '        Next

        '        If inCombo = False Then
        '            MsgBox("Sales Rep - Data is Invalid, please select in Drop Down List.")
        '            ''btcSHM00001.SelectedIndex = 0
        '            'no_need_check_btcindex = True
        '            cboSalRep.Enabled = True
        '            If cboSalRep.Enabled And cboSalRep.Visible Then cboSalRep.Focus()
        '            Exit Function
        '        End If
        '    End If


        '    '*** Phase 2
        '    If cboYear.Text = "" And cboYear.Enabled = True Then
        '        '''btcSHM00001.SelectedIndex = 0
        '        'no_need_check_btcindex = True

        '        MsgBox("Shipping Title - Year, must be assigned.")

        '        cboYear.Enabled = True

        '        If cboYear.Enabled And cboYear.Visible Then cboYear.Focus()
        '        Exit Function
        '    End If

        '    '*** Phase 2
        '    If cboSeason.Text = "" And cboSeason.Enabled = True Then
        '        ''btcSHM00001.SelectedIndex = 0
        '        'no_need_check_btcindex = True
        '        MsgBox("Shipping Title - Season, must be assigned.")
        '        cboSeason.Enabled = True
        '        If cboSeason.Enabled And cboSeason.Visible Then cboSeason.Focus()
        '        Exit Function
        '    End If

        '    '*** Phase 2
        '    If txtDesc.Text = "" And txtDesc.Enabled = True Then
        '        ''btcSHM00001.SelectedIndex = 0
        '        MsgBox("Shipping Title - Project, must be entered.")
        '        txtDesc.Enabled = True
        '        If txtDesc.Enabled And txtDesc.Visible Then txtDesc.Focus()
        '        Exit Function
        '    End If

        '    If cboSmpPrd.Text = "" And cboSmpPrd.Enabled = True Then
        '        ''btcSHM00001.SelectedIndex = 0
        '        'no_need_check_btcindex = True

        '        MsgBox("Sample Product Term must be assigned, please update Customer Master first.")
        '        cboSmpPrd.Enabled = True
        '        If cboSmpPrd.Enabled And cboSmpPrd.Visible Then cboSmpPrd.Focus()
        '        Exit Function
        '    End If

        '    If cboSmpFgt.Text = "" And cboSmpFgt.Enabled = True Then
        '        ''btcSHM00001.SelectedIndex = 0
        '        'no_need_check_btcindex = True

        '        MsgBox("Sample Freight Term must be assigned, please update Customer Master first.")
        '        cboSmpFgt.Enabled = True
        '        If cboSmpFgt.Enabled And cboSmpFgt.Visible Then cboSmpFgt.Focus()
        '        Exit Function
        '    End If

        check_ShippingHeader = True
    End Function




    'Public Sub fill_SHIPGDTL()
    '    Dim onetim As String
    '    Dim image As String
    '    Dim gmmu As String

    ''*** Check Combo in list or not ?
    'If not_in_Combo_HDR() = True Then
    '    Exit Sub
    'End If

    'If Not rs_SHIPGDTL.Tables("RESULT").Rows.Count > 0 Then
    '    Exit Sub
    'End If

    ''*** Check Item Exist ?
    ''*** Phase 2
    'If txtItmNoVen.Text = "" Then
    '    If txtItmNo.Text <> "" And (txtItmNoReal.Enabled = True Or txtItmNoTmp.Enabled = True) Then
    '        If not_exist_ITEM() = True Then
    '            MsgBox("Item cannot be quoted because :" + Chr(13) + Chr(10) + _
    '            " - Item not found" + Chr(13) + Chr(10) + _
    '            " - It is a BOM Item" + Chr(13) + Chr(10) + _
    '            " - It is a Discontinued / Inactive / Old Item / To be confirmed Item" + Chr(13) + Chr(10) + _
    '            " - It is held by the system" + Chr(13) + Chr(10) + _
    '            " - Vendor is not available", vbExclamation, "Warning fq")
    '            Exit Sub
    '        End If
    '    End If
    'End If

    ''*** Check Shipping Item Status
    'If txtItmNo.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq ") = IIf(IsNumeric(txtSeq.Text), txtSeq.Text, 0)

    '    If cboItmSts.Text.Trim <> "" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmsts") = Microsoft.VisualBasic.Left(cboItmSts.Text.Trim, InStr(cboItmSts.Text.Trim, " - ") - 1)
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmsts") = ""
    '    End If


    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_qutitmsts") = txtQutItmSts.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dept") = txtDept.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftytmpitm") = IIf(chkFtyTmpItm.Checked = True, "Y", "")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftytmpitmno") = IIf(Trim(txtFtyTmpItmNo.Text.Trim) = "", "", Trim(txtFtyTmpItmNo.Text.Trim))

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = IIf(chkDelete.Checked = True, "Y", "N")

    '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("upditmdtl").ToString() = "" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("upditmdtl") = "N"
    '    End If
    '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("updmoqmoa").ToString() = "" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("updmoqmoa") = "N"
    '    End If
    '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("updassbom").ToString() = "" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("updassbom") = "N"
    '    End If
    '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("converttopc").ToString() = "" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("converttopc") = "N"
    '    End If

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno") = txtItmNo.Text

    '    '*** Phase 2
    '    If txtItmNoReal.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnotyp") = "R"
    '    ElseIf txtItmNoTmp.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnotyp") = "T"
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnotyp") = "V"
    '    End If

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnoreal") = txtItmNoReal.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnotmp") = txtItmNoTmp.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnoven") = txtItmNoVen.Text.Trim

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnovenno") = cboItmNoVen.Text.Trim()
    '    ''' reverse -
    '    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmnovenno")) Then
    '        If InStr(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmnovenno"), " - ") > 1 Then
    '            If Val(Split(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmnovenno"), " - ")(0)) > 1000 And _
    '             Val(Split(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmnovenno"), " - ")(0)) < 9999 _
    '            Then
    '                display_combo_ven(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnovenno").ToString, cboItmNoVen)
    '            Else
    '                display_combo(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnovenno").ToString, cboItmNoVen)
    '            End If
    '        Else
    '            display_combo(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnovenno").ToString, cboItmNoVen)
    '        End If
    '    End If


    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmnovenno") = cboItmNoVen.Text.Trim()

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmdsc") = Trim(txtItmDsc.Text)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusstyno") = cboCusals.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusitm") = txtCusItm.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alsitmno") = txtAlias.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_upc") = Trim(txtUPC.Text)

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_imrmk") = IIf(Trim(txtIMRmk.Text) = "", "", Trim(txtIMRmk.Text))
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_note") = txtNote.Text

    '    If txtItmNoVen.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colcde") = txtColCde.Text.Trim
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colcde") = cboColCde.Text.Trim
    '    End If
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_coldsc") = Trim(txtColDsc.Text)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alscolcde") = txtAlscolcde.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuscol") = txtCusCol.Text.Trim

    '    '*** Phase 2
    '    If txtItmNoVen.Text = "" Then
    '        If cboPcking.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = cboUM.Text.Trim
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrqty") = IIf(txtInrQty.Text.Trim = "", 0, txtInrQty.Text.Trim)
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrqty") = IIf(txtMtrQty.Text.Trim = "", 0, txtMtrQty.Text.Trim)
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cft") = IIf(txtCft.Text.Trim = "", 0, Format(CDec(IIf(txtCft.Text.Trim = "", 0, txtCft.Text.Trim)), "######0.####"))
    '        Else
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = ""
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrqty") = 0
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrqty") = 0
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cft") = 0
    '        End If
    '    Else
    '        If cboUM.Text <> "" And _
    '            cboFtyPrcTrm.Text <> "" And cboDtlPrcTrm.Text <> "" And cboTranTrm.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = cboUM.Text.Trim
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrqty") = IIf(txtInrQty.Text.Trim = "", 0, txtInrQty.Text.Trim)
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrqty") = IIf(txtMtrQty.Text.Trim = "", 0, txtMtrQty.Text.Trim)
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cft") = IIf(txtCft.Text.Trim = "", 0, Format(CDec(IIf(txtCft.Text.Trim = "", 0, txtCft.Text.Trim)), "######0.####"))
    '        Else
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = ""
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrqty") = 0
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrqty") = 0
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cft") = 0
    '        End If
    '    End If
    '    If txtUMFtr.Text.Trim = "" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_conftr") = 1
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_conftr") = CInt(IIf(txtUMFtr.Text.Trim = "", 1, txtUMFtr.Text.Trim))
    '    End If
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cbm") = IIf(Trim(txtCBM.Text) = "", 0, Trim(txtCBM.Text))
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = cboDtlPrcTrm.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprctrm") = cboFtyPrcTrm.Text.Trim '*** factory price term
    '    '*** Phase 2
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_trantrm") = cboTranTrm.Text.Trim

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrdin") = Format(CDec(IIf(txtInrdin.Text.Trim = "", 0, txtInrdin.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrwin") = Format(CDec(IIf(txtInrwin.Text.Trim = "", 0, txtInrwin.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrhin") = Format(CDec(IIf(txtInrhin.Text.Trim = "", 0, txtInrhin.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdin") = Format(CDec(IIf(txtMtrdin.Text.Trim = "", 0, txtMtrdin.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwin") = Format(CDec(IIf(txtMtrwin.Text.Trim = "", 0, txtMtrwin.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhin") = Format(CDec(IIf(txtMtrhin.Text.Trim = "", 0, txtMtrhin.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrdcm") = Format(CDec(IIf(txtInrdcm.Text.Trim = "", 0, txtInrdcm.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrwcm") = Format(CDec(IIf(txtInrwcm.Text.Trim = "", 0, txtInrwcm.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrhcm") = Format(CDec(IIf(txtInrhcm.Text.Trim = "", 0, txtInrhcm.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdcm") = Format(CDec(IIf(txtMtrdcm.Text.Trim = "", 0, txtMtrdcm.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwcm") = Format(CDec(IIf(txtMtrwcm.Text.Trim = "", 0, txtMtrwcm.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhcm") = Format(CDec(IIf(txtMtrhcm.Text.Trim = "", 0, txtMtrhcm.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("inner_in") = Format(CDec(IIf(txtInrdin.Text.Trim = "", 0, txtInrdin.Text.Trim)), "######0.####") + "x" + _
    '                                    Format(CDec(IIf(txtInrwin.Text.Trim = "", 0, txtInrwin.Text.Trim)), "######0.####") + "x" + _
    '                                    Format(CDec(IIf(txtInrhin.Text.Trim = "", 0, txtInrhin.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("master_in") = Format(CDec(IIf(txtMtrdin.Text.Trim = "", 0, txtMtrdin.Text.Trim)), "######0.####") + "x" + _
    '                                     Format(CDec(IIf(txtMtrwin.Text.Trim = "", 0, txtMtrwin.Text.Trim)), "######0.####") + "x" + _
    '                                     Format(CDec(IIf(txtMtrhin.Text.Trim = "", 0, txtMtrhin.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("inner_cm") = Format(CDec(IIf(txtInrdcm.Text.Trim = "", 0, txtInrdcm.Text.Trim)), "######0.####") + "x" + _
    '                                    Format(CDec(IIf(txtInrwcm.Text.Trim = "", 0, txtInrwcm.Text.Trim)), "######0.####") + "x" + _
    '                                    Format(CDec(IIf(txtInrhcm.Text.Trim = "", 0, txtInrhcm.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("master_cm") = Format(CDec(IIf(txtMtrdcm.Text.Trim = "", 0, txtMtrdcm.Text.Trim)), "######0.####") + "x" + _
    '                                     Format(CDec(IIf(txtMtrwcm.Text.Trim = "", 0, txtMtrwcm.Text.Trim)), "######0.####") + "x" + _
    '                                     Format(CDec(IIf(txtMtrhcm.Text.Trim = "", 0, txtMtrhcm.Text.Trim)), "######0.####")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_grswgt") = Format(CDec(IIf(txtGrsWgt.Text.Trim = "", 0, txtGrsWgt.Text.Trim)), "##0.###")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_netwgt") = Format(CDec(IIf(txtNetWgt.Text.Trim = "", 0, txtNetWgt.Text.Trim)), "##0.###")

    '    If Trim(txtPeriod.Text) <> "" Then

    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_qutdat") = txtPeriod.Text.Trim + "-01"
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_qutdat") = "1900-01-01"
    '    End If

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckitr") = txtPckItr.Text.Trim

    '    If txtCosMth.Text.Trim = "-" Or txtCosMth.Text.Trim = "" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cosmth") = ""
    '    Else
    '        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cosmth") = Microsoft.VisualBasic.Left(txtCosMth.Text.Trim, InStr(txtCosMth.Text.Trim, " - ") - 1)
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cosmth") = txtCosMth.Text
    '    End If
    '    If txtCosMth.Text = " - " Then txtCosMth.Text = ""

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_stkqty") = IIf(txtStkQty.Text.Trim = "", 0, txtStkQty.Text.Trim)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusqty") = IIf(txtCusQty.Text.Trim = "", 0, txtCusQty.Text.Trim)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_smpqty") = IIf(txtSmpQty.Text.Trim = "", 0, txtSmpQty.Text.Trim)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_smpunt") = txtSmpUnt.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_smpprc") = IIf(txtSmpPrc.Text.Trim = "", 0, Format(CDec(IIf(txtSmpPrc.Text.Trim = "", 0, txtSmpPrc.Text.Trim)), "########0.0000"))

    '    '*** Update Record Set Value of Original MOQ/MOA
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_moflag") = IIf(optMOA.Checked = True, "A", IIf(optMOQ.Checked = True, "Q", ""))
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_orgmoq") = IIf(ORI_MOQ = "", 0, ORI_MOQ)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_orgmoa") = IIf(ORI_MOA = "", 0, Format(CDec(IIf(ORI_MOA = "", 0, ORI_MOA)), "######0"))
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_moq") = IIf(txtMoq.Text.Trim = "", 0, txtMoq.Text.Trim)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_moqunttyp") = Trim(Replace(lblCurrMOQ.Text.Trim, "=", ""))
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_moa") = IIf(txtMoa.Text.Trim = "", 0, Format(CDec(IIf(txtMoa.Text.Trim = "", 0, txtMoa.Text.Trim)), "######0"))
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_curcde") = txtCurCde1.Text.Trim

    '    If cboCus2No.Text.Trim <> "" Then
    '        If optGM.Checked = True Then
    '            gmmu = "GM"
    '        Else
    '            gmmu = "MU"
    '        End If
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prcsec") = gmmu
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_grsmgn") = IIf(txtGrsMgn.Text.Trim = "", 0, Format(CDec(IIf(txtGrsMgn.Text.Trim = "", 0, txtGrsMgn.Text.Trim)), "##0.###"))
    '    End If

    '    If optOneTimY.Checked = True Then
    '        onetim = "Y"
    '    Else
    '        onetim = "N"
    '    End If
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_onetim") = onetim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_discnt") = IIf(txtDiscnt.Text.Trim = "", 0, Format(CDec(IIf(txtDiscnt.Text.Trim = "", 0, txtDiscnt.Text.Trim)), "##0.###"))

    '    '*** Phase 2
    '    If txtBasPrc.Text.Trim <> "" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_basprc") = txtBasPrc.Text.Trim
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_basprc") = "0"
    '    End If

    '    '*** Update CIH value to record set
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("CIHCURR") = txtCIHcur.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("CIHAMT") = txtCIHprc.Text.Trim

    '    '*** Phase 2
    '    If txtItmNoVen.Text = "" Then
    '        If cboPcking.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1sp") = IIf(txtCus1Sp.Text.Trim = "", 0, Format(CDec(IIf(txtCus1Sp.Text.Trim = "", 0, txtCus1Sp.Text.Trim)), "########0.0000"))
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2sp") = IIf(txtCus2Sp.Text.Trim = "", 0, Format(CDec(IIf(txtCus2Sp.Text.Trim = "", 0, txtCus2Sp.Text.Trim)), "########0.0000"))

    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1dp") = IIf(txtCus1Dp.Text.Trim = "", 0, Format(CDec(IIf(txtCus1Dp.Text.Trim = "", 0, txtCus1Dp.Text.Trim)), "########0.0000"))
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2dp") = IIf(txtCus2Dp.Text.Trim = "", 0, Format(CDec(IIf(txtCus2Dp.Text.Trim = "", 0, txtCus2Dp.Text.Trim)), "########0.0000"))
    '        Else
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1sp") = 0
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2sp") = 0

    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1dp") = 0
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2dp") = 0
    '        End If
    '    Else
    '        If cboUM.Text <> "" And _
    '            cboFtyPrcTrm.Text <> "" And cboDtlPrcTrm.Text <> "" And cboTranTrm.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1sp") = IIf(txtCus1Sp.Text.Trim = "", 0, Format(CDec(IIf(txtCus1Sp.Text.Trim = "", 0, txtCus1Sp.Text.Trim)), "########0.0000"))
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2sp") = IIf(txtCus2Sp.Text.Trim = "", 0, Format(CDec(IIf(txtCus2Sp.Text.Trim = "", 0, txtCus2Sp.Text.Trim)), "########0.0000"))

    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1dp") = IIf(txtCus1Dp.Text.Trim = "", 0, Format(CDec(IIf(txtCus1Dp.Text.Trim = "", 0, txtCus1Dp.Text.Trim)), "########0.0000"))
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2dp") = IIf(txtCus2Dp.Text.Trim = "", 0, Format(CDec(IIf(txtCus2Dp.Text.Trim = "", 0, txtCus2Dp.Text.Trim)), "########0.0000"))
    '        Else
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1sp") = 0
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2sp") = 0

    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1dp") = 0
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2dp") = 0
    '        End If
    '    End If

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pcprc") = txtPCPrc_Text_round_5
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc") = IIf(chkPC.Checked = True, "Y", "")

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_venno") = cboVenNo.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_subcde") = txtSubCde.Text.Trim
    '    '*** fill custom vendor & sub code

    '    If Not (cboCusVen.Text.Trim = "" And _
    '                            cboDV.Text.Trim = "" And _
    '                            cboTV.Text.Trim = "" And _
    '                            cboFA.Text.Trim = "") Then

    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusven") = cboCusVen.Text.Trim
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_DV") = cboDV.Text.Trim
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_TV") = cboTV.Text.Trim
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyaud") = cboFA.Text.Trim

    '    End If

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cussub") = txtCusSub.Text.Trim

    '    '*** Phase 2
    '    If txtItmNoVen.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fcurcde") = txtFCurCde.Text.Trim
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprc") = IIf(txtFtyPrc.Text.Trim = "", 0, Format(CDec(IIf(txtFtyPrc.Text.Trim = "", 0, txtFtyPrc.Text.Trim)), "########0.0000"))
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftycst") = IIf(txtFtyCst.Text.Trim = "", 0, Format(CDec(IIf(txtFtyCst.Text.Trim = "", 0, txtFtyCst.Text.Trim)), "########0.0000"))

    '        'If cboUM.Text.Trim = "" Or txtCft.Text.Trim = "0" Or txtCBM.Text.Trim = "0" Or _
    '        '    cboDtlPrcTrm.Text.Trim = "" Or cboFtyPrcTrm.Text.Trim = "" Or cboTranTrm.Text.Trim = "" Then
    '        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fcurcde") = ""
    '        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprc") = 0
    '        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftycst") = 0
    '        'Else
    '        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fcurcde") = txtFCurCde.Text.Trim
    '        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprc") = IIf(txtFtyPrc.Text.Trim = "", 0, Format(CDec(IIf(txtFtyPrc.Text.Trim = "", 0, txtFtyPrc.Text.Trim)), "########0.0000"))
    '        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftycst") = IIf(txtFtyCst.Text.Trim = "", 0, Format(CDec(IIf(txtFtyCst.Text.Trim = "", 0, txtFtyCst.Text.Trim)), "########0.0000"))
    '        'End If
    '    Else
    '        '*** Phase 2
    '        If cboPcking.Text.Trim <> "" And cboPcking.Text.Trim <> " / 0 / 0 / 0 / 0 / / /" Then
    '            'If cboPcking.Text <> "" And cboPcking.Text <> " / 0 / 0" Then
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fcurcde") = txtFCurCde.Text.Trim
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprc") = IIf(txtFtyPrc.Text.Trim = "", 0, Format(CDec(IIf(txtFtyPrc.Text.Trim = "", 0, txtFtyPrc.Text.Trim)), "########0.0000"))
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftycst") = IIf(txtFtyCst.Text.Trim = "", 0, Format(CDec(IIf(txtFtyCst.Text.Trim = "", 0, txtFtyCst.Text.Trim)), "########0.0000"))
    '        Else
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fcurcde") = ""
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprc") = 0
    '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftycst") = 0
    '        End If
    '    End If

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_venitm") = txtVenItm.Text.Trim

    '    If InStr(cboHrmCde.Text, " - ") > 0 Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_hrmcde") = Microsoft.VisualBasic.Left(cboHrmCde.Text.Trim, InStr(cboHrmCde.Text.Trim, " - ") - 1)
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_hrmcde") = cboHrmCde.Text.Trim
    '    End If
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dtyrat") = IIf(txtDtyRat.Text.Trim = "", 0, Format(CDec(IIf(txtDtyRat.Text.Trim = "", 0, txtDtyRat.Text.Trim)), "##0.###"))
    '    '*** Phase 2
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cususdcur") = cboCusUsdCurr.Text.Trim
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuscadcur") = cboCusCadCurr.Text.Trim

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cususd") = IIf(txtCusUsd.Text.Trim = "", 0, Format(CDec(IIf(txtCusUsd.Text.Trim = "", 0, txtCusUsd.Text.Trim)), "########0.0000"))
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuscad") = IIf(txtCusCad.Text.Trim = "", 0, Format(CDec(IIf(txtCusCad.Text.Trim = "", 0, txtCusCad.Text.Trim)), "########0.0000"))


    '    '*** Check Shipping Item Status
    '    '*** Phase 2
    '    'If txtItmNoVen.Text = "" Then
    '    '    If cboPcking.Text <> "" And cboPcking.Text <> " / 0 / 0 / 0 / 0 / / /" And cboColCde.Text <> "" And _
    '    '        Val(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_basprc").ToString) > 0 And _
    '    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_qutitmsts").ToString <> "I - Inactive" Then
    '    '        txtQutItmSts.Text = "A - Active"
    '    '    Else
    '    '        'txtQutItmSts.Text = "INCOMPLETE"
    '    '        txtQutItmSts.Text = "I - Inactive"
    '    '    End If
    '    'Else
    '    '    If cboUM.Text <> "" And _
    '    '        cboFtyPrcTrm.Text <> "" And cboDtlPrcTrm.Text <> "" And cboTranTrm.Text <> "" And txtColCde.Text <> "" And _
    '    '        Val(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_basprc").ToString) > 0 And _
    '    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_qutitmsts").ToString <> "I - Inactive" Then
    '    '        txtQutItmSts.Text = "A - Active"
    '    '    Else
    '    '        txtQutItmSts.Text = "I - Inactive"
    '    '    End If
    '    'End If

    '    txtQutItmSts.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts")
    '    If Split(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts"), " - ")(0) = "W" _
    '            And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_apprve") = "N" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts") = "W - Wait for Approval"
    '        txtQutItmSts.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts")
    '    End If
    '    If Split(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts"), " - ")(0) = "E" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts") = "E - Expiry"
    '        txtQutItmSts.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts")
    '    End If
    '    If Split(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts"), " - ")(0) = "A" _
    '            Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_apprve") = "Y" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts") = "A - Active"
    '        txtQutItmSts.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_qutitmsts")
    '    End If

    '    '''20140127 
    '    If chkApproveDtl.Checked = True Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_apprve") = "Y"
    '    End If



    '    If optImageY.Checked = True Then
    '        image = "Y"
    '    Else
    '        image = "N"
    '    End If
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_image") = image
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_imgpth") = IIf(IsDBNull(pth), "", pth)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_TOShipport") = txtTOShipport.Text

    '    If Not IsDate(txtDTLFtyShpDateStr.Text) Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpstr") = "01/01/1900"
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpstr") = txtDTLFtyShpDateStr.Text
    '    End If
    '    '''special handle 20140122
    '    If txtDTLFtyShpDateStr.Text.Trim = "11/19/00" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpstr") = "01/01/1900"
    '    End If
    '    If txtDTLFtyShpDateStr.Text.Trim = "11/19/2000" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpstr") = "01/01/1900"
    '    End If
    '    If DateDiff("d", rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpstr"), "11/19/2000") = 0 Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpstr") = "01/01/1900"
    '    End If


    '    If Not IsDate(txtDTLFtyShpDateEnd.Text) Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpend") = "01/01/1900"
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpend") = txtDTLFtyShpDateEnd.Text
    '    End If
    '    '''special handle 20140122
    '    If txtDTLFtyShpDateEnd.Text.Trim = "11/19/00" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpend") = "01/01/1900"
    '    End If
    '    If txtDTLFtyShpDateEnd.Text.Trim = "11/19/2000" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpend") = "01/01/1900"
    '    End If
    '    If DateDiff("d", rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpend"), "11/19/2000") = 0 Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyshpend") = "01/01/1900"
    '    End If


    '    If Not IsDate(txtDTLCustShpDateStr.Text) Then

    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpstr") = "01/01/1900"

    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpstr") = txtDTLCustShpDateStr.Text
    '    End If
    '    '''special handle 20140122
    '    If txtDTLCustShpDateStr.Text.Trim = "11/19/00" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpstr") = "01/01/1900"
    '    End If
    '    If txtDTLCustShpDateStr.Text.Trim = "11/19/2000" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpstr") = "01/01/1900"
    '    End If
    '    If DateDiff("d", rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpstr"), "11/19/2000") = 0 Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpstr") = "01/01/1900"
    '    End If


    '    If Not IsDate(txtDTLCustShpDateEnd.Text) Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpend") = "01/01/1900"
    '    Else
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpend") = txtDTLCustShpDateEnd.Text
    '    End If
    '    '''special handle 20140122
    '    If txtDTLCustShpDateEnd.Text.Trim = "11/19/00" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpend") = "01/01/1900"
    '    End If
    '    If txtDTLCustShpDateEnd.Text.Trim = "11/19/2000" Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpend") = "01/01/1900"
    '    End If
    '    If DateDiff("d", rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpend"), "11/19/2000") = 0 Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cushpend") = "01/01/1900"
    '    End If


    '    'Fill QUPRCEMT
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrqty") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrqty")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrqty") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrqty")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cft") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cft")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cbm") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cbm")

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprctrm") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprctrm")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_trantrm") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_trantrm")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fcurcde") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fcurcde")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftycst") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftycst")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprc") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ftyprc")

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mu") = IIf(txtMU.Text = "", 0, txtMU.Text)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pkgper") = IIf(txtPckCstAmt.Text = "", 0, txtPckCstAmt.Text)
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_icmper") = IIf(txtItmCommAmt.Text = "", 0, txtItmCommAmt.Text)

    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1sp") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1sp")
    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1dp") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus1dp")

    '    If (rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("mode").ToString = "NEW" Or _
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("mode").ToString = "UPD") And _
    '        IIf(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckseq").ToString = "", 0, rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckseq")) = 0 Then
    '        '*** Phase 2
    '        If txtItmNoVen.Text = "" Then
    '            If cboPcking.Text <> "" And cboPcking.Text <> " / 0 / 0 / 0 / 0 / / /" Then
    '                'bug
    '                If Not rs_IMPCKINF.Tables("RESULT") Is Nothing Then
    '                    If (rs_IMPCKINF.Tables("RESULT").Rows.Count > 0) Then
    '                        If rs_IMPCKINF.Tables("RESULT").Rows.Count > 0 Then
    '                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckseq") = rs_IMPCKINF.Tables("RESULT").Rows(sReadingIndexP)("ipi_pckseq")

    '                            '******************* Update vendor type and cat to SHIPGDTL **********
    '                            If rs_SHIPPING.Tables("RESULT").Rows.Count > 0 Then
    '                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("vbi_ventyp") = rs_SHIPPING.Tables("RESULT").Rows(0)("vbi_ventyp")
    '                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("ibi_catlvl3") = rs_SHIPPING.Tables("RESULT").Rows(0)("ibi_catlvl3")
    '                            End If
    '                        End If
    '                    End If
    '                End If

    '            Else
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_basprc") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrdin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrwin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrhin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrdcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrwcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrhcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("inner_in") = "0x0x0"
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("master_in") = "0x0x0"
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("inner_cm") = "0x0x0"
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("master_cm") = "0x0x0"
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_grswgt") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_netwgt") = 0
    '            End If
    '        Else
    '            If cboUM.Text <> "" And _
    '                cboFtyPrcTrm.Text <> "" And cboDtlPrcTrm.Text <> "" And cboTranTrm.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckseq") = 1

    '                '******************* Update vendor type and cat to SHIPGDTL **********
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("vbi_ventyp") = "E"
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("ibi_catlvl3") = "Standard"
    '            Else
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_basprc") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrdin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrwin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrhin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhin") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrdcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrwcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrhcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhcm") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("inner_in") = "0x0x0"
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("master_in") = "0x0x0"
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("inner_cm") = "0x0x0"
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("master_cm") = "0x0x0"
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_grswgt") = 0
    '                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_netwgt") = 0
    '            End If
    '        End If
    '    ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("mode").ToString = "UPD" And _
    '        IIf(Not IsNumeric(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckseq").ToString), 0, rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckseq")) = 0 Then
    '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckseq") = rs_IMPCKINF.Tables("RESULT").Rows(sReadingIndexP)("ipi_pckseq")
    '    End If

    'End If




    'End Sub

    Private Function save_ShippingHeader() As Boolean
        save_ShippingHeader = False

        Dim hih_cocde As String
        Dim hih_shpno As String
        Dim hih_issdat As String
        Dim hih_rvsdat As String
        Dim hih_cus1no As String
        Dim hih_cus2no As String
        Dim hih_smpshp As String
        Dim hih_shpsts As String
        Dim hih_ves As String
        Dim hih_voy As String
        Dim hih_slnonb As String
        Dim hih_arrdat As String
        Dim hih_potloa As String
        Dim hih_dst As String
        Dim hih_crr As String
        Dim hih_crrso As String
        Dim hih_goddsc As String

        Dim hih_bilent As String
        Dim hih_biladr As String
        Dim hih_bilstt As String
        Dim hih_bilcty As String
        Dim hih_bilzip As String
        Dim hih_bilrmk As String

        Dim hih_ttlctn As String
        Dim hih_ttlcbm As String

        Dim hih_ttlnwg As String
        Dim hih_ttlgwg As String
        Dim hih_untamt As String
        Dim hih_ttlamt As String
        Dim hih_lcno As String

        Dim hih_lcbank As String
        Dim hih_cntyorgn As String

        Dim hih_invsm As String

        Dim hih_updusr As String
        Dim hih_creusr As String


        'hih_COCDE = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cocde")
        'hih_QUTNO = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_qutno")
        'hih_ISSDAT = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_issdat")
        'hih_RVSDAT = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_rvsdat")
        'hih_CUS1NO = Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus1no"), " -")(0)


        'If Not IsDBNull(rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_cus2no")) Then
        '    hih_CUS2NO = IIf(IsDBNull(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2no")) = True, "", Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2no"), " -")(0))
        '    hih_CUS2ST = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2st"), "'", "''")
        '    hih_CUS2CY = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2cy"), "'", "''")
        '    hih_CUS2ZP = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2zp"), "'", "''")
        '    hih_CUS2CP = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2cp"), "'", "''")

        '    hih_CUS2AD = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2ad"), "'", "''")
        'Else
        '    hih_CUS2NO = ""
        '    hih_CUS2ST = ""
        '    hih_CUS2CY = ""
        '    hih_CUS2ZP = ""
        '    hih_CUS2CP = ""

        '    hih_CUS2AD = ""
        'End If



        ''hih_CUS2NO = IIf(IsDBNull(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2no")) = True, "", Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2no"), " -")(0))

        'hih_RELATN = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_relatn")
        'hih_CUS1AD = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus1ad"), "'", "''")
        ''hih_CUS2AD = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2ad"), "'", "''")
        'hih_CUS1ST = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus1st"), "'", "''")
        'hih_CUS1CY = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus1cy"), "'", "''")
        'hih_CUS1ZP = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus1zp"), "'", "''")
        ''hih_CUS2ST = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2st"), "'", "''")
        ''hih_CUS2CY = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2cy"), "'", "''")
        ''hih_CUS2ZP = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2zp"), "'", "''")
        'hih_CUS1CP = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus1cp"), "'", "''")
        ''hih_CUS2CP = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2cp"), "'", "''")
        'hih_SALREP = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_salrep")
        'If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cusagt") = "" Then
        '    hih_CUSAGT = ""
        'Else
        '    hih_CUSAGT = Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cusagt"), " -")(0)
        'End If
        'hih_VALDAT = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_valdat")
        'If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_smpprd") = "" Then
        '    hih_SMPPRD = ""
        'Else
        '    hih_SMPPRD = Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_smpprd"), " -")(0)
        'End If
        'If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_smpfgt") = "" Then
        '    hih_SMPFGT = ""
        'Else
        '    hih_SMPFGT = Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_smpfgt"), " -")(0)
        'End If
        'If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_prctrm") = "" Then
        '    hih_PRCTRM = ""
        'Else
        '    hih_PRCTRM = Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_prctrm"), " -")(0)
        'End If
        'If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_paytrm") = "" Then
        '    hih_PAYTRM = ""
        'Else
        '    hih_PAYTRM = Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_paytrm"), " -")(0)
        'End If
        'If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_curcde") = "" Then
        '    hih_CURCDE = ""
        'Else
        '    hih_CURCDE = Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_curcde"), " -")(0)
        'End If
        'hih_QUTSTS = IIf(IsDBNull(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_qutsts")) = True, "A", Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_qutsts"), " -")(0))
        'hih_RMK = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_rmk"), "'", "''")
        'hih_CONALLTOPC = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_conalltopc")
        'hih_YEAR = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_Year")
        'hih_SEASON = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_Season")
        'hih_DESC = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_Desc"), "'", "''")
        'hih_QUPLUS = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_quplus")
        'hih_QUMINUS = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_quminus")
        'hih_CUREXRAT = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_curexrat")
        'hih_CUREXEFFDAT = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_curexeffdat")
        'hih_CUGRPTYP_INT = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cugrptyp_int")
        'hih_CUGRPTYP_EXT = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cugrptyp_ext")
        'hih_DEPT = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_dept")
        'hih_SALDIVTEM = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_saldivtem")
        ' ''bug
        'If Not IsDBNull(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_srname")) Then

        '    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_srname") = "" Then
        '        hih_SRNAME = ""
        '    Else
        '        hih_SRNAME = Split(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_srname"), "(")(1)
        '        hih_SRNAME = hih_SRNAME.Substring(0, hih_SRNAME.Length - 1)
        '    End If
        'End If

        'hih_ftyshpstr = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ftyshpstr")
        'hih_ftyshpend = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ftyshpend")
        'hih_cushpstr = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cushpstr")
        'hih_cushpend = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cushpend")

        'hih_CREUSR = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr")

        If IsDBNull(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_shpno")) Then
            Exit Function
        End If
        hih_cocde = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cocde")
        hih_shpno = txtShpNo.Text.Trim
        'hih_shpno = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_shpno")
        hih_issdat = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_issdat")
        hih_rvsdat = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_rvsdat")
        hih_cus1no = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus1no")
        hih_cus2no = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2no")
        hih_smpshp = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_smpshp")
        hih_shpsts = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_shpsts")
        hih_ves = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ves"), "'", "''")
        hih_voy = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_voy"), "'", "''")
        hih_slnonb = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_slnonb")
        If Not IsDate(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_arrdat")) Then
            hih_arrdat = "01/01/1900"
        Else
            hih_arrdat = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_arrdat")
        End If
        hih_potloa = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_potloa"), "'", "''")
        hih_dst = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_dst"), "'", "''")
        hih_crr = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_crr"), "'", "''")
        hih_crrso = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_crrso"), "'", "''")
        hih_goddsc = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_goddsc"), "'", "''")

        hih_bilent = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilent"), "'", "''")
        hih_biladr = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_biladr"), "'", "''")
        hih_bilstt = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilstt"), "'", "''")
        hih_bilcty = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilcty"), "'", "''")
        hih_bilzip = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilzip"), "'", "''")
        hih_bilrmk = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilrmk"), "'", "''")

        hih_ttlctn = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlctn")
        hih_ttlcbm = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlcbm")

        hih_ttlnwg = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlnwg")
        hih_ttlgwg = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlgwg")
        hih_untamt = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_untamt")
        hih_ttlamt = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlamt")
        hih_lcno = ""

        hih_lcbank = ""
        hih_cntyorgn = Replace(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cntyorgn"), "'", "''")

        hih_invsm = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_invsm")

        hih_updusr = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_updusr")
        hih_creusr = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr")

        If Add_flag = True Then

            '            If hih_creusr = "~*ADD*~" Or hih_creusr = "~*NEW*~" Then
            gspStr = "sp_insert_SHIPGHDR '" & _
                                                hih_cocde & "','" & _
                                                hih_shpno & "','" & _
                                                hih_issdat & "','" & _
                                                hih_rvsdat & "','" & _
                                                hih_cus1no & "','" & _
                                                hih_cus2no & "','" & _
                                                hih_smpshp & "','" & _
                                                hih_shpsts & "','" & _
                                                hih_ves & "','" & _
                                                hih_voy & "','" & _
                                                hih_slnonb & "','" & _
                                                hih_arrdat & "','" & _
                                                hih_potloa & "','" & _
                                                hih_dst & "','" & _
                                                hih_crr & "','" & _
                                                hih_crrso & "','" & _
                                                hih_goddsc & "','" & _
                                                hih_bilent & "','" & _
                                                hih_biladr & "','" & _
                                                hih_bilstt & "','" & _
                                                hih_bilcty & "','" & _
                                                hih_bilzip & "','" & _
                                                hih_bilrmk & "','" & _
                                                hih_ttlctn & "','" & _
                                                hih_ttlcbm & "','" & _
                                                hih_ttlnwg & "','" & _
                                                hih_ttlgwg & "','" & _
                                                hih_untamt & "','" & _
                                                hih_ttlamt & "','" & _
                                                hih_lcno & "','" & _
                                                hih_lcbank & "','" & _
                                                hih_cntyorgn & "','" & _
                                                hih_invsm & "','" & _
                                                gsUsrID & "'"

            rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading save_SHIPPING sp_insert_SHIPPING :" & rtnStr)
                save_ShippingHeader = False
                Exit Function
            End If
        ElseIf hih_creusr = "~*UPD*~" Then
            gspStr = "sp_update_SHIPGHDR '" & _
                                                hih_cocde & "','" & _
                                                hih_shpno & "','" & _
                                                hih_issdat & "','" & _
                                                hih_rvsdat & "','" & _
                                                hih_cus1no & "','" & _
                                                hih_cus2no & "','" & _
                                                hih_smpshp & "','" & _
                                                hih_shpsts & "','" & _
                                                hih_ves & "','" & _
                                                hih_voy & "','" & _
                                                hih_slnonb & "','" & _
                                                hih_arrdat & "','" & _
                                                hih_potloa & "','" & _
                                                hih_dst & "','" & _
                                                hih_crr & "','" & _
                                                hih_crrso & "','" & _
                                                hih_goddsc & "','" & _
                                                hih_bilent & "','" & _
                                                hih_biladr & "','" & _
                                                hih_bilstt & "','" & _
                                                hih_bilcty & "','" & _
                                                hih_bilzip & "','" & _
                                                hih_bilrmk & "','" & _
                                                hih_ttlctn & "','" & _
                                                hih_ttlcbm & "','" & _
                                                hih_ttlnwg & "','" & _
                                                hih_ttlgwg & "','" & _
                                                hih_untamt & "','" & _
                                                hih_ttlamt & "','" & _
                                                hih_lcno & "','" & _
                                                hih_lcbank & "','" & _
                                                hih_cntyorgn & "','" & _
                                                hih_invsm & "','" & _
                                                gsUsrID & "'"

            rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading save_SHIPPING sp_update_SHIPPING :" & rtnStr)
                save_ShippingHeader = False
                Exit Function
            End If
        End If
        save_ShippingHeader = True
    End Function


    Private Function save_SHSHPMRK() As Boolean
        save_SHSHPMRK = False
        Dim hsm_cocde As String
        Dim hsm_shpno As String
        Dim hsm_invno As String
        Dim hsm_ordno As String
        Dim hsm_shptyp As String
        Dim hsm_imgnam As String
        Dim hsm_imgpth As String
        Dim hsm_engdsc As String
        Dim hsm_engrmk As String
        Dim hsm_creusr As String


        Dim i As Integer

        If rs_SHSHPMRK Is Nothing Then
            save_SHSHPMRK = True
            Exit Function
        End If
        If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
            save_SHSHPMRK = True
            Exit Function
        End If

        If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
            save_SHSHPMRK = True
            Exit Function
        End If



        For i = 0 To rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1 Step 1


            hsm_cocde = rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_cocde")
            hsm_shpno = txtShpNo.Text.Trim
            hsm_invno = rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_invno")
            hsm_ordno = rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_ordno")
            hsm_shptyp = rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_shptyp")
            hsm_imgnam = Replace(rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_imgnam"), "'", "''")
            hsm_imgpth = rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_imgpth")
            hsm_engdsc = Replace(rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_engdsc"), "'", "''")
            hsm_engrmk = Replace(rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_engrmk"), "'", "''")
            If Not MultiLineTextIsValid(hsm_engrmk, 40) Then
                btcSHM00001.SelectedIndex = 4
                MsgBox("English Remark should be 40 chars per line")
            End If

            hsm_creusr = rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_creusr")
            If hsm_ordno <> "yjke6yjey5uj556u356u356u" Then
                'If Add_flag = True Then

                'ElseIf hsm_creusr = "~*UPD*~" Then
                '    gspStr = "sp_Update_SHSHPMRK '" & _
                '                                        hsm_cocde & "','" & _
                '        txtShpNo.Text.Trim & "','" & _
                '        rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_invno") & "','" & rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_ordno") & "','" & _
                '        rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_shptyp") & "','" & rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_imgnam") & "','" & _
                '        rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_imgpth") & "','" & rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_engdsc") & "','" & _
                '        rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_engrmk") & "','" & gsUsrID & "'"


                '    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                '    If rtnLong <> RC_SUCCESS Then
                '        MsgBox("Error on loading save_SHIPPING sp_update_SHIPPING :" & rtnStr)
                '        save_SHSHPMRK = False
                '        Exit Function
                '    End If
                'End If
                'save_SHSHPMRK = True








                'If Trim(hsm_invno) = "" Then
                '    hsm_creusr = "~*DEL*~"
                'End If

                gspStr = ""


                If hsm_creusr = "~*DEL*~" Then
                    'update_inv_revisedat(0, hsm_invno)
                    '1022

                    '''***)
                    gspStr = "sp_physical_delete_SHSHPMRK '" & hsm_cocde & "','" & hsm_shpno & "','" & hsm_invno & "'"
                    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        MsgBox("Error on loading save_SHSHPMRK sp_physical_delete_SHSHPMRK:" & rtnStr)
                        save_SHSHPMRK = False
                        Exit Function
                    End If


                ElseIf hsm_creusr = "~*ADD*~" Or hsm_creusr = "~*NEW*~" Then

                    'update_inv_revisedat(0, hsm_invno)
                    '1022
                    gspStr = "sp_insert_SHSHPMRK '" & _
                                                    hsm_cocde & "','" & _
                    txtShpNo.Text.Trim & "','" & _
                    rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_invno") & "','" & rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_ordno") & "','" & _
                    rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_shptyp") & "','" & rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_imgnam") & "','" & _
                    rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_imgpth") & "','" & Replace(rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_engdsc"), "'", "''") & "','" & _
                    Replace(rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_engrmk"), "'", "''") & "','" & gsUsrID & "'"

                    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        MsgBox("Error on loading save_SHSHPMRK sp_insert_SHSHPMRK :" & rtnStr)
                        save_SHSHPMRK = False
                        Exit Function
                    End If
                ElseIf hsm_creusr = "~*UPD*~" Then

                    'update_inv_revisedat(0, hsm_invno)
                    '1022
                    gspStr = "sp_Update_SHSHPMRK '" & _
                                                        hsm_cocde & "','" & _
                        txtShpNo.Text.Trim & "','" & _
                        rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_invno") & "','" & rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_ordno") & "','" & _
                        rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_shptyp") & "','" & rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_imgnam") & "','" & _
                        rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_imgpth") & "','" & Replace(rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_engdsc"), "'", "''") & "','" & _
                        Replace(rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_engrmk"), "'", "''") & "','" & gsUsrID & "'"

                    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        MsgBox("Error on loading save_SHSHPMRK sp_update_SHSHPMRK :" & rtnStr)
                        save_SHSHPMRK = False
                        Exit Function
                    End If
                End If
                'gi_saved_items_count = gi_saved_items_count + 1

            End If

        Next i

        'If gi_saved_items_count = 0 Then
        '    MsgBox("No item saved! Please Check the Shipping  and the item(s)!")
        '    save_SHSHPMRK = False
        '    Exit Function
        'End If

        save_SHSHPMRK = True

    End Function
    Private Function check_SHSHPMRK() As Boolean
        check_SHSHPMRK = False
        Dim hsm_cocde As String
        Dim hsm_shpno As String
        Dim hsm_invno As String
        Dim hsm_ordno As String
        Dim hsm_shptyp As String
        Dim hsm_imgnam As String
        Dim hsm_imgpth As String
        Dim hsm_engdsc As String
        Dim hsm_engrmk As String
        Dim hsm_creusr As String


        check_SHSHPMRK = False

        Dim i As Integer

        If rs_SHSHPMRK Is Nothing Then
            check_SHSHPMRK = True
            Exit Function
        End If

        If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
            check_SHSHPMRK = True
            Exit Function
        End If
        If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
            check_SHSHPMRK = True
            Exit Function
        End If


        For i = 0 To rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1 Step 1
            hsm_engdsc = Replace(rs_SHSHPMRK.Tables("RESULT").Rows(i).Item("hsm_engdsc"), "'", "''")
            If Not MultiLineTextIsValid(hsm_engdsc, 40) And hsm_engdsc <> "" Then
                btcSHM00001.SelectedIndex = 4
                MsgBox("All English Remark should be 40 chars per line")
                Exit Function
            End If
        Next

        check_SHSHPMRK = True

    End Function


    Private Function check_SHINVHDR() As Boolean
        check_SHINVHDR = False
        Dim hiv_cargorcvdat As DateTime
        Dim hiv_prctrm As String
        Dim hiv_paytrm As String



        check_SHINVHDR = False

        Dim i As Integer

        If rs_SHINVHDR Is Nothing Then
            check_SHINVHDR = True
            Exit Function
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            check_SHINVHDR = True
            Exit Function
        End If

        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            check_SHINVHDR = True
            Exit Function
        End If


        For i = 0 To rs_SHINVHDR.Tables("RESULT").Rows.Count - 1 Step 1
            hiv_cargorcvdat = rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_cargorcvdat")

            If DateDiff("d", txtSlnOnb.Text.Trim, hiv_cargorcvdat) > 0 Or DateDiff("d", txtSlnOnb.Text.Trim, hiv_cargorcvdat) < -30 Then
                'If DateDiff("d", mvwSlnOnb.SelectionStart, hiv_cargorcvdat) > 0 Or DateDiff("d", mvwSlnOnb.SelectionStart, hiv_cargorcvdat) < -30 Then
                btcSHM00001.SelectedIndex = 2
                MsgBox("Cargo Receive Date is Out of range (ETD 0~-30).")
                sReadingIndexI_I = i
                DisplayShipInv()

                Exit Function
            End If


            hiv_prctrm = rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_prctrm")
            If Trim(hiv_prctrm) = "" Then
                btcSHM00001.SelectedIndex = 2
                MsgBox("Price Term should not be empty")
                sReadingIndexI_I = i
                DisplayShipInv()
                Exit Function
            End If

            hiv_paytrm = rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_paytrm")
            If Trim(hiv_paytrm) = "" Then
                btcSHM00001.SelectedIndex = 2
                MsgBox("Payment Term should not be empty")
                sReadingIndexI_I = i
                DisplayShipInv()
                Exit Function
            End If


        Next

        check_SHINVHDR = True

    End Function
    Private Function save_SHINVHDR() As Boolean
        save_SHINVHDR = False
        Dim rs2 As New DataSet

        '*************************************
        '******** Gen New Invoice No.   ******
        '*************************************

        Dim TmpInvno As String
        Dim GenInvNo As String

        Dim index999 As Integer
        Dim IsAdded As Boolean
        Dim optDocTyp_Text As String
        Dim cargorcvdat_default As Date


        If rs_SHIPGDTL Is Nothing Then
            save_SHINVHDR = True
            Exit Function
        End If

        If rs_SHIPGDTL.Tables("result") Is Nothing Then
            save_SHINVHDR = True
            Exit Function
        End If

        'If rs_SHINVHDR Is Nothing Then
        '    save_SHINVHDR = True
        '    Exit Function
        'End If

        GenInvNo = ""
        TmpInvno = "~!@#$%^&*()_+"

        Dim ds As New DataSet
        ds.Tables.Add("result")


        ds.Tables("RESULT").Columns.Add("tmpinvno")
        ds.Tables("RESULT").Columns.Add("geninvno")

        Dim sFilter As String

        sFilter = "hid_creusr <> '~*NEW*~'  and Del  <> 'Y' "

        rs_SHIPGDTL.Tables("RESULT").DefaultView.RowFilter = sFilter

        If rs_SHIPGDTL.Tables("RESULT").DefaultView.Count > 0 Then

            rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_invno ASC"

            'Marco Added for fixing global company code problem at 20040108
            gsCompany = Trim(cboCoCde.Text)
            Call Update_gs_Value(gsCompany)
            index999 = 0
            For index As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").DefaultView.Count - 1

                If TmpInvno <> rs_SHIPGDTL.Tables("RESULT").DefaultView(index)("hid_invno") Then
                    TmpInvno = rs_SHIPGDTL.Tables("RESULT").DefaultView(index)("hid_invno")

                    gspStr = "sp_list_SHINVHDR '" & cboCoCde.Text & "','" & TmpInvno & "','" & txtShpNo.Text & "'"

                    rtnLong = execute_SQLStatement(gspStr, rs_SHINVHDR_CHK, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        MsgBox("Error on loading save_SHIPPING sp_list_SHINVHDR :" & rtnStr)
                        Exit Function
                    End If


                    If rs_SHINVHDR_CHK.Tables("RESULT").Rows.Count <= 0 Then 'Gen New Invoice? (No invoice no. in DB)

                        'Gen
                        Dim rs_tmp As New DataSet

                        rs_tmp = Calc_GrnInvAmt(TmpInvno)

                        '''''''''''''''
                        'If rs_tmp.recordCount > 0 Then rs_tmp.MoveFirst()
                        'For index2 As Integer = 0 To rs_tmp.Tables("RESULT").rows.count - 1

                        'Marco fix for paytrm bug 20130627

                        If optDocTyp0.Checked = True Then
                            optDocTyp_Text = optDocTyp0.Text.Trim
                        End If
                        If optDocTyp1.Checked = True Then
                            optDocTyp_Text = optDocTyp1.Text.Trim
                        End If
                        If optDocTyp2.Checked = True Then
                            optDocTyp_Text = optDocTyp2.Text.Trim
                        End If

                        If rs_tmp Is Nothing Then
                            save_SHINVHDR = True
                            Exit Function

                        End If
                        cargorcvdat_default = txtSlnOnb.Text
                        cargorcvdat_default = cargorcvdat_default.AddDays(-2)

                        gspStr = "sp_list_SHINVHDR_SHM00001 '" & cboCoCde.Text & "','" & _
                         txtShpNo.Text & "','" & "IO" & "','" & _
                            Split(rs_SHIPGDTL.Tables("result").DefaultView(index)("hid_prctrm"), " - ")(0) & "','" & Split(rs_SHIPGDTL.Tables("result").DefaultView(index)("hid_paytrm"), " - ")(0) & "','" & _
                            optDocTyp_Text & "','" & _
                            rs_tmp.Tables("RESULT").DefaultView(index999)("tmpinvamt") & "','" & _
                            rs_tmp.Tables("RESULT").DefaultView(index999)("tmpttlvol") & "','" & _
                            rs_tmp.Tables("RESULT").DefaultView(index999)("tmpttlctn") & _
                            "','" & cboUntAmtI.Text & "','" & txtLcStmt.Text & "','" & _
                             cargorcvdat_default & "','" & _
                             rs_SHIPGDTL.Tables("result").DefaultView(index)("hid_fa") & "','" & _
                             rs_SHIPGDTL.Tables("result").DefaultView(index)("hid_faaddr") & "','" & _
                             gsUsrID & "'"

                        'gspStr = "sp_list_SHINVHDR_SHM00001 '" & cboCoCde.Text & "','" & _
                        ' txtShpNo.Text & "','" & "IO" & "','" & _
                        '    Split(rs_SHIPGDTL.Tables("result").Rows(index)("hid_prctrm"), " - ")(0) & "','" & Split(rs_SHIPGDTL.Tables("result").Rows(index)("hid_paytrm"), " - ")(0) & "','" & _
                        '    optDocTyp_Text & "','" & rs_tmp.Tables("RESULT").DefaultView(index999)("tmpinvamt") & "','" & cboUntAmtI.Text & "','" & txtLcStmt.Text & "','" & _
                        '     cargorcvdat_default & "','" & _
                        '     rs_SHIPGDTL.Tables("result").Rows(index)("hid_fa") & "','" & _
                        '     rs_SHIPGDTL.Tables("result").Rows(index)("hid_faaddr") & "','" & _
                        '     gsUsrID & "'"

                        rtnLong = execute_SQLStatement(gspStr, rs2, rtnStr)
                        If rtnLong <> RC_SUCCESS Then
                            MsgBox("Error on loading save_SHIPPING sp_list_SHINVHDR :" & rtnStr)
                            Exit Function
                        End If

                        rs_SHINVHDR_CHK = rs2.Copy
                        GenInvNo = GenInvNo + TmpInvno + "->" + rs_SHINVHDR_CHK.Tables("result").Rows(0)(0) + Chr(13) 'Generate New Invoice No.

                        ds.Tables("result").Rows.Add()
                        ds.Tables("result").Rows(index999)("tmpinvno") = TmpInvno
                        ds.Tables("result").Rows(index999)("geninvno") = rs_SHINVHDR_CHK.Tables("result").Rows(0)(0)
                        index999 = index999 + 1
                        'Next
                        '''''''''''

                    Else
                        GenInvNo = GenInvNo + TmpInvno + "->" + TmpInvno + Chr(13)  'Invoice Number in DB
                        ds.Tables("result").Rows.Add()
                        ds.Tables("result").Rows(index999)("tmpinvno") = TmpInvno
                        ds.Tables("result").Rows(index999)("geninvno") = TmpInvno
                        index999 = index999 + 1
                    End If
                End If

            Next

            rs_SHIPGDTL.Tables("result").DefaultView.Sort = ""

        End If

        'Assign generated invoice no to shipping details recordset
        Dim old_inv As String

        For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            old_inv = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno")

            ds.Tables("RESULT").DefaultView.RowFilter = "tmpinvno  = '" & rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno") & "'"
            If ds.Tables("RESULT").DefaultView.Count > 0 Then
                rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno") = ds.Tables("RESULT").DefaultView(0)("geninvno")

                If old_inv <> rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno") Then
                    If rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("HId_creusr") <> "~*NEW*~" Then
                        rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_creusr") = "~*UPD*~"
                    End If
                End If

                'temp
            End If
            '     If rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("HId_creusr") <> "~*NEW*~" Then
            'rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_creusr") = "~*UPD*~"
            '  End If

        Next

        'For index99 As Integer = 0 To ds.Tables("RESULT").Rows.Count - 1
        '    For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
        '        If Not IsDBNull(ds.Tables("RESULT").Rows(index99)("tmpinvno")) Then
        '            If ds.Tables("RESULT").Rows(index99)("tmpinvno") = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno") Then
        '                rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno") = ds.Tables("RESULT").Rows(index99)("geninvno")
        '                If rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("HId_creusr") <> "~*NEW*~" Then
        '                    rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_creusr") = "~*UPD*~"
        '                End If
        '            End If

        '        End If
        '    Next
        'Next
        '****************************************************
        '*** Update Shipping Invoice Record into SHINVHDR ***
        '=======================================================================
        '=======================================================================
        'Update Invoice Information with the latest shipping detail record

        'If Not rs_SHINVHDR.Tables("result") Is Nothing Then
        '    For index8 As Integer = 0 To rs_SHINVHDR.Tables("result").Rows.Count - 1
        '        '                Call updateInvoiceDetail(rs_SHINVHDR.Tables("result").Rows(index8)("hiv_invno"))
        '        '''20141231
        '    Next
        'End If
        '=======================================================================
        '=======================================================================

        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
        If rs_SHINVHDR Is Nothing Then
            save_SHINVHDR = True
            Exit Function
        End If

        sFilter = "hiv_creusr = '~*UPD*~' "
        '''
        If Not rs_SHINVHDR.Tables("result") Is Nothing Then
            rs_SHINVHDR.Tables("result").DefaultView.RowFilter = sFilter
            If rs_SHINVHDR.Tables("result").DefaultView.Count <= 0 Then
                IsAdded = True
            Else
                For index3 As Integer = 0 To rs_SHINVHDR.Tables("result").DefaultView.Count - 1
                    'for revise

                    'gspStr = "sp_update_SHINVHDR    '" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_COCDE") & "','" & _
                    '    txtShpNo.Text.Trim & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invno") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invdat") & "','" & _
                    '    Split(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_prctrm"), " - ")(0) & "','" & _
                    '    Split(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_paytrm"), " - ")(0) & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_doctyp") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_doc") & "','" & _
                    '    Replace(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_cover"), "'", "''") & "','" & _
                    '    Replace(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ftrrmk"), "'", "''") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_untamt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ttlamt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ttlvol") & "','" & _
                    '        rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ttlctn") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_bank") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_aformat") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invamt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_afamt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invsts") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_lcstmt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_cargorcvdat") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_revisedat") & "','" & _
                    '    gsUsrID & "'"


                    'rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                    'If rtnLong <> RC_SUCCESS Then
                    '    MsgBox("Error on loading save_SHIPPING sp_update_SHINVHDR :" & rtnStr)
                    '    save_SHINVHDR = False
                    '    Exit Function
                    'End If
                    If Not rs_SHDISPRM_D Is Nothing Then
                        If Not rs_SHDISPRM_D.Tables("RESULT") Is Nothing Then
                            rs_SHDISPRM_D.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" + rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_invno") + "'"
                            For index As Integer = 0 To rs_SHDISPRM_D.Tables("RESULT").DefaultView.Count - 1
                                If rs_SHDISPRM_D.Tables("RESULT").DefaultView(index)("hdp_creusr") <> "~*ADD*~" And _
                                    rs_SHDISPRM_D.Tables("RESULT").DefaultView(index)("hdp_creusr") <> "~*DEL*~" And _
                                    rs_SHDISPRM_D.Tables("RESULT").DefaultView(index)("hdp_creusr") <> "~*NEW*~" And _
                                    rs_SHDISPRM_D.Tables("RESULT").DefaultView(index)("hdp_creusr") <> "~*UPD*~" _
                                    Then
                                    rs_SHDISPRM_D.Tables("RESULT").DefaultView(index)("hdp_creusr") = "~*UPD*~"
                                End If
                            Next
                        End If
                    End If

                    If Not rs_SHDISPRM_P Is Nothing Then
                        If Not rs_SHDISPRM_P.Tables("RESULT") Is Nothing Then
                            rs_SHDISPRM_P.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" + rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_invno") + "'"
                            For index As Integer = 0 To rs_SHDISPRM_P.Tables("RESULT").DefaultView.Count - 1
                                If rs_SHDISPRM_P.Tables("RESULT").DefaultView(index)("hdp_creusr") <> "~*ADD*~" And _
                                    rs_SHDISPRM_P.Tables("RESULT").DefaultView(index)("hdp_creusr") <> "~*DEL*~" And _
                                    rs_SHDISPRM_P.Tables("RESULT").DefaultView(index)("hdp_creusr") <> "~*NEW*~" And _
                                    rs_SHDISPRM_P.Tables("RESULT").DefaultView(index)("hdp_creusr") <> "~*UPD*~" _
                                    Then
                                    rs_SHDISPRM_P.Tables("RESULT").DefaultView(index)("hdp_creusr") = "~*UPD*~"
                                End If
                            Next
                        End If
                    End If

                    rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = ""
                    'Exit Sub
                    'If Not (IsUpdated) Then
                    '    MsgBox("M00056")
                    '    IsUpdated = True
                    'End If

                Next

            End If
        End If


        '''

        'Dim hiv_creusr As String
        'Dim hiv_cocde As String

        'If Not rs_SHINVHDR.Tables("RESULT") Is Nothing Then
        '    If rs_SHINVHDR.Tables("RESULT").Rows.Count > 0 Then
        '        hiv_creusr = rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_creusr")
        '        hiv_cocde = rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_cocde")
        '    End If
        'End If

        'If Add_flag = True Then

        '    gspStr = "sp_list_SHINVHDR_SHM00001  '" & _
        '     cboCoCde.Text & "','" & txtShpNo.Text & "','" & "IO" & "','" & _
        '                    rs_SHIPGDTL("hid_prctrm") & "','" & rs_SHIPGDTL("hid_paytrm") & "','" & _
        '                    optDocTyp(0).Caption & "','" & rs_tmp("tmpinvamt") & "','" & cboUntAmtI.Text & "','" & txtLcStmt.Text & "','" & gsUsrID

        '    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
        '    If rtnLong <> RC_SUCCESS Then
        '        MsgBox("Error on loading save_SHIPPING sp_list_SHINVHDR_SHM00001 :" & rtnStr)
        '        save_SHINVHDR = False
        '        Exit Function
        '    End If


        'ElseIf hiv_creusr = "~*UPD*~" Then
        '    gspStr = "sp_update_SHINVHDR  '" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_COCDE") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_ShpNo") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_invno") & "','" & rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_invdat") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_prctrm") & "','" & rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_paytrm") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_doctyp") & "','" & rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_doc") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_cover") & "','" & rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_ftrrmk") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_untamt") & "','" & rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_ttlamt") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_ttlvol") & "','" & rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_ttlctn") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_bank") & "','" & rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_aformat") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_invamt") & "','" & rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_afamt") & "','" & _
        '        rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_invsts") & "','" & rs_SHINVHDR.Tables("RESULT").Rows(0).Item("hiv_lcstmt") & "','" & _
        '        gsUsrID


        '    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
        '    If rtnLong <> RC_SUCCESS Then
        '        MsgBox("Error on loading save_SHIPPING sp_update_SHINVHDR :" & rtnStr)
        '        save_SHINVHDR = False
        '        Exit Function
        '    End If
        'End If
        save_SHINVHDR = True
    End Function

    Private Function save_SHINVHDR_2() As Boolean
        save_SHINVHDR_2 = False
        Dim rs2 As New DataSet

        '*************************************
        '******** Gen New Invoice No.   ******
        '*************************************
         

        Dim index999 As Integer
        Dim IsAdded As Boolean

        If rs_SHIPGDTL Is Nothing Then
            save_SHINVHDR_2 = True
            Exit Function
        End If

        If rs_SHIPGDTL.Tables("result") Is Nothing Then
            save_SHINVHDR_2 = True
            Exit Function
        End If

        'If rs_SHINVHDR Is Nothing Then
        '    save_SHINVHDR_2 = True
        '    Exit Function
        'End If
          
        Dim sFilter As String
         
        sFilter = "hiv_creusr = '~*UPD*~' "
        '''
        If rs_SHINVHDR Is Nothing Then
            save_SHINVHDR_2 = True
            Exit Function
        End If

        If Not rs_SHINVHDR.Tables("result") Is Nothing Then
            rs_SHINVHDR.Tables("result").DefaultView.RowFilter = sFilter
            If rs_SHINVHDR.Tables("result").DefaultView.Count <= 0 Then
                IsAdded = True
            Else
                For index3 As Integer = 0 To rs_SHINVHDR.Tables("result").DefaultView.Count - 1

                    If Trim(rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_untamt")) = "" Then
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_untamt") = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_untamt")
                    End If
 

                    gspStr = "sp_update_SHINVHDR    '" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_COCDE") & "','" & _
                        txtShpNo.Text.Trim & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_invno") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_invdat") & "','" & _
                        Split(rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_prctrm"), " - ")(0) & "','" & _
                        Split(rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_paytrm"), " - ")(0) & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_doctyp") & "','" & _
                        Replace(rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_doc"), "'", "''") & "','" & _
                        Replace(rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_cover"), "'", "''") & "','" & _
                        Replace(rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_ftrrmk"), "'", "''") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_untamt") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_ttlamt") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_ttlvol") & "','" & _
                            rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_ttlctn") & "','" & _
                        Replace(rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_bank"), "'", "''") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_aformat") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_invamt") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_afamt") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_invsts") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_lcstmt") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_cargorcvdat") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_lcno") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_lcdat") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_lcbank") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_revisedat") & "','" & _
                       Replace(rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_plrmk"), "'", "''") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_exptnam") & "','" & _
                        rs_SHINVHDR.Tables("RESULT").DefaultView(index3).Item("hiv_exptaddr") & "','" & _
                        gsUsrID & "'"

                    'gspStr = "sp_update_SHINVHDR    '" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_COCDE") & "','" & _
                    '    txtShpNo.Text.Trim & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invno") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invdat") & "','" & _
                    '    Split(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_prctrm"), " - ")(0) & "','" & _
                    '    Split(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_paytrm"), " - ")(0) & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_doctyp") & "','" & _
                    '    Replace(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_doc"), "'", "''") & "','" & _
                    '    Replace(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_cover"), "'", "''") & "','" & _
                    '    Replace(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ftrrmk"), "'", "''") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_untamt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ttlamt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ttlvol") & "','" & _
                    '        rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ttlctn") & "','" & _
                    '    Replace(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_bank"), "'", "''") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_aformat") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invamt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_afamt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invsts") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_lcstmt") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_cargorcvdat") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_lcno") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_lcdat") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_lcbank") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_revisedat") & "','" & _
                    '   Replace(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_plrmk"), "'", "''") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_exptnam") & "','" & _
                    '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_exptaddr") & "','" & _
                    '    gsUsrID & "'"


                    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        MsgBox("Error on loading save_SHIPPING sp_update_SHINVHDR :" & rtnStr)
                        save_SHINVHDR_2 = False
                        Exit Function
                    End If


                    '  rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = ""


                Next

            End If
        End If


        '''
         
        save_SHINVHDR_2 = True
    End Function

    Private Function save_ShippingDetail() As Boolean
        save_ShippingDetail = False

        'If save_shippingDetail() = False Then
        '    Exit Function_flag
        'End If
        Dim hid_cocde As String
        Dim hid_shpno As String
        Dim hid_shpseq As String
        Dim hid_ctrcfs As String
        Dim hid_sealno As String
        Dim hid_ctrsiz As String
        Dim hid_pckrmk As String
        Dim hid_jobno As String
        Dim hid_ordno As String
        Dim hid_ordseq As String
        Dim hid_cuspo As String
        Dim hid_cusitm As String
        Dim hid_itmno As String
        Dim hid_itmtyp As String
        Dim hid_itmdsc As String
        Dim hid_colcde As String
        Dim hid_alsitmno As String
        Dim hid_alscolcde As String
        Dim hid_custum As String
        Dim hid_cuscol As String
        Dim hid_coldsc As String
        Dim hid_shpqty As String
        Dim hid_untcde As String
        Dim hid_ctnstr As String
        Dim hid_ctnend As String
        Dim hid_inrctn As String
        Dim hid_mtrctn As String
        Dim hid_vol As String
        Dim hid_mtrdcm As String
        Dim hid_mtrwcm As String
        Dim hid_mtrhcm As String
        Dim hid_actvol As String
        Dim hid_grswgt As String
        Dim hid_netwgt As String
        Dim hid_itmshm As String
        Dim hid_cmprmk As String
        Dim hid_mannam As String
        Dim hid_manadr As String
        Dim hid_ttlvol As String
        Dim hid_ttlnet As String
        Dim hid_ttlgrs As String
        Dim hid_ttlctn As String
        Dim hid_untsel As String
        Dim hid_selprc As String
        Dim hid_untamt As String
        Dim hid_ttlamt As String
        Dim hid_invno As String
        Dim hid_prctrm As String
        Dim hid_paytrm As String
        Dim hid_purord As String
        Dim hid_purseq As String
        Dim hid_venno As String
        Dim hid_cusven As String
        Dim hid_cusstyno As String
        Dim hid_consolno As String
        Dim hid_replacement As String
        Dim hid_updusr As String
        Dim hid_CREUSR As String
        Dim DEL_FLAG As String
        Dim COV_FLAG As String
        Dim hid_colpck
        Dim hid_ctnftr
        Dim hid_cus2no
        Dim hid_contopc
        Dim hid_conftr
        Dim hid_pcprc
        Dim hid_name_f1
        Dim hid_dsc_f1
        Dim hid_name_f2
        Dim hid_dsc_f2
        Dim hid_name_f3
        Dim hid_dsc_f3
        Dim hid_resppo
        Dim hid_cussku
        Dim hid_addinf
        Dim hid_usrinvno

        Dim i As Integer

        For i = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            DEL_FLAG = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("Del")
            COV_FLAG = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("Cov")

            If COV_FLAG = "Y" Then
                DEL_FLAG = "Y"
                rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_CREUSR") = "~*DEL*~"
            End If
            If DEL_FLAG = "Y" Then
                rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_CREUSR") = "~*DEL*~"
            End If

            hid_cocde = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cocde")
            hid_shpno = txtShpNo.Text.Trim

            hid_shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpseq")
            hid_ctrcfs = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctrcfs"), "'", "''")
            hid_sealno = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_sealno"), "'", "''")

            hid_ctrsiz = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctrsiz")
            hid_ctrsiz = Microsoft.VisualBasic.Left(hid_ctrsiz, 10)
            hid_ctrsiz = Replace(hid_ctrsiz, "'", "''")

            hid_pckrmk = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pckrmk")
            hid_pckrmk = Replace(hid_pckrmk, "'", "''")

            hid_jobno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_jobno")
            hid_ordno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ordno")
            If hid_ordno = "" Then
                hid_ordno = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_jobno"), "-")(0))
            End If

            hid_ordseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ordseq")
            hid_cuspo = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cuspo")
            hid_cusitm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusitm")
            hid_itmno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmno")
            hid_itmtyp = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmtyp")
            hid_itmdsc = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmdsc"), "'", "''")
            hid_colcde = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_colcde")
            hid_alsitmno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_alsitmno")
            hid_alscolcde = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_alscolcde")

            hid_custum = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_custum")
            hid_cuscol = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cuscol")
            hid_coldsc = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_coldsc"), "'", "''")
            hid_shpqty = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpqty")
            hid_untcde = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_untcde")
            hid_ctnstr = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctnstr")
            hid_ctnend = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctnend")
            hid_inrctn = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_inrctn")
            hid_mtrctn = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrctn")
            hid_vol = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_vol")
            hid_mtrdcm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrdcm")
            hid_mtrwcm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrwcm")
            hid_mtrhcm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrhcm")
            hid_actvol = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_actvol")
            hid_grswgt = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_grswgt")
            hid_netwgt = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_netwgt")
            hid_itmshm = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmshm"), "'", "''")
            hid_cmprmk = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cmprmk"), "'", "''")
            hid_mannam = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mannam"), "'", "''")
            hid_manadr = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_manadr"), "'", "''")
            hid_ttlvol = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlvol")
            hid_ttlnet = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlnet")
            hid_ttlgrs = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlgrs")
            hid_ttlctn = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlctn")
            hid_untsel = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_untsel")
            hid_selprc = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_selprc")
            hid_untamt = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_untamt")
            hid_ttlamt = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlamt")
            hid_invno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_invno")

            hid_prctrm = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_prctrm"), "-")(0))
            hid_paytrm = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_paytrm"), "-")(0))

            hid_purord = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_purord")
            hid_purseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_purseq")
            hid_venno = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_venno"), "-")(0))
            hid_cusven = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusven"), "-")(0))
            hid_cusstyno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusstyno")
            hid_consolno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_consolno")
            If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_replacement")) Then
                hid_replacement = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_replacement")
            End If

            hid_updusr = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_updusr")

            hid_CREUSR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_CREUSR")

            hid_colpck = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_colpck")
            hid_ctnftr = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctnftr")
            hid_cus2no = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cus2no")

            hid_contopc = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_contopc")

            hid_conftr = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_conftr")

            If Val(hid_conftr) = 0 Then
                hid_conftr = 1
            End If

            If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pcprc")) Then
                hid_pcprc = 0
            Else
                hid_pcprc = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pcprc")
            End If


            hid_name_f1 = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_name_f1"), "'", "''")
            hid_dsc_f1 = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_dsc_f1"), "'", "''")
            hid_name_f2 = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_name_f2"), "'", "''")
            hid_dsc_f2 = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_dsc_f2"), "'", "''")
            hid_name_f3 = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_name_f3"), "'", "''")
            hid_dsc_f3 = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_dsc_f3"), "'", "''")
            hid_resppo = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_resppo")
            hid_cussku = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cussku")
            hid_addinf = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_addinf")
            hid_usrinvno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_usrinvno")

            gspStr = ""


            If DEL_FLAG = "Y" Or COV_FLAG = "Y" Or hid_CREUSR = "~*DEL*~" Then
                update_inv_revisedat(0, hid_invno)
                '1022

                '''***)
                gspStr = "sp_physical_delete_shipgdtl '" & hid_cocde & "','" & hid_shpno & "','" & hid_shpseq & "'"
                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_shippingDetail sp_physical_delete_shipgdtl:" & rtnStr)
                    save_ShippingDetail = False
                    Exit Function
                End If


                gspStr = "sp_update_SHSCSTS '" & _
                             hid_cocde & "','" & _
                             hid_ordno & "','" & _
                 gsUsrID & "'"
                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_shippingDetail sp_update_SHSCSTS :" & rtnStr)
                    save_ShippingDetail = False
                    Exit Function
                End If

                gspStr = "sp_update_SHPOSTS '" & _
                             hid_cocde & "','" & _
                             hid_purord & "','" & _
                 gsUsrID & "'"
                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_shippingDetail sp_update_SHSCSTS :" & rtnStr)
                    save_ShippingDetail = False
                    Exit Function
                End If



            ElseIf hid_CREUSR = "~*ADD*~" Or hid_CREUSR = "~*NEW*~" Then
                update_inv_revisedat(0, hid_invno)
                '1022
                gspStr = "sp_insert_shipgdtl '" & _
                                                 hid_cocde & "','" & _
                                                 hid_shpno & "','" & _
                                                 hid_shpseq & "','" & _
                                                 hid_ctrcfs & "','" & _
                                                 hid_sealno & "','" & _
                                                 hid_ctrsiz & "','" & _
                                                 hid_pckrmk & "','" & _
                                                 hid_jobno & "','" & _
                                                 hid_ordno & "','" & _
                                                 hid_ordseq & "','" & _
                                                 hid_cuspo & "','" & _
                                                 hid_cusitm & "','" & _
                                                 hid_itmno & "','" & _
                                                 hid_itmtyp & "','" & _
                                                 hid_itmdsc & "','" & _
                                                 hid_colcde & "','" & _
                                                 hid_alsitmno & "','" & _
                                                 hid_alscolcde & "','" & _
                                                 hid_custum & "','" & _
                                                 hid_cuscol & "','" & _
                                                 hid_coldsc & "','" & _
                                                 hid_shpqty & "','" & _
                                                 hid_untcde & "','" & _
                                                 hid_ctnstr & "','" & _
                                                 hid_ctnend & "','" & _
                                                 hid_inrctn & "','" & _
                                                 hid_mtrctn & "','" & _
                                                 hid_vol & "','" & _
                                                 hid_mtrdcm & "','" & _
                                                 hid_mtrwcm & "','" & _
                                                 hid_mtrhcm & "','" & _
                                                 hid_actvol & "','" & _
                                                 hid_grswgt & "','" & _
                                                 hid_netwgt & "','" & _
                                                 hid_itmshm & "','" & _
                                                 hid_cmprmk & "','" & _
                                                 hid_mannam & "','" & _
                                                 hid_manadr & "','" & _
                                                 hid_ttlvol & "','" & _
                                                 hid_ttlnet & "','" & _
                                                 hid_ttlgrs & "','" & _
                                                 hid_ttlctn & "','" & _
                                                 hid_untsel & "','" & _
                                                 hid_selprc & "','" & _
                                                 hid_untamt & "','" & _
                                                 hid_ttlamt & "','" & _
                                                 hid_invno & "','" & _
                                                 hid_prctrm & "','" & _
                                                 hid_paytrm & "','" & _
                                                 hid_purord & "','" & _
                                                 hid_purseq & "','" & _
                                                 hid_venno & "','" & _
                                                 hid_cusven & "','" & _
                                                 hid_cusstyno & "','" & _
                                                 hid_consolno & "','" & _
                                                 hid_replacement & "','" & _
                                                 hid_colpck & "','" & _
                                                 hid_ctnftr & "','" & _
                                                 hid_cus2no & "','" & _
                                                 hid_contopc & "','" & _
                                                 hid_conftr & "','" & _
                                                 hid_pcprc & "','" & _
                                                hid_name_f1 & "','" & _
                                                hid_dsc_f1 & "','" & _
                                                hid_name_f2 & "','" & _
                                                hid_dsc_f2 & "','" & _
                                                hid_name_f3 & "','" & _
                                                hid_dsc_f3 & "','" & _
                                                hid_resppo & "','" & _
                                                hid_cussku & "','" & _
                                                hid_addinf & "','" & _
                                                hid_usrinvno & "','" & _
                                                gsUsrID & "'"

                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_shippingDetail sp_insert_shipgdtl :" & rtnStr & "   Seq:" & hid_shpseq)
                    save_ShippingDetail = False
                    Exit Function
                End If

            ElseIf hid_CREUSR = "~*UPD*~" Then

                update_inv_revisedat(0, hid_invno)
                '1022
                gspStr = "sp_update_shipgdtl '" & _
                                                 hid_cocde & "','" & _
                                                 hid_shpno & "','" & _
                                                 hid_shpseq & "','" & _
                                                 hid_ctrcfs & "','" & _
                                                 hid_sealno & "','" & _
                                                 hid_ctrsiz & "','" & _
                                                 hid_pckrmk & "','" & _
                                                 hid_jobno & "','" & _
                                                 hid_ordno & "','" & _
                                                 hid_ordseq & "','" & _
                                                 hid_cuspo & "','" & _
                                                 hid_cusitm & "','" & _
                                                 hid_itmno & "','" & _
                                                 hid_itmtyp & "','" & _
                                                 hid_itmdsc & "','" & _
                                                 hid_colcde & "','" & _
                                                 hid_alsitmno & "','" & _
                                                 hid_alscolcde & "','" & _
                                                 hid_custum & "','" & _
                                                 hid_cuscol & "','" & _
                                                 hid_coldsc & "','" & _
                                                 hid_shpqty & "','" & _
                                                 hid_untcde & "','" & _
                                                 hid_ctnstr & "','" & _
                                                 hid_ctnend & "','" & _
                                                 hid_inrctn & "','" & _
                                                 hid_mtrctn & "','" & _
                                                 hid_vol & "','" & _
                                                 hid_mtrdcm & "','" & _
                                                 hid_mtrwcm & "','" & _
                                                 hid_mtrhcm & "','" & _
                                                 hid_actvol & "','" & _
                                                 hid_grswgt & "','" & _
                                                 hid_netwgt & "','" & _
                                                 hid_itmshm & "','" & _
                                                 hid_cmprmk & "','" & _
                                                 hid_mannam & "','" & _
                                                 hid_manadr & "','" & _
                                                 hid_ttlvol & "','" & _
                                                 hid_ttlnet & "','" & _
                                                 hid_ttlgrs & "','" & _
                                                 hid_ttlctn & "','" & _
                                                 hid_untsel & "','" & _
                                                 hid_selprc & "','" & _
                                                 hid_untamt & "','" & _
                                                 hid_ttlamt & "','" & _
                                                 hid_invno & "','" & _
                                                 hid_prctrm & "','" & _
                                                 hid_paytrm & "','" & _
                                                 hid_purord & "','" & _
                                                 hid_purseq & "','" & _
                                                 hid_venno & "','" & _
                                                 hid_cusven & "','" & _
                                                 hid_cusstyno & "','" & _
                                                 hid_consolno & "','" & _
                                                 hid_replacement & "','" & _
                                                 hid_colpck & "','" & _
                                                 hid_ctnftr & "','" & _
                                                 hid_cus2no & "','" & _
                                                 hid_contopc & "','" & _
                                                 hid_conftr & "','" & _
                                                 hid_pcprc & "','" & _
                                                hid_name_f1 & "','" & _
                                                hid_dsc_f1 & "','" & _
                                                hid_name_f2 & "','" & _
                                                hid_dsc_f2 & "','" & _
                                                hid_name_f3 & "','" & _
                                                hid_dsc_f3 & "','" & _
                                                hid_resppo & "','" & _
                                                hid_cussku & "','" & _
                                                hid_addinf & "','" & _
                                                hid_usrinvno & "','" & _
                                     gsUsrID & "'"

                'MsgBox(i)

                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)

                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_shippingDetail sp_update_shipgdtl :" & rtnStr & "   Seq:" & hid_shpseq)
                    save_ShippingDetail = False
                    Exit Function
                End If
            End If
            gi_saved_items_count = gi_saved_items_count + 1

            If save_SHPCKDIM(hid_CREUSR, COV_FLAG, hid_shpseq, hid_ctnftr, hid_itmno, hid_colpck) = True Then
            Else
                MsgBox("Error on saving Packing Dimension:" & hid_shpseq)
                Exit Function
            End If

            Update_Carton_NewShpSeq(hid_shpno, hid_shpseq)

            gspStr = "sp_update_SHSCSTS '" & _
                         hid_cocde & "','" & _
                         hid_ordno & "','" & _
             gsUsrID & "'"
            rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading save_shippingDetail sp_update_SHSCSTS :" & rtnStr)
                save_ShippingDetail = False
                Exit Function
            End If

            gspStr = "sp_update_SHPOSTS '" & _
                         hid_cocde & "','" & _
                         hid_purord & "','" & _
             gsUsrID & "'"
            rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading save_shippingDetail sp_update_SHSCSTS :" & rtnStr)
                save_ShippingDetail = False
                Exit Function
            End If



        Next i

        'If gi_saved_items_count = 0 Then
        '    MsgBox("No detail item saved! Please Check the Shipping  and the item(s)!")
        '    save_ShippingDetail = False

        '    Dim tmpqutno As String
        '    Dim tmpcocde As String


        '    tmpqutno = txtShpNo.Text
        '    tmpcocde = cboCoCde.Text

        '    Call cmdClearClick()


        '    'txtShpNo.Text = tmpqutno
        '    'cboCoCde.Text = tmpcocde

        '    txtShpNo.Focus()





        '    Exit Function
        'End If

        ' no need check since COV

        save_ShippingDetail = True
    End Function

    Private Function save_ShippingDetail_Cov() As Boolean
        save_ShippingDetail_Cov = False

        'If save_ShippingDetail_Cov() = False Then
        '    Exit Function
        'End If
        Dim hid_cocde As String
        Dim hid_shpno As String
        Dim hid_shpseq As String
        Dim hid_ctrcfs As String
        Dim hid_sealno As String
        Dim hid_ctrsiz As String
        Dim hid_pckrmk As String
        Dim hid_jobno As String
        Dim hid_ordno As String
        Dim hid_ordseq As String
        Dim hid_cuspo As String
        Dim hid_cusitm As String
        Dim hid_itmno As String
        Dim hid_itmtyp As String
        Dim hid_itmdsc As String
        Dim hid_colcde As String
        Dim hid_alsitmno As String
        Dim hid_alscolcde As String
        Dim hid_custum As String
        Dim hid_cuscol As String
        Dim hid_coldsc As String
        Dim hid_shpqty As String
        Dim hid_untcde As String
        Dim hid_ctnstr As String
        Dim hid_ctnend As String
        Dim hid_inrctn As String
        Dim hid_mtrctn As String
        Dim hid_vol As String
        Dim hid_mtrdcm As String
        Dim hid_mtrwcm As String
        Dim hid_mtrhcm As String
        Dim hid_actvol As String
        Dim hid_grswgt As String
        Dim hid_netwgt As String
        Dim hid_itmshm As String
        Dim hid_cmprmk As String
        Dim hid_mannam As String
        Dim hid_manadr As String
        Dim hid_ttlvol As String
        Dim hid_ttlnet As String
        Dim hid_ttlgrs As String
        Dim hid_ttlctn As String
        Dim hid_untsel As String
        Dim hid_selprc As String
        Dim hid_untamt As String
        Dim hid_ttlamt As String
        Dim hid_invno As String
        Dim hid_prctrm As String
        Dim hid_paytrm As String
        Dim hid_purord As String
        Dim hid_purseq As String
        Dim hid_venno As String
        Dim hid_cusven As String
        Dim hid_cusstyno As String
        Dim hid_consolno As String
        Dim hid_replacement As String
        Dim hid_updusr As String
        Dim hid_CREUSR As String
        Dim DEL_FLAG As String
        Dim COV_FLAG As String
        Dim hid_colpck
        Dim hid_ctnftr
        Dim hid_cus2no
        Dim hid_contopc
        Dim hid_conftr
        Dim hid_pcprc
        Dim hid_name_f1
        Dim hid_dsc_f1
        Dim hid_name_f2
        Dim hid_dsc_f2
        Dim hid_name_f3
        Dim hid_dsc_f3
        Dim hid_resppo
        Dim hid_cussku
        Dim hid_addinf


        Dim i As Integer

        For i = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            DEL_FLAG = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("Del")
            COV_FLAG = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("Cov")

            If COV_FLAG = "Y" Then

                hid_cocde = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cocde")
                hid_shpno = txtShpNo.Text.Trim

                hid_shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpseq")

                display_Detail(hid_shpseq) ''
                '
                hid_ctrcfs = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctrcfs"), "'", "''")
                hid_sealno = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_sealno"), "'", "''")

                hid_ctrsiz = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctrsiz")
                hid_ctrsiz = Microsoft.VisualBasic.Left(hid_ctrsiz, 10)
                hid_ctrsiz = Replace(hid_ctrsiz, "'", "''")

                hid_pckrmk = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pckrmk")
                hid_pckrmk = Replace(hid_pckrmk, "'", "''")

                hid_jobno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_jobno")
                hid_ordno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ordno")
                If hid_ordno = "" Then
                    hid_ordno = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_jobno"), "-")(0))
                End If

                hid_ordseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ordseq")
                hid_cuspo = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cuspo")
                hid_cusitm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusitm")
                hid_itmno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmno")
                hid_itmtyp = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmtyp")
                hid_itmdsc = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmdsc"), "'", "''")
                hid_colcde = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_colcde")
                hid_alsitmno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_alsitmno")
                hid_alscolcde = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_alscolcde")
                hid_custum = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_custum")

                hid_cuscol = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cuscol")
                hid_coldsc = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_coldsc"), "'", "''")
                hid_shpqty = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpqty")
                hid_untcde = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_untcde")
                hid_ctnstr = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctnstr")
                hid_ctnend = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctnend")
                hid_inrctn = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_inrctn")
                hid_mtrctn = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrctn")
                hid_vol = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_vol")
                hid_mtrdcm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrdcm")
                hid_mtrwcm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrwcm")
                hid_mtrhcm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrhcm")
                hid_actvol = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_actvol")
                hid_grswgt = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_grswgt")
                hid_netwgt = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_netwgt")
                hid_itmshm = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmshm"), "'", "''")
                hid_cmprmk = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cmprmk"), "'", "''")
                hid_mannam = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mannam"), "'", "''")
                hid_manadr = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_manadr"), "'", "''")
                hid_ttlvol = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlvol")
                hid_ttlnet = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlnet")
                hid_ttlgrs = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlgrs")
                hid_ttlctn = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlctn")
                hid_untsel = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_untsel")
                hid_selprc = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_selprc")
                hid_untamt = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_untamt")
                hid_ttlamt = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ttlamt")
                hid_invno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_invno")
                hid_prctrm = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_prctrm"), "-")(0))
                hid_paytrm = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_paytrm"), "-")(0))

                hid_purord = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_purord")
                hid_purseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_purseq")
                hid_venno = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_venno"), "-")(0))
                hid_cusven = Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusven"), "-")(0))

                'hid_prctrm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_prctrm")
                'hid_paytrm = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_paytrm")
                'hid_purord = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_purord")
                'hid_purseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_purseq")
                'hid_venno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_venno")
                'hid_cusven = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusven")
                hid_cusstyno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusstyno")
                hid_consolno = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_consolno")
                hid_replacement = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_replacement")
                hid_updusr = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_updusr")

                hid_CREUSR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_CREUSR")

                hid_colpck = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_colpck")
                hid_ctnftr = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ctnftr")


                hid_cus2no = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cus2no")
                hid_contopc = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_contopc")
                hid_conftr = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_conftr")
                If Val(hid_conftr) = 0 Then
                    hid_conftr = 1
                End If

                If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pcprc")) Then
                    hid_pcprc = 0
                Else
                    hid_pcprc = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pcprc")
                End If



                hid_name_f1 = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_name_f1")
                hid_dsc_f1 = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_dsc_f1")
                hid_name_f2 = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_name_f2")
                hid_dsc_f2 = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_dsc_f2")
                hid_name_f3 = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_name_f3")
                hid_dsc_f3 = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_dsc_f3")
                hid_resppo = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_resppo")
                hid_cussku = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cussku")
                hid_addinf = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_addinf")

                gspStr = ""

                '''''''''''''''''''2015temp
                'If DEL_FLAG = "Y" Or hid_CREUSR = "~*DEL*~" Then

                '''***)
                gspStr = "sp_physical_delete_SHIPGDTL '" & hid_cocde & "','" & hid_shpno & "','" & hid_shpseq & "'"
                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_ShippingDetail_Cov sp_physical_delete_SHIPGDTL_cov:" & rtnStr)
                    save_ShippingDetail_Cov = False
                    Exit Function
                End If


                ' ElseIf hid_CREUSR = "~*ADD*~" Or hid_CREUSR = "~*NEW*~" Or hid_CREUSR = "~*UPD*~" Or hid_CREUSR = "~*DEL*~" Then
                '1022

                gspStr = "sp_insert_SHIPGDTL_cov '" & _
                                                 hid_cocde & "','" & _
                                                 hid_shpno & "','" & _
                                                 hid_shpseq & "','" & _
                                                 hid_ctrcfs & "','" & _
                                                 hid_sealno & "','" & _
                                                 hid_ctrsiz & "','" & _
                                                 hid_pckrmk & "','" & _
                                                 hid_jobno & "','" & _
                                                 hid_ordno & "','" & _
                                                 hid_ordseq & "','" & _
                                                 hid_cuspo & "','" & _
                                                 hid_cusitm & "','" & _
                                                 hid_itmno & "','" & _
                                                 hid_itmtyp & "','" & _
                                                 hid_itmdsc & "','" & _
                                                 hid_colcde & "','" & _
                                                 hid_alsitmno & "','" & _
                                                 hid_alscolcde & "','" & _
                                                 hid_custum & "','" & _
                                                 hid_cuscol & "','" & _
                                                 hid_coldsc & "','" & _
                                                 hid_shpqty & "','" & _
                                                 hid_untcde & "','" & _
                                                 hid_ctnstr & "','" & _
                                                 hid_ctnend & "','" & _
                                                 hid_inrctn & "','" & _
                                                 hid_mtrctn & "','" & _
                                                 hid_vol & "','" & _
                                                 hid_mtrdcm & "','" & _
                                                 hid_mtrwcm & "','" & _
                                                 hid_mtrhcm & "','" & _
                                                 hid_actvol & "','" & _
                                                 hid_grswgt & "','" & _
                                                 hid_netwgt & "','" & _
                                                 hid_itmshm & "','" & _
                                                 hid_cmprmk & "','" & _
                                                 hid_mannam & "','" & _
                                                 hid_manadr & "','" & _
                                                 hid_ttlvol & "','" & _
                                                 hid_ttlnet & "','" & _
                                                 hid_ttlgrs & "','" & _
                                                 hid_ttlctn & "','" & _
                                                 hid_untsel & "','" & _
                                                 hid_selprc & "','" & _
                                                 hid_untamt & "','" & _
                                                 hid_ttlamt & "','" & _
                                                 hid_invno & "','" & _
                                                 hid_prctrm & "','" & _
                                                 hid_paytrm & "','" & _
                                                 hid_purord & "','" & _
                                                 hid_purseq & "','" & _
                                                 hid_venno & "','" & _
                                                 hid_cusven & "','" & _
                                                 hid_cusstyno & "','" & _
                                                 hid_consolno & "','" & _
                                                 hid_replacement & "','" & _
                                                 hid_colpck & "','" & _
                                                 hid_ctnftr & "','" & _
                                                 hid_cus2no & "','" & _
                                             hid_contopc & "','" & _
                                             hid_conftr & "','" & _
                                             hid_pcprc & "','" & _
                                            hid_name_f1 & "','" & _
                                            hid_dsc_f1 & "','" & _
                                            hid_name_f2 & "','" & _
                                            hid_dsc_f2 & "','" & _
                                            hid_name_f3 & "','" & _
                                            hid_dsc_f3 & "','" & _
                                            hid_resppo & "','" & _
                                            hid_cussku & "','" & _
                                            hid_addinf & "','" & _
                                                 gsUsrID & "'"

                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_ShippingDetail_Cov sp_insert_SHIPGDTL_cov :" & rtnStr)
                    save_ShippingDetail_Cov = False
                    Exit Function
                End If




                'gspStr = "sp_update_SCORDDTL_SHM00001 '" & _
                '                                 hid_cocde & "','" & _
                '                                 hid_ordno & "','" & _
                '                                 hid_ordseq & "','" & _
                '                                 hid_shpqty & "','" & _
                '                                 gsUsrID & "'"

                'rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                'If rtnLong <> RC_SUCCESS Then
                '    MsgBox("Error on loading sp_update_SCORDDTL_SHM00001  :" & rtnStr)
                '    save_ShippingDetail_Cov = False
                '    Exit Function
                'End If


                'End If

                gi_saved_items_count = gi_saved_items_count + 1

                If save_SHPCKDIM_cov(hid_CREUSR, hid_shpseq, hid_ctnftr) = True Then
                Else
                    MsgBox("Error on saving COV Packing Dimension:" & hid_shpseq)
                    Exit Function
                End If

                If save_SHDTLCTN_cov(hid_CREUSR, hid_shpno, hid_shpseq) = True Then
                Else
                    MsgBox("Error on saving SHDTLCTN COV  :" & hid_shpseq)
                    Exit Function
                End If

                If save_SHCPTBKD_cov(hid_CREUSR, hid_shpno, hid_shpseq) = True Then
                Else
                    MsgBox("Error on saving SHCPTBKD COV  :" & hid_shpseq)
                    Exit Function
                End If

                If save_SHASSINF_cov(hid_CREUSR, hid_shpno, hid_shpseq) = True Then
                Else
                    MsgBox("Error on saving SHASSINF COV  :" & hid_shpseq)
                    Exit Function
                End If

            End If

        Next i

        'If gi_saved_items_count = 0 Then
        '    MsgBox("No COV detail item saved! Please Check the Shipping  and the item(s)!")
        '    save_ShippingDetail_Cov = False

        '    Dim tmpqutno As String
        '    Dim tmpcocde As String


        '    tmpqutno = txtShpNo.Text
        '    tmpcocde = cboCoCde.Text

        '    Call cmdClearClick()


        '    'txtShpNo.Text = tmpqutno
        '    'cboCoCde.Text = tmpcocde

        '    txtShpNo.Focus()





        '    Exit Function
        'End If
        save_ShippingDetail_Cov = True
    End Function

    Private Function save_SHPCKDIM(ByVal hid_creusr, ByVal COV_FLAG, ByVal seq_num, ByVal ctn_ftr, ByVal itmno, ByVal colpck) As Boolean
        save_SHPCKDIM = False

        Dim counter_delete As Integer = 0

        'If save_SHPCKDIM() = False Then
        '    Exit Function
        'End If
        Dim hpd_cocde As String
        Dim hpd_shpno As String
        Dim hpd_shpseq As String

        Dim hpd_pdseq As String
        Dim hpd_pdnum As String

        Dim hpd_dimtyp As String
        Dim hpd_ctnnam As String
        Dim hpd_des As String

        Dim hpd_ctn As String

        Dim hpd_l_cm As String
        Dim hpd_w_cm As String
        Dim hpd_h_cm As String
        Dim hpd_cbm_cm As String
        Dim hpd_ttlcbm_cm As String
        Dim hpd_gw_kg As String
        Dim hpd_ttlgw_kg As String
        Dim hpd_nw_kg As String
        Dim hpd_ttlnw_kg As String

        Dim hpd_l_in As String
        Dim hpd_w_in As String
        Dim hpd_h_in As String
        Dim hpd_cbm_in As String
        Dim hpd_ttlcbm_in As String
        Dim hpd_gw_lb As String
        Dim hpd_ttlgw_lb As String
        Dim hpd_nw_lb As String
        Dim hpd_ttlnw_lb As String

        Dim tmp_CartonFactor As Integer
        Dim hpdctnftr As Integer

        Dim hpd_creusr As String

        Dim i As Integer

        For i = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1 Step 1
            If Not IsDBNull(rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_shpseq")) Then

                If seq_num = rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_shpseq") Then

                    If Not IsDBNull(rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum")) Then

                        If rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 5 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 6 Then
                            tmp_CartonFactor = 1
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 4 Then
                            tmp_CartonFactor = 2
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 7 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 12 Then
                            tmp_CartonFactor = 3
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 13 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 20 Then
                            tmp_CartonFactor = 4
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 21 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 30 Then
                            tmp_CartonFactor = 5
                        End If
                        If IsDBNull(rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpdctnftr")) Then
                            hpdctnftr = 1
                        Else
                            hpdctnftr = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpdctnftr")
                        End If
                        '            If ctn_ftr = tmp_CartonFactor Then


                        hpd_cocde = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_cocde")
                        hpd_shpno = txtShpNo.Text.Trim
                        hpd_shpseq = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_shpseq")

                        hpd_pdseq = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_pdseq")
                        hpd_pdnum = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_pdnum")

                        hpd_dimtyp = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_dimtyp")
                        hpd_ctnnam = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ctnnam")
                        hpd_des = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_des")

                        hpd_ctn = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ctn")

                        hpd_l_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_l_cm")
                        hpd_w_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_w_cm")
                        hpd_h_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_h_cm")
                        hpd_cbm_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_cbm_cm")
                        hpd_ttlcbm_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlcbm_cm")
                        hpd_gw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_gw_kg")
                        hpd_ttlgw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlgw_kg")
                        hpd_nw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_nw_kg")
                        hpd_ttlnw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlnw_kg")

                        hpd_l_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_l_in")
                        hpd_w_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_w_in")
                        hpd_h_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_h_in")
                        hpd_cbm_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_cbm_in")
                        hpd_ttlcbm_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlcbm_in")
                        hpd_gw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_gw_lb")
                        hpd_ttlgw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlgw_lb")
                        hpd_nw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_nw_lb")
                        hpd_ttlnw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlnw_lb")

                        hpd_creusr = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_creusr")

                        If hid_creusr = "~*DEL*~" Then
                            hpd_creusr = "~*DEL*~"
                        End If

                        gspStr = ""


                        If hpd_creusr = "~*DEL*~" Or COV_FLAG = "Y" Then
                            update_inv_revisedat(hpd_shpseq, "")
                            '1022

                            '''***)
                            gspStr = "sp_physical_delete_SHPCKDIM '" & hpd_cocde & "','" & hpd_shpno & "','" & hpd_shpseq & "'"
                            rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                            If rtnLong <> RC_SUCCESS Then
                                MsgBox("Error on loading save_SHPCKDIM sp_physical_delete_SHPCKDIM:" & rtnStr)
                                save_SHPCKDIM = False
                                Exit Function
                            End If


                        ElseIf hpd_creusr = "~*ADD*~" Or hpd_creusr = "~*NEW*~" Then

                            If hpdctnftr = tmp_CartonFactor Then
                                If cboColPck.Text.Trim = "" Then
                                    cboColPck.Text = " /  /  /  /  /  /  /  /  /  / "
                                End If
                                update_inv_revisedat(hpd_shpseq, "")
                                '1022
                                gspStr = "sp_insert_SHPCKDIM '" & _
                hpd_cocde & "','" & _
                hpd_shpno & "','" & _
                hpd_shpseq & "','" & _
                hpd_pdseq & "','" & _
                hpd_pdnum & "','" & _
                hpd_dimtyp & "','" & _
                hpd_ctnnam & "','" & _
                hpd_des & "','" & _
                hpd_ctn & "','" & _
                hpd_l_cm & "','" & _
                hpd_w_cm & "','" & _
                hpd_h_cm & "','" & _
                hpd_cbm_cm & "','" & _
                hpd_ttlcbm_cm & "','" & _
                hpd_gw_kg & "','" & _
                hpd_ttlgw_kg & "','" & _
                hpd_nw_kg & "','" & _
                hpd_ttlnw_kg & "','" & _
                hpd_l_in & "','" & _
                hpd_w_in & "','" & _
                hpd_h_in & "','" & _
                hpd_cbm_in & "','" & _
                hpd_ttlcbm_in & "','" & _
                hpd_gw_lb & "','" & _
                hpd_ttlgw_lb & "','" & _
                hpd_nw_lb & "','" & _
                hpd_ttlnw_lb & "','" & _
                Split(cboCus1No.Text.Trim, " - ")(0) & "','" & _
                itmno & "','" & _
                Trim(Split(colpck, " / ")(0)) & "','" & _
                Trim(Split(colpck, " / ")(1)) & "','" & _
                Trim(Split(colpck, " / ")(2)) & "','" & _
                Trim(Split(colpck, " / ")(3)) & "','" & _
                Trim(Split(colpck, " / ")(4)) & "','" & _
                Trim(Split(colpck, " / ")(5)) & "','" & _
                Trim(Split(colpck, " / ")(6)) & "','" & _
                Trim(Split(colpck, " / ")(8)) & "','" & _
                                tmp_CartonFactor & "','" & _
                                                                 gsUsrID & "'"

                                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                                If rtnLong <> RC_SUCCESS Then
                                    MsgBox("Error on loading save_SHPCKDIM sp_insert_SHPCKDIM :" & rtnStr)
                                    save_SHPCKDIM = False
                                    Exit Function
                                End If

                            End If
                        ElseIf hpd_creusr = "~*UDA*~" Then   'u d a
                            If hpdctnftr = tmp_CartonFactor Then

                                If counter_delete = 0 Then

                                    update_inv_revisedat(hpd_shpseq, "")
                                    '1022
                                    gspStr = "sp_physical_delete_SHPCKDIM '" & hpd_cocde & "','" & hpd_shpno & "','" & hpd_shpseq & "'"
                                    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                                    If rtnLong <> RC_SUCCESS Then
                                        MsgBox("Error on loading save_SHPCKDIM sp_physical_delete_SHPCKDIM:" & rtnStr)
                                        save_SHPCKDIM = False
                                        Exit Function
                                    Else
                                        counter_delete = 1
                                    End If
                                End If

                                If hpdctnftr = tmp_CartonFactor Then
                                    If cboColPck.Text.Trim = "" Then
                                        cboColPck.Text = " /  /  /  /  /  /  /  /  /  / "
                                    End If
                                    update_inv_revisedat(hpd_shpseq, "")
                                    '1022
                                    gspStr = "sp_insert_SHPCKDIM '" & _
                    hpd_cocde & "','" & _
                    hpd_shpno & "','" & _
                    hpd_shpseq & "','" & _
                    hpd_pdseq & "','" & _
                    hpd_pdnum & "','" & _
                    hpd_dimtyp & "','" & _
                    hpd_ctnnam & "','" & _
                    hpd_des & "','" & _
                    hpd_ctn & "','" & _
                    hpd_l_cm & "','" & _
                    hpd_w_cm & "','" & _
                    hpd_h_cm & "','" & _
                    hpd_cbm_cm & "','" & _
                    hpd_ttlcbm_cm & "','" & _
                    hpd_gw_kg & "','" & _
                    hpd_ttlgw_kg & "','" & _
                    hpd_nw_kg & "','" & _
                    hpd_ttlnw_kg & "','" & _
                    hpd_l_in & "','" & _
                    hpd_w_in & "','" & _
                    hpd_h_in & "','" & _
                    hpd_cbm_in & "','" & _
                    hpd_ttlcbm_in & "','" & _
                    hpd_gw_lb & "','" & _
                    hpd_ttlgw_lb & "','" & _
                    hpd_nw_lb & "','" & _
                    hpd_ttlnw_lb & "','" & _
                    Split(cboCus1No.Text.Trim, " - ")(0) & "','" & _
                itmno & "','" & _
                Trim(Split(colpck, " / ")(0)) & "','" & _
                Trim(Split(colpck, " / ")(1)) & "','" & _
                Trim(Split(colpck, " / ")(2)) & "','" & _
                Trim(Split(colpck, " / ")(3)) & "','" & _
                Trim(Split(colpck, " / ")(4)) & "','" & _
                Trim(Split(colpck, " / ")(5)) & "','" & _
                Trim(Split(colpck, " / ")(6)) & "','" & _
                Trim(Split(colpck, " / ")(8)) & "','" & _
                                    tmp_CartonFactor & "','" & _
                                                                     gsUsrID & "'"

                                    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                                    If rtnLong <> RC_SUCCESS Then
                                        MsgBox("Error on loading save_SHPCKDIM sp_insert_SHPCKDIM :" & rtnStr)
                                        save_SHPCKDIM = False
                                        Exit Function
                                    End If

                                End If

                            End If


                        ElseIf hpd_creusr = "~*UPD*~" Then
                            If hpdctnftr = tmp_CartonFactor Then

                                update_inv_revisedat(hpd_shpseq, "")
                                '1022
                                gspStr = "sp_update_SHPCKDIM '" & _
                hpd_cocde & "','" & _
                hpd_shpno & "','" & _
                hpd_shpseq & "','" & _
                hpd_pdseq & "','" & _
                hpd_pdnum & "','" & _
                hpd_dimtyp & "','" & _
                hpd_ctnnam & "','" & _
                hpd_des & "','" & _
                hpd_ctn & "','" & _
                hpd_l_cm & "','" & _
                hpd_w_cm & "','" & _
                hpd_h_cm & "','" & _
                hpd_cbm_cm & "','" & _
                hpd_ttlcbm_cm & "','" & _
                hpd_gw_kg & "','" & _
                hpd_ttlgw_kg & "','" & _
                hpd_nw_kg & "','" & _
                hpd_ttlnw_kg & "','" & _
                hpd_l_in & "','" & _
                hpd_w_in & "','" & _
                hpd_h_in & "','" & _
                hpd_cbm_in & "','" & _
                hpd_ttlcbm_in & "','" & _
                hpd_gw_lb & "','" & _
                hpd_ttlgw_lb & "','" & _
                hpd_nw_lb & "','" & _
                hpd_ttlnw_lb & "','" & _
                Split(cboCus1No.Text.Trim, " - ")(0) & "','" & _
                itmno & "','" & _
                Trim(Split(colpck, " / ")(0)) & "','" & _
                Trim(Split(colpck, " / ")(1)) & "','" & _
                Trim(Split(colpck, " / ")(2)) & "','" & _
                Trim(Split(colpck, " / ")(3)) & "','" & _
                Trim(Split(colpck, " / ")(4)) & "','" & _
                Trim(Split(colpck, " / ")(5)) & "','" & _
                Trim(Split(colpck, " / ")(6)) & "','" & _
                Trim(Split(colpck, " / ")(8)) & "','" & _
                                tmp_CartonFactor & "','" & _
                                                                 gsUsrID & "'"


                                'MsgBox(i)

                                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                                If rtnLong <> RC_SUCCESS Then
                                    MsgBox("Error on loading save_SHPCKDIM sp_update_SHPCKDIM :" & rtnStr)
                                    save_SHPCKDIM = False
                                    Exit Function
                                End If

                            End If

                        End If
                        'gi_saved_items_count = gi_saved_items_count + 1


                        '           End If

                    End If
                End If

            End If
        Next i



        save_SHPCKDIM = True
    End Function


    Private Function save_SHPCKDIM_cov(ByVal hpd_creusr, ByVal seq_num, ByVal ctn_ftr) As Boolean
        save_SHPCKDIM_cov = False

        'If save_SHPCKDIM_cov() = False Then
        '    Exit Function
        'End If
        Dim hpd_cocde As String
        Dim hpd_shpno As String
        Dim hpd_shpseq As String

        Dim hpd_pdseq As String
        Dim hpd_pdnum As String

        Dim hpd_dimtyp As String
        Dim hpd_ctnnam As String
        Dim hpd_des As String

        Dim hpd_ctn As String

        Dim hpd_l_cm As String
        Dim hpd_w_cm As String
        Dim hpd_h_cm As String
        Dim hpd_cbm_cm As String
        Dim hpd_ttlcbm_cm As String
        Dim hpd_gw_kg As String
        Dim hpd_ttlgw_kg As String
        Dim hpd_nw_kg As String
        Dim hpd_ttlnw_kg As String

        Dim hpd_l_in As String
        Dim hpd_w_in As String
        Dim hpd_h_in As String
        Dim hpd_cbm_in As String
        Dim hpd_ttlcbm_in As String
        Dim hpd_gw_lb As String
        Dim hpd_ttlgw_lb As String
        Dim hpd_nw_lb As String
        Dim hpd_ttlnw_lb As String

        Dim tmp_CartonFactor As Integer

        Dim i As Integer

        For i = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1 Step 1
            If Not IsDBNull(rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_shpseq")) Then

                If seq_num = rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_shpseq") Then

                    If Not IsDBNull(rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum")) Then

                        If rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 5 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 6 Then
                            tmp_CartonFactor = 1
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 4 Then
                            tmp_CartonFactor = 2
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 7 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 12 Then
                            tmp_CartonFactor = 3
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 13 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 20 Then
                            tmp_CartonFactor = 4
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 21 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 30 Then
                            tmp_CartonFactor = 5
                        End If

                        '            If ctn_ftr = tmp_CartonFactor Then


                        hpd_cocde = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_cocde")
                        hpd_shpno = txtShpNo.Text.Trim
                        hpd_shpseq = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_shpseq")

                        hpd_pdseq = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_pdseq")
                        hpd_pdnum = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_pdnum")

                        hpd_dimtyp = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_dimtyp")
                        hpd_ctnnam = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ctnnam")
                        hpd_des = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_des")

                        hpd_ctn = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ctn")

                        hpd_l_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_l_cm")
                        hpd_w_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_w_cm")
                        hpd_h_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_h_cm")
                        hpd_cbm_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_cbm_cm")
                        hpd_ttlcbm_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlcbm_cm")
                        hpd_gw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_gw_kg")
                        hpd_ttlgw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlgw_kg")
                        hpd_nw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_nw_kg")
                        hpd_ttlnw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlnw_kg")

                        hpd_l_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_l_in")
                        hpd_w_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_w_in")
                        hpd_h_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_h_in")
                        hpd_cbm_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_cbm_in")
                        hpd_ttlcbm_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlcbm_in")
                        hpd_gw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_gw_lb")
                        hpd_ttlgw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlgw_lb")
                        hpd_nw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_nw_lb")
                        hpd_ttlnw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlnw_lb")

                        hpd_creusr = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_creusr")


                        If cboColPck.Text.Trim = "" Then
                            cboColPck.Text = " /  /  /  /  /  /  /  /  /  / "
                        End If
                        gspStr = "sp_insert_SHPCKDIM_COV '" & _
        hpd_cocde & "','" & _
        hpd_shpno & "','" & _
        hpd_shpseq & "','" & _
        hpd_pdseq & "','" & _
        hpd_pdnum & "','" & _
        hpd_dimtyp & "','" & _
        hpd_ctnnam & "','" & _
        hpd_des & "','" & _
        hpd_ctn & "','" & _
        hpd_l_cm & "','" & _
        hpd_w_cm & "','" & _
        hpd_h_cm & "','" & _
        hpd_cbm_cm & "','" & _
        hpd_ttlcbm_cm & "','" & _
        hpd_gw_kg & "','" & _
        hpd_ttlgw_kg & "','" & _
        hpd_nw_kg & "','" & _
        hpd_ttlnw_kg & "','" & _
        hpd_l_in & "','" & _
        hpd_w_in & "','" & _
        hpd_h_in & "','" & _
        hpd_cbm_in & "','" & _
        hpd_ttlcbm_in & "','" & _
        hpd_gw_lb & "','" & _
        hpd_ttlgw_lb & "','" & _
        hpd_nw_lb & "','" & _
        hpd_ttlnw_lb & "','" & _
        Split(cboCus1No.Text.Trim, " - ")(0) & "','" & _
        cboItmNo.Text.Trim & "','" & _
        Split(cboColPck.Text, " / ")(0) & "','" & _
        Split(cboColPck.Text, " / ")(1) & "','" & _
        Split(cboColPck.Text, " / ")(2) & "','" & _
        Split(cboColPck.Text, " / ")(3) & "','" & _
        Split(cboColPck.Text, " / ")(4) & "','" & _
        Split(cboColPck.Text, " / ")(5) & "','" & _
        Split(cboColPck.Text, " / ")(6) & "','" & _
        Split(cboColPck.Text, " / ")(8) & "','" & _
                        tmp_CartonFactor & "','" & _
                                                         gsUsrID & "'"

                        rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                        If rtnLong <> RC_SUCCESS Then
                            MsgBox("Error on loading save_SHPCKDIM_cov sp_insert_SHPCKDIM :" & rtnStr)
                            save_SHPCKDIM_cov = False
                            Exit Function
                        End If


                    End If

                End If
            End If
        Next i

        'If gi_saved_items_count = 0 Then
        '    MsgBox("No item saved! Please Check the Shipping  and the item(s)!")
        '    save_SHPCKDIM_cov = False
        '    Exit Function
        'End If

        save_SHPCKDIM_cov = True
    End Function


    Private Function save_SHDTLCTN_cov(ByVal hpd_creusr, ByVal hid_shpno, ByVal hid_shpseq) As Boolean
        save_SHDTLCTN_cov = False

        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = "hdc_shpseq = " & hid_shpseq 

        For index9 As Integer = 0 To rs_SHDTLCTN.Tables("RESULT").DefaultView.Count - 1

            gspStr = "sp_insert_SHDTLCTN_cov '" & cboCoCde.Text.Trim & "','" & hid_shpno & "','" & hid_shpseq & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_from") & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_to") & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_ttlctn") & "','" _
                                & gsUsrID & "'"

            rtnLong = execute_SQLStatement(gspStr, rs_save_only, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_sainvhdr_cus1no:" & rtnStr)
                Exit Function
            End If
        Next



        save_SHDTLCTN_cov = True
    End Function
    Private Function save_SHCPTBKD_cov(ByVal hpd_creusr, ByVal hid_shpno, ByVal hid_shpseq) As Boolean
        save_SHCPTBKD_cov = False
        If rs_SHCPTBKD Is Nothing Then
            save_SHCPTBKD_cov = True
            Exit Function
        End If
        rs_SHCPTBKD.Tables("RESULT").DefaultView.RowFilter = "shb_ordseq = " & hid_shpseq

        For index9 As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").DefaultView.Count - 1

            gspStr = "sp_insert_SHCPTBKD_cov '" & _
 rs_SHCPTBKD.Tables("RESULT").DefaultView(index9)("shb_cocde") & "','" _
 & txtShpNo.Text.Trim & "','" _
 & rs_SHCPTBKD.Tables("RESULT").DefaultView(index9)("shb_ordseq") & "','" _
 & rs_SHCPTBKD.Tables("RESULT").DefaultView(index9)("shb_itmno") & "','" _
 & rs_SHCPTBKD.Tables("RESULT").DefaultView(index9)("shb_cptseq") & "','" _
 & rs_SHCPTBKD.Tables("RESULT").DefaultView(index9)("shb_cpt") & "','" _
 & rs_SHCPTBKD.Tables("RESULT").DefaultView(index9)("shb_curcde") & "','" _
 & rs_SHCPTBKD.Tables("RESULT").DefaultView(index9)("shb_cst") & "','" _
 & rs_SHCPTBKD.Tables("RESULT").DefaultView(index9)("shb_cstpct") & "','" _
 & rs_SHCPTBKD.Tables("RESULT").DefaultView(index9)("shb_pct") & "','" _
                                                 & gsUsrID & "'"


            rtnLong = execute_SQLStatement(gspStr, rs_save_only, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_sainvhdr_cus1no:" & rtnStr)
                Exit Function
            End If
        Next



        save_SHCPTBKD_cov = True
    End Function

    Private Function save_SHASSINF_cov(ByVal hpd_creusr, ByVal hid_shpno, ByVal hid_shpseq) As Boolean
        save_SHASSINF_cov = False
        If rs_SHASSINF Is Nothing Then
            save_SHASSINF_cov = True
            Exit Function
        End If
        rs_SHASSINF.Tables("RESULT").DefaultView.RowFilter = "hai_shpseq = " & hid_shpseq

        For index9 As Integer = 0 To rs_SHASSINF.Tables("RESULT").DefaultView.Count - 1

            gspStr = "sp_insert_SHASSINF_cov '" _
 & txtShpNo.Text.Trim & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_shpseq") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_ordno") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_ordseq") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_itmno") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_assitm") & "','" _
 & Replace(rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_assdsc"), "'", "''") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_cusitm") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_colcde") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_coldsc") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_cussku") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_upcean") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_cusrtl") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_untcde") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_inrqty") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_mtrqty") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_imperiod") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_cusstyno") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_tordno") & "','" _
 & rs_SHASSINF.Tables("RESULT").DefaultView(index9)("hai_tordseq") & "','" _
                                                 & gsUsrID & "'"


            rtnLong = execute_SQLStatement(gspStr, rs_save_only, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_sainvhdr_cus1no:" & rtnStr)
                Exit Function
            End If
        Next



        save_SHASSINF_cov = True
    End Function

    'Private Function save_SHPCKDIM(ByVal hpd_creusr, ByVal seq_num, ByVal ctn_ftr) As Boolean
    '    save_SHPCKDIM = False

    '    'If save_SHPCKDIM() = False Then
    '    '    Exit Function
    '    'End If
    '    Dim hpd_cocde As String
    '    Dim hpd_shpno As String
    '    Dim hpd_shpseq As String

    '    Dim hpd_pdseq As String
    '    Dim hpd_pdnum As String

    '    Dim hpd_dimtyp As String
    '    Dim hpd_ctnnam As String
    '    Dim hpd_des As String

    '    Dim hpd_ctn As String

    '    Dim hpd_l_cm As String
    '    Dim hpd_w_cm As String
    '    Dim hpd_h_cm As String
    '    Dim hpd_cbm_cm As String
    '    Dim hpd_ttlcbm_cm As String
    '    Dim hpd_gw_kg As String
    '    Dim hpd_ttlgw_kg As String
    '    Dim hpd_nw_kg As String
    '    Dim hpd_ttlnw_kg As String

    '    Dim hpd_l_in As String
    '    Dim hpd_w_in As String
    '    Dim hpd_h_in As String
    '    Dim hpd_cbm_in As String
    '    Dim hpd_ttlcbm_in As String
    '    Dim hpd_gw_lb As String
    '    Dim hpd_ttlgw_lb As String
    '    Dim hpd_nw_lb As String
    '    Dim hpd_ttlnw_lb As String

    '    Dim tmp_CartonFactor As Integer

    '    Dim i As Integer

    '    For i = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1 Step 1
    '        If Not IsDBNull(rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum")) Then

    '            If rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 5 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 6 Then
    '                tmp_CartonFactor = 1
    '            ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 4 Then
    '                tmp_CartonFactor = 2
    '            ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 7 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 12 Then
    '                tmp_CartonFactor = 3
    '            ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 13 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 20 Then
    '                tmp_CartonFactor = 4
    '            ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") >= 21 And rs_SHPCKDIM.Tables("RESULT").Rows(i)("hpd_pdnum") <= 30 Then
    '                tmp_CartonFactor = 5
    '            End If

    '            '            If ctn_ftr = tmp_CartonFactor Then


    '            hpd_cocde = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_cocde")
    '            hpd_shpno = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_shpno")
    '            hpd_shpseq = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_shpseq")

    '            hpd_pdseq = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_pdseq")
    '            hpd_pdnum = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_pdnum")

    '            hpd_dimtyp = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_dimtyp")
    '            hpd_ctnnam = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ctnnam")
    '            hpd_des = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_des")

    '            hpd_ctn = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ctn")

    '            hpd_l_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_l_cm")
    '            hpd_w_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_w_cm")
    '            hpd_h_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_h_cm")
    '            hpd_cbm_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_cbm_cm")
    '            hpd_ttlcbm_cm = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlcbm_cm")
    '            hpd_gw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_gw_kg")
    '            hpd_ttlgw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlgw_kg")
    '            hpd_nw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_nw_kg")
    '            hpd_ttlnw_kg = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlnw_kg")

    '            hpd_l_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_l_in")
    '            hpd_w_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_w_in")
    '            hpd_h_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_h_in")
    '            hpd_cbm_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_cbm_in")
    '            hpd_ttlcbm_in = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlcbm_in")
    '            hpd_gw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_gw_lb")
    '            hpd_ttlgw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlgw_lb")
    '            hpd_nw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_nw_lb")
    '            hpd_ttlnw_lb = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_ttlnw_lb")

    '            hpd_creusr = rs_SHPCKDIM.Tables("RESULT").Rows(i).Item("hpd_creusr")


    '            gspStr = ""


    '            If hpd_creusr = "~*DEL*~" Then

    '                '''***)
    '                gspStr = "sp_physical_delete_SHPCKDIM '" & hpd_cocde & "','" & hpd_shpno & "','" & hpd_shpseq & "'"
    '                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
    '                If rtnLong <> RC_SUCCESS Then
    '                    MsgBox("Error on loading save_SHPCKDIM sp_physical_delete_SHPCKDIM:" & rtnStr)
    '                    save_SHPCKDIM = False
    '                    Exit Function
    '                End If


    '            ElseIf hpd_creusr = "~*ADD*~" Or hpd_creusr = "~*NEW*~" Then

    '                If cboColPck.Text.Trim = "" Then
    '                    cboColPck.Text = "//////////"
    '                End If
    '                gspStr = "sp_insert_SHPCKDIM '" & _
    'hpd_cocde & "','" & _
    'hpd_shpno & "','" & _
    'hpd_shpseq & "','" & _
    'hpd_pdseq & "','" & _
    'hpd_pdnum & "','" & _
    'hpd_dimtyp & "','" & _
    'hpd_ctnnam & "','" & _
    'hpd_des & "','" & _
    'hpd_ctn & "','" & _
    'hpd_l_cm & "','" & _
    'hpd_w_cm & "','" & _
    'hpd_h_cm & "','" & _
    'hpd_cbm_cm & "','" & _
    'hpd_ttlcbm_cm & "','" & _
    'hpd_gw_kg & "','" & _
    'hpd_ttlgw_kg & "','" & _
    'hpd_nw_kg & "','" & _
    'hpd_ttlnw_kg & "','" & _
    'hpd_l_in & "','" & _
    'hpd_w_in & "','" & _
    'hpd_h_in & "','" & _
    'hpd_cbm_in & "','" & _
    'hpd_ttlcbm_in & "','" & _
    'hpd_gw_lb & "','" & _
    'hpd_ttlgw_lb & "','" & _
    'hpd_nw_lb & "','" & _
    'hpd_ttlnw_lb & "','" & _
    'Split(cboCus1No.Text.Trim, " - ")(0) & "','" & _
    'cboItmNo.Text.Trim & "','" & _
    'Split(cboColPck.Text, " / ")(0) & "','" & _
    'Split(cboColPck.Text, " / ")(1) & "','" & _
    'Split(cboColPck.Text, " / ")(2) & "','" & _
    'Split(cboColPck.Text, " / ")(3) & "','" & _
    'Split(cboColPck.Text, " / ")(4) & "','" & _
    'Split(cboColPck.Text, " / ")(5) & "','" & _
    'Split(cboColPck.Text, " / ")(6) & "','" & _
    'Split(cboColPck.Text, " / ")(8) & "','" & _
    '                tmp_CartonFactor & "','" & _
    '                                                 gsUsrID & "'"

    '                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
    '                If rtnLong <> RC_SUCCESS Then
    '                    MsgBox("Error on loading save_SHPCKDIM sp_insert_SHPCKDIM :" & rtnStr)
    '                    save_SHPCKDIM = False
    '                    Exit Function
    '                End If
    '            ElseIf hpd_creusr = "~*UPD*~" Then

    '                gspStr = "sp_update_SHPCKDIM '" & _
    'hpd_cocde & "','" & _
    'hpd_shpno & "','" & _
    'hpd_shpseq & "','" & _
    'hpd_pdseq & "','" & _
    'hpd_pdnum & "','" & _
    'hpd_dimtyp & "','" & _
    'hpd_ctnnam & "','" & _
    'hpd_des & "','" & _
    'hpd_ctn & "','" & _
    'hpd_l_cm & "','" & _
    'hpd_w_cm & "','" & _
    'hpd_h_cm & "','" & _
    'hpd_cbm_cm & "','" & _
    'hpd_ttlcbm_cm & "','" & _
    'hpd_gw_kg & "','" & _
    'hpd_ttlgw_kg & "','" & _
    'hpd_nw_kg & "','" & _
    'hpd_ttlnw_kg & "','" & _
    'hpd_l_in & "','" & _
    'hpd_w_in & "','" & _
    'hpd_h_in & "','" & _
    'hpd_cbm_in & "','" & _
    'hpd_ttlcbm_in & "','" & _
    'hpd_gw_lb & "','" & _
    'hpd_ttlgw_lb & "','" & _
    'hpd_nw_lb & "','" & _
    'hpd_ttlnw_lb & "','" & _
    'Split(cboCus1No.Text.Trim, " - ")(0) & "','" & _
    'cboItmNo.Text.Trim & "','" & _
    'Split(cboColPck.Text, " / ")(0) & "','" & _
    'Split(cboColPck.Text, " / ")(1) & "','" & _
    'Split(cboColPck.Text, " / ")(2) & "','" & _
    'Split(cboColPck.Text, " / ")(3) & "','" & _
    'Split(cboColPck.Text, " / ")(4) & "','" & _
    'Split(cboColPck.Text, " / ")(5) & "','" & _
    'Split(cboColPck.Text, " / ")(6) & "','" & _
    'Split(cboColPck.Text, " / ")(8) & "','" & _
    '                tmp_CartonFactor & "','" & _
    '                                                 gsUsrID & "'"


    '                'MsgBox(i)

    '                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
    '                If rtnLong <> RC_SUCCESS Then
    '                    MsgBox("Error on loading save_SHPCKDIM sp_update_SHPCKDIM :" & rtnStr)
    '                    save_SHPCKDIM = False
    '                    Exit Function
    '                End If
    '            End If
    '            'gi_saved_items_count = gi_saved_items_count + 1


    '            '           End If

    '        End If

    '    Next i

    '    'If gi_saved_items_count = 0 Then
    '    '    MsgBox("No item saved! Please Check the Shipping  and the item(s)!")
    '    '    save_SHPCKDIM = False
    '    '    Exit Function
    '    'End If

    '    save_SHPCKDIM = True
    'End Function

    Private Function save_SHSMPINV() As Boolean
        save_SHSMPINV = False

        'If save_SHSMPINV() = False Then
        '    Exit Function
        'End If
        Dim hsi_cocde As String
        Dim hsi_cus1no As String
        Dim hsi_shpno As String
        Dim hsi_shinvno As String
        Dim hsi_sminvno As String
        Dim hsi_rmk As String
        Dim hsi_creusr As String

        Dim i As Integer
        If rs_SHSMPINV Is Nothing Then
            save_SHSMPINV = True
            Exit Function
        End If

        If rs_SHSMPINV.Tables("RESULT") Is Nothing Then
            save_SHSMPINV = True
            Exit Function
        End If
     
        For i = 0 To rs_SHSMPINV.Tables("RESULT").Rows.Count - 1 Step 1

            hsi_cocde = rs_SHSMPINV.Tables("RESULT").Rows(i).Item("hsi_cocde")
            hsi_cus1no = rs_SHSMPINV.Tables("RESULT").Rows(i).Item("hsi_cus1no")
            hsi_shpno = txtShpNo.Text.Trim
            hsi_shinvno = ""
            '            hsi_shinvno = rs_SHSMPINV.Tables("RESULT").Rows(i).Item("hsi_shinvno")
            If Not IsDBNull(rs_SHSMPINV.Tables("RESULT").Rows(i).Item("hsi_sminvno")) Then
                hsi_sminvno = rs_SHSMPINV.Tables("RESULT").Rows(i).Item("hsi_sminvno")
            Else
                hsi_sminvno = ""
            End If


            If Trim(hsi_sminvno) <> "" Then
             If IsDBNull(rs_SHSMPINV.Tables("RESULT").Rows(i).Item("hsi_rmk")) Then
                    hsi_rmk = ""
                Else
                    hsi_rmk = rs_SHSMPINV.Tables("RESULT").Rows(i).Item("hsi_rmk")
                End If
                hsi_rmk = Replace(hsi_rmk, "'", "''")

                'temp

                hsi_creusr = rs_SHSMPINV.Tables("RESULT").Rows(i).Item("hsi_creusr")

                If rs_SHSMPINV.Tables("RESULT").Rows(i).Item("DEL") = "Y" Then
                    hsi_creusr = "~*DEL*~"
                End If

                If Trim(hsi_sminvno) = "" Then
                    hsi_creusr = "~*DEL*~"
                End If

                gspStr = ""


                If hsi_creusr = "~*DEL*~" Then

                    '''***)
                    gspStr = "sp_physical_delete_SHSMPINV '" & hsi_cocde & "','" & hsi_shpno & "','" & hsi_sminvno & "'"
                    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        MsgBox("Error on loading save_SHSMPINV sp_physical_delete_SHSMPINV:" & rtnStr)
                        save_SHSMPINV = False
                        Exit Function
                    End If


                ElseIf hsi_creusr = "~*ADD*~" Or hsi_creusr = "~*NEW*~" Then

                    gspStr = "sp_insert_SHSMPINV '" & _
    hsi_cocde & "','" & _
    hsi_cus1no & "','" & _
    hsi_shpno & "','" & _
    hsi_shinvno & "','" & _
    hsi_sminvno & "','" & _
    hsi_rmk & "','" & _
                                                     gsUsrID & "'"

                    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        MsgBox("Error on loading save_SHSMPINV sp_insert_SHSMPINV :" & rtnStr)
                        save_SHSMPINV = False
                        Exit Function
                    End If
                ElseIf hsi_creusr = "~*UPD*~" Then

                    gspStr = "sp_update_SHSMPINV '" & _
    hsi_cocde & "','" & _
    hsi_cus1no & "','" & _
    hsi_shpno & "','" & _
    hsi_shinvno & "','" & _
    hsi_sminvno & "','" & _
    hsi_rmk & "','" & _
                                                     gsUsrID & "'"

                    rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        MsgBox("Error on loading save_SHSMPINV sp_update_SHSMPINV :" & rtnStr)
                        save_SHSMPINV = False
                        Exit Function
                    End If
                End If
                'gi_saved_items_count = gi_saved_items_count + 1


            End If

        Next i

        'If gi_saved_items_count = 0 Then
        '    MsgBox("No item saved! Please Check the Shipping  and the item(s)!")
        '    save_SHSMPINV = False
        '    Exit Function
        'End If

        save_SHSMPINV = True
    End Function
    Private Function save_SHDISPRM_rvdat(ByVal rs_SHDISPRM As DataSet) As Boolean
        save_SHDISPRM_rvdat = False


        'If save_SHDISPRM_rvdat() = False Then
        '    Exit Function
        'End If

        Dim hdp_cocde As String
        Dim hdp_shpno As String
        Dim hdp_invno As String
        Dim hdp_type As String
        Dim hdp_seqno As String
        Dim hdp_cde As String
        Dim hdp_dsc As String
        Dim hdp_pctamt As String
        Dim hdp_pct As String
        Dim hdp_amt As String
        Dim hdp_creusr As String


        Dim i As Integer

        If rs_SHDISPRM Is Nothing Then
            save_SHDISPRM_rvdat = True
            Exit Function
        End If
        If rs_SHDISPRM.Tables("RESULT") Is Nothing Then
            save_SHDISPRM_rvdat = True
            Exit Function
        End If

        For i = 0 To rs_SHDISPRM.Tables("RESULT").Rows.Count - 1 Step 1

            hdp_cocde = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_cocde")
            hdp_shpno = txtShpNo.Text.Trim

            hdp_invno = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_invno")
            hdp_type = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_type")
            hdp_seqno = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_seqno")
            hdp_cde = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_cde")
   
            If IsDBNull(rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_dsc")) Then
                hdp_dsc = ""
            Else
                hdp_dsc = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_dsc")
            End If

            hdp_pctamt = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_pctamt")
            hdp_pct = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_pct")

            If IsDBNull(rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_amt")) Then
                hdp_amt = 0
            Else
                hdp_amt = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_amt")
            End If
            hdp_creusr = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_creusr")

            If hdp_creusr <> "~*ADD*~" And _
             hdp_creusr <> "~*NEW*~" And _
              hdp_creusr <> "~*DEL*~" Then
                hdp_creusr = "~*UPD*~"
            End If

            gspStr = ""


            If hdp_creusr = "~*DEL*~" Then
                update_inv_revisedat(0, hdp_invno)
                '1022

                '''***)
    

            ElseIf hdp_creusr = "~*ADD*~" Or hdp_creusr = "~*NEW*~" Then

                update_inv_revisedat(0, hdp_invno)
                '1022
    
            ElseIf hdp_creusr = "~*UPD*~" Then
                update_inv_revisedat(0, hdp_invno)
                '1022

            End If
            'gi_saved_items_count = gi_saved_items_count + 1


        Next i

        'If gi_saved_items_count = 0 Then
        '    MsgBox("No item saved! Please Check the Shipping  and the item(s)!")
        '    save_SHDISPRM_rvdat = False
        '    Exit Function
        'End If

        save_SHDISPRM_rvdat = True
    End Function


    Private Function save_SHDISPRM(ByVal rs_SHDISPRM As DataSet) As Boolean
        save_SHDISPRM = False


        'If save_SHDISPRM() = False Then
        '    Exit Function
        'End If

        Dim hdp_cocde As String
        Dim hdp_shpno As String
        Dim hdp_invno As String
        Dim hdp_type As String
        Dim hdp_seqno As String
        Dim hdp_cde As String
        Dim hdp_dsc As String
        Dim hdp_pctamt As String
        Dim hdp_pct As String
        Dim hdp_amt As String
        Dim hdp_creusr As String
		Dim hdp_del As String
 

        Dim i As Integer

        If rs_SHDISPRM Is Nothing Then
            save_SHDISPRM = True
            Exit Function
        End If
        If rs_SHDISPRM.Tables("RESULT") Is Nothing Then
            save_SHDISPRM = True
            Exit Function
        End If

        For i = 0 To rs_SHDISPRM.Tables("RESULT").Rows.Count - 1 Step 1

            hdp_cocde = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_cocde")
            hdp_shpno = txtShpNo.Text.Trim

            hdp_invno = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_invno")
            hdp_type = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_type")
            hdp_seqno = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_seqno")
            hdp_cde = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_cde")
          
            If IsDBNull(rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_dsc")) Then
                hdp_dsc = ""
            Else
                hdp_dsc = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_dsc")
            End If


            hdp_pctamt = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_pctamt")
            hdp_pct = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_pct")

            If IsDBNull(rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_amt")) Then
                hdp_amt = 0
            Else
                hdp_amt = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_amt")
            End If
            hdp_creusr = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_creusr")
			hdp_del = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("del")
	   
	   
	   
            If hdp_creusr <> "~*ADD*~" And _
             hdp_creusr <> "~*NEW*~" And _
              hdp_creusr <> "~*DEL*~" Then
                hdp_creusr = "~*UPD*~"
            End If

            gspStr = ""


            If hdp_creusr = "~*DEL*~" Or hdp_del = "Y" Then
                update_inv_revisedat(0, hdp_invno)
                '1022

                '''***)
                gspStr = "sp_physical_delete_SHDISPRM '" & hdp_cocde & "','" & hdp_shpno & "','" & hdp_invno & "','" & hdp_type & "','" & hdp_seqno & "'"
                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_SHDISPRM sp_physical_delete_SHDISPRM:" & rtnStr)
                    save_SHDISPRM = False
                    Exit Function
                End If


            ElseIf hdp_creusr = "~*ADD*~" Or hdp_creusr = "~*NEW*~" Then

                update_inv_revisedat(0, hdp_invno)
                '1022
                gspStr = "sp_insert_SHDISPRM '" & _
hdp_cocde & "','" & _
hdp_shpno & "','" & _
hdp_invno & "','" & _
hdp_type & "','" & _
hdp_seqno & "','" & _
hdp_cde & "','" & _
hdp_dsc & "','" & _
hdp_pctamt & "','" & _
hdp_pct & "','" & _
hdp_amt & "','" & _
                                                 gsUsrID & "'"

                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_SHDISPRM sp_insert_SHDISPRM :" & rtnStr)
                    save_SHDISPRM = False
                    Exit Function
                End If
            ElseIf hdp_creusr = "~*UPD*~" Then
                update_inv_revisedat(0, hdp_invno)
                '1022

                gspStr = "sp_update_SHDISPRM '" & _
hdp_cocde & "','" & _
hdp_shpno & "','" & _
hdp_invno & "','" & _
hdp_type & "','" & _
hdp_seqno & "','" & _
hdp_cde & "','" & _
hdp_dsc & "','" & _
hdp_pctamt & "','" & _
hdp_pct & "','" & _
hdp_amt & "','" & _
                                                 gsUsrID & "'"

                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_SHDISPRM sp_update_SHDISPRM :" & rtnStr)
                    save_SHDISPRM = False
                    Exit Function
                End If
            End If
            'gi_saved_items_count = gi_saved_items_count + 1


        Next i

        'If gi_saved_items_count = 0 Then
        '    MsgBox("No item saved! Please Check the Shipping  and the item(s)!")
        '    save_SHDISPRM = False
        '    Exit Function
        'End If

        save_SHDISPRM = True
    End Function

    Private Function check_SHDISPRM(ByVal rs_SHDISPRM As DataSet) As Boolean
        check_SHDISPRM = False


        'If check_SHDISPRM() = False Then
        '    Exit Function
        'End If

        Dim hdp_cocde As String
        Dim hdp_shpno As String
        Dim hdp_invno As String
        Dim hdp_type As String
        Dim hdp_seqno As String
        Dim hdp_cde As String
        Dim hdp_dsc As String
        Dim hdp_pctamt As String
        Dim hdp_pct As String
        Dim hdp_amt As String
        Dim hdp_creusr As String


        Dim i As Integer

        If rs_SHDISPRM Is Nothing Then
            check_SHDISPRM = True
            Exit Function
        End If
        If rs_SHDISPRM.Tables("RESULT") Is Nothing Then
            check_SHDISPRM = True
            Exit Function
        End If

        For i = 0 To rs_SHDISPRM.Tables("RESULT").Rows.Count - 1 Step 1
            If Not Trim(rs_SHDISPRM.Tables("RESULT").Rows(i).Item("DEL")) = "Y" Then

                hdp_cocde = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_cocde")
                hdp_shpno = txtShpNo.Text.Trim

                hdp_invno = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_invno")
                hdp_type = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_type")
                hdp_seqno = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_seqno")
                hdp_cde = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_cde")

                If IsDBNull(rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_dsc")) Then
                    hdp_dsc = ""
                Else
                    hdp_dsc = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_dsc")
                End If


                hdp_pctamt = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_pctamt")
                hdp_pct = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_pct")

                If IsDBNull(rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_amt")) Then
                    hdp_amt = 0
                Else
                    hdp_amt = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_amt")
                End If
                hdp_creusr = rs_SHDISPRM.Tables("RESULT").Rows(i).Item("hdp_creusr")

                If hdp_creusr <> "~*ADD*~" And _
                 hdp_creusr <> "~*NEW*~" And _
                  hdp_creusr <> "~*DEL*~" Then
                    hdp_creusr = "~*UPD*~"
                End If

                gspStr = ""


                If hdp_creusr = "~*DEL*~" Then
                Else
                    If Trim(hdp_cde) = "" Or Trim(hdp_dsc) = "" Then
                        MsgBox("Discount/Premium Code/Description should not be empty!")
                        check_SHDISPRM = False
                        Exit Function
                    End If

                    If hdp_amt = 0 Then
                        MsgBox("Discount/Premium Amount should not zero!")
                        check_SHDISPRM = False
                        Exit Function
                    End If

                End If

            End If

        Next i


        check_SHDISPRM = True
    End Function


    Private Function save_SHCPTBKD() As Boolean
        save_SHCPTBKD = False


        'If save_SHCPTBKD() = False Then
        '    Exit Function
        'End If
        Dim shb_cocde As String
        Dim shb_ordno As String    ''' shp order
        Dim shb_ordseq As String '''shp seq
        Dim shb_itmno As String
        Dim shb_cptseq As String
        Dim shb_cpt As String
        Dim shb_curcde As String
        Dim shb_cst As String
        Dim shb_cstpct As String
        Dim shb_pct As String
        Dim shb_creusr As String
        Dim rs_tmp As DataSet
        Dim hid_creusr As String
        Dim hid_cov As String
        Dim shb_status As String


        rs_tmp = rs_SHIPGDTL.Copy





        Dim i As Integer
        If rs_SHCPTBKD Is Nothing Then
            save_SHCPTBKD = True
            Exit Function
        End If

        For i = 0 To rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1 Step 1

            shb_cocde = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_cocde")
            shb_ordno = txtShpNo.Text.Trim
            shb_ordseq = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_ordseq")

            rs_tmp.Tables("result").DefaultView.RowFilter = "hid_shpseq = " & shb_ordseq
            If rs_tmp.Tables("result").DefaultView.Count > 0 Then
                hid_creusr = rs_tmp.Tables("result").DefaultView(0)("hid_creusr")
                hid_cov = rs_tmp.Tables("result").DefaultView(0)("COV")
            End If
            '

            shb_itmno = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_itmno")
            shb_cptseq = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_cptseq")
            shb_cpt = Replace(rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_cpt"), "'", "''")
            shb_curcde = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_curcde")
            shb_cst = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_cst")
            shb_cstpct = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_cstpct")
            shb_pct = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_pct")
            shb_creusr = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_creusr")
            shb_status = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_status")
            If shb_creusr <> "~*ADD*~" And _
             shb_creusr <> "~*NEW*~" And _
             shb_creusr <> "~*AEL*~" And _
              shb_creusr <> "~*DEL*~" Then
                shb_creusr = "~*UPD*~"
            End If

            If shb_creusr = "~*AEL*~" Then
                shb_creusr = "~*DEL*~"
            End If

            If hid_creusr = "~*DEL*~" Then
                shb_creusr = "~*DEL*~"
            End If


            If shb_status = "Y" Then
                shb_creusr = "~*DEL*~"
            End If

            gspStr = ""


            If shb_creusr = "~*DEL*~" Or shb_creusr = "~*AEL*~" Or hid_cov = "Y" Then
                update_inv_revisedat(shb_ordseq, "")
                '1022

                '''***)
                gspStr = "sp_physical_delete_SHCPTBKD '" & shb_cocde & "','" & shb_ordno & "','" & shb_ordseq & "','" & shb_cptseq & "'"
                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_SHCPTBKD sp_physical_delete_SHCPTBKD:" & rtnStr)
                    save_SHCPTBKD = False
                    Exit Function
                End If


            ElseIf shb_creusr = "~*ADD*~" Or shb_creusr = "~*NEW*~" Then

                update_inv_revisedat(shb_ordseq, "")
                '1022
                gspStr = "sp_insert_SHCPTBKD '" & _
shb_cocde & "','" & _
 shb_ordno & "','" & _
 shb_ordseq & "','" & _
 shb_itmno & "','" & _
 shb_cptseq & "','" & _
 shb_cpt & "','" & _
 shb_curcde & "','" & _
 shb_cst & "','" & _
 shb_cstpct & "','" & _
 shb_pct & "','" & _
                                                 gsUsrID & "'"

                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_SHCPTBKD sp_insert_SHCPTBKD :" & rtnStr)
                    save_SHCPTBKD = False
                    Exit Function
                End If
            ElseIf shb_creusr = "~*UPD*~" Then
                update_inv_revisedat(shb_ordseq, "")
                '1022

                gspStr = "sp_update_SHCPTBKD '" & _
shb_cocde & "','" & _
 shb_ordno & "','" & _
 shb_ordseq & "','" & _
 shb_itmno & "','" & _
 shb_cptseq & "','" & _
 shb_cpt & "','" & _
 shb_curcde & "','" & _
 shb_cst & "','" & _
 shb_cstpct & "','" & _
 shb_pct & "','" & _
                                                 gsUsrID & "'"

                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_SHCPTBKD sp_update_SHCPTBKD :" & rtnStr)
                    save_SHCPTBKD = False
                    Exit Function
                End If
            End If
            'gi_saved_items_count = gi_saved_items_count + 1


        Next i

        'If gi_saved_items_count = 0 Then
        '    MsgBox("No item saved! Please Check the Shipping  and the item(s)!")
        '    save_SHCPTBKD = False
        '    Exit Function
        'End If

        save_SHCPTBKD = True
    End Function

    Private Function save_SHASSINF() As Boolean
        save_SHASSINF = False

        'If save_SHASSINF() = False Then
        '    Exit Function
        'End If
        Dim hai_shpno
        Dim hai_shpseq
        Dim hai_ordno
        Dim hai_ordseq
        Dim hai_itmno
        Dim hai_assitm
        Dim hai_assdsc
        Dim hai_cusitm
        Dim hai_colcde
        Dim hai_coldsc
        Dim hai_cussku
        Dim hai_upcean
        Dim hai_cusrtl
        Dim hai_untcde
        Dim hai_inrqty
        Dim hai_mtrqty
        Dim hai_imperiod
        Dim hai_cusstyno
        Dim hai_tordno
        Dim hai_tordseq

        Dim hai_creusr As String
        Dim rs_tmp As DataSet
        Dim hid_creusr As String
        Dim hid_cov As String

        rs_tmp = rs_SHIPGDTL.Copy





        Dim i As Integer
        If rs_SHASSINF Is Nothing Then
            save_SHASSINF = True
            Exit Function
        End If

        For i = 0 To rs_SHASSINF.Tables("RESULT").Rows.Count - 1 Step 1

            hai_shpno = txtShpNo.Text.Trim
            hai_shpseq = rs_SHASSINF.Tables("RESULT").Rows(i).Item("hai_shpseq")

            rs_tmp.Tables("result").DefaultView.RowFilter = "hid_shpseq = " & hai_shpseq
            If rs_tmp.Tables("result").DefaultView.Count > 0 Then
                hid_creusr = rs_tmp.Tables("result").DefaultView(0)("hid_creusr")
                hid_cov = rs_tmp.Tables("result").DefaultView(0)("COV")
            End If
            '

            hai_ordno = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_ordno")
            hai_ordseq = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_ordseq")
            hai_itmno = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_itmno")
            hai_assitm = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_assitm")
            hai_assdsc = Replace(rs_SHASSINF.Tables("RESULT").Rows(i)("hai_assdsc"), "'", "''")
            hai_cusitm = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_cusitm")
            hai_colcde = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_colcde")
            hai_coldsc = Replace(rs_SHASSINF.Tables("RESULT").Rows(i)("hai_coldsc"), "'", "''")
            hai_cussku = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_cussku")
            hai_upcean = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_upcean")
            hai_cusrtl = Replace(rs_SHASSINF.Tables("RESULT").Rows(i)("hai_cusrtl"), "'", "''")
            hai_untcde = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_untcde")
            hai_inrqty = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_inrqty")
            hai_mtrqty = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_mtrqty")
            hai_imperiod = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_imperiod")
            hai_cusstyno = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_cusstyno")
            hai_tordno = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_tordno")
            hai_tordseq = rs_SHASSINF.Tables("RESULT").Rows(i)("hai_tordseq")
            hai_creusr = rs_SHASSINF.Tables("RESULT").Rows(i).Item("hai_creusr")

            If hai_creusr <> "~*ADD*~" And _
             hai_creusr <> "~*NEW*~" And _
			hai_creusr <> "~*ADEL*~" And _
			hai_creusr <> "~*DEL*~" Then
                hai_creusr = "~*UPD*~"
            End If

            If hid_creusr = "~*DEL*~" Then
                hai_creusr = "~*DEL*~"
            End If

            gspStr = ""


            If hai_creusr = "~*DEL*~" Or hid_cov = "Y" Then
                update_inv_revisedat(hai_shpseq, "")
                '1022

                '''***)
                gspStr = "sp_physical_delete_SHASSINF '" & hai_shpno & "','" & hai_shpseq & "'"
                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_SHASSINF sp_physical_delete_SHASSINF:" & rtnStr)
                    save_SHASSINF = False
                    Exit Function
                End If


            ElseIf hai_creusr = "~*ADD*~" Or hai_creusr = "~*NEW*~" Then

                update_inv_revisedat(hai_shpseq, "")
                '1022
                gspStr = "sp_insert_SHASSINF '" & _
hai_shpno & "','" & _
hai_shpseq & "','" & _
hai_ordno & "','" & _
hai_ordseq & "','" & _
hai_itmno & "','" & _
hai_assitm & "','" & _
hai_assdsc & "','" & _
hai_cusitm & "','" & _
hai_colcde & "','" & _
hai_coldsc & "','" & _
hai_cussku & "','" & _
hai_upcean & "','" & _
hai_cusrtl & "','" & _
hai_untcde & "','" & _
hai_inrqty & "','" & _
hai_mtrqty & "','" & _
hai_imperiod & "','" & _
hai_cusstyno & "','" & _
hai_tordno & "','" & _
hai_tordseq & "','" & _
                                                 gsUsrID & "'"

                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_SHASSINF sp_insert_SHASSINF :" & rtnStr)
                    save_SHASSINF = False
                    Exit Function
                End If
            ElseIf hai_creusr = "~*UPD*~" Then
                update_inv_revisedat(hai_shpseq, "")
                '1022

                gspStr = "sp_update_SHASSINF '" & _
hai_shpno & "','" & _
hai_shpseq & "','" & _
hai_assitm & "','" & _
hai_assdsc & "','" & _
                                                 gsUsrID & "'"

                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading save_SHASSINF sp_update_SHASSINF :" & rtnStr)
                    save_SHASSINF = False
                    Exit Function
                End If
            End If
            'gi_saved_items_count = gi_saved_items_count + 1


        Next i

        'If gi_saved_items_count = 0 Then
        '    MsgBox("No item saved! Please Check the Shipping  and the item(s)!")
        '    save_SHASSINF = False
        '    Exit Function
        'End If

        save_SHASSINF = True
    End Function


    Private Function save_SHIPGDTL() As Boolean
        save_SHIPGDTL = False
        '        gi_saved_items_count = 0

        '        Dim DEL_FLAG As String
        '        Dim hid_COCDE As String
        '        Dim hid_QUTNO As String
        '        Dim hid_shpseq As String
        '        Dim hid_ITMNO As String
        '        Dim hid_ITMSTS As String
        '        Dim hid_ITMDSC As String
        '        Dim hid_ALSITMNO As String
        '        Dim hid_ALSCOLCDE As String
        '        Dim hid_CONFTR As String
        '        Dim hid_CONTOPC As String
        '        Dim hid_PCPRC As String
        '        Dim hid_HSTREF As String
        '        Dim hid_COLCDE As String
        '        Dim hid_CUSCOL As String
        '        Dim hid_COLDSC As String
        '        Dim hid_PCKSEQ As String
        '        Dim hid_UNTCDE As String
        '        Dim hid_INRQTY As String
        '        Dim hid_MTRQTY As String
        '        Dim hid_CFT As String
        '        Dim hid_CURCDE As String
        '        Dim hid_CUS1SP As String
        '        Dim hid_CUS2SP As String
        '        Dim hid_CUS1DP As String
        '        Dim hid_CUS2DP As String
        '        Dim hid_ONETIM As String
        '        Dim hid_DISCNT As String
        '        Dim hid_MOFLAG As String
        '        Dim hid_ORGMOQ As String
        '        Dim hid_ORGMOA As String
        '        Dim hid_MOQ As String
        '        Dim hid_MOA As String
        '        Dim hid_SMPQTY As String
        '        Dim hid_HRMCDE As String
        '        Dim hid_DTYRAT As String
        '        Dim hid_DEPT As String
        '        Dim hid_CUSUSD As String
        '        Dim hid_CUSCAD As String
        '        Dim hid_VENNO As String
        '        Dim hid_SUBCDE As String
        '        Dim hid_VENITM As String
        '        Dim hid_FTYPRC As String
        '        Dim hid_FTYCST As String
        '        Dim hid_NOTE As String
        '        Dim hid_IMAGE As String
        '        Dim hid_INRDIN As String
        '        Dim hid_INRWIN As String
        '        Dim hid_INRHIN As String
        '        Dim hid_MTRDIN As String
        '        Dim hid_MTRWIN As String
        '        Dim hid_MTRHIN As String
        '        Dim hid_INRDCM As String
        '        Dim hid_INRWCM As String
        '        Dim hid_INRHCM As String
        '        Dim hid_MTRDCM As String
        '        Dim hid_MTRWCM As String
        '        Dim hid_MTRHCM As String
        '        Dim hid_GRSWGT As String
        '        Dim hid_NETWGT As String
        '        Dim hid_COSMTH As String
        '        Dim hid_SMPPRC As String
        '        Dim hid_CUSITM As String
        '        Dim CUS1NO As String
        '        Dim CUS1NA As String
        '        Dim CUS2NO As String
        '        Dim CUS2NA As String
        '        Dim hid_PRCSEC As String
        '        Dim hid_GRSMGN As String
        '        Dim hid_BASPRC As String
        '        Dim hid_TBM As String
        '        Dim hid_TBMSTS As String
        '        Dim RVSDAT As String
        '        Dim hid_APPRVE As String
        '        Dim hid_PDABPDIFF As String
        '        Dim hid_PCKITR As String
        '        Dim hid_STKQTY As String
        '        Dim hid_CUSQTY As String
        '        Dim hid_SMPUNT As String
        '        Dim hid_QUTITMSTS As String
        '        Dim hid_FCURCDE As String
        '        Dim SMPPRD As String
        '        Dim hid_ITMTYP As String
        '        Dim hih_QUTSTS As String
        '        Dim hid_PRCTRM As String
        '        Dim hid_CUSVEN As String
        '        Dim hid_CUSSUB As String
        '        Dim hid_FTYPRCTRM As String
        '        Dim hid_CUSSTYNO As String
        '        Dim hid_CBM As String
        '        Dim hid_UPC As String
        '        Dim hid_SPECPCK As String
        '        Dim hid_FTYTMPITM As String
        '        Dim hid_FTYTMPITMNO As String
        '        Dim hid_CUSTITMCAT As String
        '        Dim hid_CUSTITMCATFML As String
        '        Dim hid_CUSTITMCATAMT As String
        '        Dim hid_PMU As String
        '        Dim hid_IMRMK As String
        '        Dim hid_RNDSTS As String
        '        Dim hid_CALPMU As String
        '        Dim hid_MOQUNTTYP As String
        '        Dim hid_QUTDAT As String
        '        Dim hid_CUS1NO As String
        '        Dim hid_CUS2NO As String
        '        Dim hid_TRANTRM As String
        '        Dim hid_EFFDAT As String
        '        Dim hid_EXPDAT As String
        '        Dim hid_ITMNOTYP As String
        '        Dim hid_ITMNOREAL As String
        '        Dim hid_ITMNOTMP As String
        '        Dim hid_ITMNOVEN As String
        '        Dim hid_ITMNOVENNO As String
        '        Dim hid_IMGPTH As String
        '        Dim hid_CUSUSDCUR As String
        '        Dim hid_CUSCADCUR As String
        '        Dim hid_DV As String
        '        Dim hid_TV As String
        '        Dim hid_FTYAUD As String
        '        Dim hid_BUYER As String
        '        Dim hid_TOQTY As String
        '        Dim hid_TOShipport As String
        '        Dim hid_TORMK As String
        '        Dim hid_FTYSHPSTR As String
        '        Dim hid_FTYSHPEND As String
        '        Dim hid_CUSHPSTR As String
        '        Dim hid_CUSHPEND As String
        '        Dim hid_CREUSR As String

        '        Dim i As Integer

        '        For i = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
        '            DEL_FLAG = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("Del")
        '            hid_COCDE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cocde")
        '            hid_QUTNO = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_qutno")
        '            hid_shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpseq ")
        '            hid_ITMNO = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmno")
        '            hid_ITMSTS = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmsts"), " - ")(0)
        '            hid_ITMDSC = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmdsc"), "'", "''")
        '            '            hid_ITMDSC = Replace(hid_ITMDSC, """", "``")

        '            hid_ALSITMNO = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_alsitmno")
        '            hid_ALSCOLCDE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_alscolcde")
        '            hid_CONFTR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_conftr")
        '            hid_CONTOPC = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_contopc")
        '            hid_PCPRC = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pcprc")
        '            hid_HSTREF = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_hstref")
        '            hid_COLCDE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_colcde")
        '            hid_CUSCOL = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cuscol")
        '            hid_COLDSC = Replace(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_coldsc"), "'", "''")
        '            hid_PCKSEQ = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pckseq")
        '            hid_UNTCDE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_untcde")
        '            hid_INRQTY = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_inrqty")
        '            hid_MTRQTY = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrqty")
        '            hid_CFT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cft")
        '            hid_CURCDE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_curcde")
        '            hid_CUS1SP = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cus1sp")
        '            hid_CUS2SP = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cus2sp")
        '            hid_CUS1DP = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cus1dp")
        '            hid_CUS2DP = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cus2dp")
        '            hid_ONETIM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_onetim")
        '            hid_DISCNT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_discnt")
        '            hid_MOFLAG = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_moflag")
        '            hid_ORGMOQ = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_orgmoq")
        '            hid_ORGMOA = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_orgmoa")
        '            hid_MOQ = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_moq")
        '            hid_MOA = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_moa")
        '            hid_SMPQTY = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_smpqty")
        '            hid_HRMCDE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_hrmcde")
        '            hid_DTYRAT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_dtyrat")
        '            hid_DEPT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_dept")
        '            hid_CUSUSD = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cususd")
        '            hid_CUSCAD = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cuscad")
        '            If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_venno")) Then
        '                hid_VENNO = ""
        '            Else
        '                hid_VENNO = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_venno"), " - ")(0)
        '            End If
        '            hid_SUBCDE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_subcde")
        '            hid_VENITM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_venitm")
        '            hid_FTYPRC = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ftyprc")
        '            hid_FTYCST = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ftycst")
        '            hid_NOTE = IIf(IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_note")), "", rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_note"))
        '            hid_IMAGE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_image")
        '            hid_INRDIN = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_inrdin")
        '            hid_INRWIN = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_inrwin")
        '            hid_INRHIN = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_inrhin")
        '            hid_MTRDIN = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrdin")
        '            hid_MTRWIN = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrwin")
        '            hid_MTRHIN = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrhin")
        '            hid_INRDCM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_inrdcm")
        '            hid_INRWCM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_inrwcm")
        '            hid_INRHCM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_inrhcm")
        '            hid_MTRDCM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrdcm")
        '            hid_MTRWCM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrwcm")
        '            hid_MTRHCM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_mtrhcm")
        '            hid_GRSWGT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_grswgt")
        '            hid_NETWGT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_netwgt")
        '            hid_COSMTH = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cosmth")
        '            hid_SMPPRC = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_smpprc")
        '            hid_CUSITM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusitm")
        '            CUS1NO = Microsoft.VisualBasic.Left(cboCus1No.Text, InStr(cboCus1No.Text, " - ") - 1)
        '            CUS1NA = Microsoft.VisualBasic.Right(cboCus1No.Text, Len(cboCus1No.Text) - InStr(cboCus1No.Text, " - ") - 2)
        '            CUS1NA = CUS1NA.Replace("'", "''")

        '            If cboCus2No.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
        '                If InStr(cboCus2No.Text, " - ") - 1 >= 0 Then
        '                    CUS2NO = Microsoft.VisualBasic.Left(cboCus2No.Text, InStr(cboCus2No.Text, " - ") - 1)
        '                    CUS2NA = Replace(Microsoft.VisualBasic.Right(cboCus2No.Text, Len(cboCus2No.Text) - InStr(cboCus2No.Text, " - ") - 2), "'", "''")
        '                End If
        '            Else
        '                CUS2NO = ""
        '                CUS2NA = ""
        '            End If
        '            hid_PRCSEC = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_prcsec")
        '            hid_GRSMGN = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_grsmgn")
        '            hid_BASPRC = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_basprc")
        '            hid_TBM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_tbm")
        '            hid_TBMSTS = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_tbmsts")
        '            RVSDAT = Microsoft.VisualBasic.Left(txtRvsDat.Text, 10)
        '            hid_APPRVE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_apprve")
        '            'hid_PDABPDIFF = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pdabpdiff")
        '            hid_PCKITR = IIf(IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pckitr")), "", rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pckitr"))
        '            hid_PCKITR = Replace(hid_PCKITR, "'", "''")

        '            hid_STKQTY = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_stkqty")
        '            hid_CUSQTY = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusqty")
        '            hid_SMPUNT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_smpunt")
        '            hid_QUTITMSTS = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_qutitmsts"), " - ")(0)
        '            hid_FCURCDE = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_fcurcde")
        '            'SMPPRD = "" 'rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("smpprd")
        '            hid_ITMTYP = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmtyp")
        '            hih_QUTSTS = IIf(IsDBNull(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_qutsts")), "A", rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_qutsts"))
        '            hid_PRCTRM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_prctrm")
        '            hid_CUSVEN = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusven"), " - ")(0)
        '            hid_CUSSUB = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cussub")
        '            hid_FTYPRCTRM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ftyprctrm")
        '            hid_CUSSTYNO = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cusstyno")
        '            hid_CBM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cbm")
        '            hid_UPC = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_upc")
        '            hid_SPECPCK = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_specpck")
        '            hid_FTYTMPITM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ftytmpitm")
        '            hid_FTYTMPITMNO = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ftytmpitmno")
        '            hid_CUSTITMCAT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_custitmcat")
        '            hid_CUSTITMCATFML = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_custitmcatfml")
        '            hid_CUSTITMCATAMT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_custitmcatamt")
        '            hid_PMU = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_pmu")
        '            hid_IMRMK = IIf(IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_imrmk")), "", rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_imrmk"))
        '            hid_IMRMK = hid_IMRMK.Replace("'", "''")
        '            hid_RNDSTS = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_rndsts")
        '            hid_CALPMU = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_calpmu")
        '            hid_MOQUNTTYP = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_moqunttyp")
        '            hid_QUTDAT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_qutdat")
        '            hid_CUS1NO = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cus1no")
        '            hid_CUS2NO = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cus2no")
        '            hid_TRANTRM = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_trantrm")
        '            hid_EFFDAT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_effdat")
        '            hid_EXPDAT = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_expdat")

        '            If Len(hid_EXPDAT) <= 11 Then
        '                hid_EXPDAT = hid_EXPDAT & " 23:59:00.000"
        '            End If

        '            hid_ITMNOTYP = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnotyp")
        '            hid_ITMNOREAL = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnoreal")
        '            hid_ITMNOTMP = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnotmp")
        '            hid_ITMNOVEN = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnoven")

        '            '''III20140116
        '            If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnovenno")) Then
        '                If InStr(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnovenno"), " - ") > 1 Then


        '                    If Val(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnovenno"), " - ")(1)) > 1000 And _
        'Val(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnovenno"), " - ")(1)) < 9999 _
        'Then
        '                        hid_ITMNOVENNO = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnovenno"), " - ")(1)
        '                    Else
        '                        hid_ITMNOVENNO = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_itmnovenno"), " - ")(0)
        '                    End If

        '                Else
        '                    hid_ITMNOVENNO = ""
        '                End If
        '            End If



        '            hid_IMGPTH = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_imgpth")
        '            hid_CUSUSDCUR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cususdcur")
        '            hid_CUSCADCUR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cuscadcur")
        '            hid_DV = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_dv"), " - ")(0)
        '            hid_TV = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_tv"), " - ")(0)
        '            hid_FTYAUD = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ftyaud"), " - ")(0)
        '            hid_BUYER = Split(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_buyer"), " - ")(0)
        '            hid_TOQTY = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_toqty")
        '            hid_TOShipport = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_TOShipport")

        '            hid_TORMK = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_tormk")
        '            hid_FTYSHPSTR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ftyshpstr")
        '            hid_FTYSHPEND = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_ftyshpend")
        '            hid_CUSHPSTR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cushpstr")
        '            hid_CUSHPEND = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_cushpend")
        '            hid_CREUSR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_creusr")

        '            gspStr = ""

        '            '''20130815  to avoid some missing insert,  just qpe  accrd to qud 
        '            ''If rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_creusr") = "~*NEW*~" Then
        '            ''    hid_CREUSR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_creusr")
        '            ''End If
        '            ''If rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_creusr") = "~*ADD*~" Then
        '            ''    hid_CREUSR = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_creusr")
        '            ''End If



        '            If DEL_FLAG = "Y" Or hid_CREUSR = "~*DEL*~" Then

        '                '''***)
        '                gspStr = "sp_physical_delete_SHIPGDTL '" & hid_COCDE & "','" & hid_QUTNO & "','" & hid_shpseq & "'"
        '                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
        '                If rtnLong <> RC_SUCCESS Then
        '                    MsgBox("Error on loading save_SHIPGDTL sp_physical_delete_SHIPGDTL:" & rtnStr)
        '                    save_SHIPGDTL = False
        '                    Exit Function
        '                End If

        '                '''20140321  set the To qty to zero
        '                ''update sp here
        '                gspStr = "sp_update_TOORDDTL_3 '" & hid_COCDE & "','" & "T" & hid_QUTNO & "','" & Val(flag_delete_to_seq(i)) & "',0,'" & gsUsrID & "'"
        '                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
        '                If rtnLong <> RC_SUCCESS Then
        '                    MsgBox("Error on loading save_SHIPGDTL sp_physical_delete_SHIPGDTL:" & rtnStr)
        '                    save_SHIPGDTL = False
        '                    Exit Function
        '                End If

        '            ElseIf hid_CREUSR = "~*ADD*~" Or hid_CREUSR = "~*NEW*~" Then
        '                ''bug0802
        '                If hid_ITMNO = "" Then
        '                    MsgBox("Please Input All Item Numbers!")
        '                    save_SHIPGDTL = False
        '                    Exit Function
        '                End If

        '                gspStr = "sp_insert_SHIPGDTL '" & hid_COCDE & "','" & hid_QUTNO & "','" & hid_shpseq & "','" & hid_ITMNO & "','" & hid_ITMSTS & "','" & _
        '                                                    hid_ITMDSC & "','" & hid_ALSITMNO & "','" & hid_ALSCOLCDE & "','" & hid_CONFTR & "','" & hid_CONTOPC & "','" & _
        '                                                    hid_PCPRC & "','" & hid_HSTREF & "','" & hid_COLCDE & "','" & hid_CUSCOL & "','" & hid_COLDSC & "','" & _
        '                                                    hid_PCKSEQ & "','" & hid_UNTCDE & "','" & hid_INRQTY & "','" & hid_MTRQTY & "','" & hid_CFT & "','" & _
        '                                                    hid_CURCDE & "','" & hid_CUS1SP & "','" & hid_CUS2SP & "','" & hid_CUS1DP & "','" & hid_CUS2DP & "','" & _
        '                                                    hid_ONETIM & "','" & hid_DISCNT & "','" & hid_MOFLAG & "','" & hid_ORGMOQ & "','" & hid_ORGMOA & "','" & _
        '                                                    hid_MOQ & "','" & hid_MOA & "','" & hid_SMPQTY & "','" & hid_HRMCDE & "','" & hid_DTYRAT & "','" & _
        '                                                    hid_DEPT & "','" & hid_CUSUSD & "','" & hid_CUSCAD & "','" & hid_VENNO & "','" & hid_SUBCDE & "','" & _
        '                                                    hid_VENITM & "','" & hid_FTYPRC & "','" & hid_FTYCST & "','" & hid_NOTE & "','" & hid_IMAGE & "','" & _
        '                                                    hid_INRDIN & "','" & hid_INRWIN & "','" & hid_INRHIN & "','" & hid_MTRDIN & "','" & hid_MTRWIN & "','" & _
        '                                                    hid_MTRHIN & "','" & hid_INRDCM & "','" & hid_INRWCM & "','" & hid_INRHCM & "','" & hid_MTRDCM & "','" & _
        '                                                    hid_MTRWCM & "','" & hid_MTRHCM & "','" & hid_GRSWGT & "','" & hid_NETWGT & "','" & hid_COSMTH & "','" & _
        '                                                    hid_SMPPRC & "','" & hid_CUSITM & "','" & CUS1NO & "','" & CUS1NA & "','" & CUS2NO & "','" & _
        '                                                    CUS2NA & "','" & hid_PRCSEC & "','" & hid_GRSMGN & "','" & hid_BASPRC & "','" & hid_TBM & "','" & _
        '                                                    hid_TBMSTS & "','" & RVSDAT & "','" & hid_APPRVE & "','" & hid_PCKITR & "','" & _
        '                                                    hid_STKQTY & "','" & hid_CUSQTY & "','" & hid_SMPUNT & "','" & hid_QUTITMSTS & "','" & hid_FCURCDE & "','" & _
        '                                                    hid_ITMTYP & "','" & hih_QUTSTS & "','" & hid_PRCTRM & "','" & hid_CUSVEN & "','" & _
        '                                                    hid_CUSSUB & "','" & hid_FTYPRCTRM & "','" & hid_CUSSTYNO & "','" & hid_CBM & "','" & hid_UPC & "','" & _
        '                                                    hid_SPECPCK & "','" & hid_FTYTMPITM & "','" & hid_FTYTMPITMNO & "','" & hid_CUSTITMCAT & "','" & hid_CUSTITMCATFML & "','" & _
        '                                                    hid_CUSTITMCATAMT & "','" & hid_PMU & "','" & hid_IMRMK & "','" & hid_RNDSTS & "','" & hid_CALPMU & "','" & _
        '                                                    hid_MOQUNTTYP & "','" & hid_QUTDAT & "','" & hid_CUS1NO & "','" & hid_CUS2NO & "','" & hid_TRANTRM & "','" & _
        '                                                    hid_EFFDAT & "','" & hid_EXPDAT & "','" & hid_ITMNOTYP & "','" & hid_ITMNOREAL & "','" & hid_ITMNOTMP & "','" & _
        '                                                    hid_ITMNOVEN & "','" & hid_ITMNOVENNO & "','" & hid_IMGPTH & "','" & hid_CUSUSDCUR & "','" & hid_CUSCADCUR & "','" & _
        '                                                    hid_DV & "','" & hid_TV & "','" & hid_FTYAUD & "','" & hid_BUYER & "','" & hid_TOQTY & "','" & hid_TORMK & "','" & _
        '                                                    hid_FTYSHPSTR & "','" & hid_FTYSHPEND & "','" & hid_CUSHPSTR & "','" & hid_CUSHPEND & "','" & hid_TOShipport & "','" & gsUsrID & "'"
        '                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
        '                If rtnLong <> RC_SUCCESS Then
        '                    MsgBox("Error on loading save_SHIPGDTL sp_insert_SHIPGDTL :" & rtnStr)
        '                    save_SHIPGDTL = False
        '                    Exit Function
        '                End If
        '            ElseIf hid_CREUSR = "~*UPD*~" Then

        '                If hid_ITMNO = "" Then
        '                    MsgBox("Item empty found,error on saving!")
        '                    save_SHIPGDTL = False
        '                    Exit Function
        '                End If

        '                gspStr = "sp_update_SHIPGDTL '" & hid_COCDE & "','" & hid_QUTNO & "','" & hid_shpseq & "','" & hid_ITMNO & "','" & hid_ITMSTS & "','" & _
        '                                                    hid_ITMDSC & "','" & hid_ALSITMNO & "','" & hid_ALSCOLCDE & "','" & hid_CONFTR & "','" & hid_CONTOPC & "','" & _
        '                                                    hid_PCPRC & "','" & hid_HSTREF & "','" & hid_COLCDE & "','" & hid_CUSCOL & "','" & hid_COLDSC & "','" & _
        '                                                    hid_PCKSEQ & "','" & hid_UNTCDE & "','" & hid_INRQTY & "','" & hid_MTRQTY & "','" & hid_CFT & "','" & _
        '                                                    hid_CURCDE & "','" & hid_CUS1SP & "','" & hid_CUS2SP & "','" & hid_CUS1DP & "','" & hid_CUS2DP & "','" & _
        '                                                    hid_ONETIM & "','" & hid_DISCNT & "','" & hid_MOFLAG & "','" & hid_ORGMOQ & "','" & hid_ORGMOA & "','" & _
        '                                                    hid_MOQ & "','" & hid_MOA & "','" & hid_SMPQTY & "','" & hid_HRMCDE & "','" & hid_DTYRAT & "','" & _
        '                                                    hid_DEPT & "','" & hid_CUSUSD & "','" & hid_CUSCAD & "','" & hid_VENNO & "','" & hid_SUBCDE & "','" & _
        '                                                    hid_VENITM & "','" & hid_FTYPRC & "','" & hid_FTYCST & "','" & hid_NOTE & "','" & hid_IMAGE & "','" & _
        '                                                    hid_INRDIN & "','" & hid_INRWIN & "','" & hid_INRHIN & "','" & hid_MTRDIN & "','" & hid_MTRWIN & "','" & _
        '                                                    hid_MTRHIN & "','" & hid_INRDCM & "','" & hid_INRWCM & "','" & hid_INRHCM & "','" & hid_MTRDCM & "','" & _
        '                                                    hid_MTRWCM & "','" & hid_MTRHCM & "','" & hid_GRSWGT & "','" & hid_NETWGT & "','" & hid_COSMTH & "','" & _
        '                                                    hid_SMPPRC & "','" & hid_CUSITM & "','" & CUS1NO & "','" & CUS1NA & "','" & CUS2NO & "','" & _
        '                                                    CUS2NA & "','" & hid_PRCSEC & "','" & hid_GRSMGN & "','" & hid_BASPRC & "','" & hid_TBM & "','" & _
        '                                                    hid_TBMSTS & "','" & RVSDAT & "','" & hid_APPRVE & "','" & hid_PCKITR & "','" & _
        '                                                    hid_STKQTY & "','" & hid_CUSQTY & "','" & hid_SMPUNT & "','" & hid_QUTITMSTS & "','" & hid_FCURCDE & "','" & _
        '                                                    hid_ITMTYP & "','" & hih_QUTSTS & "','" & hid_PRCTRM & "','" & hid_CUSVEN & "','" & _
        '                                                    hid_CUSSUB & "','" & hid_FTYPRCTRM & "','" & hid_CUSSTYNO & "','" & hid_CBM & "','" & hid_UPC & "','" & _
        '                                                    hid_SPECPCK & "','" & hid_FTYTMPITM & "','" & hid_FTYTMPITMNO & "','" & hid_CUSTITMCAT & "','" & hid_CUSTITMCATFML & "','" & _
        '                                                    hid_CUSTITMCATAMT & "','" & hid_PMU & "','" & hid_IMRMK & "','" & hid_RNDSTS & "','" & hid_CALPMU & "','" & _
        '                                                    hid_MOQUNTTYP & "','" & hid_QUTDAT & "','" & hid_CUS1NO & "','" & hid_CUS2NO & "','" & hid_TRANTRM & "','" & _
        '                                                    hid_EFFDAT & "','" & hid_EXPDAT & "','" & hid_ITMNOTYP & "','" & hid_ITMNOREAL & "','" & hid_ITMNOTMP & "','" & _
        '                                                    hid_ITMNOVEN & "','" & hid_ITMNOVENNO & "','" & hid_IMGPTH & "','" & hid_CUSUSDCUR & "','" & hid_CUSCADCUR & "','" & _
        '                                                    hid_DV & "','" & hid_TV & "','" & hid_FTYAUD & "','" & hid_BUYER & "','" & hid_TOQTY & "','" & hid_TORMK & "','" & _
        '                                                    hid_FTYSHPSTR & "','" & hid_FTYSHPEND & "','" & hid_CUSHPSTR & "','" & hid_CUSHPEND & "','" & hid_TOShipport & "','" & gsUsrID & "'"

        '                'MsgBox(i)

        '                rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
        '                If rtnLong <> RC_SUCCESS Then
        '                    MsgBox("Error on loading save_SHIPGDTL sp_update_SHIPGDTL :" & rtnStr)
        '                    save_SHIPGDTL = False
        '                    Exit Function
        '                End If
        '            End If
        '            gi_saved_items_count = gi_saved_items_count + 1

        '        Next i

        '        If gi_saved_items_count = 0 Then
        '            MsgBox("No item saved! Please Check the Shipping and the item(s)!")
        '            save_SHIPGDTL = False
        '            Exit Function
        '        End If

        save_SHIPGDTL = True

    End Function

    Private Sub cmdAddClick()
        Add_flag = True
        txtShpNo.Text = ""
        Dim rs As New DataSet

        sMode = cModeAdd

        'Call fillParameter()

        Call setStatus(cModeAdd)
        sMode = cModeAdd

        'gspStr = "sp_select_CUBASINF_PRI '" & cboCoCde.Text & "','" & gsUsrID & "','" & "QU" & "'"
        ''Fixing global company code problem at 20100420
        'gsCompany = Trim(cboCoCde.Text)
        'Update_gs_Value(gsCompany)

        'Me.Cursor = Windows.Forms.Cursors.WaitCursor
        'rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
        'gspStr = ""
        'Me.Cursor = Windows.Forms.Cursors.Default

        'If rtnLong <> RC_SUCCESS Then  '*** An error has occured
        '    MsgBox("Error on loading SHM00001  sp_select_CUBASINF_PRI : " & rtnStr)
        '    Exit Sub
        'Else
        '    rs_CUBASINF_P = rs.Copy() '*** Cus for company
        'End If
        ''        Call fillcboPriCust() '

        'If cboCus1No.Enabled And cboCus1No.Visible Then cboCus1No.Focus()
        'cmdGenSmp.Enabled = False
        'cmdGenTent.Enabled = False

        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_select_SHIPGHDR '',''"
        rtnLong = execute_SQLStatement(gspStr, rs_SHIPGHDR, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading cmdAddClick sp_select_SHIPGHDR :" & rtnStr)
            Exit Sub
        End If

        For i As Integer = 0 To rs_SHIPGHDR.Tables("RESULT").Columns.Count - 1
            rs_SHIPGHDR.Tables("RESULT").Columns(i).ReadOnly = False
        Next i



        gspStr = "sp_list_SHIPGDTL '',''"
        rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading cmdAddClick sp_select_SHIPGDTL :" & rtnStr)
            Exit Sub
        End If

        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Columns.Count - 1
            rs_SHIPGDTL.Tables("RESULT").Columns(i).ReadOnly = False
        Next i


        'Call insert_SHIPGHDR()


        gspStr = "sp_select_SHPCKDIM  '','' "

        rtnLong = execute_SQLStatement(gspStr, rs_SHPCKDIM, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading cmdAddClick sp_select_SHPCKDIM :" & rtnStr)
            Exit Sub
        End If

        For i As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Columns.Count - 1
            rs_SHPCKDIM.Tables("RESULT").Columns(i).ReadOnly = False
        Next i



        gspStr = "sp_list_SHASSINF '" & "" & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHASSINF, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_list_SHASSINF :" & rtnStr)
            Exit Sub
        End If
        For i As Integer = 0 To rs_SHASSINF.Tables("RESULT").Columns.Count - 1
            rs_SHASSINF.Tables("RESULT").Columns(i).ReadOnly = False
        Next i


        gspStr = "sp_list_SHINVHDR_SHM00001_1 '" & "" & "','" & "" & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHINVHDR, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
            Exit Sub
        End If

        For i As Integer = 0 To rs_SHINVHDR.Tables("RESULT").Columns.Count - 1
            rs_SHINVHDR.Tables("RESULT").Columns(i).ReadOnly = False
        Next i


        gspStr = "sp_list_SHDISPRM '" & "" & "','" & "" & "','D'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHDISPRM_D, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
            Exit Sub
        End If

        For i As Integer = 0 To rs_SHDISPRM_D.Tables("RESULT").Columns.Count - 1
            rs_SHDISPRM_D.Tables("RESULT").Columns(i).ReadOnly = False
        Next i

        gspStr = "sp_list_SHDISPRM '" & "" & "','" & "" & "','P'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHDISPRM_P, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
            Exit Sub
        End If

        For i As Integer = 0 To rs_SHDISPRM_P.Tables("RESULT").Columns.Count - 1
            rs_SHDISPRM_P.Tables("RESULT").Columns(i).ReadOnly = False
        Next i


        btcSHM00001.SelectedIndex = 0
        '' Michael Chiu 20170323
        If txtCntyOrgn.Text = "" Then
            txtCntyOrgn.Text = "CHINA"
        End If


    End Sub



    Private Sub setStatus(ByVal Mode As String)

        Call SetStatusBar(Mode)

        If Mode = cModeInit Or Mode = cModeClear Then
            sMode = cModeClear

            Recordstatus = False
            flag_cov_click = False
            flag_display_not_for_change = False

            txtPCPrc.Enabled = False

            rb_cfs.Checked = False
            rb_ctn.Checked = True

            weight1.Checked = True
            chk_cmin = 1
            weight1.Checked = True


            last_scjob_action = ""

            cboexptnam.Text = ""
            cboexptnam.SelectedIndex = -1
            txtexptnam.Text = ""
            txtexptaddr.Text = ""

            maxshpseq = 0
            flag_sorted = False
            richtext_focus = ""

            dgPCKDIM.ReadOnly = False
            grdShpSum.ReadOnly = False
            grdDiscount.ReadOnly = False
            grdPremium.ReadOnly = False
            dg_sainvhdr.ReadOnly = False
            dgSCCPTBKD.ReadOnly = False

            not_enter_colpck = True
            counter_msg_not_enter_colpck = 0

            tmp_dgPCKDIM_0_9 = 0
            cboSort1.SelectedIndex = -1
            cboSort2.SelectedIndex = -1
            cboSort3.SelectedIndex = -1

            txtCartonFactor.Enabled = False
            txt_name_f1.Enabled = False
            txt_dsc_f1.Enabled = False
            txt_name_f2.Enabled = False
            txt_dsc_f2.Enabled = False
            txt_name_f3.Enabled = False
            txt_dsc_f3.Enabled = False
            txtresppo.Enabled = False
            txtcussku.Enabled = False

            'txtaddinf.Enabled = False
            cmdinscpb.Enabled = False

            CmdCOV.Enabled = False

            flag_need_delete_container = False
            delete_container_number = ""

            cmdAss.Enabled = False
            optinvsm.Checked = True
            optitmsm.Checked = False
            txtItmShm.Enabled = False
            cmdSelSM.Enabled = True

            txtBilRmk.Text = ""
            cboPckListFooter.Text = ""
            cboPckListFooter.SelectedIndex = -1

            flag_cboCtrSiz_GotFocus = False
            cboCtrSiz.SelectedIndex = -1

            gi_grdPremium_row = 0
            gi_grdDiscount_row = 0
            gi_dg_sainvhdr_row = 0

            Grid_Got_Focus = ""

            rs_SHPCKDIM = Nothing
            rs_SCCPTBKD = Nothing
            rs_SHCPTBKD = Nothing
            rs_SHIPGDTL = Nothing
            rs_SHIPGDTL_dis = Nothing
            rs_SHIPGDTL_display = Nothing

            rs_SHDISPRM_D = Nothing
            rs_SHDISPRM_P = Nothing
            rs_SHSMPINV = Nothing

            rs_SHINVHDR = Nothing


            rs_SHIPGDTL_cov = Nothing
            rs_SHDTLCTN_cov = Nothing
            rs_SHPCKDIM_cov = Nothing
            rs_SHIPGDTL_cov_back = Nothing
            rs_SHPCKDIM_cov_back = Nothing
            rs_SHDTLCTN_cov_back = Nothing
            rs_SHIPGDTL_cov_list = Nothing
            rs_SHCPTBKD_cov_back = Nothing
            rs_SHASSINF_cov_back = Nothing

            rs_SHSHPMRK = Nothing

             'rs_SHINVHDR.Tables("result") = Nothing

            grdShpSum.DataSource = Nothing
            If Not dgPCKDIM Is Nothing Then
                If Not dgPCKDIM.DataSource Is Nothing Then
                    If Not dgPCKDIM.DataSource Is Nothing Then
                        On Error Resume Next
                        'temp
                        dgPCKDIM.DataSource = Nothing
                    End If
                End If
            End If

            rs_SHDTLCTN = Nothing


            dgSCCPTBKD.DataSource = Nothing
            dg_sainvhdr.DataSource = Nothing
            grdDis.DataSource = Nothing
            grdPre.DataSource = Nothing
            grdDiscount.DataSource = Nothing
            grdPremium.DataSource = Nothing

            cboManAdr.Items.Clear()
            cboManAdr.Text = ""

            cboInvNo.Items.Clear()
            cbo_scno.Items.Clear()
            cboInvNoP.Items.Clear()
            cboInvNoM.Items.Clear()
            cboOrdNo.Items.Clear()


            cboInvNo.SelectedIndex = -1
            cbo_scno.SelectedIndex = -1
            cboInvNoP.SelectedIndex = -1
            cboInvNoM.SelectedIndex = -1
            cboOrdNo.SelectedIndex = -1

            sReadingIndexI_I = 0
            sReadingIndexI_S = -1

            optDocTyp0.Checked = True
            txtBilRmk.Text = ""
            '1009

            rs_SHIPGDTL_dis = Nothing
            rs_SHIPGDTL_display = Nothing

            chkDel.Checked = False
            GroupBox3.Enabled = False
            GroupBox1.Enabled = False
            gbPri.Enabled = False

            txtCoNam.Text = ChangeCompany(cboCoCde.Text, Me.Name)

            cboShpSts.SelectedIndex = 0
            cboShpSts.Text = "OPE - Open"

            cboShpSts.Enabled = False

            txtIssDat.Enabled = False
            txtRvsDat.Enabled = False
            cboCus1No.Enabled = False

            Add_flag = False

            mmdAdd.Enabled = Enq_right_local 'True
            mmdSave.Enabled = False

            cboCoCde.Enabled = True
            mvwSlnOnb.SendToBack()
            mvw_a.SendToBack()
            mvwcgrcvdat.SendToBack()
            mvwLCdat.SendToBack()
            ''''''20130826   cmdReset.Enabled = True
            '*** Phase 2



            mmdDelete.Enabled = False
            mmdCopy.Enabled = False
            mmdFind.Enabled = True
            mmdInsRow.Enabled = False
            mmdDelRow.Enabled = False
            mmdExit.Enabled = True
            mmdClear.Enabled = True
            mmdSearch.Enabled = True

            mmdPrint.Enabled = False
            mmdAttach.Enabled = False
            mmdFunction.Enabled = False
            mmdLink.Enabled = False

            'Call SetStatusBar(Mode)

            sReadingIndexS = 0
            PreviousTab = 0

            'btcSHM00001.SelectedIndex = 0
            txtShpNo.Enabled = True
            'Recordstatus = False
            'Call ShowFooterBar(False)
            btcSHM00001.TabPages(0).Enabled = False
            btcSHM00001.TabPages(1).Enabled = False
            btcSHM00001.TabPages(2).Enabled = False
            btcSHM00001.TabPages(3).Enabled = False
            btcSHM00001.TabPages(4).Enabled = False
            btcSHM00001.TabPages(5).Enabled = False

            cbobank.Text = ""
            cboBilAdr.Text = ""
            cboBilCty.Text = ""
            'cboCoCde.Text = ""
            cboColPck.Text = ""
            cboCus1No.Text = ""
            cboCus2No.Text = ""
            cboInvNo.Text = ""
            cboInvNoM.Text = ""
            cboInvNoP.Text = ""
            cboItmNo.Text = ""
            cboManAdr.Text = ""
            cboOrdNo.Text = ""
            cboPayTrm.Text = ""
            cboPckRmk.Text = ""
            cboPCPrc.Text = ""
            cboPrcTrm.Text = ""
            '            cboShpSts.Text = ""
            cboUntAmt.Text = ""
            cboUntAmtD.Text = ""
            cboUntAmtI.Text = ""
            cboUntSelD.Text = ""
            chkClose.Checked = False
            chkPC.Checked = False
            chkSmpShp.Checked = False
            txtActVol.Text = ""
            txtAFamt.Text = "0"
            txtArrDat.Text = ""
            txtBilEnt.Text = ""
            txtBilRmk.Text = ""
            txtBilStt.Text = ""
            txtBilZip.Text = ""
            txtCmpRmk.Text = ""
            txtCntyOrgn.Text = ""
            txtColCde.Text = ""
            txtColDsc.Text = ""
            'txtCoNam.Text = ""
            txtConFtr.Text = ""
            txtCover.Text = ""
            txtCrr.Text = ""
            txtCrrSo.Text = ""
            txtCtnEnd.Text = ""
            txtCtnStr.Text = ""
            txtCtrCfs.Text = ""
            txtCusCol.Text = ""
            txtCusItm.Text = ""
            txtCusPo.Text = ""
            txtCusStyNo.Text = ""
            txtCustUM.Text = ""
            txtCusVen.Text = ""
            txtDst.Text = ""
            txtEngRmk.Text = ""
            txtFtrRmk.Text = ""
            txtGodDsc.Text = ""
            txtGrsWgt.Text = ""
            txtImgNam.Text = ""
            txtImgPth.Text = ""
            txtInrCtn.Text = ""
            txtInvAmt.Text = ""
            txtInvDat.Text = ""
            txtInvNo.Text = ""
            txtIssDat.Text = ""
            txtItmShm.Text = ""
            txtItmTyp.Text = ""
            txtJobNo.Text = ""
            txtLcBank.Text = ""
            txtLCNo.Text = ""
            txtLcStmt.Text = ""
            txtManAdr.Text = ""
            txtManNam.Text = ""
            txtMtrCtn.Text = ""
            txtMtrdcm.Text = ""
            txtMtrhcm.Text = ""
            txtMtrwcm.Text = ""
            txtNetWgt.Text = ""
            txtOrdNo.Text = ""
            txtOrdSeq.Text = ""
            txtPC.Text = ""
            txtPCPrc.Text = ""
            txtPotLoa.Text = ""
            txtPurOrd.Text = ""
            txtPurSeq.Text = ""
            txtRvsDat.Text = ""
            txtSealNo.Text = ""
            txtSelPrcD.Text = ""
            txtPCPrc.Text = ""
            'txtShpNo.Text = ""
            txtShpQty.Text = ""
            txtShpSeq.Text = ""
            txtSlnOnb.Text = ""
            txtTtlAmt.Text = ""
            txtTtlAmtD.Text = ""
            txtTtlAmtI.Text = ""
            txtTtlCtn.Text = ""
            txtTtlcbm.Text = ""
            txtTtlCtnD.Text = ""
            TxtTtlCtnI.Text = ""
            txtTtlGrsD.Text = ""
            txtTtlGwg.Text = ""
            txtTtlHdpAmt.Text = ""
            txtTtlNetD.Text = ""
            txtTtlNwg.Text = ""
            txtTtlVolD.Text = ""
            txtTtlVolI.Text = ""
            txtUntCde.Text = ""
            txtVenNo.Text = ""
            txtVes.Text = ""
            txtVol.Text = ""
            txtVoy.Text = ""


            txtConsolNo.Text = ""
            chkrpl.Checked = False
            chkpckrmk.Checked = False
            cboCtrSiz.Text = ""
            'rs_SHIPGDTL.Tables("RESULT").Clear()
            'rs_SHIPGHDR.Tables("RESULT").Clear()

            txtcargorcvdat.Text = ""
            cboInvFooter.Text = ""

            Label17.Visible = False
            chkpckrmk.Visible = False
            txtBilAdr.Text = ""
            txtSlnOnb.Text = ""
            txtPrcTrm.Text = ""
            txtPayTrm.Text = ""

            txt_name_f1.Text = ""
            txt_dsc_f1.Text = ""
            txt_name_f2.Text = ""
            txt_dsc_f2.Text = ""
            txt_name_f3.Text = ""
            txt_dsc_f3.Text = ""
            txtresppo.Text = ""
            txtcussku.Text = ""
            'txtaddinf.Text = ""

            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
            cboInvNoM.SelectedIndex = -1
            cboOrdNo.SelectedIndex = -1
            txtImgNam.Text = ""
            txtEngDsc.Text = ""
            txtImgPth.Text = ""
            txtEngRmk.Text = ""

            cboInvNo.SelectedIndex = -1
            cboPrcTrm.SelectedIndex = -1
            cboPayTrm.SelectedIndex = -1
            optDocTyp0.Checked = False
            optDocTyp1.Checked = False
            optDocTyp2.Checked = False
            txtcargorcvdat.Text = ""
            txtCover.Text = ""
            cboInvFooter.SelectedIndex = -1
            txtFtrRmk.Text = ""






        ElseIf Mode = cModeAdd Then
            InitGrid()


            mmdAdd.Enabled = False
            mmdDelete.Enabled = False
            mmdFind.Enabled = False
            mmdSearch.Enabled = False
            mmdCopy.Enabled = False

            cboCoCde.Enabled = False
            txtCoNam.Enabled = False
            cboShpSts.Enabled = False
            txtShpNo.Enabled = False
            txtIssDat.Enabled = False
            txtRvsDat.Enabled = False

            txtTtlCtn.Enabled = False
            txtTtlcbm.Enabled = False
            txtTtlNwg.Enabled = False
            cboUntAmt.Enabled = False
            txtTtlGwg.Enabled = False
            txtTtlAmt.Enabled = False

            txtShpSeq.Enabled = False
            txtCusPo.Enabled = False
            txtCusStyNo.Enabled = False
            txtCusItm.Enabled = False
            txtItmDsc.Enabled = False
            chkPC.Enabled = False
            txtCusCol.Enabled = False
            txtCustUM.Enabled = False
            txtTtlCtnD.Enabled = False
            txtConFtr.Enabled = False

            txtUntCde.Enabled = False
            txtInrCtn.Enabled = False
            txtMtrCtn.Enabled = False
            txtVol.Enabled = False
            txtActVol.Enabled = False
            txtTtlVolD.Enabled = False
            txtTtlGrsD.Enabled = False
            txtTtlNetD.Enabled = False

            cboUntSelD.Enabled = False
            txtSelPrcD.Enabled = False
            cboUntAmtD.Enabled = False
            txtTtlAmtD.Enabled = False

            cmdAss.Enabled = False

            txtColCde.Visible = False

            txtPurOrd.Visible = False
            txtPurSeq.Visible = False
            txtVenNo.Visible = False
            txtCusVen.Visible = False


            cboInvNo.Enabled = False
            txtInvDat.Enabled = False
            chkClose.Enabled = False
            cboPrcTrm.Enabled = False
            cboPayTrm.Enabled = False
            optDocTyp0.Enabled = False
            optDocTyp1.Enabled = False
            optDocTyp2.Enabled = False
            optFOB1.Enabled = False
            optFOB2.Enabled = False

            txtDoc.Enabled = False
            cbobank.Enabled = False
            txtCover.Enabled = False
            txtFtrRmk.Enabled = False
            txtLcStmt.Enabled = False

            cboUntAmtI.Enabled = False
            txtTtlVolI.Enabled = False
            txtTtlAmtI.Enabled = False
            TxtTtlCtnI.Enabled = False

            txtInvAmt.Enabled = False
            txtAFamt.Enabled = False
            txtTtlHdpAmt.Enabled = False

            cboInvNoM.Enabled = False
            cboOrdNo.Enabled = False
            txtImgNam.Enabled = False
            txtEngDsc.Enabled = False
            ' txtImgPth.Visible = False
            'txtEngRmk.Visible = False
            txtSlnOnb.Enabled = False
            txtcargorcvdat.Enabled = False
            txtArrDat.Enabled = False


            txtIssDat.Enabled = False
            txtRvsDat.Enabled = False
            cboCus1No.Enabled = True
            txtShpNo.Enabled = False


            btcSHM00001.TabPages(0).Enabled = True
            btcSHM00001.TabPages(1).Enabled = False
            btcSHM00001.TabPages(2).Enabled = False
            btcSHM00001.TabPages(3).Enabled = False
            btcSHM00001.TabPages(4).Enabled = False
            btcSHM00001.TabPages(5).Enabled = False

            '20150205 MC
            'cmdSave.Enabled = True

            mmdSave.Enabled = Enq_right_local 'True

            mmdInsRow.Enabled = True
            mmdDelRow.Enabled = True

            txtConFtr.Enabled = False


            If gsUsrRank <= 4 Then
                cboPrcTrm.Enabled = True
                cboPayTrm.Enabled = True
            Else
                cboPrcTrm.Enabled = False
                cboPayTrm.Enabled = False
            End If


        ElseIf Mode = cModeUpd Then
            GroupBox3.Enabled = True
            GroupBox1.Enabled = True
            gbPri.Enabled = True

            btcSHM00001.TabPages(0).Enabled = True
            btcSHM00001.TabPages(1).Enabled = True
            btcSHM00001.TabPages(2).Enabled = True
            btcSHM00001.TabPages(3).Enabled = True
            btcSHM00001.TabPages(4).Enabled = True
            btcSHM00001.TabPages(5).Enabled = True
            'cmdSave.Enabled = True
            mmdSave.Enabled = Enq_right_local 'True


            cboCoCde.Enabled = False
            txtCoNam.Enabled = False
            cboShpSts.Enabled = False
            txtShpNo.Enabled = False
            txtIssDat.Enabled = False
            txtRvsDat.Enabled = False
            cboCus1No.Enabled = False
            cboCus2No.Enabled = False

            '20150205 MC
            CmdCOV.Enabled = True
            'CmdCOV.Enabled = False
            txtInvNo.Enabled = True

            txtTtlCtn.Enabled = False
            txtTtlcbm.Enabled = False
            txtTtlNwg.Enabled = False
            cboUntAmt.Enabled = False
            txtTtlGwg.Enabled = False
            txtTtlAmt.Enabled = False


            txtShpSeq.Enabled = False

            txtJobNo.Enabled = False
            txtCusPo.Enabled = False
            cboItmNo.Enabled = False
            txtOrdNo.Enabled = False
            txtCusStyNo.Enabled = False
            txtCusItm.Enabled = False

            chkPC.Enabled = False
            cboColPck.Enabled = False

            txtCusCol.Enabled = False
            txtCustUM.Enabled = False
            txtColDsc.Enabled = False

            txtUntCde.Enabled = False
            txtInrCtn.Enabled = False
            txtMtrCtn.Enabled = False
            txtVol.Enabled = False

            txtActVol.Enabled = False

            txtTtlVolD.Enabled = False
            txtTtlGrsD.Enabled = False
            txtTtlNetD.Enabled = False


            cboUntSelD.Enabled = False
            cboUntAmtD.Enabled = False
            txtSelPrcD.Enabled = False
            txtTtlAmtD.Enabled = False

            txtInvDat.Enabled = False
            chkClose.Enabled = False

            cboUntAmtI.Enabled = False
            txtTtlAmtI.Enabled = False
            txtTtlVolI.Enabled = False
            TxtTtlCtnI.Enabled = False
            txtInvAmt.Enabled = False
            txtAFamt.Enabled = False
            txtTtlHdpAmt.Enabled = False

            txtImgNam.Enabled = False
            txtColCde.Visible = False

            txtPurOrd.Visible = False
            txtPurSeq.Visible = False
            txtVenNo.Visible = False
            txtCusVen.Visible = False
            txtTtlCtnD.Enabled = False
            txtConFtr.Enabled = False

            '''20140718
            cboInvNo.Enabled = True
            txtInvDat.Enabled = False
            chkClose.Enabled = True
            cboPrcTrm.Enabled = True
            cboPayTrm.Enabled = True
            optDocTyp0.Enabled = True
            optDocTyp1.Enabled = True
            optDocTyp2.Enabled = True
            optFOB1.Enabled = True
            optFOB2.Enabled = True

            txtDoc.Enabled = True
            cbobank.Enabled = True
            txtCover.Enabled = True
            txtFtrRmk.Enabled = True
            txtLcStmt.Enabled = True



            cboInvNoM.Enabled = True
            cboOrdNo.Enabled = True
            txtEngDsc.Enabled = True
            cboOrdNo.Enabled = True



            mmdInsRow.Enabled = True
            mmdDelRow.Enabled = True

            GroupBox6.Enabled = True
            txtManNam.Enabled = True
            cboManAdr.Enabled = True
            txtManAdr.Enabled = True
            'txtaddinf.Enabled = True
            txtInvNo.Enabled = True
            cboCtrSiz.Enabled = True
            cmdinscpb.Enabled = True

            txt_name_f1.Enabled = True
            txt_name_f2.Enabled = True
            txt_name_f3.Enabled = True
            txt_dsc_f1.Enabled = True
            txt_dsc_f2.Enabled = True
            txt_dsc_f3.Enabled = True


            txtcargorcvdat.Enabled = True
            cmdPickDate2.Enabled = True
            mvwcgrcvdat.Enabled = True
            cmdPickDate3.Enabled = True
            mvwLCdat.Enabled = True
            cboInvFooter.Enabled = True
            dg_sainvhdr.Enabled = True

            If gsUsrRank <= 4 Then
                cboPrcTrm.Enabled = True
                cboPayTrm.Enabled = True
            Else
                cboPrcTrm.Enabled = False
                cboPayTrm.Enabled = False
            End If


        ElseIf Mode = cModeSave Then
        ElseIf Mode = cModeDel Then
        ElseIf Mode = cModeClear Then
            Call setStatus(cModeInit)
        ElseIf Mode = cModeRead Then


            dgPCKDIM.ReadOnly = True
            grdShpSum.ReadOnly = True
            grdDiscount.ReadOnly = True
            grdPremium.ReadOnly = True
            dg_sainvhdr.ReadOnly = True
            dgSCCPTBKD.ReadOnly = True
            cboInvNo.Enabled = True



            GroupBox3.Enabled = False
            GroupBox1.Enabled = False
            gbPri.Enabled = False

            cboShpSts.Enabled = False

            txtIssDat.Enabled = False
            txtRvsDat.Enabled = False
            cboCus1No.Enabled = False

            Add_flag = False
            mmdSave.Enabled = False

            cboCoCde.Enabled = True
            mvwSlnOnb.SendToBack()
            mvw_a.SendToBack()
            mvwcgrcvdat.SendToBack()
            mvwLCdat.SendToBack()
            ''''''20130826   cmdReset.Enabled = True
            '*** Phase 2



            mmdDelete.Enabled = False
            mmdCopy.Enabled = False
            mmdFind.Enabled = True
            mmdInsRow.Enabled = False
            mmdDelRow.Enabled = False
            mmdExit.Enabled = True
            mmdClear.Enabled = True
            mmdSearch.Enabled = False

            'Call SetStatusBar(Mode)


            'btcSHM00001.SelectedIndex = 0
            txtShpNo.Enabled = True
            'Recordstatus = False
            'Call ShowFooterBar(False)
            btcSHM00001.TabPages(0).Enabled = True
            btcSHM00001.TabPages(1).Enabled = True
            btcSHM00001.TabPages(2).Enabled = True
            btcSHM00001.TabPages(3).Enabled = True
            btcSHM00001.TabPages(4).Enabled = True
            btcSHM00001.TabPages(5).Enabled = True

            GroupBox6.Enabled = False
            txtManNam.Enabled = False
            cboManAdr.Enabled = False
            txtManAdr.Enabled = False
            'txtaddinf.Enabled = False
            txtInvNo.Enabled = False





            txtInvDat.Enabled = False
            chkClose.Enabled = False
            cboPrcTrm.Enabled = False
            cboPayTrm.Enabled = False
            optDocTyp0.Enabled = False
            optDocTyp1.Enabled = False
            optDocTyp2.Enabled = False
            optFOB1.Enabled = False
            optFOB2.Enabled = False

            txtDoc.Enabled = False
            cbobank.Enabled = False
            txtCover.Enabled = False
            txtFtrRmk.Enabled = False
            txtLcStmt.Enabled = False

            cboUntAmtI.Enabled = False
            txtTtlVolI.Enabled = False
            txtTtlAmtI.Enabled = False
            TxtTtlCtnI.Enabled = False

            txtInvAmt.Enabled = False
            txtAFamt.Enabled = False
            txtTtlHdpAmt.Enabled = False

            cboInvNoM.Enabled = False
            cboOrdNo.Enabled = False
            txtImgNam.Enabled = False
            txtEngDsc.Enabled = False
            '            txtImgPth.Visible = False
            '           txtEngRmk.Visible = False
            txtSlnOnb.Enabled = False
            txtcargorcvdat.Enabled = False
            txtArrDat.Enabled = False


            txtIssDat.Enabled = False
            txtRvsDat.Enabled = False
            cboCus1No.Enabled = True
            txtShpNo.Enabled = False

            GroupBox12.Enabled = False
            CmdCOV.Enabled = False
            txtItmShm.Enabled = False
            txtcargorcvdat.Enabled = False
            cmdPickDate2.Enabled = False
            mvwcgrcvdat.Enabled = False
            cmdPickDate3.Enabled = False
            mvwLCdat.Enabled = False
            cboInvFooter.Enabled = False
            dg_sainvhdr.Enabled = False
            cboCus1No.Enabled = False


            mmdAdd.Enabled = False

            cmdinscpb.Enabled = False
            txtBilRmk.Enabled = False
            cboPckListFooter.Enabled = False

            cboexptnam.Enabled = False
            txtexptnam.Enabled = False
            txtexptaddr.Enabled = False

            cboInvNoM.Enabled = True
            '29

        End If
    End Sub


    Private Sub fill_SHIPGHDR()

        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If

        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            rs_SHIPGHDR.Tables("RESULT").Rows.Add()
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*ADD*~"
        End If

        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cocde") = cboCoCde.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_shpno") = txtShpNo.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_issdat") = txtIssDat.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_rvsdat") = txtRvsDat.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus1no") = Split(cboCus1No.Text.Trim, " - ")(0)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cus2no") = Split(cboCus2No.Text.Trim, " - ")(0)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_smpshp") = IIf(chkSmpShp.Checked = True, "Y", "N")
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_shpsts") = Split(cboShpSts.Text.Trim, " - ")(0)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ves") = txtVes.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_voy") = txtVoy.Text.Trim

        If IsDate(txtSlnOnb.Text.Trim) Then
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_slnonb") = txtSlnOnb.Text.Trim
        Else
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_slnonb") = "01/01/1900"
        End If

        If IsDate(txtArrDat.Text.Trim) Then
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_arrdat") = txtArrDat.Text.Trim
        Else
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_arrdat") = "01/01/1900"
        End If

        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_potloa") = txtPotLoa.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_dst") = txtDst.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_crr") = txtCrr.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_crrso") = txtCrrSo.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_goddsc") = txtGodDsc.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilent") = txtBilEnt.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_biladr") = txtBilAdr.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilstt") = txtBilStt.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilcty") = Split(cboBilCty.Text.Trim, " - ")(0)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilzip") = txtBilZip.Text.Trim

        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilrmk") = txtBilRmk.Text.Trim
        '20150527

        If IsNumeric(txtTtlCtn.Text.Trim) Then
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlctn") = txtTtlCtn.Text.Trim
        Else
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlctn") = 0
        End If
        If IsNumeric(txtTtlcbm.Text.Trim) Then
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlcbm") = txtTtlcbm.Text.Trim
        Else
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlcbm") = 0
        End If


        If IsNumeric(txtTtlNwg.Text.Trim) Then
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlnwg") = txtTtlNwg.Text.Trim
        Else
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlnwg") = 0
        End If

        If IsNumeric(txtTtlGwg.Text.Trim) Then
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlgwg") = txtTtlGwg.Text.Trim
        Else
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlgwg") = 0
        End If

        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_untamt") = cboUntAmt.Text.Trim

        'If IsNumeric(cboUntAmt.Text.Trim) Then
        '    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_untamt") = cboUntAmt.Text.Trim
        'Else
        '    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_untamt") = 0
        'End If

        If IsNumeric(txtTtlAmt.Text.Trim) Then
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlamt") = txtTtlAmt.Text.Trim
        Else
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlamt") = 0
        End If

        'rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_lcno") = txtLCNo.Text.Trim
        '        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_lcbank") = txtLcBank.Text.Trim
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cntyorgn") = txtCntyOrgn.Text.Trim


        If optinvsm.Checked = True Then
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_invsm") = "Y"
        Else
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_invsm") = "N"
        End If

        If Add_flag = True Then
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_updusr") = gsUsrID
            rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = gsUsrID
        End If

    End Sub

    Public Sub fill_SHIPGDTL()

        ''*** Check Combo in list or not ?
        'If not_in_Combo_HDR() = True Then
        '    Exit Sub
        'End If\
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If

        If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If

        If Not rs_SHIPGDTL.Tables("RESULT").Rows.Count > 0 Then
            Exit Sub
        End If

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cocde") = cboCoCde.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpno") = txtShpNo.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") = IIf(IsNumeric(txtShpSeq.Text.Trim), txtShpSeq.Text.Trim, 0)

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_usrinvno") = txtInvNo.Text

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrcfs") = txtCtrCfs.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_sealno") = txtSealNo.Text.Trim


        If cboCtrSiz.Text.Trim = "" Then
            cboCtrSiz.Text = "CFS"
        End If
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = cboCtrSiz.Text.Trim

        ''replace ' when save
        'If optCtrSiz0.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "20'"
        'ElseIf optCtrSiz1.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "40'(SD)"
        'ElseIf optCtrSiz2.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "40'(HQ)"
        'ElseIf optCtrSiz3.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "45'"
        'ElseIf optCtrSiz4.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "CFS"
        'Else
        'End If


        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckrmk") = cboPckRmk.Text.Trim
        If chkpckrmk.Checked = True Then
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckrmk") = chkpckrmk.Text
        Else
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckrmk") = ""
        End If


        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_jobno") = cur_job_no
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno") = cur_sc_no

        '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_jobno") = txtJobNo.Text.Trim
        '       rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno") = txtOrdNo.Text.Trim

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordseq") = Val(txtOrdSeq.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuspo") = txtCusPo.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusitm") = txtCusItm.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno") = cboItmNo.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmtyp") = txtItmTyp.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmdsc") = txtItmDsc.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colcde") = txtColCde.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_custum") = txtCustUM.Text.Trim


        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuscol") = txtCusCol.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_coldsc") = txtColDsc.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpqty") = Val(txtShpQty.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_conftr") = Val(txtConFtr.Text.Trim)

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = txtUntCde.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnstr") = Val(txtCtnStr.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnend") = Val(txtCtnEnd.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrctn") = Val(txtInrCtn.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrctn") = Val(txtMtrCtn.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_vol") = Val(txtVol.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdcm") = Val(txtMtrdcm.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwcm") = Val(txtMtrwcm.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhcm") = Val(txtMtrhcm.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_actvol") = Val(txtActVol.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_grswgt") = Val(txtGrsWgt.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_netwgt") = Val(txtNetWgt.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmshm") = txtItmShm.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cmprmk") = txtCmpRmk.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mannam") = txtManNam.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_manadr") = txtManAdr.Text.Trim

        Call cal_mod_ttlvol(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq"))
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlvol") = Val(txtTtlVolD.Text.Trim)

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlnet") = Val(txtTtlNetD.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlgrs") = Val(txtTtlGrsD.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlctn") = Val(txtTtlCtnD.Text.Trim)
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlcbm") = Val(txtTtlcbm.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untsel") = cboUntSelD.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_selprc") = Val(txtSelPrcD.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untamt") = cboUntAmtD.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlamt") = Val(txtTtlAmtD.Text.Trim)

        '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_invno") = txtInvNo.Text.Trim
        'If Not txtInvNo.Text.Trim = "" Then
        'End If

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = txtPrcTrm.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_paytrm") = txtPayTrm.Text.Trim

        '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = Trim(Split(cboPrcTrm.Text.Trim, "-")(0))
        '       rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_paytrm") = Trim(Split(cboPayTrm.Text.Trim, "-")(0))
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purord") = txtPurOrd.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purseq") = Val(txtPurSeq.Text.Trim)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_venno") = txtVenNo.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusven") = txtCusVen.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusstyno") = txtCusStyNo.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_consolno") = txtConsolNo.Text.Trim
        If chkrpl.Checked = True Then
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_replacement") = "Y"
        Else
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_replacement") = "N"
        End If
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_updusr") = gsUsrID


        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colpck") = cboColPck.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnftr") = Val(txtCartonFactor.Text.Trim())


        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f1") = txt_name_f1.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f1") = txt_dsc_f1.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f2") = txt_name_f2.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f2") = txt_dsc_f2.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f3") = txt_name_f3.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f3") = txt_dsc_f3.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_resppo") = txtresppo.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cussku") = txtcussku.Text

        '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_addinf") = 'txtaddinf.Text

        ' rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2no") = Split(cboCus2No_dtl.Text.Trim, " - ")(0)


        ' Call cal_dtl_pckdim(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq"), rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlctn"))
        'If txtConFtr.Visible = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc") = "Y"
        'Else
        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc") = "N"
        'End If
    End Sub

    Private Sub txtCntyOrgn_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCntyOrgn.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtCntyOrgn.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtCntyOrgn.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cntyorgn") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_cntyorgn") = tmpstr
                End If
            End If
        End If


    End Sub
    Private Sub mmdInsRow_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdInsRow.Click
        If checkFocus(Me) Then Exit Sub

        Dim tmp_cboCtrSiz As String
        Dim tmp_txtCtrCfs As String
        Dim tmp_txtSealNo As String
        Dim tmp_chkpckrmk As Boolean
        Dim tmp_chkpckrmk2 As String
        Dim tmp_txtConsolNo As String
        Dim tmp_chkrpl As Boolean
        Dim tmp_rb_cfs As Boolean
        Dim tmp_txtJobNo As String
        Dim tmp_txtOrdNo As String
        Dim tmp_invno As String

        '' MichaelChiu 20170322
        Dim tmp_txtManNam As String
        Dim tmp_txtManAdr As String



        If btcSHM00001.SelectedIndex = 0 Then
            If Grid_Got_Focus = "dg_sainvhdr" Then
                Dim tmp_rs_SHSMPINV_count As Integer

                If rs_SHSMPINV Is Nothing Then
                    Exit Sub
                End If

                tmp_rs_SHSMPINV_count = rs_SHSMPINV.Tables("RESULT").Rows.Count
                rs_SHSMPINV.Tables("RESULT").Rows.Add()

                rs_SHSMPINV.Tables("RESULT").Rows(tmp_rs_SHSMPINV_count)("hsi_creusr") = "~*ADD*~"

                rs_SHSMPINV.Tables("RESULT").Rows(tmp_rs_SHSMPINV_count)("DEL") = ""
                rs_SHSMPINV.Tables("RESULT").Rows(tmp_rs_SHSMPINV_count)("hsi_cus1no") = Split(cboCus1No.Text.Trim, " - ")(0)
                rs_SHSMPINV.Tables("RESULT").Rows(tmp_rs_SHSMPINV_count)("hsi_cocde") = gsCompany
                rs_SHSMPINV.Tables("RESULT").Rows(tmp_rs_SHSMPINV_count)("hsi_shpno") = ""
                rs_SHSMPINV.Tables("RESULT").Rows(tmp_rs_SHSMPINV_count)("hsi_shinvno") = cboInvNo.Text
                rs_SHSMPINV.Tables("RESULT").Rows(tmp_rs_SHSMPINV_count)("hsi_sminvno") = ""


                display_SHSMPINV()

                If dg_sainvhdr.Enabled And dg_sainvhdr.Visible Then dg_sainvhdr.Focus()

            End If

        ElseIf btcSHM00001.SelectedIndex = 1 Then


            flag_sorted = False


            If Grid_Got_Focus = "dgSCCPTBKD" Then
                If cboItmNo.Text.Trim <> "" Then

                End If
            End If



            'flag_cmdInsRow_Click = True
            If check_ShippingDetail() = False Then
                Exit Sub
            End If

            'If Not SHCartonSC() Then
            '    Exit Sub
            'End If


            If check_insert_SHIPGDTL() = True Then
                Dim newshpseq As Integer

                ''20140320 fill befor new
                tmp_cboCtrSiz = cboCtrSiz.Text
                tmp_txtCtrCfs = txtCtrCfs.Text
                tmp_txtSealNo = txtSealNo.Text
                tmp_chkpckrmk = chkpckrmk.Checked
                tmp_chkpckrmk2 = chkpckrmk.Text
                tmp_txtConsolNo = txtConsolNo.Text
                tmp_chkrpl = chkrpl.Checked
                tmp_txtJobNo = txtJobNo.Text
                tmp_txtOrdNo = txtOrdNo.Text
                tmp_invno = txtInvNo.Text
                tmp_rb_cfs = rb_cfs.Checked

                '' MichaelChiu 20170322
                tmp_txtManNam = txtManNam.Text
                tmp_txtManAdr = txtManAdr.Text

                Call fill_SHIPGDTL()
                newshpseq = insert_SHIPGDTL(True)

                no_Display_Detail = False
                sReadingIndexS = sReadingIndexS + 1



                txtShpSeq.Text = newshpseq
                Call display_Detail(newshpseq)
                '''20141006
                cmdNxt.Enabled = False




                GroupBox6.Enabled = True
                cboCtrSiz.Enabled = True

                txtManNam.Enabled = False
                cboManAdr.Enabled = False
                txtManAdr.Enabled = False
                'txtaddinf.Enabled = False
                txtInvNo.Enabled = False
                txtCartonFactor.Enabled = False
                txtCtnEnd.Enabled = False
                txtCtnStr.Enabled = False
                txtPC.Enabled = False
                txtConFtr.Enabled = False
                txtShpQty.Enabled = False
                txtItmDsc.Enabled = False
                txt_name_f1.Enabled = False
                txt_dsc_f1.Enabled = False
                txt_name_f2.Enabled = False
                txt_dsc_f2.Enabled = False
                txt_name_f3.Enabled = False
                txt_dsc_f3.Enabled = False
                'txtaddinf.Enabled = False

                '  Call reset_detail_control("Detail_Init")

                ''            Call reset_detail_data("Detail_Init", "All")
            Else
                Exit Sub
            End If


            'Exit Sub


            Insert_flag = True
            btcSHM00001.SelectedIndex = 1

            '*** Check Combo in list or not ?
            If not_in_Combo_HDR() = True Then
                Exit Sub
            End If

            'If not_in_Combo_DTL() = True Then
            '    Exit Sub
            'End If

            '  Call fill_SHIPGDTL()
            '''20141006
            '  no_Display_Detail = True

            'dgPCKDIM.DataSource = rs_SHIPGDTL.Tables("RESULT").DefaultView
            'rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort() = "hid_shpseq"
            'no_Display_Detail = False
            'txtSeq.Text = rs_SHIPGDTL.Tables("RESULT").Rows(rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1)("hid_shpseq") + 1

            'Call reverse_Detail()

            ''??
            'no_Display_Detail = True
            'drNewRow = rs_SHIPGDTL.Tables("RESULT").NewRow
            'no_Display_Detail = False
            'drNewRow("mode") = "NEW"
            'drNewRow("hid_shpseq") = rs_SHIPGDTL.Tables("RESULT").Rows.Count
            'drNewRow("hid_apprve") = ""
            'rs_SHIPGDTL.Tables("RESULT").Rows.Add(drNewRow)
            '2014
            'temp


            sReadingIndexS = rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1

            '            cmdBck.Enabled = True
            '   cmdNxt.Enabled = True

            'If rs_SHIPGDTL.Tables("RESULT").Rows.Count > 1 Then
            '    cmdBck.Enabled = True
            '    cmdNxt.Enabled = False
            'ElseIf rs_SHIPGDTL.Tables("RESULT").Rows.Count = 1 Then
            '    cmdBck.Enabled = False
            '    cmdNxt.Enabled = False
            'ElseIf sReadingIndexS = rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1 Then
            '    cmdBck.Enabled = True
            '    cmdNxt.Enabled = False
            'End If
            'temp


            Call reset_detail_control("Detail_Init")
            '''20141006

            cboCtrSiz.Text = tmp_cboCtrSiz

            If Trim(tmp_cboCtrSiz) <> "" Then
                chkpckrmk.Visible = True
                chkpckrmk.Enabled = True
            End If
            txtCtrCfs.Text = tmp_txtCtrCfs
            txtSealNo.Text = tmp_txtSealNo
            chkpckrmk.Checked = tmp_chkpckrmk
            chkpckrmk.Text = tmp_chkpckrmk2
            txtConsolNo.Text = tmp_txtConsolNo
            chkrpl.Checked = tmp_chkrpl

            '' MichaelChiu 20170322
            txtManNam.Text = tmp_txtManNam
            txtManAdr.Text = tmp_txtManAdr

            ''MichaelChiu 20170419
            rb_cfs.Checked = tmp_rb_cfs
            If tmp_rb_cfs = True Then
                rb_ctn.Checked = False

                txtConsolNo.Enabled = True
                cboCtrSiz.Enabled = False
                txtCtrCfs.Enabled = False
                txtSealNo.Enabled = False
                chkpckrmk.Enabled = False
                txtConsolNo.Focus()

                txtCtrCfs.Text = ""
                txtSealNo.Text = ""
                chkpckrmk.Text = ""
            Else
                rb_ctn.Checked = True

                txtConsolNo.Enabled = False
                txtConsolNo.Text = ""
                cboCtrSiz.Enabled = True
                txtCtrCfs.Enabled = True
                txtSealNo.Enabled = True
                chkpckrmk.Enabled = True
                cboCtrSiz.Focus()
            End If

            ' txtJobNo.Text = tmp_txtJobNo

            If last_scjob_action = "SC" Then
                txtOrdNo.Text = tmp_txtOrdNo
                txtOrdNo.Focus()

            End If

            txtInvNo.Text = tmp_invno

            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = cboCtrSiz.Text.Trim
            '1013

            dgPCKDIM.Enabled = False
            dgSCCPTBKD.Enabled = False

            'dgPCKDIM.Visible= False
            '  dgSCCPTBKD.Visible = False
            cmdinscpb.Visible = False

        ElseIf btcSHM00001.SelectedIndex = 2 Then

        ElseIf btcSHM00001.SelectedIndex = 3 Then


            If cboInvNoP.Text.Trim = "" Then
                MsgBox("Please select invoice number!")
                Exit Sub
            End If
            Dim tmp_rs_SHDISPRM_D_count As Integer
            Dim tmp_rs_SHDISPRM_P_count As Integer

            If cboInvNoP.Items.Count > 0 Then
                If Grid_Got_Focus = "grdDiscount" Then

                    tmp_rs_SHDISPRM_D_count = rs_SHDISPRM_D.Tables("RESULT").Rows.Count
                    rs_SHDISPRM_D.Tables("RESULT").Rows.Add()

                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_creusr") = "~*ADD*~"

                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("DEL") = ""
                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_cocde") = gsCompany
                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_shpno") = txtShpNo.Text
                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_invno") = cboInvNoP.Text
                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_type") = "D"
                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_seqno") = rs_SHDISPRM_D.Tables("RESULT").Rows.Count + 1
                    'rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_seqno") = -1
                    If lstCde_D.Items.Count = 0 Then
                        rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_cde") = ""
                    Else
                        rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_cde") = ""
                    End If

                    If lstCde_D.Items.Count = 0 Then
                        rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_dsc") = ""
                    Else
                        rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_dsc") = ""

                    End If

                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_pctamt") = "Percentage"
                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_pct") = 0
                    rs_SHDISPRM_D.Tables("RESULT").Rows(tmp_rs_SHDISPRM_D_count)("hdp_amt") = 0

                    display_grdDiscount()

                    If grdDiscount.Enabled And grdDiscount.Visible Then grdDiscount.Focus()

                ElseIf Grid_Got_Focus = "grdPremium" Then

                    tmp_rs_SHDISPRM_P_count = rs_SHDISPRM_P.Tables("RESULT").Rows.Count
                    rs_SHDISPRM_P.Tables("RESULT").Rows.Add()

                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_creusr") = "~*ADD*~"

                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("DEL") = ""
                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_cocde") = gsCompany
                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_shpno") = txtShpNo.Text
                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_invno") = cboInvNoP.Text
                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_type") = "P"
                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_seqno") = rs_SHDISPRM_P.Tables("RESULT").Rows.Count + 1
                    'rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_seqno") = -1

                    If lstCde_P.Items.Count = 0 Then
                        rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_cde") = ""
                    Else
                        rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_cde") = ""
                    End If

                    If lstCde_P.Items.Count = 0 Then
                        rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_dsc") = ""
                    Else
                        rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_dsc") = ""

                    End If

                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_pctamt") = "Percentage"
                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_pct") = 0
                    rs_SHDISPRM_P.Tables("RESULT").Rows(tmp_rs_SHDISPRM_P_count)("hdp_amt") = 0

                    display_grdPremium()

                    If grdPremium.Enabled And grdPremium.Visible Then grdPremium.Focus()

                    'grdPremium.col = 1
                    'grdPremium.LeftCol = 0
                End If
            End If

            '''''

        End If

        If sReadingIndexS = 0 Then
            cboCtrSiz.Focus()

        Else
            If txtJobNo.Enabled = True Then
                txtJobNo.Focus()
            ElseIf txtOrdNo.Enabled = True Then
                txtOrdNo.Focus()
            Else
                cboCtrSiz.Focus()
            End If

        End If
        If last_scjob_action = "SC" Then
            txtOrdNo.Focus()
        End If



    End Sub




    Private Function check_insert_SHIPGDTL() As Boolean
        check_insert_SHIPGDTL = True
        Exit Function

        check_insert_SHIPGDTL = False

        If btcSHM00001.SelectedIndex = 1 Then 'Or btcSHM00001.SelectedIndex = 2 Then

            If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 0 Then
                MsgBox("Shipping in initial mode, please check")
                check_insert_SHIPGDTL = False
                Exit Function
            Else


                If check_insert_SHIPGDTL = False Then
                    Call insert_SHIPGDTL(False)
                    Call display_Detail(txtShpSeq.Text)

                    Call reset_detail_control("Detail_Init")

                    btcSHM00001.SelectedIndex = 1
                    check_insert_SHIPGDTL = True
                    Exit Function
                End If
            End If
        Else
            MsgBox("Please insert row in Details Page!")
            check_insert_SHIPGDTL = False
        End If
        '''

        'If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
        '    Call insert_SHIPGDTL(True)
        'End If
        Call display_Detail(Val(txtShpSeq.Text))

        '        Call reset_detail_control("Detail_Init")


        check_insert_SHIPGDTL = True



    End Function



    Private Function insert_SHIPGDTL_cov(ByVal index As Integer, ByVal addnew As Boolean) As Integer
        Dim shpseq As Integer
        Dim loc As Integer

        shpseq = 0

        If addnew = True Then
            Dim i As Integer
            For i = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
                If rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpseq") > shpseq Then
                    shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpseq")
                End If
            Next i
            shpseq = shpseq + 1

            insert_SHIPGDTL_cov = shpseq

            rs_SHIPGDTL.Tables("RESULT").Rows.Add()

            loc = rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
        Else
            ''should be the cur one, instead of last item
            shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("hid_shpseq")
            loc = loc
            ''shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1).Item("hid_shpseq")
        End If


        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("Del") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("Cov") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("mode") = "NEW"
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cocde") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_cocde")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpno") = txtShpNo.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpseq") = shpseq

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrcfs") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ctrcfs")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_sealno") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_sealno")

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrsiz") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ctrsiz")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_pckrmk") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_pckrmk")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrsiz") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ctrsiz")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_jobno") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_jobno")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ordno") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ordno")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ordseq") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ordseq")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cuspo") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_cuspo")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cusitm") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_cusitm")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_itmno") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_itmno")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_itmtyp") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_itmtyp")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_itmdsc") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_itmdsc")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_colcde") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_colcde")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_alsitmno") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_alsitmno")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_alscolcde") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_alscolcde")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_custum") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_custum")

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cuscol") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_cuscol")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_coldsc") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_coldsc")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpqty") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_shpqty")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_untcde") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_untcde")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctnstr") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ctnstr")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctnend") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ctnend")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_inrctn") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_inrctn")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mtrctn") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_mtrctn")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_vol") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_vol")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mtrdcm") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_mtrdcm")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mtrwcm") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_mtrwcm")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mtrhcm") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_mtrhcm")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_actvol") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_actvol")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_grswgt") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_grswgt")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_netwgt") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_netwgt")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_itmshm") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_itmshm")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cmprmk") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_cmprmk")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mannam") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_mannam")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_manadr") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_manadr")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlvol") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ttlvol")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlnet") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ttlnet")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlgrs") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ttlgrs")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlctn") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ttlctn")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_untsel") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_untsel")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_selprc") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_selprc")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_untamt") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_untamt")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlamt") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ttlamt")

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_invno") = ""
        '        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_invno") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_invno")

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_prctrm") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_prctrm")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_paytrm") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_paytrm")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_purord") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_purord")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_purseq") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_purseq")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_venno") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_venno")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cusven") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_cusven")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cusstyno") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_cusstyno")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_consolno") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_consolno")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_replacement") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_replacement")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_colpck") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_colpck")

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctnftr") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_ctnftr")

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cus2no") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_cus2no")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_contopc") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_contopc")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_conftr") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_conftr")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_pcprc") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_pcprc")

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_name_f1") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_name_f1")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_dsc_f1") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_dsc_f1")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_name_f2") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_name_f2")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_dsc_f2") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_dsc_f2")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_name_f3") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_name_f3")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_dsc_f3") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_dsc_f3")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_resppo") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_resppo")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cussku") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_cussku")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_addinf") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_addinf")

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_updusr") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_updusr")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("hid_credat") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index).Item("hid_credat")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("hid_upddat") = rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index).Item("hid_upddat")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_creusr") = "~*ADD*~"

        gspStr = "sp_select_SHPCKDIM_cov  '" & cboCoCde.Text & "','" & rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_shpno") & "','" & rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_shpseq") & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHPCKDIM_cov_back, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress rs_SHPCKDIM_cov_back :" & rtnStr)
            Exit Function
        End If
        For i2 As Integer = 0 To rs_SHPCKDIM_cov_back.Tables("RESULT").Columns.Count - 1
            rs_SHPCKDIM_cov_back.Tables("RESULT").Columns(i2).ReadOnly = False
        Next i2

        If rs_SHPCKDIM_cov_back.Tables("RESULT").Rows.Count > 0 Then
            maxshpseq = rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpseq")

            Call Append_dimension_COV(loc, rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctnftr"))
            '            Call Append_dimension(loc, loc + 1)

            'temp 1016

            Call update_dimension_cov(rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctnftr"))
        End If
        ''
        gspStr = "sp_select_SHDTLCTN_cov  '" & cboCoCde.Text & "','" & rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_shpno") & "','" & rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_shpseq") & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHDTLCTN_cov_back, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress rs_SHDTLCTN_cov_back :" & rtnStr)
            Exit Function
        End If
        For i2 As Integer = 0 To rs_SHDTLCTN_cov_back.Tables("RESULT").Columns.Count - 1
            rs_SHDTLCTN_cov_back.Tables("RESULT").Columns(i2).ReadOnly = False
        Next i2

        If rs_SHDTLCTN_cov_back.Tables("RESULT").Rows.Count > 0 Then
            For index3 As Integer = 0 To rs_SHDTLCTN_cov_back.Tables("RESULT").Rows.Count - 1
                Call Append_ctn(txtShpNo.Text.Trim, shpseq)
                Call update_ctn_cov(index3)
            Next
        End If

        ''

        gspStr = "sp_select_SHCPTBKD_cov  '" & cboCoCde.Text & "','" & rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_shpno") & "','" & rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_shpseq") & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHCPTBKD_cov_back, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress rs_SHCPTBKD_cov_back :" & rtnStr)
            Exit Function
        End If
        For i2 As Integer = 0 To rs_SHCPTBKD_cov_back.Tables("RESULT").Columns.Count - 1
            rs_SHCPTBKD_cov_back.Tables("RESULT").Columns(i2).ReadOnly = False
        Next i2

        If rs_SHCPTBKD_cov_back.Tables("RESULT").Rows.Count > 0 Then
            For index3 As Integer = 0 To rs_SHCPTBKD_cov_back.Tables("RESULT").Rows.Count - 1
                Call Append_cbd(txtShpNo.Text.Trim, shpseq)
                Call update_cbd_cov(index3)
            Next
        End If



        gspStr = "sp_select_SHASSINF_cov  '" & rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_shpno") & "','" & rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(index)("hid_shpseq") & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHASSINF_cov_back, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress rs_SHASSINF_cov_back :" & rtnStr)
            Exit Function
        End If
        For i2 As Integer = 0 To rs_SHASSINF_cov_back.Tables("RESULT").Columns.Count - 1
            rs_SHASSINF_cov_back.Tables("RESULT").Columns(i2).ReadOnly = False
        Next i2

        If rs_SHASSINF_cov_back.Tables("RESULT").Rows.Count > 0 Then
            For index3 As Integer = 0 To rs_SHASSINF_cov_back.Tables("RESULT").Rows.Count - 1
                Call Append_Update_Asst_cov(txtShpNo.Text.Trim, shpseq, index3)
            Next
        End If



        '''
        ''''''''''''''''''''Insert Shipgdtl
        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpseq")

        rs_SHCPTBKD.Tables("result").DefaultView.RowFilter = "shb_ordseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpseq")

        'temp

        maxshpseq = rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpseq")
        'rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctnftr") = 1

        'call the shpckdim
        'Append & update
        'call the ctn
        'Append
        'using shpno & seq to find out the 


        'gspStr = "sp_update_SCORDDTL_SHM00001 '" & _
        'rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cocde") & "','" & _
        'rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ordno") & "','" & _
        'rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ordseq") & "'," & _
        '"0,'" & _
        '                      gsUsrID & "'"

        'rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)
        'If rtnLong <> RC_SUCCESS Then
        '    MsgBox("Error on loading insert_shipgdtl_cov :" & rtnStr)
        '    Exit Function
        'End If


    End Function


    Private Function insertdis(ByVal shpseq As Integer, ByVal addnew As Boolean)
        Dim loc As Integer
        Dim index As Integer

        For indextest As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1

            If shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(indextest)("hid_shpseq") Then
                index = indextest
            End If

        Next


        If addnew = True Then
            'Dim i As Integer
            'For i = 0 To rs_SHIPGDTL_dis.Tables("RESULT").Rows.Count - 1
            '    If rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_shpseq") > shpseq Then
            '        shpseq = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_shpseq")
            '    End If
            'Next i
            'shpseq = shpseq + 1

            'insertdis = shpseq

            rs_SHIPGDTL_dis.Tables("RESULT").Rows.Add()

            loc = rs_SHIPGDTL_dis.Tables("RESULT").Rows.Count - 1
        Else
            ''should be the cur one, instead of last item
            ' ''shpseq = rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc).Item("hid_shpseq")
            'loc = loc
            ''shpseq = rs_SHIPGDTL_dis.Tables("RESULT").Rows(rs_SHIPGDTL_dis.Tables("RESULT").Rows.Count - 1).Item("hid_shpseq")
        End If


        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc).Item("Del") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("Del")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc).Item("Cov") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("Cov")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc).Item("mode") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("mode")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_cocde") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_cocde")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_shpno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_shpno")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_shpseq") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_shpseq")

        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ctrcfs") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ctrcfs")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_sealno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_sealno")

        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ctrsiz") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ctrsiz")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_pckrmk") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_pckrmk")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ctrsiz") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ctrsiz")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_jobno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_jobno")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ordno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ordno")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ordseq") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ordseq")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_cuspo") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_cuspo")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_cusitm") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_cusitm")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_itmno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_itmno")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_itmtyp") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_itmtyp")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_itmdsc") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_itmdsc")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_colcde") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_colcde")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_alsitmno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_alsitmno")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_alscolcde") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_alscolcde")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_custum") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_custum")

        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_cuscol") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_cuscol")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_coldsc") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_coldsc")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_shpqty") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_shpqty")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_untcde") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_untcde")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ctnstr") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ctnstr")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ctnend") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ctnend")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_inrctn") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_inrctn")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_mtrctn") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_mtrctn")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_vol") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_vol")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_mtrdcm") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_mtrdcm")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_mtrwcm") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_mtrwcm")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_mtrhcm") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_mtrhcm")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_actvol") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_actvol")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_grswgt") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_grswgt")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_netwgt") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_netwgt")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_itmshm") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_itmshm")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_cmprmk") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_cmprmk")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_mannam") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_mannam")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_manadr") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_manadr")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ttlvol") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ttlvol")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ttlnet") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ttlnet")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ttlgrs") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ttlgrs")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ttlctn") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ttlctn")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_untsel") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_untsel")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_selprc") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_selprc")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_untamt") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_untamt")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ttlamt") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ttlamt")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_invno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_invno")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_prctrm") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_prctrm")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_paytrm") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_paytrm")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_purord") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_purord")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_purseq") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_purseq")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_venno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_venno")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_cusven") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_cusven")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_cusstyno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_cusstyno")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_consolno") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_consolno")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_replacement") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_replacement")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_colpck") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_colpck")

        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_ctnftr") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ctnftr")

        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_updusr") = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_updusr")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc).Item("hid_credat") = rs_SHIPGDTL.Tables("RESULT").Rows(index).Item("hid_credat")
        rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc).Item("hid_upddat") = rs_SHIPGDTL.Tables("RESULT").Rows(index).Item("hid_upddat")
        ' rs_SHIPGDTL_dis.Tables("RESULT").Rows(loc)("hid_creusr") = "mis"


    End Function



    Private Function update_SHIPGDTL_dis(ByVal shpseq As Integer, ByVal index_dis As Integer)
        Dim loc As Integer
        For index_f As Integer = 0 To rs_SHIPGDTL_dis.Tables("result").Rows.Count - 1
            If index_f < rs_SHIPGDTL_dis.Tables("result").Rows.Count Then
                If rs_SHIPGDTL_dis.Tables("result").Rows(index_f).RowState <> DataRowState.Deleted Then
                    If rs_SHIPGDTL_dis.Tables("result").Rows(index_f)("hid_shpseq") = shpseq Then
                        rs_SHIPGDTL_dis.Tables("result").Rows(index_f).Delete()
                        index_f = index_f - 1
                        rs_SHIPGDTL_dis.Tables("result").AcceptChanges()

                    End If
                End If
            End If
        Next


        Dim last_dis_ As Integer

        If index_dis <> 111 Then
            'temp
            For index_insert As Integer = 0 To index_dis - 1
                Call insertdis(shpseq, True)
                last_dis_ = rs_SHIPGDTL_dis.Tables("result").Rows.Count - 1


                Dim tmp_CartonFactor As Integer

                For index99 As Integer = 0 To rs_SHPCKDIM.Tables("result").Rows.Count - 1

                    If rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 5 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 6 Then
                        tmp_CartonFactor = 1
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 4 Then
                        tmp_CartonFactor = 2
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 7 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 12 Then
                        tmp_CartonFactor = 3
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 13 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 20 Then
                        tmp_CartonFactor = 4
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 21 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 30 Then
                        tmp_CartonFactor = 5
                    End If

                    If rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_shpno") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_shpno") _
                    And rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_shpseq") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_shpseq") _
                    And rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_ctnftr") = tmp_CartonFactor _
                    And rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_shpseq") = shpseq _
                    And rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_pdnum") = get_pdnum(tmp_CartonFactor, index_insert) _
                    And rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_dimtyp") = "Act" Then

                        rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_mtrdcm") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_l_cm")
                        rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_mtrwcm") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_w_cm")
                        rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_mtrhcm") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_h_cm")

                        rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_actvol") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_cbm_cm")
                        rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_ttlvol") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_ttlcbm_cm")
                        rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_grswgt") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_gw_kg")
                        rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_ttlgrs") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_ttlgw_kg")
                        rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_netwgt") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_nw_kg")
                        rs_SHIPGDTL_dis.Tables("result").Rows(last_dis_)("hid_ttlnet") = rs_SHPCKDIM.Tables("result").Rows(index99)("hpd_ttlnw_kg")



                    End If
                Next



            Next

        End If
    End Function
    Private Function insert_SHIPGDTL(ByVal addnew As Boolean) As Integer
        Dim shpseq As Integer
        Dim loc As Integer

        If rs_SHIPGDTL Is Nothing Then
            Exit Function
        End If

        If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            ''
            gspStr = "sp_list_SHIPGDTL '',''"
            rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading cmdAddClick sp_select_SHIPGDTL :" & rtnStr)
                Exit Function
            End If

            For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Columns.Count - 1
                rs_SHIPGDTL.Tables("RESULT").Columns(i).ReadOnly = False
            Next i

        End If



        shpseq = 0

        If addnew = True Then
            Dim i As Integer
            For i = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
                If rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpseq") > shpseq Then
                    shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpseq")
                End If
            Next i

            shpseq = shpseq + 1

            insert_SHIPGDTL = shpseq

            rs_SHIPGDTL.Tables("RESULT").Rows.Add()

            loc = rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
        Else
            ''should be the cur one, instead of last item
            shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("hid_shpseq")
            loc = loc
            ''shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1).Item("hid_shpseq")
        End If


        ''loc = loc
        ''loc = rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1


        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("Del") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("Cov") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("mode") = "NEW"

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cocde") = cboCoCde.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpno") = txtShpNo.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpseq") = shpseq


        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrcfs") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_sealno") = ""

        ''replace ' when save

        'If optCtrSiz0.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrsiz") = ""
        'ElseIf optCtrSiz1.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrsiz") = ""
        'ElseIf optCtrSiz2.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrsiz") = ""
        'ElseIf optCtrSiz3.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrsiz") = ""
        'ElseIf optCtrSiz4.Checked = True Then
        '    rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrsiz") = ""
        'Else
        'End If
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_usrinvno") = ""

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctrsiz") = ""

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_pckrmk") = ""


        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_jobno") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ordno") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ordseq") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cuspo") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cusitm") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_itmno") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_itmtyp") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_itmdsc") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_colcde") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_alsitmno") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_alscolcde") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_custum") = ""

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cuscol") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_coldsc") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpqty") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_untcde") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctnstr") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctnend") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_inrctn") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mtrctn") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_vol") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mtrdcm") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mtrwcm") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mtrhcm") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_actvol") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_grswgt") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_netwgt") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_itmshm") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cmprmk") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_mannam") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_manadr") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlvol") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlnet") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlgrs") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlctn") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_untsel") = cboUntAmt.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_selprc") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_untamt") = cboUntAmt.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ttlamt") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_invno") = txtInvNo.Text.Trim
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_prctrm") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_paytrm") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_purord") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_purseq") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_venno") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cusven") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cusstyno") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_consolno") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_replacement") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cus2no") = Split(cboCus2No_dtl.Text.Trim, " - ")(0)

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_name_f1") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_dsc_f1") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_name_f2") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_dsc_f2") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_name_f3") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_dsc_f3") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_resppo") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_cussku") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_addinf") = ""

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_orgqty") = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpqty") = 0

        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_updusr") = gsUsrID

        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("hid_credat") = "01/01/1900"
        rs_SHIPGDTL.Tables("RESULT").Rows(loc).Item("hid_upddat") = "01/01/1900"
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_creusr") = "~*ADD*~"


        ''''''''''''''''''''Insert Shipgdtl
        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpseq")
        maxshpseq = rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_shpseq")
        rs_SHIPGDTL.Tables("RESULT").Rows(loc)("hid_ctnftr") = 1

        Call Append_dimension(loc, loc + 1)



    End Function


    Public Sub display_Detail(ByVal shpseq As Integer)
        Dim tmp_recordstatus
        tmp_recordstatus = Recordstatus
        flag_display_not_for_change = True

        'sReadingIndexS = 0

        Dim i As Integer

        '''bug20130729
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If

        If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If

        If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If

        For i = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            ''bug
            If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpseq")) Then

                If shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpseq") Then
                    sReadingIndexS = i
                End If
            End If

        Next i




        no_Display_Detail = False

        If no_Display_Detail = False Then
            If rs_SHIPGDTL.Tables("RESULT").Rows.Count > 0 Then
                If sReadingIndexS >= 0 And sReadingIndexS <= rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1 And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).RowState <> "8" Then
                    ''bug
                    'If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno")) Then
                    '    'MsgBox("No record!")
                    '    Exit Sub
                    'End If


                    '  txtSeq.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq")

                    cboCoCde.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cocde")
                    '                    txtShpNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpno")

                    txtShpSeq.Text = Val(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq"))


                    txtCtrCfs.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrcfs")
                    txtSealNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_sealno")


                    'If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "20'" Then
                    '    optCtrSiz0.Checked = True

                    'ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "40'(SD)" Then
                    '    optCtrSiz1.Checked = True

                    'ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "40'(HQ)" Then

                    '    optCtrSiz2.Checked = True

                    'ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "45'" Then

                    '    optCtrSiz3.Checked = True


                    'ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz") = "CFS" Then
                    '    optCtrSiz4.Checked = True

                    'Else
                    'End If


                    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("DEL") = "Y" Then
                        chkDel.Checked = True
                    Else
                        chkDel.Checked = False
                    End If

                    cboPckRmk.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckrmk")
                    If Trim(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckrmk")) <> "" Then
                        chkpckrmk.Checked = True
                        chkpckrmk.Visible = True
						 chkpckrmk.Enabled = True
                        chkpckrmk.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckrmk")
                        Label17.Visible = True
                    Else
                        chkpckrmk.Checked = False
                        chkpckrmk.Visible = True
						 chkpckrmk.Enabled = True
                        Label17.Visible = True
                        chkpckrmk.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pckrmk")
                    End If

                    cboCtrSiz.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrsiz")
                    If cboCtrSiz.Text.Trim = "CFS" Then
                        cboCtrSiz.Text = ""
                    End If


                    If Microsoft.VisualBasic.Left(cboCtrSiz.Text, 9) = Microsoft.VisualBasic.Left("40'HQ(Reefer Dry)", 9) Then
                        cboCtrSiz.Text = "40'HQ(Reefer Dry)"
                    End If

                    rb_ctn.Checked = True
                    rb_cfs.Checked = False

                    txtConsolNo.Enabled = False
                    cboCtrSiz.Enabled = True
                    txtCtrCfs.Enabled = True
                    txtSealNo.Enabled = True
                    chkpckrmk.Enabled = True
                    '''''''''''''''
                    If cboCtrSiz.Text.Trim = "20'" Then
                        chkpckrmk.Text = "Part of 1 x 20'"
                        txtCtrCfs.Enabled = True
                        txtSealNo.Enabled = True
                    ElseIf cboCtrSiz.Text.Trim = "40'(SD)" Then
                        chkpckrmk.Text = "Part of 1x40'(SD)"
                        txtCtrCfs.Enabled = True
                        txtSealNo.Enabled = True
                    ElseIf cboCtrSiz.Text.Trim = "40'(HQ)" Then
                        chkpckrmk.Text = "Part of 1x40'(HQ)"
                        txtCtrCfs.Enabled = True
                        txtSealNo.Enabled = True
                    ElseIf cboCtrSiz.Text.Trim = "45'" Then
                        chkpckrmk.Text = "Part of 1x45'"
                        txtCtrCfs.Enabled = True
                        txtSealNo.Enabled = True
                    ElseIf cboCtrSiz.Text.Trim = "53'" Then
                        chkpckrmk.Text = "Part of 1x53'"
                        txtCtrCfs.Enabled = True
                        txtSealNo.Enabled = True
                    ElseIf cboCtrSiz.Text.Trim = "40'HQ(Reefer Dry)" Then
                        chkpckrmk.Text = "Part of 1x40'HQ(Reefer Dry)"
                        'Label17.Visible = False
                        'chkpckrmk.Visible = False
                        txtCtrCfs.Enabled = True
                        txtSealNo.Enabled = True

                    ElseIf cboCtrSiz.Text.Trim = "CFS" Or cboCtrSiz.Text.Trim = "" Then
                        Label17.Visible = False
                        chkpckrmk.Visible = False
                        chkpckrmk.Text = ""
                        txtCtrCfs.Enabled = False
                        txtSealNo.Enabled = False
                        ''
                        rb_ctn.Checked = False
                        rb_cfs.Checked = True
                        ''''''''''''''''''''''''''''
                        txtConsolNo.Enabled = True
                        cboCtrSiz.Enabled = False
                        txtCtrCfs.Enabled = False
                        txtSealNo.Enabled = False
                        chkpckrmk.Enabled = False

                        txtCtrCfs.Text = ""
                        txtSealNo.Text = ""
                        chkpckrmk.Text = ""


                    End If
                    txtJobNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_jobno")
                    txtOrdNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno")

                    cur_job_no = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_jobno")
                    cur_sc_no = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno")

                    txtOrdSeq.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordseq")
                    txtCusPo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuspo")
                    txtCusItm.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusitm")
                    cboItmNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno")
                    txtItmTyp.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmtyp")
                    txtItmDsc.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmdsc")
                    txtColCde.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colcde")
                    txtCustUM.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_custum")

                    txtCusCol.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuscol")

                    txtColDsc.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_coldsc")
                    txtShpQty.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpqty")
                    txtUntCde.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde")
                    txtInrCtn.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrctn")
                    txtCtnEnd.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnend")
                    txtCtnStr.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnstr")
                    txtMtrCtn.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrctn")
                    txtVol.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_vol")
                    txtMtrdcm.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdcm")
                    txtMtrwcm.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwcm")
                    txtMtrhcm.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhcm")
                    txtActVol.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_actvol")
                    txtGrsWgt.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_grswgt")
                    txtNetWgt.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_netwgt")
                    txtItmShm.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmshm")
                    txtCmpRmk.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cmprmk")
                    txtManNam.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mannam")
                    txtManAdr.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_manadr")


                    txtTtlVolD.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlvol")

                    txtTtlNetD.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlnet")
                    txtTtlGrsD.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlgrs")
                    txtTtlCtnD.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlctn")

                    'Call display_dimension(Val(txtTtlCtnD.Text))

                    Call display_SHCPTBKD()

                    cboUntSelD.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untsel")
                    txtSelPrcD.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_selprc")
                    cboUntAmtD.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untamt")
                    txtTtlAmtD.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlamt")
                    txtInvNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_invno")
                    txtPrcTrm.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm")
                    'display_combo(cboPrcTrm.Text.ToString, cboPrcTrm)

                    txtPayTrm.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_paytrm")
                    'display_combo(cboPayTrm.Text.ToString, cboPayTrm)

                    txtPurOrd.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purord")

                    txtPurSeq.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purseq")

                    txtVenNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_venno")

                    txtCusVen.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusven")
                    txtCusStyNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusstyno")

                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_consolno")) Then
                        txtConsolNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_consolno")
                    Else
                        txtConsolNo.Text = ""
                    End If

                    'If txtConsolNo.Text.Trim <> "" Then
                    '    txtConsolNo.Enabled = True
                    '    cboCtrSiz.Enabled = False
                    '    txtCtrCfs.Enabled = False
                    '    txtSealNo.Enabled = False
                    '    chkpckrmk.Enabled = False

                    'Else
                    '    txtConsolNo.Enabled = False
                    '    cboCtrSiz.Enabled = True
                    '    txtCtrCfs.Enabled = True
                    '    txtSealNo.Enabled = True
                    '    chkpckrmk.Enabled = True
                    'End If


                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_replacement")) Then

                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_replacement") = "Y" Then
                            chkrpl.Checked = True
                        Else
                            chkrpl.Checked = False
                        End If
                    Else
                        chkrpl.Checked = False

                    End If

                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colpck")) Then
                        cboColPck.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colpck")
                    Else
                        cboColPck.Text = ""
                    End If
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnftr")) Then
                        txtCartonFactor.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnftr")
                    Else
                        txtCartonFactor.Text = "1"
                    End If


                    If rs_SHPCKDIM Is Nothing Then
                        Exit Sub
                    End If

                    Call fillup_SHPCKDIM(shpseq)
                    flag_checking = True

                    If Val(Trim(txtCartonFactor.Text)) = 1 Then
                        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
                    ElseIf Val(Trim(txtCartonFactor.Text)) = 2 Then
                        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum <= 4 "
                    ElseIf Val(Trim(txtCartonFactor.Text)) = 3 Then
                        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 7 and hpd_pdnum<=12 "
                    ElseIf Val(Trim(txtCartonFactor.Text)) = 4 Then
                        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=13 and hpd_pdnum <=20 "
                    ElseIf Val(Trim(txtCartonFactor.Text)) = 5 Then
                        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 21 and hpd_pdnum <=30 "
                    Else
                        txtCartonFactor.Text = "1"
                        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
                        MsgBox("Please set Carton Factor smaller than 6!")
                    End If

                    For index99 As Integer = 0 To rs_SHPCKDIM.Tables("result").DefaultView.Count - 1
                        rs_SHPCKDIM.Tables("result").DefaultView(index99)("hpdctnftr") = txtCartonFactor.Text.Trim
                    Next

                    rs_SHPCKDIM.Tables("RESULT").DefaultView.Sort = "hpd_shpno,hpd_shpseq,hpd_pdseq,hpd_pdnum"

                    'dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
                    'dgPCKDIM.Refresh()

                    On Error Resume Next

                    dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
                    dgPCKDIM.Refresh()
                    flag_checking = False

                    'weight1.Checked = False
                    'weight1.Checked = False
                    'weight2.Checked = False
                    'weight2.Checked = False
                    'weight3.Checked = False
                    'weight3.Checked = False

                    If chk_cmin = 1 Then
                        weight1.Checked = True
                        weight1.Checked = True
                        display_dgPCKDIM("CM")
                    ElseIf chk_cmin = 2 Then
                        weight2.Checked = True
                        weight2.Checked = True
                        display_dgPCKDIM("IN")
                    Else
                        weight3.Checked = True
                        weight3.Checked = True
                        display_dgPCKDIM("ALL")
                    End If


                    chkPC.Checked = False

                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc")) Then
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc") = "Y" Then
                            chkPC.Checked = True
                            txtConFtr.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_conftr")
                            If Val(txtConFtr.Text) > 1 Then
                                txtPC.Text = Val(txtShpQty.Text) * Val(txtConFtr.Text)
                            Else
                                txtPC.Text = Val(txtShpQty.Text)
                            End If
                            txtConFtr.Visible = True
                            lblconftr.Visible = True
                            txtPC.Enabled = True
                            txtPC.Visible = True
                            lblpc.Visible = True

                        Else
                            txtConFtr.Visible = False
                            lblconftr.Visible = False
                            txtPC.Enabled = False
                            txtPC.Visible = False
                            lblpc.Visible = False
                        End If
                    Else
                        txtConFtr.Visible = False
                        lblconftr.Visible = False
                        txtPC.Enabled = False
                        txtPC.Visible = False
                        lblpc.Visible = False

                    End If

                    txtPCPrc.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pcprc")
                    If Val(txtPCPrc.Text.Trim) = 0 Then
                        txtPCPrc.Text = ""
                    End If


                    'If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc")) Then
                    '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc") = "Y" Then
                    '        Me.chkPC.Checked = True
                    '        Me.txtConFtr.Visible = True
                    '        ''  lblConftr.Visible = True

                    '        'lblPCPrc.Visible = True
                    '        cboPCPrc.Visible = True
                    '        cboPCPrc.Text = cboUntSelD.Text
                    '        txtPCPrc.Visible = True
                    '        txtPC.Visible = True
                    '        ''                        lblPC.Visible = True
                    '        If Not rs_SHCI_SHIPGDTL.Tables("RESULT") Is Nothing Then
                    '            If rs_SHCI_SHIPGDTL.Tables("RESULT").Rows.Count > 0 Then
                    '                If rs_SHCI_SHIPGDTL.Tables("RESULT").Rows(0)("hid_conftr") > 0 Then
                    '                    txtPCPrc.Text = rs_SHCI_SHIPGDTL.Tables("RESULT").Rows(0)("hid_pcprc")
                    '                    txtPC.Text = rs_SHCI_SHIPGDTL.Tables("RESULT").Rows(0)("hid_shpqty") * rs_SHCI_SHIPGDTL.Tables("RESULT").Rows(0)("hid_conftr")
                    '                Else
                    '                    txtPC.Text = ""
                    '                    txtPCPrc.Text = ""
                    '                End If

                    '                cboColPck.Items.Clear()
                    '                cboColPck.Items.Add(rs_SHCI_SHIPGDTL.Tables("RESULT").Rows(0)("hid_colpck"))
                    '                cboColPck.SelectedIndex = 0

                    '                Me.txtConFtr.Text = IIf(IsDBNull(rs_SHCI_SHIPGDTL.Tables("RESULT").Rows(0)("hid_conftr")), "", rs_SHCI_SHIPGDTL.Tables("RESULT").Rows(0)("hid_conftr"))


                    '            Else
                    '                Me.chkPC.Checked = True
                    '                Me.txtConFtr.Visible = False
                    '                ''lblConftr.Visible = False
                    '                'lblPCPrc.Visible = False
                    '                cboPCPrc.Visible = False
                    '                txtPCPrc.Visible = False
                    '                txtPC.Visible = False
                    '                ''                        lblPC.Visible = False


                    '            End If

                    '        End If




                    '    End If

                    'End If
                    ''contopc




                End If

            End If
        End If



        Dim hid_CREUSR As String
        hid_CREUSR = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_CREUSR")
        If hid_CREUSR = "~*ADD*~" Or hid_CREUSR = "~*NEW*~" Then
            txtJobNo.Enabled = True
            txtOrdNo.Enabled = True
        Else
            txtJobNo.Enabled = False
            txtOrdNo.Enabled = False
        End If

        '***************************************************
        '*** Get Shipping Detail  record  ******************
        '***************************************************
        'gspStr = "sp_select_SHASSINF_SHM00001'" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
        'rtnLong = execute_SQLStatement(gspStr, rs_SCASSINF, rtnStr)

        'If rtnLong <> RC_SUCCESS Then
        '    Me.Cursor = Windows.Forms.Cursors.Default
        '    MsgBox("Error on loading SCM00001 #016 rs_SCASSINF : " & rtnStr)
        '    Exit Sub
        'Else
        rs_SHASSINF.Tables("RESULT").DefaultView.RowFilter = "hai_shsep =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpseq")

        If rs_SHASSINF.Tables("RESULT").DefaultView.Count > 0 Then
            cmdAss.Enabled = True
        Else
            cmdAss.Enabled = False
        End If
        rs_SHASSINF.Tables("RESULT").DefaultView.RowFilter = ""

        'End If

        '2014

        'rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq")
        '        dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
        '        dgPCKDIM.Refresh()
        '        display_dgPCKDIM("")


        If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2no")) Then

            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2no") <> "" Then
                txtcus2no.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2no")
                txtcus2no.Visible = True
                lbl_cus2.Visible = True
            Else
                txtcus2no.Text = ""
                txtcus2no.Visible = False
                lbl_cus2.Visible = False
            End If

            '   Call display_combo(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2no"), cboCus2No_dtl)

        End If

        txt_name_f1.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f1")
        txt_dsc_f1.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f1")
        txt_name_f2.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f2")
        txt_dsc_f2.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f2")
        txt_name_f3.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f3")
        txt_dsc_f3.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f3")
        'txtaddinf.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_addinf")
        txtresppo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_resppo")
        txtcussku.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cussku")


        If Not flag_sorted Then
            If sReadingIndexS = rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1 And rs_SHIPGDTL.Tables("RESULT").Rows.Count > 1 Then
                cmdBck.Enabled = True
                cmdNxt.Enabled = False
            ElseIf sReadingIndexS = 0 And rs_SHIPGDTL.Tables("RESULT").Rows.Count > 1 Then
                cmdBck.Enabled = False
                cmdNxt.Enabled = True
            ElseIf sReadingIndexS = 0 And rs_SHIPGDTL.Tables("RESULT").Rows.Count = 1 Then
                cmdBck.Enabled = False
                cmdNxt.Enabled = False
            ElseIf sReadingIndexS > 0 And rs_SHIPGDTL.Tables("RESULT").Rows.Count > 1 And sReadingIndexS < rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1 Then
                cmdBck.Enabled = True
                cmdNxt.Enabled = True
            End If
        Else
            cmdBck.Enabled = True
            cmdNxt.Enabled = True
        End If


        ''' Michael Chiu 20170323
        ''' 
        Call loadcboManAdr()


        'If optinvsm.Checked = True Then
        '    txtItmShm.Enabled = True
        '    txtItmShm.ScrollBars = RichTextBoxScrollBars.ForcedVertical
        '    txtItmShm.ReadOnly = True
        'Else
        '    txtItmShm.Enabled = True
        '    txtItmShm.ScrollBars = RichTextBoxScrollBars.ForcedVertical
        '    txtItmShm.ReadOnly = False
        'End If

        'If txtItmShm.Enabled = False Then
        '    txtItmShm.Enabled = True
        '    txtItmShm.ScrollBars = RichTextBoxScrollBars.ForcedVertical
        '    txtItmShm.ReadOnly = True
        'Else
        '    txtItmShm.Enabled = True
        '    txtItmShm.ScrollBars = RichTextBoxScrollBars.ForcedVertical
        '    txtItmShm.ReadOnly = False

        'End If
        Recordstatus = tmp_recordstatus
        flag_display_not_for_change = False

    End Sub

    Private Sub reset_detail_control(ByVal action As String)
        Select Case action
            Case "Detail_Init", "Detail_Read"
                txtCtrCfs.Text = ""
                txtSealNo.Text = ""
                cboCtrSiz.Text = ""

                'optCtrSiz0.Checked = True
                cboPckRmk.Text = ""
                txtJobNo.Text = ""
                txtOrdNo.Text = ""
                txtOrdSeq.Text = ""
                txtCusPo.Text = ""
                txtCusItm.Text = ""
                cboItmNo.Text = ""
                txtItmTyp.Text = ""
                txtItmDsc.Text = ""
                txtColCde.Text = ""
                txtCusCol.Text = ""
                txtColDsc.Text = ""
                txtShpQty.Text = ""
                txtUntCde.Text = ""
                txtInrCtn.Text = ""
                txtCtnEnd.Text = ""
                txtCtnStr.Text = ""
                txtMtrCtn.Text = ""
                txtVol.Text = ""
                txtMtrdcm.Text = ""
                txtMtrwcm.Text = ""
                txtMtrhcm.Text = ""
                txtActVol.Text = ""
                txtGrsWgt.Text = ""
                txtNetWgt.Text = ""
                txtItmShm.Text = ""
                txtCmpRmk.Text = ""
                txtManNam.Text = ""
                txtManAdr.Text = ""
                'txtaddinf.Text = ""
                txtTtlVolD.Text = ""
                txtTtlNetD.Text = ""
                txtTtlGrsD.Text = ""
                txtTtlCtnD.Text = ""
                cboUntSelD.Text = ""
                txtSelPrcD.Text = ""
                txtPCPrc.Text = ""
                cboUntAmtD.Text = ""
                txtTtlAmtD.Text = ""
                txtInvNo.Text = ""
                cboPrcTrm.Text = ""
                cboPayTrm.Text = ""
                txtPurOrd.Text = ""
                txtPurSeq.Text = ""
                txtVenNo.Text = ""
                txtCusVen.Text = ""
                txtCusStyNo.Text = ""




            Case "Detail_Update", "Detail_Update_Info"

        End Select
    End Sub

    Private Function not_in_Combo_DTL() As Boolean
        Dim i As Integer
        Dim Y As Integer
        Dim inCombo As Boolean
        not_in_Combo_DTL = True

    End Function

    Private Function not_in_Combo_HDR() As Boolean
        Dim i As Integer
        Dim Y As Integer
        Dim inCombo As Boolean

        '*** Primary Customer
        If cboCus1No.Text <> "" And cboCus1No.Enabled = True And cboCus1No.Items.Count > 0 Then
            inCombo = False
            i = cboCus1No.Items.Count
            For Y = 0 To i - 1
                If Trim(cboCus1No.Text) = Trim(cboCus1No.Items(Y)) Then
                    inCombo = True
                End If
            Next

            If inCombo = False Then
                MsgBox("Primary Customer - Data is Invalid, please select in Drop Down List.")
                btcSHM00001.SelectedIndex = 0
                cboCus1No.Enabled = True
                If cboCus1No.Enabled And cboCus1No.Visible Then cboCus1No.Focus()
                not_in_Combo_HDR = True
                Exit Function
            End If
        End If

        '*** Secondary Customer
        If cboCus2No.Text <> "" And cboCus2No.Enabled = True And cboCus2No.Items.Count > 0 Then
            inCombo = False
            i = cboCus2No.Items.Count
            For Y = 0 To i - 1
                If Trim(cboCus2No.Text) = Trim(cboCus2No.Items(Y)) Then
                    inCombo = True
                End If
            Next

            If inCombo = False Then
                MsgBox("Secondary Customer - Data is Invalid, please select in Drop Down List.")
                btcSHM00001.SelectedIndex = 0
                cboCus2No.Enabled = True
                If cboCus2No.Enabled And cboCus2No.Visible Then cboCus2No.Focus()
                not_in_Combo_HDR = True
                Exit Function
            End If
        End If

    End Function

    Private Sub btcSHM00001_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btcSHM00001.SelectedIndexChanged
        Select Case PreviousTab

            Case 0 'Header page check - check for Add mode

                If sMode = cModeAdd Or sMode = cModeUpd Then

                    Call fill_SHIPGHDR()
                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*ADD*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*NEW*~"
                    End If
                End If

            Case 1
                If sMode = cModeAdd Or sMode = cModeUpd Then

                    Call fill_SHIPGDTL()

                    '''0811
                    'If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*ADD*~" Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*NEW*~" Then
                        '                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*NEW*~"
                    'End If
                End If


                Call display_grdShpSum()

            Case 2
                If sMode = cModeAdd Or sMode = cModeUpd Then

                End If
        End Select

        Select Case btcSHM00001.SelectedIndex
            Case 0
                Cursor = Cursors.WaitCursor
                Call display_Header()
                Cursor = Cursors.Default

                mmdPrint.Enabled = False
            Case 1

                cboCus2No.Enabled = False


                Dim shpseq As Integer
                If grdShpSum.CurrentCell Is Nothing Then
                    shpseq = 0
                Else
                    grdShpSum_hid_shpseq = 5
                    'shpseq = grdShpSum.Item(grdShpSum_hid_shpseq, grdShpSum.CurrentCell.RowIndex).Value
                    'temp
                End If

                'no_Display_Detail = False
                Dim temp_record_status As Boolean
                temp_record_status = Recordstatus

                Call display_Detail(shpseq)


                Recordstatus = temp_record_status

                If rs_SHIPGDTL Is Nothing Then
                    Exit Sub
                End If

                If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
                    If sMode = cModeAdd Or sMode = cModeUpd Then
                        'MsgBox("Please click 'Ins Row' button to insert detail!")
                        GroupBox6.Enabled = False
                        txtManNam.Enabled = False
                        cboManAdr.Enabled = False
                        txtManAdr.Enabled = False
                        'txtaddinf.Enabled = False
                        txtInvNo.Enabled = False
                        btcSHM00001.TabPages(2).Enabled = False
                        btcSHM00001.TabPages(3).Enabled = False
                        btcSHM00001.TabPages(4).Enabled = False

                    End If
                    Exit Sub
                End If

                If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 0 Then
                    If sMode = cModeAdd Or sMode = cModeUpd Then
                        'MsgBox("Please click 'Ins Row' button to insert detail!")
                        GroupBox6.Enabled = False
                        txtManNam.Enabled = False
                        cboManAdr.Enabled = False
                        txtManAdr.Enabled = False
                        'txtaddinf.Enabled = False
                        txtInvNo.Enabled = False
                        btcSHM00001.TabPages(2).Enabled = False
                        btcSHM00001.TabPages(3).Enabled = False
                        btcSHM00001.TabPages(4).Enabled = False

                    End If
					PreviousTab = btcSHM00001.SelectedIndex
                    Exit Sub
                End If
                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("del") = "Y" Then
                    PreviousTab = btcSHM00001.SelectedIndex
					Exit Sub
                End If

                'Call ShowFooterBar(True)
                If sMode = cModeAdd Or sMode = cModeUpd Then

                ElseIf sMode = cModeRead Then
                    'temp
                    'reset_detail_control("Detail_Read", "All")
                End If

                mmdPrint.Enabled = False

            Case 2
                ' Call setStatus_grdShpSum(sMode)
                '    grdShpSum.DataSource = rs_SHIPGDTL.Tables("RESULT")
                '    grdShpSum.Refresh()
                cal_all_inv_sum()
                DisplayShipInv()
                mmdPrint.Enabled = mmdPrint_Right
            Case 3
                ' Call setStatus_grdShpSum(sMode)
                '    grdShpSum.DataSource = rs_SHIPGDTL.Tables("RESULT")
                '    grdShpSum.Refresh()
                cal_all_inv_sum()
                DisplayShipInv()
                display_grdPremium()
                display_grdDiscount()
                mmdPrint.Enabled = False
            Case 4

                mmdPrint.Enabled = False
            Case 5
                ' Call setStatus_grdShpSum(sMode)
                ' grdShpSum.DataSource = rs_SHIPGDTL.Tables("RESULT")
                Call display_grdShpSum()
                mmdPrint.Enabled = False

        End Select

        PreviousTab = btcSHM00001.SelectedIndex

    End Sub

    Private Sub btcSHM00001_Selecting(ByVal sender As Object, ByVal e As System.Windows.Forms.TabControlCancelEventArgs) Handles btcSHM00001.Selecting
        '''

        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            '    Call insert_SHIPGDTL(True)
            txtOrdNo.Enabled = False
            txtJobNo.Enabled = False
        End If

		 If PreviousTab = 1 Then
            If check_leave_ShippingDetail() = False Then
                btcSHM00001.SelectedIndex = 1

                Exit Sub
            End If
        End If
		
        If Not rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            Call display_Detail(Val(txtShpSeq.Text))
        End If


        '     Call reset_detail_control("Detail_Init")


    End Sub

    Private Sub cmdNxt_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdNxt.Click


        ' If sMode = cModeAdd Or sMode = cModeUpd Or Recordstatus = False Then
        '20130908 for anita
        If sMode = cModeAdd Or sMode = cModeUpd Or sMode = cModeRead Then

            If check_leave_ShippingDetail() = True Then
                Call fill_SHIPGDTL()
                '''0811
                ''avoid DBNULL
                If Not rs_SHIPGDTL.Tables("RESULT").Rows.Count > sReadingIndexS Then
                    Exit Sub
                End If

                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*ADD*~" Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*NEW*~" Then
                    'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*NEW*~"
                End If
                Dim shpseq As Integer

                If Not flag_sorted Then
                    If sReadingIndexS = rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1 Then
                        sReadingIndexS = sReadingIndexS
                    Else
                        sReadingIndexS = sReadingIndexS + 1
                    End If
                    shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpseq")
                Else
                    For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").DefaultView.Count - 1
                        If txtShpSeq.Text.Trim = rs_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_shpseq") Then
                            If index9 = rs_SHIPGDTL.Tables("RESULT").DefaultView.Count - 1 Then
                                sReadingIndexS = sReadingIndexS
                                shpseq = rs_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_shpseq")
                            Else
                                shpseq = rs_SHIPGDTL.Tables("RESULT").DefaultView(index9 + 1)("hid_shpseq")
                            End If
                            Exit For  ''NEXT
                        End If
                    Next
                End If


                ''avoid DBNULL
                If Not rs_SHIPGDTL.Tables("RESULT").Rows.Count > sReadingIndexS Then
                    Exit Sub
                End If



                Call display_Detail(shpseq)
                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("del") = "Y" Then
                    Exit Sub
                End If

                'Call ShowFooterBar(True)

            End If
        End If



    End Sub

    Private Function check_leave_ShippingDetail() As Boolean
        check_leave_ShippingDetail = False

        'If check_dup_Packing() = True Then
        '    MsgBox("Duplicate packing selected!")

        '    Call insert_SHIPGDTL(False)
        '    Call display_Detail(txtSeq.Text)

        '    Call reset_detail_control("Detail_Init", "All")
        '    Call reset_detail_data("Detail_Init", "All")

        '    check_leave_ShippingDetail = False
        '    Exit Function
        'ElseIf cboColCde.Text = "" And txtColCde.Text = "" Then
        '    MsgBox("Missing Color!")
        '    check_leave_ShippingDetail = False
        '    Exit Function
        'ElseIf cboPcking.Text = "" Then
        '    MsgBox("Missing Packing!")
        '    check_leave_ShippingDetail = False
        '    Exit Function
        'End If


        If check_ShippingDetail() = False Then
            Exit Function
        End If

        check_leave_ShippingDetail = True
    End Function


    Private Sub cmdBck_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdBck.Click

        ' If sMode = cModeAdd Or sMode = cModeUpd Or Recordstatus = False Then
        '20130908 for anita
        If sMode = cModeAdd Or sMode = cModeUpd Or sMode = cModeRead Then

            If check_leave_ShippingDetail() = True Then
                Call fill_SHIPGDTL()
                ''avoid DBNULL
                If Not rs_SHIPGDTL.Tables("RESULT").Rows.Count > sReadingIndexS Then
                    Exit Sub
                End If

                '''0811
                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*ADD*~" Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*NEW*~" Then
                    '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*NEW*~"
                End If
                Dim shpseq As Integer

                If Not flag_sorted Then
                    If sReadingIndexS = 0 Then
                        sReadingIndexS = 0
                    Else
                        sReadingIndexS = sReadingIndexS - 1
                    End If
                    shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpseq")
                Else
                    For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").DefaultView.Count - 1
                        If txtShpSeq.Text.Trim = rs_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_shpseq") Then
                            If index9 = 0 Then
                                shpseq = rs_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_shpseq")
                            Else
                                shpseq = rs_SHIPGDTL.Tables("RESULT").DefaultView(index9 - 1)("hid_shpseq")
                            End If
                            Exit For  ''NEXT
                        End If
                    Next
                End If







                ''avoid DBNULL
                If Not rs_SHIPGDTL.Tables("RESULT").Rows.Count > sReadingIndexS Then
                    Exit Sub
                End If


                Call display_Detail(shpseq)
                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("del") = "Y" Then
                    Exit Sub
                End If

                '                Call ShowFooterBar(True)
            End If
        End If

    End Sub

    Private Sub mmdClear_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdClear.Click
        If checkFocus(Me) Then Exit Sub
        Dim tmpqutno As String
        Dim tmpcocde As String


        tmpqutno = txtShpNo.Text
        tmpcocde = cboCoCde.Text

        Call mmdClearClick()


        'txtShpNo.Text = tmpqutno
        'cboCoCde.Text = tmpcocde

        txtShpNo.Focus()


        btcSHM00001.SelectedIndex = 0

        Cursor = Cursors.Default
    End Sub

    Private Sub mmdClearClick()
        Dim YesNoCancel As Integer
        Dim status As String

        If cboShpSts.Text = "" Then
            status = ""
        Else
            status = Split(cboShpSts.Text, " - ")(0)
        End If


        If Recordstatus = True And status = "OPE" Then
            If Add_flag = True Or Insert_flag = True Then
                YesNoCancel = MsgBox("Record is newly created.  Do you want to save before clear the screen?", MsgBoxStyle.YesNoCancel)
            Else
                YesNoCancel = MsgBox("Record has been modified.  Do you want to save before clear the screen?", MsgBoxStyle.YesNoCancel)
            End If

            If YesNoCancel = vbYes Then
                If mmdSave.Enabled Then
                    Call cmdSaveClick()
                Else
                    MsgBox("You are not allow to save record!", MsgBoxStyle.Exclamation)
                    Exit Sub
                End If


            ElseIf YesNoCancel = vbNo Then
                mode = cModeClear
                sMode = cModeClear
                Call setStatus(cModeClear)
                Call setStatus(cModeClear)
                Call setStatus(cModeInit)
                Call setStatus(cModeClear)
                Call setStatus(cModeClear)
                Call setStatus(cModeInit)


            ElseIf YesNoCancel = vbCancel Then
                Cursor = Cursors.Default
                Exit Sub
            End If
        Else
            mode = cModeClear
            sMode = cModeClear
            Call setStatus(cModeClear)
            Call setStatus(cModeClear)
            Call setStatus(cModeInit)
            Call setStatus(cModeClear)
            Call setStatus(cModeClear)
            Call setStatus(cModeInit)


            If txtShpNo.Enabled And txtShpNo.Visible Then
                txtShpNo.Focus()
            End If
        End If
    End Sub



    Public Sub mmdFind_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdFind.Click
        '   If checkFocus(Me) Then Exit Sub
        Me.Cursor = Windows.Forms.Cursors.WaitCursor


        txtShpNo.Text = UCase(Trim(txtShpNo.Text))
        sMode = cModeUpd
        Call txtShpNoKeyPress()

        sMode = cModeUpd
        cal_all_inv_sum()

        DisplayShipInv()
        Recordstatus = False
        cal_pre_dis()



        If rs_SHIPGHDR.Tables("RESULT").Rows.Count > 0 Then
            If rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_shpsts") = "OPE" And rs_SHIPGDTL.Tables("RESULT").Rows.Count > 0 And mode <> cModeRead Then
                txtCtnEnd.Enabled = True
                txtCtnStr.Enabled = True
                txtShpQty.Enabled = True
                txtItmDsc.Enabled = True
            End If
            '20151124 COV readonly set back
        End If

        Me.Cursor = Windows.Forms.Cursors.Default


    End Sub

    Public Function txtShpNoKeyPress() As Boolean
        Dim sFilter As String
        Dim inCombo As Boolean


        txtShpNoKeyPress = False
        Add_flag = False


        '''20131017
        ''' 
        If (Trim(txtShpNo.Text) = "" And txtShpNo.Enabled = True) Then
            If txtShpNo.Enabled And txtShpNo.Visible Then
                txtShpNo.Focus()
                MsgBox("Please input Shipment No.")
                Exit Function
            End If
        End If

        txtShpNo.Text = txtShpNo.Text.ToUpper()

        setStatus(cModeUpd)

        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_select_SHIPGHDR '" & cboCoCde.Text & "','" & txtShpNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHIPGHDR, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
            Exit Function
        End If

        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            MsgBox("No Record Found!")
            setStatus(cModeClear)

            If txtShpNo.Enabled And txtShpNo.Visible Then
                txtShpNo.Focus()
                Exit Function
            End If
        End If

        For i As Integer = 0 To rs_SHIPGHDR.Tables("RESULT").Columns.Count - 1
            rs_SHIPGHDR.Tables("RESULT").Columns(i).ReadOnly = False
        Next i

        '''''''''''''''''''''''''''''''''


        gspStr = "sp_list_SHCI_SHIPGDTL '" & cboCoCde.Text & "','" & txtShpNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHCI_SHIPGDTL, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
            Exit Function
        End If


        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_list_SHIPGDTL '" & cboCoCde.Text & "','" & txtShpNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGDTL :" & rtnStr)
            Exit Function
        End If

        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Columns.Count - 1
            rs_SHIPGDTL.Tables("RESULT").Columns(i).ReadOnly = False
        Next i


        ''''''''''''''''''''''''''''''''



        Call fill_all_trm()

        cboOrdNo.Items.Clear()
        cbo_scno.Items.Clear()

        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1

            If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno") <> "" Then
                inCombo = False

                For Y As Integer = 0 To cboOrdNo.Items.Count - 1
                    If Trim(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno")) = Trim(cboOrdNo.Items(Y)) Then
                        inCombo = True
                    End If
                Next
                If inCombo = False Then
                    cboOrdNo.Items.Add(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno"))
                End If
            Else
                inCombo = False
                For Y As Integer = 0 To cboOrdNo.Items.Count - 1
                    If Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0)) = Trim(cboOrdNo.Items(Y)) Then
                        inCombo = True
                    End If
                Next
                If inCombo = False Then
                    cboOrdNo.Items.Add(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0))
                End If
            End If




            If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno") <> "" Then
                inCombo = False
                For Y As Integer = 0 To cbo_scno.Items.Count - 1
                    If Trim(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno")) = Trim(cbo_scno.Items(Y)) Then
                        inCombo = True
                    End If
                Next
                If inCombo = False Then
                    cbo_scno.Items.Add(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno"))
                End If
            Else
                inCombo = False
                For Y As Integer = 0 To cbo_scno.Items.Count - 1
                    If Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0)) = Trim(cbo_scno.Items(Y)) Then
                        inCombo = True
                    End If
                Next
                If inCombo = False Then
                    cbo_scno.Items.Add(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0))
                End If
            End If


        Next

        gspStr = "sp_select_SHPCKDIM  '" & cboCoCde.Text & "','" & txtShpNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHPCKDIM, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGDTL :" & rtnStr)
            Exit Function
        End If
        For i2 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Columns.Count - 1
            rs_SHPCKDIM.Tables("RESULT").Columns(i2).ReadOnly = False
        Next i2


        gspStr = "sp_list_SHCPTBKD '" & cboCoCde.Text & "','" & txtShpNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHCPTBKD, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_list_SHCPTBKD :" & rtnStr)
            Exit Function
        End If
        For i As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").Columns.Count - 1
            rs_SHCPTBKD.Tables("RESULT").Columns(i).ReadOnly = False
        Next i


        reset_dis()

        gspStr = "sp_list_SHASSINF '" & txtShpNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHASSINF, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_list_SHASSINF :" & rtnStr)
            Exit Function
        End If
        For i As Integer = 0 To rs_SHASSINF.Tables("RESULT").Columns.Count - 1
            rs_SHASSINF.Tables("RESULT").Columns(i).ReadOnly = False
        Next i


        gspStr = "sp_select_SHDTLCTN '" & cboCoCde.Text & "','" & txtShpNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHDTLCTN, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
            Exit Function
        Else
            For i As Integer = 0 To rs_SHDTLCTN.Tables("RESULT").Columns.Count - 1
                rs_SHDTLCTN.Tables("RESULT").Columns(i).ReadOnly = False
            Next
        End If


        If rs_SHIPGDTL.Tables("RESULT").Rows.Count > 0 Then

            'For index As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1

            '    If Len(rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_itmsts").ToString()) >= 3 Then
            '        If (rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_itmsts").ToString().Substring(0, 3) = "OLD") Then

            '            Exit For
            '        End If
            '    End If
            'Next

            'If OldItemRecord = True Then
            '    cmdReset.Enabled = Enq_right_local
            'Else
            '    cmdReset.Enabled = False
            'End If

            'A-Active,W,E


            Dim curshpseq As Integer
            curshpseq = rs_SHIPGDTL.Tables("RESULT").Rows(0).Item("hid_shpseq")
            Call display_Detail(curshpseq)


            gspStr = "sp_list_SHINVHDR_SHM00001_1 '" & cboCoCde.Text & "','" & txtShpNo.Text & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_SHINVHDR, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
                Exit Function
            End If

            For i As Integer = 0 To rs_SHINVHDR.Tables("RESULT").Columns.Count - 1
                rs_SHINVHDR.Tables("RESULT").Columns(i).ReadOnly = False
            Next i


            '''
            Dim tmp_invno As String
            If rs_SHINVHDR.Tables("RESULT").Rows.Count > 0 Then
                tmp_invno = rs_SHINVHDR.Tables("RESULT").Rows(0)("hiv_invno")

                gspStr = "sp_select_SHSMPINV   '" & cboCoCde.Text & "','" & txtShpNo.Text.Trim & "'"
                'gspStr = "sp_select_SHSMPINV   '" & cboCoCde.Text & "','" & tmp_invno & "'"
                rtnLong = execute_SQLStatement(gspStr, rs_SHSMPINV, rtnStr)

                If rtnLong <> RC_SUCCESS Then
                    MsgBox("Error on loading txtShpNoKeyPress sp_select_SHSMPINV:" & rtnStr)
                    Exit Function
                End If

                For i As Integer = 0 To rs_SHSMPINV.Tables("RESULT").Columns.Count - 1
                    rs_SHSMPINV.Tables("RESULT").Columns(i).ReadOnly = False
                Next i

            End If



            InitShipInv()
            DisplayShipInv()


            gspStr = "sp_list_SHDISPRM '" & cboCoCde.Text & "','" & txtShpNo.Text & "','D'"
            rtnLong = execute_SQLStatement(gspStr, rs_SHDISPRM_D, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
                Exit Function
            End If

            For i As Integer = 0 To rs_SHDISPRM_D.Tables("RESULT").Columns.Count - 1
                rs_SHDISPRM_D.Tables("RESULT").Columns(i).ReadOnly = False
            Next i

            rs_SHDISPRM_D.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" + "12123eh121ewd" + "'"


            gspStr = "sp_list_SHDISPRM '" & cboCoCde.Text & "','" & txtShpNo.Text & "','P'"
            rtnLong = execute_SQLStatement(gspStr, rs_SHDISPRM_P, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
                Exit Function
            End If

            For i As Integer = 0 To rs_SHDISPRM_P.Tables("RESULT").Columns.Count - 1
                rs_SHDISPRM_P.Tables("RESULT").Columns(i).ReadOnly = False
            Next i

            rs_SHDISPRM_P.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" + "12123eh121ewd" + "'"

            '*** Folder 4
            ''''
            If rs_SHINVHDR.Tables("result").Rows.Count > 0 Then
                cboInvNoP.Items.Clear()
                cboInvNoM.Items.Clear()
                For index3 As Integer = 0 To rs_SHINVHDR.Tables("result").Rows.Count - 1
                    cboInvNoP.Items.Add(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invno"))
                    cboInvNoM.Items.Add(rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invno"))
                Next
            End If

            If rs_SHINVHDR.Tables("result").Rows.Count > 0 Then
                'cboInvNoP.SelectedIndex = 0

                'sFilter = "hdp_invno = '" + cboInvNoP.Text + "'"
                'rs_SHDISPRM_D.Tables("RESULT").DefaultView.RowFilter = sFilter
                'rs_SHDISPRM_P.Tables("RESULT").DefaultView.RowFilter = sFilter

                '''

                'gspStr = "sp_select_SCDISPRM '" & cboCoCde.Text & "','" & txtOrdNo.Text & "','D'"
                'rtnLong = execute_SQLStatement(gspStr, rs_SCDISPRM_D, rtnStr)
                'If rtnLong <> RC_SUCCESS Then
                '    Me.Cursor = Windows.Forms.Cursors.Default
                '    MsgBox("Error on loading SCM00001 #013 sp_select_SCDISPRM : " & rtnStr)
                '    Exit Function
                'Else
                '    For i As Integer = 0 To rs_SCDISPRM_D.Tables("RESULT").Columns.Count - 1
                '        rs_SCDISPRM_D.Tables("RESULT").Columns(i).ReadOnly = False
                '    Next
                '    'rs_SCDISPRM_D_ori = rs_SCDISPRM_D.Copy()
                '    'rs_SCDISPRM_D.Tables("RESULT").Columns("hdp_cde").ReadOnly = False
                '    'rs_SCDISPRM_D.Tables("RESULT").Columns("hdp_dsc").ReadOnly = False
                '    'rs_SCDISPRM_D.Tables("RESULT").Columns("hdp_pctamt").ReadOnly = False
                '    'rs_SCDISPRM_D.Tables("RESULT").Columns("hdp_pct").ReadOnly = False
                '    'rs_SCDISPRM_D.Tables("RESULT").Columns("hdp_amt").ReadOnly = False
                'End If

                '''1013


                '''the . should be a list, within a list of sc#
                '''appending, filtering, delete functions.
                '''123using split to construct an array, to compare each one

                ''' a loop to get all the sc#,, could repeat/dup?? 
                '''write a sp to retrive a distinct list;
                ''' append make sure distinct /;  del functions


                list_sc_of_inv = ""
                For index As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
                    list_sc_of_inv = list_sc_of_inv & "" & rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ordno") & ","
                Next
                If Len(list_sc_of_inv) > 0 Then
                    list_sc_of_inv = Microsoft.VisualBasic.Left(list_sc_of_inv, Len(list_sc_of_inv) - 1)


                    gspStr = "sp_select_SCDISPRM_SHM00001 '" & cboCoCde.Text & "','" & list_sc_of_inv & "','P'"
                    rtnLong = execute_SQLStatement(gspStr, rs_SCDISPRM_P, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        Me.Cursor = Windows.Forms.Cursors.Default
                        MsgBox("Error on loading SH00001  sp_select_SCDISPRM_SHM00001: " & rtnStr)
                        Exit Function
                    Else
                        For i As Integer = 0 To rs_SCDISPRM_P.Tables("RESULT").Columns.Count - 1
                            rs_SCDISPRM_P.Tables("RESULT").Columns(i).ReadOnly = False
                        Next
                    End If
                    grdPre.DataSource = rs_SCDISPRM_P.Tables("RESULT").DefaultView
                    Display_pre()

                    '''
                    gspStr = "sp_select_SCDISPRM_SHM00001 '" & cboCoCde.Text & "','" & list_sc_of_inv & "','D'"
                    rtnLong = execute_SQLStatement(gspStr, rs_SCDISPRM_D, rtnStr)
                    If rtnLong <> RC_SUCCESS Then
                        Me.Cursor = Windows.Forms.Cursors.Default
                        MsgBox("Error on loading SH00001  sp_select_SCDISPRM_SHM00001: " & rtnStr)
                        Exit Function
                    Else
                        For i As Integer = 0 To rs_SCDISPRM_P.Tables("RESULT").Columns.Count - 1
                            rs_SCDISPRM_P.Tables("RESULT").Columns(i).ReadOnly = False
                        Next
                    End If
                    grdDis.DataSource = rs_SCDISPRM_D.Tables("RESULT").DefaultView
                    Display_Dis()
                End If
                '''store in a array for easy accessing

                'gspStr = "sp_select_SCDISPRM '" & cboCoCde.Text & "','" & txtOrdNo.Text & "','P'"
                ''''list1013
                '''' 
                'rtnLong = execute_SQLStatement(gspStr, rs_SCDISPRM_P, rtnStr)
                'If rtnLong <> RC_SUCCESS Then
                '    Me.Cursor = Windows.Forms.Cursors.Default
                '    MsgBox("Error on loading SCM00001 #014 sp_select_SCDISPRM : " & rtnStr)
                '    Exit Function
                'Else
                '    For i As Integer = 0 To rs_SCDISPRM_P.Tables("RESULT").Columns.Count - 1
                '        rs_SCDISPRM_P.Tables("RESULT").Columns(i).ReadOnly = False
                '    Next
                '    'rs_SCDISPRM_P_ori = rs_SCDISPRM_P.Copy()
                '    'rs_SCDISPRM_P.Tables("RESULT").Columns("hdp_cde").ReadOnly = False
                '    'rs_SCDISPRM_P.Tables("RESULT").Columns("hdp_dsc").ReadOnly = False
                '    'rs_SCDISPRM_P.Tables("RESULT").Columns("hdp_pctamt").ReadOnly = False
                '    'rs_SCDISPRM_P.Tables("RESULT").Columns("hdp_pct").ReadOnly = False
                '    'rs_SCDISPRM_P.Tables("RESULT").Columns("hdp_amt").ReadOnly = False
                'End If

                'grdDis.DataSource = rs_SCDISPRM_D.Tables("RESULT").DefaultView
                'Display_Dis()
                'grdPre.DataSource = rs_SCDISPRM_P.Tables("RESULT").DefaultView
                'Display_pre()


                grdDiscount.DataSource = rs_SHDISPRM_D.Tables("RESULT").DefaultView
                display_grdDiscount()

                grdPremium.DataSource = rs_SHDISPRM_P.Tables("RESULT").DefaultView
                display_grdPremium()

                'Grid_Got_Focus = "grdDiscount"
                'Call DisplayShipDisPrm()
                'Grid_Got_Focus = "grdPremium"
                'Call DisplayShipDisPrm()
                'Call SetStatusShipDISPRM
            End If



            gspStr = "sp_list_SHSHPMRK '" & cboCoCde.Text & "','" & txtShpNo.Text & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_SHSHPMRK, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
                Exit Function
            End If

            For i As Integer = 0 To rs_SHSHPMRK.Tables("RESULT").Columns.Count - 1
                rs_SHSHPMRK.Tables("RESULT").Columns(i).ReadOnly = False
            Next i
            rs_SHSHPMRK_temp = rs_SHSHPMRK.Copy()


            'DisplayShipMark()

            '''''2014
            gspStr = "sp_select_SCSHPMRK '" & cboCoCde.Text & "','" & txtOrdNo.Text & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_SCSHPMRK, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                Me.Cursor = Windows.Forms.Cursors.Default
                MsgBox("Error on loading SCM00001 #016 sp_select_SCSHPMRK : " & rtnStr)
                Exit Function
            Else
                For i As Integer = 0 To rs_SCSHPMRK.Tables("RESULT").Columns.Count - 1
                    rs_SCSHPMRK.Tables("RESULT").Columns(i).ReadOnly = False
                Next
            End If





 
            'For i As Integer = 0 To rs_SHSHPMRK.Tables("RESULT").Columns.Count - 1
            '    rs_SHSHPMRK.Tables("RESULT").Columns(i).ReadOnly = False
            'Next i

            'Call display_hid_qutitmsts()
            'Call display_hid_IM_period()

            'gsCompany = Trim(cboCoCde.Text)
            'Call Update_gs_Value(gsCompany)

            'gspStr = "sp_select_QUPRCEMT '" & cboCoCde.Text & "','" & txtShpNo.Text & "',''"
            'rtnLong = execute_SQLStatement(gspStr, rs_QUPRCEMT, rtnStr)

            'If rtnLong <> RC_SUCCESS Then
            '    MsgBox("Error on loading txtShpNoKeyPress sp_select_QUPRCEMT :" & rtnStr)
            '    Exit Function
            'End If

            'For i As Integer = 0 To rs_QUPRCEMT.Tables("RESULT").Columns.Count - 1
            '    rs_QUPRCEMT.Tables("RESULT").Columns(i).ReadOnly = False
            'Next i





            grdShpSum.DataSource = rs_SHIPGDTL_dis.Tables("RESULT").DefaultView


            display_grdShpSum()

            Call display_dgPCKDIM("ALL")
            weight1.Checked = True
            weight1.Checked = True

            '            weight3.Checked = True
            '           weight3.Checked = True
            'cmdBackD.Enabled = False

            'If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 1 Then
            '    cmdNextD.Enabled = False
            'Else
            '    cmdNextD.Enabled = True
            'End If
        End If
        '''''''''''''''''''''''''''''''''''''''''''''''''''''''









        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_select_SYUSRRIGHT_Check '" & cboCoCde.Text & "','" & gsUsrID & "','" & txtShpNo.Text & "','" & sMODULE & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SYUSRRIGHT_Check, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SYUSRRIGHT_Check :" & rtnStr)
            Exit Function
        End If

        If Not rs_SYUSRRIGHT_Check.Tables("RESULT") Is Nothing Then
            If rs_SYUSRRIGHT_Check.Tables("RESULT").Rows.Count = 0 Then
                MsgBox("You have no Right access this document.")
                Exit Function
            Else
                Call setStatus(cModeUpd)
                sMode = cModeUpd
                Call display_Header()
                sMode = cModeUpd
                sMode = cModeUpd
            End If

        End If

        '''templ
        Call setStatus(cModeUpd)
        sMode = cModeUpd
        Call display_Header()
        sMode = cModeUpd
        Call setStatus(cModeUpd)
        sMode = cModeUpd
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count > 0 Then

            If rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_shpsts") = "REL" Then
                Call setStatus(cModeRead)
                sMode = cModeRead

            End If

        End If
        ''''''''''''''''''''''''''''''''



        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Function
        End If

        If DateDiff("d", rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_credat"), "09/09/2014") > 0 Then
            sMode = cModeRead
            Call formInit(cModeRead)
        Else
            If Enq_right_local = True Then
                sMode = cModeUpd
                Call formInit(cModeUpd)
            Else
                sMode = cModeRead
                Call formInit(cModeRead)
            End If

        End If
        mmdAdd.Enabled = False

        If rs_SHIPGDTL.Tables("RESULT").Rows.Count > 0 Then
            If rs_SHINVHDR.Tables("RESULT").Rows.Count > 0 Then
                flag_cboInvNoM_KeyPress = True
                cboInvNoM.SelectedIndex = 0

                cboInvNoP.SelectedIndex = 0
            End If
        End If

        If optinvsm.Checked = True Then
            txtItmShm.Enabled = False
            cmdSelSM.Enabled = True
        Else
            txtItmShm.Enabled = True
            cmdSelSM.Enabled = False
        End If



    End Function

    Private Sub display_Header()
        If sMode = cModeClear Then
            Exit Sub
        End If
        'temp

        Dim rs_Result As New DataSet

        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_list_SHIPGDTL '" & cboCoCde.Text & "','" & txtShpNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_Result, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading Display_Header sp_select_SHIPGDTL 1 :" & rtnStr)
            Exit Sub
        End If

        ''''''''''''''''''''''''''
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If

        txtShpNo.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_shpno")
        txtIssDat.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_issdat")
        txtRvsDat.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_rvsdat")

        Call display_combo(rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_cus1no"), cboCus1No)

        ''        Call fillCus2No(rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_cus1no"))

        Call display_combo(rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_cus2no"), cboCus2No)

        If rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_smpshp") = "Y" Then
            chkSmpShp.Checked = True
        Else
            chkSmpShp.Checked = False
        End If


        Call display_combo(Trim(rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_shpsts")), cboShpSts)

        txtVes.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_ves")
        txtVoy.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_voy")
        txtSlnOnb.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_slnonb")
        If rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_arrdat") = "01/01/1900" Then
            txtArrDat.Text = ""
        Else
            txtArrDat.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_arrdat")
        End If
        txtPotLoa.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_potloa")
        txtDst.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_dst")
        txtCntyOrgn.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_cntyorgn")
        txtCrr.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_crr")
        txtCrrSo.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_crrso")
        txtGodDsc.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_goddsc")

        txtBilEnt.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_bilent")
        txtBilAdr.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_biladr")
        txtBilStt.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_bilstt")

        'added in 20170320
        If txtCntyOrgn.Text = "" Then
            txtCntyOrgn.Text = "CHINA"
        End If

        Call display_combo(rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_bilcty"), cboBilCty)

        txtBilZip.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_bilzip")
        '        txtLCNo.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_lcno")
        'txtLcBank.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_lcbank")
        'txtBilRmk.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_bilrmk")
        txtTtlCtn.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_ttlctn")
        If rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_ttlcbm") = 0 Then
            txtTtlcbm.Text = ""
        Else
            txtTtlcbm.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_ttlcbm")
        End If


        txtTtlNwg.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_ttlnwg")
        txtTtlGwg.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_ttlgwg")
        cboUntAmt.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_untamt")
        txtTtlAmt.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_ttlamt")

        If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_invsm") = "Y" Then
            optinvsm.Checked = True
            optitmsm.Checked = False
        Else
            optinvsm.Checked = False
            optitmsm.Checked = True


        End If

        'cboUntSelD.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_untamt")
        'cboUntAmtD.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_untamt")
        'cboUntAmtI.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_untamt")


        '''''''''''''''''''''''''''''''''
        'check from dtl
        '      txtIssDat.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_issdat")
        '        txtIssDat.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_issdat").ToShortDateString()
        '      cboCus1No.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0)("hih_cus1no")
        Call display_SHSMPINV()
        '2015
        Call cal_header_sum()

        StatusBar.Panels(1).Text = ""
        'cal
        If Not IsDBNull(rs_SHIPGHDR.Tables("result").Rows(0)("hih_credat")) Then
            StatusBar.Panels(1).Text = Format(rs_SHIPGHDR.Tables("result").Rows(0)("hih_credat"), "MM/dd/yyyy") & _
                                        " " & Format(rs_SHIPGHDR.Tables("result").Rows(0)("hih_upddat"), "MM/dd/yyyy") & _
                                        " " & rs_SHIPGHDR.Tables("result").Rows(0)("hih_updusr").ToString()

        End If
        'StatusBar.Panels(1).Text = Format(rs_QUOTNHDR.Tables("RESULT").Rows(0)("quh_credat"), "MM/dd/yyyy") & _
        '                    " " & Format(rs_QUOTNHDR.Tables("RESULT").Rows(0)("quh_upddat"), "MM/dd/yyyy") & _
        '                    " " & rs_QUOTNHDR.Tables("RESULT").Rows(0)("quh_updusr").ToString()

    End Sub

    Private Sub formInit(ByVal m As String)
        If m = cModeInit Then
            Call clearAllDisplay(Me)
        End If

        'Call resetcmdButton(m)

        'Call resetDisplay(m)

        'Me.StatusBar.Text = m
        'Me.StatusBarPanel1.Text = m
        'SetStatusBar(m)
        SetStatusBar(m)
    End Sub

    Private Sub clearAllDisplay(ByVal fv As Control)
        Dim v As Control
        For Each v In fv.Controls

            If TypeOf v Is BaseTabControl Then
                Dim btc As BaseTabControl
                btc = v
                Dim i As Integer
                For i = 0 To btc.TabPages.Count - 1
                    Call clearAllDisplay(btc.TabPages(i))
                Next i
            ElseIf TypeOf v Is GroupBox Then
                Call clearAllDisplay(v)
                v.Enabled = False
            Else
                If TypeOf v Is TextBox Or TypeOf v Is MaskedTextBox Or TypeOf v Is ComboBox Or TypeOf v Is RichTextBox Then
                    v.Text = ""
                    v.Enabled = False
                ElseIf TypeOf v Is ListBox Then
                    Dim lb As ListBox
                    lb = v
                    lb.Items.Clear()
                    v.Enabled = False
                ElseIf TypeOf v Is CheckBox Then
                    Dim cb As CheckBox
                    cb = v
                    cb.Checked = False
                    v.Enabled = False
                ElseIf TypeOf v Is DataGridView Then
                    Dim dg As DataGridView
                    dg = v
                    dg.DataSource = Nothing
                End If
            End If
        Next v

    End Sub

    Private Sub txtBilRmk_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) 
        txtBilEnt.Focus()

    End Sub

    Private Sub txtBilRmk_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtBilRmk.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtBilRmk.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_BilRmk") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_BilRmk") = tmpstr
                End If
            End If
        End If

    End Sub

    Public Sub display_combo(ByVal val As String, ByVal combo As ComboBox)

        If val = "" Then
            combo.Text = val
            Exit Sub
        End If

        Dim i As Integer

        For i = 0 To combo.Items.Count - 1
            If val = Split(combo.Items(i), " - ")(0) Then
                combo.Text = combo.Items(i)
                Exit Sub
            End If
        Next i

        combo.Text = val
    End Sub

    Private Sub txtVes_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtVes.KeyPress
        If e.KeyChar = Chr(13) Then
            txtVoy.Focus()
        End If

    End Sub

    Private Sub txtVes_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtVes.LostFocus
        '     txtVoy.Focus()

    End Sub

    Private Sub txtVes_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtVes.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtVes.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtVes.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ves") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ves") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtVoy_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtVoy.KeyPress
        If e.KeyChar = Chr(13) Then
            cmdPickDate.Focus()
        End If
    End Sub

    Private Sub txtVoy_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtVoy.LostFocus
        ' cmdPickDate.Focus()

    End Sub

    Private Sub txtVoy_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtVoy.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtVoy.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtVoy.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_voy") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_voy") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtPotLoa_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtPotLoa.KeyPress


        If e.KeyChar = Chr(13) Then
            txtDst.Focus()
        End If


    End Sub

    Private Sub txtPotLoa_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtPotLoa.LostFocus
        txtCrr.Focus()

    End Sub

    Private Sub txtPotLoa_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPotLoa.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtPotLoa.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtPotLoa.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_potloa") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_potloa") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtCrr_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCrr.KeyPress

        If e.KeyChar = Chr(13) Then
            txtDst.Focus()
        End If


    End Sub

    Private Sub txtCrr_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCrr.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtCrr.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtCrr.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_crr") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_crr") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtDst_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtDst.KeyPress

        If e.KeyChar = Chr(13) Then
            txtBilEnt.Focus()
        End If


    End Sub

    Private Sub txtDst_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtDst.LostFocus

    End Sub

    Private Sub txtDst_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtDst.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtDst.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtDst.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_dst") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_dst") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtCrrSo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCrrSo.KeyPress

        If e.KeyChar = Chr(13) Then
            cboPckListFooter.Focus()
        End If



    End Sub

    Private Sub txtCrrSo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCrrSo.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtCrrSo.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtCrrSo.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_crrso") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_crrso") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtGodDsc_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtGodDsc.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtGodDsc.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtGodDsc.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_goddsc") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_goddsc") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtBilEnt_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtBilEnt.KeyPress
        If e.KeyChar = Chr(13) Then
            cboBilAdr.Focus()
        End If

    End Sub

    Private Sub txtBilEnt_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtBilEnt.LostFocus
        cboBilAdr.Focus()


    End Sub

    Private Sub txtBilEnt_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtBilEnt.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtBilEnt.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtBilEnt.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilent") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilent") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub txtBilAdr_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtBilAdr.GotFocus
        richtext_focus = "txtBilAdr"
    End Sub

    Private Sub txtBilAdr_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtBilAdr.LostFocus
        richtext_focus = ""
    End Sub

    Private Sub txtBilAdr_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtBilAdr.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtBilAdr.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtBilAdr.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_biladr") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_biladr") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtBilStt_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtBilStt.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtBilStt.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtBilStt.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilstt") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilstt") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtBilZip_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtBilZip.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtBilZip.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtBilZip.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilzip") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_bilzip") = tmpstr
                End If
            End If
        End If




    End Sub

    Private Sub txtLCNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtLCNo.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtLCNo.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_lcno") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_lcno") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtLcBank_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtLcBank.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtLcBank.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_lcbank") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_lcbank") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtTtlCtn_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlCtn.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtTtlCtn.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = Val(txtTtlCtn.Text)

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlctn") Then
                    '   Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlctn") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtTtlNwg_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlNwg.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtTtlNwg.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtTtlNwg.Text)

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlnwg") Then
                    '    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlnwg") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtTtlGwg_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlGwg.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtTtlGwg.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtTtlGwg.Text)

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlgwg") Then
                    '   Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlgwg") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtTtlAmt_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlAmt.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtTtlAmt.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtTtlAmt.Text)

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlamt") Then
                    '    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlamt") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub cboInvNo_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboInvNo.Click
        flag_cboInvNo_KeyPress = True
        Call fillshipinv()
        'If flg_DisplayInvoiceHeaderData = True Then Exit Sub
        'Dim rs As New ADOR.Recordset
        'Dim tmpTtlAmt As Double
        'Dim tmpTtlCtn As Double
        'Dim tmpTtlVol As Double

        'Dim disP As Double
        'Dim disA As Double
        'Dim PreP As Double
        'Dim PreA As Double

        'disP = 0
        'disA = 0
        'PreP = 0
        'PreA = 0


        'flg_DisplayInvoiceHeaderData = True
        'If FindINVHDR_RS() Then
        '    Call updateInvoiceDetail(Me.cboInvNo.Text)
        '    '-----------------------------------------
        '    Call DisplayShipInv()
        'End If

        'flg_DisplayInvoiceHeaderData = True


    End Sub

    Private Sub cboInvNo_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboInvNo.GotFocus
        flag_cboInvNo_KeyPress = True
        Call fillshipinv()
    End Sub

    Private Sub cboInvNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboInvNo.KeyDown
        flag_cboInvNo_KeyPress = True

    End Sub

    Private Sub cboInvNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboInvNo.KeyPress
     
    End Sub

    Private Sub cboInvNo_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboInvNo.KeyUp

        If cboInvNo.Text.Length > 0 Then
            Call auto_search_combo(cboInvNo, e.KeyCode)
        End If
        'flag_cboInvNo_KeyPress = True
        'Call fillshipinv()
    End Sub

    Private Sub cboInvNo_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboInvNo.SelectedIndexChanged
        If flag_cboInvNo_KeyPress = True Then
            flag_cboInvNo_KeyPress = False


            sReadingIndexI_I = cboInvNo.SelectedIndex

            DisplayShipInv()
            cboInvFooter.Text = ""

        End If
    End Sub


    'Private Sub DisplayShipInv()
    '    flg_DisplayInvoiceHeaderData = True
    '    Dim i As Integer

    '    Call display_combo(rs_SHINVHDR("hiv_invno"), cboInvNo)

    '    txtInvDat.Text = rs_SHINVHDR("hiv_invdat")

    '    Call display_combo(rs_SHINVHDR("hiv_prctrm"), cboPrcTrm)
    '    'cboPrcTrm.Clear
    '    'cboPrcTrm.AddItem rs_SHINVHDR("hiv_0prctrm")
    '    'cboPrcTrm.ListIndex = 0

    '    Call display_combo(rs_SHINVHDR("hiv_paytrm"), cboPayTrm)
    '    'cboPayTrm.Clear
    '    'cboPayTrm.AddItem rs_SHINVHDR("hiv_paytrm")
    '    'cboPayTrm.ListIndex = 0

    '    For i = 0 To optDocTyp.count - 1
    '        If optDocTyp.Item(i).Caption = rs_SHINVHDR("hiv_doctyp") Then
    '            optDocTyp.Item(i).Value = True
    '        Else
    '            optDocTyp.Item(i).Value = False
    '        End If
    '    Next

    '    If rs_SHINVHDR("hiv_aformat") = "1" Then
    '        optFOB.Item(1).Value = True
    '        optFOB.Item(2).Value = False
    '    Else
    '        optFOB.Item(1).Value = False
    '        optFOB.Item(2).Value = True
    '    End If

    '    txtDoc.Text = rs_SHINVHDR("hiv_doc")
    '    cboBank.Text = rs_SHINVHDR("hiv_bank")
    '    txtCover.Text = rs_SHINVHDR("hiv_cover")
    '    txtFtrRmk.Text = rs_SHINVHDR("hiv_ftrrmk")
    '    txtLcStmt.Text = rs_SHINVHDR("hiv_lcstmt")
    '    cboUntAmt.Text = rs_SHINVHDR("hiv_untamt")
    '    txtTtlAmtI.Text = rs_SHINVHDR("hiv_ttlamt")
    '    txtInvAmt.Text = rs_SHINVHDR("hiv_invamt")
    '    txtAFamt.Text = rs_SHINVHDR("hiv_afamt")
    '    txtTtlVolI.Text = rs_SHINVHDR("hiv_ttlvol")
    '    TxtTtlCtnI.Text = rs_SHINVHDR("hiv_ttlctn")
    '    txtTtlHdpAmt.Text = 0
    '    txtTtlHdpAmt.Text = round(txtTtlAmtI.Text - txtInvAmt.Text - txtAFamt.Text, 2)

    '    If rs_SHINVHDR("hiv_invsts") = "CLO" Then
    '        chkClose.Value = 1
    '    Else
    '        chkClose.Value = 0
    '    End If


    '    flg_DisplayInvoiceHeaderData = False

    'End Sub
    Private Sub DisplayShipInv()
        Dim tmp_recordsetstatus
        tmp_recordsetstatus = Recordstatus

        flg_DisplayInvoiceHeaderData = True
        Dim i As Integer

        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If

        If sReadingIndexI_I > rs_SHINVHDR.Tables("RESULT").Rows.Count Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT").Rows.Count - 1 >= sReadingIndexI_I Then
            'temp 1009
            Call display_combo(rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invno"), cboInvNo)
        Else
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_revisedat") = "01/01/1900" Then
            txtInvDat.Text = ""
        Else
            txtInvDat.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_revisedat")
        End If

       

        Call display_combo(rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_prctrm"), cboPrcTrm)
        'cboPrcTrm.Clear
        'cboPrcTrm.AddItem rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_0prctrm")
        'cboPrcTrm.ListIndex = 0

        Call display_combo(rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_paytrm"), cboPayTrm)
        'cboPayTrm.Clear
        'cboPayTrm.AddItem rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_paytrm")
        'cboPayTrm.ListIndex = 0

        optDocTyp0.Checked = False
        optDocTyp1.Checked = False
        optDocTyp2.Checked = False

        If Microsoft.VisualBasic.Left(optDocTyp0.Text.Trim, 6) = Microsoft.VisualBasic.Left(rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp"), 6) Then
            optDocTyp0.Checked = True
        End If
        If Microsoft.VisualBasic.Left(optDocTyp1.Text.Trim, 6) = Microsoft.VisualBasic.Left(rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp"), 6) Then
            optDocTyp1.Checked = True
        End If
        If Microsoft.VisualBasic.Left(optDocTyp2.Text.Trim, 6) = Microsoft.VisualBasic.Left(rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp"), 6) Then
            optDocTyp2.Checked = True
        End If

        If optFOB1.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_aformat") Then
            optFOB1.Checked = True
        End If
        If optFOB2.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_aformat") Then
            optFOB2.Checked = True
        End If


        txtDoc.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doc")
        cbobank.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_bank")
        txtCover.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cover")

        txtFtrRmk.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ftrrmk")

        gspStr = "sp_select_SHRMKVAL '','P','" & Split(cboCus1No.Text.Trim, " - ")(0) & "',''  "

        rtnLong = execute_SQLStatement(gspStr, rs_SHRMKVAL, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            Me.Cursor = Windows.Forms.Cursors.Default
            MsgBox("Error on loading   sp_select_SHRMKVAL   : " & rtnStr)
            Exit Sub
        Else
            For i2 As Integer = 0 To rs_SHRMKVAL.Tables("RESULT").Columns.Count - 1
                rs_SHRMKVAL.Tables("RESULT").Columns(i2).ReadOnly = False
            Next
            'rs_SHRMKVAL_ori = rs_SHRMKVAL.Copy()

            '''
            cboInvFooter.Items.Clear()
            cboInvFooter.Items.Add("")
            rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'invoice_footer_remark' "
            For index1 As Integer = 0 To rs_SHRMKVAL.Tables("RESULT").DefaultView.Count - 1
                cboInvFooter.Items.Add(rs_SHRMKVAL.Tables("RESULT").DefaultView(index1)("hrt_rmkdsc"))
            Next

            'txtFtrRmk.Text = ""
            rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'invoice_footer_remark'  and hrt_flgdef ='Y' and hrt_pricustno = '" & Split(cboCus1No.Text.Trim, " - ")(0) & "'"
            '            rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'packlist_footer'  and hrt_flgdef ='Y' "
            If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 Then

                If txtFtrRmk.Text.Trim = "" Then
                    If sMode = cModeAdd Then
                        ''txtFtrRmk.Text = rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval")
                        '20141029,1124
                    End If

                End If
            End If


            cboPckListFooter.Items.Clear()
            cboPckListFooter.Items.Add("")
            rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'packlist_footer'  and hrt_pricustno = '" & Split(cboCus1No.Text.Trim, " - ")(0) & "'"
            For index1 As Integer = 0 To rs_SHRMKVAL.Tables("RESULT").DefaultView.Count - 1
                cboPckListFooter.Items.Add(rs_SHRMKVAL.Tables("RESULT").DefaultView(index1)("hrt_rmkdsc"))

               
            Next

            '' Michael chiu 20170323
            'txtBilRmk.Text = ""
            rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'packlist_footer'  and hrt_flgdef ='Y' and hrt_pricustno = '" & Split(cboCus1No.Text.Trim, " - ")(0) & "'"
            If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_plrmk") = "" Then
                txtBilRmk.Text = rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval")
            End If


            cboexptnam.Items.Clear()
            cboexptnam.Items.Add("")
            rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'exporter_info'  and hrt_pricustno = '" & Split(cboCus1No.Text.Trim, " - ")(0) & "'"
            For index1 As Integer = 0 To rs_SHRMKVAL.Tables("RESULT").DefaultView.Count - 1
                cboexptnam.Items.Add(rs_SHRMKVAL.Tables("RESULT").DefaultView(index1)("hrt_rmkdsc"))
            Next

            'txtexptaddr.Text = ""
            ' rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'exporter_info'  and hrt_flgdef ='Y' and hrt_pricustno = '" & Split(cboCus1No.Text.Trim, " - ")(0) & "'"
            'If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 Then
            'txtexptaddr.Text = rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval")
            'End If

        End If


        ' cboPckListFooter.Text = ""









        txtLcStmt.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcstmt")
        cboUntAmtI.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_untamt")
        cboUntAmtI.Text = cboUntAmt.Text
        'temp1009

        txtTtlAmtI.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlamt")
        txtInvAmt.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invamt")
        txtAFamt.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_afamt")
        txtTtlVolI.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlvol")
        TxtTtlCtnI.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlctn")
        txtTtlHdpAmt.Text = 0
        txtTtlHdpAmt.Text = round(txtTtlAmtI.Text - txtInvAmt.Text - txtAFamt.Text, 2)

        '201408

        If DateDiff("d", rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cargorcvdat"), "01/01/1900") = 0 Then
            txtcargorcvdat.Text = ""
        Else
            txtcargorcvdat.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cargorcvdat")
        End If


        txtLCNo.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcno")
        If DateDiff("d", rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcdat"), "01/01/1900") = 0 Then
            txtLCdat.Text = ""
        Else
            txtLCdat.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcdat")
        End If
        txtLcBank.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcbank")


        'temp
        'txtBilRmk.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_plrmk")


        If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invsts") = "CLO" Then
            chkClose.Checked = True
        Else
            chkClose.Checked = False
        End If

        txtexptnam.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptnam")
        txtexptaddr.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptaddr")

        txtBilRmk.Text = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_plrmk")

        Recordstatus = tmp_recordsetstatus

        Call cal_pre_dis()
        Call cal_inv_sum()

        flg_DisplayInvoiceHeaderData = False


    End Sub

    Private Function round(ByVal a As Double, ByVal Value As Double) As Double
        Dim S As String

        S = "0"

        If Value = 0 Then S = "0"
        If Value = 1 Then S = "0.0"
        If Value = 2 Then S = "0.00"
        If Value = 3 Then S = "0.000"
        If Value = 4 Then S = "0.0000"
        If Value = 5 Then S = "0.00000"
        If Value = 6 Then S = "0.000000"
        If Value = 7 Then S = "0.0000000"
        If Value = 8 Then S = "0.00000000"
        If Value = 9 Then S = "0.000000000"
        If Value = 10 Then S = "0.0000000000"

        round = CDbl(Format(a, S))
    End Function


    Private Sub DisplayShipMark()
        flg_DisplayShipMarkData = True

        If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If

        If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If

        Call display_combo(rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_invno"), cboInvNoM)


        cboOrdNo.Items.Clear()

        Dim inCombo
        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_invno") = rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_invno") Then

                If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno") <> "" Then
                    inCombo = False

                    For Y As Integer = 0 To cboOrdNo.Items.Count - 1
                        If Trim(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno")) = Trim(cboOrdNo.Items(Y)) Then
                            inCombo = True
                        End If
                    Next
                    If inCombo = False Then
                        cboOrdNo.Items.Add(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno"))
                    End If
                Else
                    inCombo = False
                    For Y As Integer = 0 To cboOrdNo.Items.Count - 1
                        If Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0)) = Trim(cboOrdNo.Items(Y)) Then
                            inCombo = True
                        End If
                    Next
                    If inCombo = False Then
                        cboOrdNo.Items.Add(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0))
                    End If
                End If

            End If 'inv
        Next
        'For i As Integer = 0 To rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1
        '    If rs_SHSHPMRK.Tables("RESULT").Rows(i)("hsm_invno") = cboInvNoM.Text.Trim Then
        '        cboOrdNo.Items.Add(rs_SHSHPMRK.Tables("RESULT").Rows(i)("hsm_ordno"))
        '    End If
        'Next

        Call display_combo(rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_ordno"), cboOrdNo)
        '1117


        '20141113
        'add


        txtImgNam.Text = rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgnam")
        txtImgPth.Text = rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth")
        txtEngDsc.Text = rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engdsc")
        txtEngRmk.Text = rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engrmk")


        '''(0)
        '0 or ..
        'picture of attchment ??
        '2014

        'If rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth") = "" Then
        '    Picture1 = Nothing
        'Else
        '    On Error Resume Next
        '    Picture1.Picture = LoadPicture(rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth"))
        'End If
        flg_DisplayShipMarkData = False
    End Sub

    Private Sub fillShipMark()

        If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If

        If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If


        If sReadingIndexI_S > rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1 Then
            Exit Sub
        End If

        If sReadingIndexI_S = -1 Then
            Exit Sub
        End If

        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_invno") = cboInvNoM.Text.Trim
        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_ordno") = cboOrdNo.Text.Trim

        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgnam") = txtImgNam.Text.Trim
        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth") = txtImgPth.Text.Trim
        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engdsc") = txtEngDsc.Text.Trim
        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engrmk") = txtEngRmk.Text.Trim


        '''(0)
        '0 or ..
        'picture of attchment ??
        '2014

        'If rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth") = "" Then
        '    Picture1 = Nothing
        'Else
        '    On Error Resume Next
        '    Picture1.Picture = LoadPicture(rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth"))
        'End If
    End Sub



    Private Sub txtImgNam_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtImgNam.TextChanged

        If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtImgNam.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtImgNam.Text

                If tmpstr <> rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgnam") Then
                    Recordstatus = True


                    If rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*ADD*~" And rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*NEW*~" Then
                        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") = "~*UPD*~"
                    End If
                    rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgnam") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub txtEngDsc_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtEngDsc.GotFocus
        richtext_focus = "txtEngDsc"
    End Sub

    Private Sub txtEngDsc_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtEngDsc.LostFocus
        richtext_focus = ""

    End Sub

    Private Sub txtEngDsc_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtEngDsc.TextChanged

        If rs_SHSHPMRK Is Nothing Then
            Exit Sub
        End If
        If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtEngDsc.Text.Trim <> "" Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtEngDsc.Text.Trim

                If sReadingIndexI_S > rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1 Then
                    Exit Sub
                End If
                If sReadingIndexI_S = -1 Then
                    Exit Sub
                End If
                If tmpstr <> rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engdsc") Then
                    Recordstatus = True


                    If rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*ADD*~" And rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*NEW*~" Then
                        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") = "~*UPD*~"
                    End If
                    rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engdsc") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub txtImgPth_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtImgPth.TextChanged
        If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtImgPth.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtImgPth.Text

                If sReadingIndexI_S > rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1 Then
                    Exit Sub
                End If
                If sReadingIndexI_S = -1 Then
                    Exit Sub
                End If
                If tmpstr <> rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth") Then
                    Recordstatus = True


                    If rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*ADD*~" And rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*NEW*~" Then
                        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") = "~*UPD*~"
                    End If
                    rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtEngRmk_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 
        If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtEngRmk.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtEngRmk.Text

                If tmpstr <> rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engrmk") Then
                    Recordstatus = True


                    If rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*ADD*~" And rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*NEW*~" Then
                        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") = "~*UPD*~"
                    End If
                    rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engrmk") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtItmDsc_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtItmDsc.GotFocus
        richtext_focus = "txtItmDsc"
    End Sub

    Private Sub txtItmDsc_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtItmDsc.LostFocus
        richtext_focus = ""
    End Sub

    Private Sub txtItmDsc_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtItmDsc.TextChanged
        If txtItmDsc.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtItmDsc.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmdsc")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmdsc") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmdsc") = tmpstr
                    End If
                End If
            End If
        End If

    End Sub

    Private Sub txtCtrCfs_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtCtrCfs.KeyDown
        'Select Case e.KeyCode
        '    Case Keys.Left
        '        cboCtrSiz.Focus()

        'End Select

    End Sub

    Private Sub txtCtrCfs_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCtrCfs.KeyPress

        If e.KeyChar = Chr(13) Then
            txtSealNo.Focus()
        End If


    End Sub

    Private Sub txtCtrCfs_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCtrCfs.TextChanged
        If flag_display_not_for_change <> True Then

            If txtCtrCfs.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
                If sMode = cModeAdd Or sMode = cModeUpd Then
                    Dim tmpstr
                    tmpstr = txtCtrCfs.Text

                    ''bug
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctrcfs")) Then
                        If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctrcfs") Then
                            Recordstatus = True
                            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                            End If
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctrcfs") = tmpstr
                        End If
                    End If
                End If
            End If

        End If

    End Sub

    Private Sub txtSealNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtSealNo.KeyDown
        'Select Case e.KeyCode
        '    Case Keys.Left
        '        txtCtrCfs.Focus()
        'End Select

    End Sub

    Private Sub txtSealNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtSealNo.KeyPress


        If e.KeyChar = Chr(13) Then
            txtConsolNo.Focus()
        End If

    End Sub

    Private Sub txtSealNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtSealNo.TextChanged
        If flag_display_not_for_change <> True Then

            If txtSealNo.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
                If sMode = cModeAdd Or sMode = cModeUpd Then
                    Dim tmpstr
                    tmpstr = txtSealNo.Text

                    ''bug
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_sealno")) Then
                        If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_sealno") Then
                            Recordstatus = True
                            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                            End If
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_sealno") = tmpstr
                        End If
                    End If
                End If
            End If

        End If


    End Sub

    Private Sub txtJobNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtJobNo.KeyDown
        'Select Case e.KeyCode
        '    Case Keys.Left
        '        txtConsolNo.Focus()
        'End Select

        Select Case e.KeyCode
            Case Keys.Right
                txtOrdNo.Focus()
        End Select

    End Sub

    Private Sub txtJobNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtJobNo.KeyPress
        Cursor = Cursors.WaitCursor
        Dim tmp_flag_cbi_cbinv As String
        Dim tmp_flag_cbi_cbinvwarn As String
        Dim flag_found_cus2no As Boolean


        flag_txtJobNo_KeyPress = True

        If e.KeyChar <> Chr(13) Then Exit Sub

        last_scjob_action = "JOB"

        If Trim(txtJobNo.Text) = "" Then
            MsgBox("Job order should not be empty!")
            Cursor = Cursors.Default
            Exit Sub
        End If
        '''

        If Trim(txtJobNo.Text) = "" Then Exit Sub
        txtOrdNo.Text = ""
        txtOrdNo.Enabled = False

        rs_SCORDDTL = Nothing

        If FindJOB() Then


            tmp_sc_seq = rs_SCORDDTL.Tables("RESULT").Rows(0).Item("sod_ordseq")
            If rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_ordsts") = "CLO" Then
                MsgBox(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_ordno") + " has been already closed!") '("SC was closed!")
                If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
                Cursor = Cursors.Default
                Exit Sub
            End If

            If rs_SCORDDTL.Tables("RESULT").Rows(0)("poh_pursts") = "CLO" Then
                MsgBox(rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purord") + " has been already closed!") '("PO was closed!")
                If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
                Cursor = Cursors.Default
                Exit Sub
            End If

            If rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_ordsts") <> "REL" And rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_ordsts") <> "CLO" Then
                MsgBox(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_ordno") + " has not been already released!") '("SC does not release!")
                If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
                Cursor = Cursors.Default
                Exit Sub
            End If

            If rs_SCORDDTL.Tables("RESULT").Rows(0)("poh_pursts") <> "REL" And rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_ordsts") <> "CLO" Then
                MsgBox(rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purord") + " has not been already released!") '("PO does not release!")
                If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
                Cursor = Cursors.Default
                Exit Sub
            End If

            If rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_cus1no") <> GetCtrlValue(cboCus1No) Then 'Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("soh_cus2no") <> GetCtrlValue(cboCus2No) Then
                MsgBox("Job order is not belongs to these customer!")
                If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
                Cursor = Cursors.Default
                Exit Sub
            End If



            tmp_flag_cbi_cbinv = "Y"
            tmp_flag_cbi_cbinvwarn = "N"
            '''

            flag_found_cus2no = False

            gspStr = "sp_select_CUBASINF '','" & GetCtrlValue(cboCus1No) & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_CUBASINF, rtnStr)
            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading cmdFind_Click sp_select_CUBASINF :" & rtnStr)
                Exit Sub
            End If

            If rs_CUBASINF.Tables("RESULT").Rows.Count = 0 Then
            Else
                If Not IsDBNull(rs_CUBASINF.Tables("RESULT").Rows(0)("cbi_cbinv")) Then
                    tmp_flag_cbi_cbinv = rs_CUBASINF.Tables("RESULT").Rows(0)("cbi_cbinv")
                End If

                If Not IsDBNull(rs_CUBASINF.Tables("RESULT").Rows(0)("cbi_cbinvwarn")) Then
                    tmp_flag_cbi_cbinvwarn = rs_CUBASINF.Tables("RESULT").Rows(0)("cbi_cbinvwarn")
                End If

            End If

            ''' check the cus1no
            ''' get the 2 flags
            For index98 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 2
                ''?
                If Not IsDBNull(rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_cus2no")) Then
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(index98)("hid_cus2no")) Then
                        If rs_SHIPGDTL.Tables("RESULT").Rows(index98)("hid_cus2no") <> rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_cus2no") Then
                            '20141112
                            'temp??
                            flag_found_cus2no = True
                        End If

                    End If

                End If
            Next

            If flag_found_cus2no = True Then
                If tmp_flag_cbi_cbinv = "N" Then
                    MsgBox("By setting, not allow different secondary customer set to same shipping for this primary customer!")
                    Call ResetSCData()
                    If txtOrdNo.Enabled And txtOrdNo.Visible Then txtOrdNo.Focus()
                    Exit Sub


                    '
                    '                    txtInvNo.Text = "1899"
                    'set 1
                Else
                    If tmp_flag_cbi_cbinvwarn = "Y" Then
                        MsgBox("Warning: Different Secondary Customer set to same Invoice.")
                        'warn
                    End If
                    'set same
                End If
            End If
            '''check combine invoice with 2nd cus here
            ''' 




            If rs_SCORDDTL.Tables("result").Rows(0)("soh_cus2no") <> "" Then
                txtcus2no.Text = rs_SCORDDTL.Tables("result").Rows(0)("soh_cus2no")
                txtcus2no.Visible = True
                lbl_cus2.Visible = True
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2no") = rs_SCORDDTL.Tables("result").Rows(0)("soh_cus2no")
            Else
                txtcus2no.Text = ""
                txtcus2no.Visible = False
                lbl_cus2.Visible = False
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2no") = ""
            End If




            If txtPrcTrm.Text = "" And txtPayTrm.Text = "" Then 'check first record case
                'do nothing
            Else
                If rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_prctrm") <> txtPrcTrm.Text Or rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_paytrm") <> txtPayTrm.Text Then
                    MsgBox("SC's price terms or pay terms do not match with saved record")
                    If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
                    Cursor = Cursors.Default
                    Exit Sub
                End If
            End If

            Call DisplaySCData_Job()
            If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()


        Else
            MsgBox("Job order does not exist")
            ' Added by Marco at 20040112 because some case job no cannot set focus
            btcSHM00001.SelectedIndex = 1

            'SSTabShp.Tab = 1

            ' Added by Marco at 20040112 because some case job no cannot set focus
            If btcSHM00001.Enabled And txtJobNo.Enabled Then
                txtJobNo.Focus()
            End If

        End If
        cboItmNo.Enabled = True
        cboColPck.Enabled = True

        txtCusPo.Enabled = True
        txtCusStyNo.Enabled = True
        txtCusItm.Enabled = True
        txtItmDsc.Enabled = True
        txtCusCol.Enabled = True
        txtCustUM.Enabled = True

        'cboItmNo.Focus()

        'Cursor = Cursors.Default
        'If optinvsm.Checked = True Then
        '    txtItmShm.Enabled = False
        '    cmdSelSM.Enabled = True
        'Else
        '    txtItmShm.Enabled = True
        '    cmdSelSM.Enabled = False
        'End If

        Call after_colpck()

        'cboColPck.Text = ""



    End Sub

    Private Sub txtJobNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtJobNo.TextChanged

        If flag_txtJobNo_KeyPress = True Then
            flag_txtJobNo_KeyPress = False

            If sMode = cModeAdd Or sMode = cModeUpd Then
                If txtJobNo.Text.Trim <> "" Then
                    txtOrdNo.Enabled = False
                    txtOrdNo.Text = ""
                Else
                    txtOrdNo.Enabled = True
                End If
            End If

            If txtJobNo.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
                If sMode = cModeAdd Or sMode = cModeUpd Then

                    If txtJobNo.Text.Trim <> "" Then
                        txtOrdNo.Enabled = False
                        txtOrdNo.Text = ""
                    End If



                    Dim tmpstr 
                    tmpstr = txtJobNo.Text

                    ''bug
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_jobno")) Then
                        If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_jobno") Then
                            Recordstatus = True
                            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                            End If
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_jobno") = tmpstr
                        End If
                    End If
                End If
            End If




        End If

    End Sub

    Private Sub txtJobNo_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtJobNo.LostFocus

        'If Trim(txtJobNo.Text) = "" Then Exit Sub
        'txtOrdNo.Text = ""
        'txtOrdNo.Enabled = False

        'rs_SCORDDTL = Nothing

        'If FindJOB() Then
        '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("soh_ordsts") = "CLO" Then
        '        MsgBox(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("sod_ordno") + " has been already closed!") '("SC was closed!")
        '        If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
        '        Exit Sub
        '    End If

        '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("poh_pursts") = "CLO" Then
        '        MsgBox(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("pod_purord") + " has been already closed!") '("PO was closed!")
        '        If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
        '        Exit Sub
        '    End If

        '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("soh_ordsts") <> "REL" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("soh_ordsts") <> "CLO" Then
        '        MsgBox(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("sod_ordno") + " has not been already released!") '("SC does not release!")
        '        If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
        '        Exit Sub
        '    End If

        '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("poh_pursts") <> "REL" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("soh_ordsts") <> "CLO" Then
        '        MsgBox(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("pod_purord") + " has not been already released!") '("PO does not release!")
        '        If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
        '        Exit Sub
        '    End If

        '    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("soh_cus1no") <> GetCtrlValue(cboCus1No) Then 'Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("soh_cus2no") <> GetCtrlValue(cboCus2No) Then
        '        MsgBox("Job order is not belongs to these customer!")
        '        If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
        '        Exit Sub
        '    End If

        '    If txtPrcTrm.Text = "" And txtPayTrm.Text = "" Then 'check first record case
        '        'do nothing
        '    Else
        '        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("soh_prctrm") <> txtPrcTrm.Text Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("soh_paytrm") <> txtPayTrm.Text Then
        '            MsgBox("SC's price terms or pay terms do not match with saved record")
        '            If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
        '            Exit Sub
        '        End If
        '    End If

        '    Call DisplaySCData_Job()
        '    If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()


        'Else
        '    MsgBox("Job order does not exist")
        '    ' Added by Marco at 20040112 because some case job no cannot set focus
        '    btcSHM00001.SelectedIndex = 1

        '    'SSTabShp.Tab = 1

        '    ' Added by Marco at 20040112 because some case job no cannot set focus
        '    If btcSHM00001.Enabled And txtJobNo.Enabled Then
        '        txtJobNo.Focus()
        '    End If

        'End If


    End Sub

    Private Sub txtOrdNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtOrdNo.KeyDown
        Select Case e.KeyCode
            Case Keys.Left
                txtJobNo.Focus()
        End Select

    End Sub

    'Private Sub txtJobNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtJobNo.TextChanged
    '    If txtJobNo.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
    '        If sMode = cModeAdd Or sMode = cModeUpd Then
    '            Dim tmpstr 
    '            tmpstr = txtJobNo.Text

    '            ''bug
    '            If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_jobno")) Then
    '                If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_jobno") Then
    '                    Recordstatus = True
    '                    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
    '                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
    '                    End If
    '                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_jobno") = tmpstr
    '                End If
    '            End If
    '        End If
    '    End If


    'End Sub

    Private Sub txtOrdNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtOrdNo.KeyPress
        Dim TmpPrcTrm As String
        Dim TmpPayTrm As String

        Dim TmpOrdNo As String
        Dim TmpItmShm As String
        Dim TmpInvno As String
        Cursor = Cursors.WaitCursor


        flag_txtordNo_KeyPress = True

        'If e.KeyChar = Chr(13) Then
        If e.KeyChar <> Chr(13) Then Exit Sub

        last_scjob_action = "SC"


        If Trim(txtOrdNo.Text) = "" Then
            MsgBox("SC order number should not be empty!")
            Cursor = Cursors.Default
            Exit Sub
        End If
        TmpOrdNo = txtOrdNo.Text
        TmpItmShm = txtItmShm.Text
        TmpInvno = txtInvNo.Text
        TmpPrcTrm = txtPrcTrm.Text
        TmpPayTrm = txtPayTrm.Text

        '''''''''''''''''''''
        If FindSC() = True Then
            If rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_ordsts") = "CLO" Then
                MsgBox(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_ordno") + " has been already closed!") '("SC was closed!")
                Call ResetSCData()
                If txtOrdNo.Enabled And txtOrdNo.Visible Then txtOrdNo.Focus()

                Exit Sub
            End If

            If rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_ordsts") <> "REL" And rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_ordsts") <> "CLO" Then
                MsgBox(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_ordno") + " has not been already released!") '("SC does not release!")
                Call ResetSCData()
                If txtOrdNo.Enabled And txtOrdNo.Visible Then txtOrdNo.Focus()

                Exit Sub
            End If

            If rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_cus1no") <> GetCtrlValue(cboCus1No) Then
                MsgBox("SC is not belongs to these customer!")
                Call ResetSCData()
                If txtOrdNo.Enabled And txtOrdNo.Visible Then txtOrdNo.Focus()
                Exit Sub
            End If

            If txtPrcTrm.Text = "" And txtPayTrm.Text = "" Then 'check first record case
                'do nothing
            Else
                If rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_prctrm") <> txtPrcTrm.Text Or rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_paytrm") <> txtPayTrm.Text Then
                    MsgBox("SC's price terms or pay terms do not match with saved record")
                    If txtOrdNo.Enabled And txtOrdNo.Visible Then txtOrdNo.Focus()
                    'temp
                    Call ResetSCData()

                    flg_DisplayShipDetailData = True
                    txtOrdNo.Text = TmpOrdNo
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno") = TmpOrdNo
                    txtItmShm.Text = TmpItmShm
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmshm") = TmpItmShm
                    txtInvNo.Text = TmpInvno
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_invno") = TmpInvno

                    '                    cboPrcTrm.Text = TmpPrcTrm
                    txtPrcTrm.Text = TmpPrcTrm
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = TmpPrcTrm
                    '                   cboPayTrm.Text = TmpPayTrm
                    txtPayTrm.Text = TmpPayTrm
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_paytrm") = TmpPayTrm

                    cboItmNo.Items.Clear()
                    cboColPck.Items.Clear()

                    flg_DisplayShipDetailData = False
                    Call SetStatusShipDetail()
                    Exit Sub
                End If
            End If

            'Johnson 23-05-2002
            If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 1 Then
                flg_DisplayInvoiceHeaderData = True
                Call display_combo(rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_prctrm"), cboPrcTrm)
                Call display_combo(rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_paytrm"), cboPayTrm)
                flg_DisplayInvoiceHeaderData = False
            End If

            Call ResetSCData()

            flg_DisplayShipDetailData = True

            txtOrdNo.Text = TmpOrdNo
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno") = TmpOrdNo

            txtItmShm.Text = TmpItmShm
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmshm") = TmpItmShm

            txtInvNo.Text = TmpInvno

            Dim tmp_flag_cbi_cbinv As String
            Dim tmp_flag_cbi_cbinvwarn As String
            Dim flag_found_cus2no As Boolean

            tmp_flag_cbi_cbinv = "Y"
            tmp_flag_cbi_cbinvwarn = "N"
            '''

            flag_found_cus2no = False

            gspStr = "sp_select_CUBASINF '','" & GetCtrlValue(cboCus1No) & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_CUBASINF, rtnStr)
            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading cmdFind_Click sp_select_CUBASINF :" & rtnStr)
                Exit Sub
            End If

            If rs_CUBASINF.Tables("RESULT").Rows.Count = 0 Then
            Else
                If Not IsDBNull(rs_CUBASINF.Tables("RESULT").Rows(0)("cbi_cbinv")) Then
                    tmp_flag_cbi_cbinv = rs_CUBASINF.Tables("RESULT").Rows(0)("cbi_cbinv")
                End If

                If Not IsDBNull(rs_CUBASINF.Tables("RESULT").Rows(0)("cbi_cbinvwarn")) Then
                    tmp_flag_cbi_cbinvwarn = rs_CUBASINF.Tables("RESULT").Rows(0)("cbi_cbinvwarn")
                End If

            End If

            ''' check the cus1no
            ''' get the 2 flags
            For index98 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 2
                ''?
                If Not IsDBNull(rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_cus2no")) Then
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(index98)("hid_cus2no")) Then
                        If rs_SHIPGDTL.Tables("RESULT").Rows(index98)("hid_cus2no") <> rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_cus2no") Then
                            '20141112
                            'temp??
                            flag_found_cus2no = True
                        End If

                    End If

                End If
            Next

            If flag_found_cus2no = True Then
                If tmp_flag_cbi_cbinv = "N" Then
                    MsgBox("By setting, not allow different secondary customer set to same shipping for this primary customer!")
                    Call ResetSCData()
                    If txtOrdNo.Enabled And txtOrdNo.Visible Then txtOrdNo.Focus()
                    Exit Sub


                    '
                    '                    txtInvNo.Text = "1899"
                    'set 1
                Else
                    If tmp_flag_cbi_cbinvwarn = "Y" Then
                        MsgBox("Warning: Different Secondary Customer set to same Invoice.")
                        'warn
                    End If
                    'set same
                End If
            End If
            '''check combine invoice with 2nd cus here
            ''' 

            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_invno") = txtInvNo.Text

            'cboPrcTrm.Text = TmpPrcTrm
            txtPrcTrm.Text = TmpPrcTrm
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = TmpPrcTrm
            'cboPayTrm.Text = TmpPayTrm
            txtPayTrm.Text = TmpPayTrm
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_paytrm") = TmpPayTrm


            flg_DisplayShipDetailData = False

            Call DisplayItmNo()
            ''need?
            'temp

            If rs_SCORDDTL.Tables("result").Rows(0)("soh_cus2no") <> "" Then
                txtcus2no.Text = rs_SCORDDTL.Tables("result").Rows(0)("soh_cus2no")
                txtcus2no.Visible = True
                lbl_cus2.Visible = True
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2no") = rs_SCORDDTL.Tables("result").Rows(0)("soh_cus2no")
            Else
                txtcus2no.Text = ""
                txtcus2no.Visible = False
                lbl_cus2.Visible = False
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cus2no") = ""
            End If


            '1009
            Call SetStatusShipDetail()


            txtManNam.Enabled = True
            cboManAdr.Enabled = True
            txtManAdr.Enabled = True
            ''txtaddinf.Enabled = True
            txtInvNo.Enabled = True
            txtCartonFactor.Enabled = True
            txtCtnEnd.Enabled = True
            txtCtnStr.Enabled = True
            txtPC.Enabled = True
            txtConFtr.Enabled = False
            txtShpQty.Enabled = True
            txtItmDsc.Enabled = True
            cboCtrSiz.Enabled = True

        Else
            MsgBox("SC does not exist")
            If txtOrdNo.Enabled And txtOrdNo.Visible Then txtOrdNo.Focus()
            Cursor = Cursors.Default



        End If
        '''''''''''''''''
        cboItmNo.Focus()


        If optinvsm.Checked = True Then
            txtItmShm.Enabled = False
            cmdSelSM.Enabled = True
        Else
            txtItmShm.Enabled = True
            cmdSelSM.Enabled = False
        End If

        cboColPck.Items.Clear()
        cboColPck.Text = ""



    End Sub

    Private Sub txtOrdNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtOrdNo.TextChanged

        Cursor = Cursors.WaitCursor

        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If flag_txtordNo_KeyPress = True Then
            flag_txtordNo_KeyPress = False

            If sReadingIndexS > rs_SHIPGDTL.Tables("RESULT").Rows.Count Then
                Cursor = Cursors.Default
                Exit Sub
            End If

            If sMode = cModeAdd Or sMode = cModeUpd Then
                If txtOrdNo.Text.Trim <> "" Then
                    txtJobNo.Enabled = False
                    txtJobNo.Text = ""
                Else
                    txtJobNo.Enabled = True
                End If

            End If

            If txtOrdNo.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
                If sMode = cModeAdd Or sMode = cModeUpd Then


                    Dim tmpstr 
                    tmpstr = txtOrdNo.Text

                    ''bug
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ordno")) Then
                        If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr")) Then
                            If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ordno") Then
                                Recordstatus = True
                                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                                End If
                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ordno") = tmpstr
                            End If
                        End If
                    End If
                End If
            End If




        End If
        Cursor = Cursors.Default

    End Sub

    Private Sub txtCusPo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCusPo.TextChanged
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If txtCusPo.Text <> "" Or mode = cModeAdd Or mode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtCusPo.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cuspo")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cuspo") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cuspo") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txtCusStyNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCusStyNo.TextChanged
        If txtCusStyNo.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtCusStyNo.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cusstyno")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cusstyno") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cusstyno") = tmpstr
                    End If
                End If
            End If
        End If





    End Sub

    Private Sub txtCusItm_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCusItm.TextChanged
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If txtCusItm.Text <> "" Or mode = cModeAdd Or mode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtCusItm.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cusitm")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cusitm") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cusitm") = tmpstr
                    End If
                End If
            End If
        End If





    End Sub

    Private Sub txtCusCol_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCusCol.TextChanged
        If txtCusCol.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtCusCol.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cuscol")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cuscol") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cuscol") = tmpstr
                    End If
                End If
            End If
        End If





    End Sub

    Private Sub txtCustUM_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCustUM.TextChanged
        If txtCustUM.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtCustUM.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_custum")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_custum") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_custum") = tmpstr
                    End If
                End If
            End If
        End If






    End Sub

    Private Sub txtColDsc_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtColDsc.KeyPress


        If e.KeyChar = Chr(13) Then
            txtShpQty.Focus()
        End If

    End Sub

    Private Sub txtColDsc_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtColDsc.LostFocus
        txtShpQty.Focus()


    End Sub

    Private Sub txtColDsc_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtColDsc.TextChanged
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If txtColDsc.Text <> "" Or mode = cModeAdd Or mode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtColDsc.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_coldsc")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_coldsc") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_coldsc") = tmpstr
                    End If
                End If
            End If
        End If






    End Sub

    Private Sub txtShpQty_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtShpQty.Click

    End Sub

    Private Sub txtShpQty_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtShpQty.KeyDown
        Select Case e.KeyCode
            Case Keys.Left
                cboColPck.Focus()
        End Select

    End Sub

    Private Sub txtShpQty_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtShpQty.KeyPress
        flag_txtShpQty_KeyPress = True

        If e.KeyChar = Chr(13) Then


            If (CDbl(txtShpQty.Text) Mod CInt(txtMtrCtn.Text) <> 0 Or Val(txtShpQty.Text) = 0) Then
                MsgBox("cartoon quantity must be the times of Master quantity!")
                txtShpQty.Text = "0"
                ShpQtyOK = False
                txtShpQty.Focus()
                Exit Sub
            Else
                txtCtnStr.Focus()
            End If
        End If
        Cursor = Cursors.Default

    End Sub

    Private Sub txtShpQty_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtShpQty.LostFocus
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If

        If rs_SHIPGDTL.Tables("result") Is Nothing Then Exit Sub
        '        If rs_SHIPGDTL.AbsolutePosition < 0 Then Exit Sub

        '   If flg_DisplayShipDetailData Then Exit Sub
        '???????????????20141224
        '20141229


        If txtShpQty.Text = "" Then txtShpQty.Text = 0


        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpqty") = CDbl(Val(txtShpQty.Text))

        Call SetShipDetailUpdateFlag()

        'If txtShpQty.Text = 0 Then
        '    txtTtlCtnD.Text = 0
        '    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlctn") = Val(txtTtlCtnD.Text)
        '    Exit Sub
        'End If
        '1117

        'check shpqty can divide by master carton
        If Val(txtMtrCtn.Text) = 0 Then

            '     MsgBox("Master Carton should not be zero")
            '       txtShpQty.selStart = 0
            '      txtShpQty.SelLength = Len(txtShpQty.Text)
            ' If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()

            ShpQtyOK = False
            Exit Sub
        End If

        If (CDbl(txtShpQty.Text) Mod CInt(txtMtrCtn.Text) <> 0 Or Val(txtShpQty.Text) = 0) Then
            '''    MsgBox("Shipped Qty should be divided by Master Qty")
            'temp
            'txtShpQty.selStart = 0
            'txtShpQty.SelLength = Len(txtShpQty.Text)
            'MsgBox("cartoon quantity must be the times of Master quantity!")

            txtShpQty.Text = "0"
            ShpQtyOK = False
            'txtShpQty.Focus()

            Exit Sub
        Else
            ShpQtyOK = True
            txtTtlCtnD.Text = CDbl(txtShpQty.Text) / CInt(txtMtrCtn.Text)
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlctn") = CDbl(txtTtlCtnD.Text)

            flag_checking = True
            Call cal_dtl_pckdim(txtShpSeq.Text.Trim, txtTtlCtnD.Text.Trim, 1)
            Call cal_dtl_pckdim(txtShpSeq.Text.Trim, txtTtlCtnD.Text.Trim, 2)
            Call cal_dtl_pckdim(txtShpSeq.Text.Trim, txtTtlCtnD.Text.Trim, 3)
            flag_checking = False

            display_dgPCKDIM("ALL")
            '1017
        End If


        If CheckOutStandQty() < 0 Then
         
            MsgBox("Shipped QTY should be smaller than or equal to " + Str(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpqty") + CheckOutStandQty()))

            If (rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpqty") + CheckOutStandQty()) <= 0 Then
                txtShpQty.Text = "0"

                cboItmNo.Text = ""
                cboColPck.Text = ""
                cboColPck.Enabled = False
                txtShpQty.Enabled = False
                txtTtlCtnD.Text = "0"

                cboItmNo.Focus()


                Exit Sub

            Else
                txtShpQty.Text = "0"
                If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()
                ShpQtyOK = False
                Exit Sub
            End If

        Else
            ShpQtyOK = True
        End If


            'Validation OK calculate total
            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrctn") > 0 Then
                txtTtlGrsD.Text = round(CDbl(Val(txtShpQty.Text)) * CDbl(Val(txtGrsWgt.Text)) / CInt(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrctn")), 3)
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlgrs") = txtTtlGrsD.Text
            Else
                txtTtlGrsD.Text = 0
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlgrs") = 0
            End If

            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrctn") > 0 Then
                txtTtlNetD.Text = round(CDbl(Val(txtShpQty.Text)) * CDbl(Val(txtNetWgt.Text)) / CInt(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrctn")), 3)
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlnet") = txtTtlNetD.Text
            Else
                txtTtlNetD.Text = 0
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlnet") = 0
            End If

            txtTtlAmtD.Text = round(CDbl(Val(txtSelPrcD.Text)) * CDbl(Val(txtShpQty.Text)), 4)

            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlamt") = txtTtlAmtD.Text

            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrctn") > 0 Then

                Call cal_mod_ttlvol(txtShpSeq.Text.Trim)
                txtTtlVolD.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlvol")
            Else
                txtTtlVolD.Text = 0
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlvol") = 0
            End If

            '      rs_SHIPGDTL.Update()
            ' txtCtnStr.Focus()

    End Sub

    Private Sub txtShpQty_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtShpQty.TextChanged
        If txtShpQty.Text <> "" Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtShpQty.Text.Trim
                If Not IsNumeric(tmpstr) Then
                    txtShpQty.Text = "0"
                    MsgBox("Please input ship quantity as integer!")
                    Exit Sub
                End If
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpqty")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpqty") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpqty") = CInt(tmpstr)

                        If Val(txtConFtr.Text) > 1 Then
                            txtPC.Text = Val(txtShpQty.Text) * Val(txtConFtr.Text)
                        Else
                            txtPC.Text = Val(txtShpQty.Text)
                        End If
                        '''20141006

                        For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1
                            If Not IsDBNull(rs_SHPCKDIM.Tables("RESULT").Rows(index)("hpd_cocde")) Then

                                If rs_SHPCKDIM.Tables("RESULT").Rows(index)("hpd_cocde") = cboCoCde.Text.Trim And _
                                       rs_SHPCKDIM.Tables("RESULT").Rows(index)("hpd_shpno") = txtShpNo.Text.Trim And _
                                                rs_SHPCKDIM.Tables("RESULT").Rows(index)("hpd_shpseq") = txtShpSeq.Text.Trim Then
                                    If Val(txtMtrCtn.Text.Trim) <> 0 Then
                                        rs_SHPCKDIM.Tables("RESULT").Rows(index)("hpd_ctn") = CInt(Val(txtShpQty.Text.Trim) / Val(txtMtrCtn.Text.Trim))
                                    Else
                                        rs_SHPCKDIM.Tables("RESULT").Rows(index)("hpd_ctn") = 0
                                    End If
                                    '                                rs_SHPCKDIM.Tables("RESULT").Rows(index)("hpd_ctn") = Val(txtTtlCtnD.Text)

                                End If
                            End If

                        Next





                    End If
                End If
            End If
        End If


    End Sub

    Private Sub txtConFtr_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtConFtr.TextChanged


        If txtConFtr.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then


            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtConFtr.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_conftr")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_conftr") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_conftr") = tmpstr
                    End If
                End If
            End If
        End If





    End Sub

    Private Sub txtPC_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtPC.KeyPress
        flag_txtPCQty_keypress = True
    End Sub

    Private Sub txtPC_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtPC.LostFocus

        Dim tmpshpqty As Decimal


        If flag_txtPCQty_keypress = True Then

            flag_txtPCQty_keypress = False

            If Val(txtConFtr.Text) > 1 Then

                tmpshpqty = Val(txtPC.Text) / Val(txtConFtr.Text)


                If CDbl(tmpshpqty) Mod CInt(Val(txtMtrCtn.Text)) <> 0 Or Val(txtShpQty.Text) = 0 Then
                    MsgBox("Cartoon quantity must be the times of Master quantity!")
                    txtShpQty.Text = ""
                    txtPC.Text = ""
                Else
                    txtShpQty.Text = Val(txtPC.Text) / Val(txtConFtr.Text)
                End If

            Else
                txtShpQty.Text = Val(txtPC.Text)
                '            txtPC.Text = Val(txtShpQty.Text)
            End If
            '''20141006
        End If


    End Sub

    Private Sub txtPC_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPC.TextChanged
    End Sub

    Private Sub txtCtnStr_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtCtnStr.KeyDown
        Select Case e.KeyCode
            Case Keys.Left
                txtShpQty.Focus()
        End Select
        Select Case e.KeyCode
            Case Keys.Right
                txtCtnEnd.Focus()
        End Select

    End Sub

    Private Sub txtCtnStr_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCtnStr.KeyPress
        If e.KeyChar = Chr(13) Then
            txtCtnEnd.Focus()
        End If
    End Sub

    Private Sub txtCtnStr_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtCtnStr.LostFocus
        txtCtnEnd.Focus()


    End Sub

    Private Sub txtCtnStr_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCtnStr.TextChanged
        If txtCtnStr.Text <> "" Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtCtnStr.Text.Trim
                If Not IsNumeric(tmpstr) Then
                    MsgBox("Please input integer!")
                    txtCtnStr.Focus()
                    Exit Sub
                End If




                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctnstr")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctnstr") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctnstr") = CInt(tmpstr)
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtCtnEnd_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtCtnEnd.KeyDown
        Select e.KeyCode
            Case Keys.Left
                txtCtnStr.Focus()
        End Select

    End Sub

    Private Sub txtCtnEnd_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCtnEnd.KeyPress

        If e.KeyChar = Chr(13) Then
            dgPCKDIM.CurrentCell = dgPCKDIM.Item(9, 0)
            dgPCKDIM.BeginEdit(True)
        End If
    End Sub

    Private Sub txtCtnEnd_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtCtnEnd.LostFocus
        If dgPCKDIM Is Nothing Then
            Exit Sub
        End If
        If dgPCKDIM.RowCount = 0 Then
            Exit Sub
        End If

        If dgPCKDIM.Focused = True Then
            dgPCKDIM.CurrentCell = dgPCKDIM.Item(9, 0)
            tmp_dgPCKDIM_0_9 = dgPCKDIM.CurrentCell.Value

            dgPCKDIM.BeginEdit(True)
        End If


    End Sub

    Private Sub txtCtnEnd_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCtnEnd.TextChanged
        If txtCtnEnd.Text <> "" Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtCtnEnd.Text.Trim
                If Not IsNumeric(tmpstr) Then
                    MsgBox("Please input integer!")
                    txtCtnEnd.Focus()
                    Exit Sub
                End If
                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctnend")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctnend") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctnend") = CInt(tmpstr)
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtTtlCtnD_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlCtnD.TextChanged
        If txtTtlCtnD.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then

            '  If Val(txtCartonFactor.Text) = 1 Or Val(txtCartonFactor.Text) = 2 Then
            If flag_txtShpQty_KeyPress = True Then
                flag_txtShpQty_KeyPress = False
                ''Call handle_dimension(Val(txtTtlCtnD.Text))
                'End If

                If sMode = cModeAdd Or sMode = cModeUpd Then
                    Dim tmpstr 
                    tmpstr = txtTtlCtnD.Text

                    ''bug
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlctn")) Then
                        If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlctn") Then
                            Recordstatus = True
                            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                            End If
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlctn") = tmpstr
                        End If
                    End If
                End If

            End If 'key press


        End If



    End Sub

    Private Sub txtUntCde_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtUntCde.TextChanged
        If txtUntCde.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtUntCde.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_untcde")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_untcde") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_untcde") = tmpstr
                    End If


                End If
            End If
        End If



    End Sub

    Private Sub txtInrCtn_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtInrCtn.TextChanged
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If

        If txtInrCtn.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = Val(txtInrCtn.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_inrctn")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_inrctn") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_inrctn") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txtMtrCtn_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtMtrCtn.TextChanged
        If txtMtrCtn.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtMtrCtn.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrctn")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrctn") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrctn") = tmpstr
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtVol_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtVol.TextChanged
        If txtVol.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtVol.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_vol")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_vol") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_vol") = tmpstr
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtMtrdcm_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtMtrdcm.TextChanged
        If txtMtrdcm.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtMtrdcm.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrdcm")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrdcm") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrdcm") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txtMtrwcm_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtMtrwcm.TextChanged
        If txtMtrwcm.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtMtrwcm.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrwcm")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrwcm") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrwcm") = tmpstr
                    End If
                End If
            End If
        End If


    End Sub

    Private Sub txtMtrhcm_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtMtrhcm.TextChanged
        If txtMtrhcm.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtMtrhcm.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrhcm")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrhcm") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mtrhcm") = tmpstr
                    End If
                End If
            End If
        End If


    End Sub

    Private Sub txtActVol_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtActVol.TextChanged
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If

        If txtActVol.Text <> "" Or mode = cModeAdd Or mode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = Val(txtActVol.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_actvol")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_actvol") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_actvol") = tmpstr
                    End If
                End If
            End If
        End If


    End Sub

    Private Sub txtGrsWgt_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtGrsWgt.TextChanged
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If txtGrsWgt.Text <> "" Or mode = cModeAdd Or mode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtGrsWgt.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_grswgt")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_grswgt") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_grswgt") = tmpstr
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtNetWgt_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtNetWgt.TextChanged
        If txtNetWgt.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtNetWgt.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_netwgt")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_netwgt") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_netwgt") = tmpstr
                    End If
                End If
            End If
        End If


    End Sub

    Private Sub txtItmShm_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 
        If txtItmShm.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtItmShm.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmshm")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmshm") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmshm") = tmpstr
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtTtlVolD_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlVolD.TextChanged
        If txtTtlVolD.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtTtlVolD.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlvol")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlvol") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlvol") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txtTtlGrsD_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlGrsD.TextChanged
        If txtTtlGrsD.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtTtlGrsD.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlgrs")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlgrs") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlgrs") = tmpstr
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtTtlNetD_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlNetD.TextChanged
        If txtTtlNetD.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtTtlNetD.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlnet")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlnet") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlnet") = tmpstr
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtCmpRmk_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCmpRmk.TextChanged
        If txtCmpRmk.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtCmpRmk.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cmprmk")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cmprmk") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cmprmk") = tmpstr
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtManNam_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtManNam.TextChanged
        If txtManNam.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtManNam.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mannam")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mannam") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_mannam") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txtManAdr_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtManAdr.TextChanged
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If txtManAdr.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtManAdr.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_manadr")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_manadr") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_manadr") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txtPCPrc_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If txtPCPrc.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtPCPrc.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pcprc")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pcprc") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pcprc") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txtSelPrcD_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtSelPrcD.TextChanged
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If txtSelPrcD.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = Val(txtSelPrcD.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_selprc")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_selprc") Then
                        '   Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_selprc") = tmpstr
                    End If
                End If
            End If
        End If





    End Sub

    Private Sub txtTtlAmtD_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlAmtD.TextChanged
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        If txtTtlAmtD.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = Val(txtTtlAmtD.Text)

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlamt")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlamt") Then
                        '    Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ttlamt") = tmpstr
                    End If
                End If
            End If
        End If

    End Sub

    Private Sub txtInvNo_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtInvNo.LostFocus
        'Debug.Print "LOST 01:" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_invno") & "( " & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpseq") & " )"
        'If rs_SHIPGDTL Is Nothing Then
        '    Exit Sub
        'End If

        If txtInvNo.Text <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_invno") Then
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_invno") = txtInvNo.Text
            Call SetShipDetailUpdateFlag()
            'Debug.Print "LOST 02:" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_invno") & "( " & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpseq") & " )"

            'Debug.Print "LOST 03:" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_invno") & "( " & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpseq") & " )"
        End If
        If txtCtrCfs.Enabled And txtCtrCfs.Visible Then txtCtrCfs.Focus()

    End Sub

    Private Sub txtInvNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtInvNo.TextChanged
        'If rs_SHIPGDTL Is Nothing Then
        '    Exit Sub
        'End If
        If txtInvNo.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtInvNo.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_invno")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_invno") Then
                        Recordstatus = True '2015
                        '      Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_invno") = tmpstr
                    End If
                End If
            End If
        End If

    End Sub

    Private Sub txtDoc_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtDoc.GotFocus
        richtext_focus = "txtDoc"
    End Sub

    Private Sub txtDoc_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtDoc.LostFocus
        richtext_focus = ""
        cmdPickDate2.Focus()
    End Sub

    Private Sub txtDoc_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtDoc.TextChanged


        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtDoc.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtDoc.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doc") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doc") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub txtFtrRmk_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 

        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtFtrRmk.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtFtrRmk.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ftrrmk") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ftrrmk") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtLcStmt_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtLcStmt.TextChanged

        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtLcStmt.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtLcStmt.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcstmt") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcstmt") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtTtlAmtI_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlAmtI.TextChanged

        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtTtlAmtI.Text <> "" Or mode = cModeAdd Or mode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = txtTtlAmtI.Text

                If Val(tmpstr) <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlamt") Then
                    '  Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlamt") = Val(tmpstr)
                End If
            End If
        End If


    End Sub

    Private Sub txtInvAmt_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtInvAmt.TextChanged

        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtInvAmt.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtInvAmt.Text)

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invamt") Then
                    '     Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invamt") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtTtlVolI_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlVolI.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtTtlVolI.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtTtlVolI.Text)

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlvol") Then
                    '  Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlvol") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtAFamt_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtAFamt.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtAFamt.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(txtAFamt.Text)

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_afamt") Then
                    '     Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_afamt") = tmpstr
                End If
            End If
        End If




    End Sub

    Private Sub TxtTtlCtnI_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TxtTtlCtnI.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If TxtTtlCtnI.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = Val(TxtTtlCtnI.Text)

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlctn") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlctn") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub txtTtlHdpAmt_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTtlHdpAmt.TextChanged

    End Sub

    Private Function check_ShippingDetail() As Boolean
        Dim dtl_counter As Integer
        Dim Err As String
        Dim isValid As Boolean
        Dim tmp_vol As Decimal
        Dim tmp_ttlcmb As Decimal
        Dim tmp_ttlgw As Decimal
        Dim tmp_ttlnw As Decimal
        Dim tmp_ttlgw_act As Decimal
        Dim tmp_ttlnw_act As Decimal

        Dim tmp_seq As Integer
        Dim tmp_ctnftr As Integer

        Dim tmp_ctnscheck As DataSet
        Dim tmp_shcptbkd As DataSet
        Dim tmp_msg As String
        Dim tmp_type As String
        Dim tmp_sum_shb_pct As Decimal
        Dim tmp_sum_shb_cstpct As Decimal
 

        '''change to defaultview checking



        If GetCtrlValue(cboShpSts) = "REL" Or GetCtrlValue(cboShpSts) = "CLO" Then
            check_ShippingDetail = True
            Exit Function
            '29
        End If


        If chkDel.Checked = True Then
            check_ShippingDetail = True
            Exit Function
        End If

        isValid = True
        check_ShippingDetail = True
        If rs_SHIPGDTL Is Nothing Then
            Exit Function
        End If
        'Dim rs_SHPCKDIM As DataSet


        tmp_ctnscheck = rs_SHDTLCTN.Copy


        If Not rs_SHCPTBKD Is Nothing Then
            tmp_shcptbkd = rs_SHCPTBKD.Copy
        End If



        dtl_counter = 0
        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If rs_SHIPGDTL.Tables("RESULT").Rows(i)("Del") <> "Y" Then
                dtl_counter = dtl_counter + 1

                tmp_seq = rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq")

                If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctrsiz") = "" Then
                    'MsgBox("Container Size should not be empty!")
                    'display_Detail(tmp_seq)
                    'check_ShippingDetail = False
                    'btcSHM00001.SelectedIndex = 1
                    'Exit Function
                ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno") = "" And rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno") = "" Then
                    MsgBox("Job# or SC# should not be empty!")
                    display_Detail(tmp_seq)
                    check_ShippingDetail = False
                    btcSHM00001.SelectedIndex = 1
                    Exit Function
                ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_itmno") = "" Then
                    MsgBox("Item#  should not be empty!")
                    display_Detail(tmp_seq)
                    check_ShippingDetail = False
                    btcSHM00001.SelectedIndex = 1
                    Exit Function
                ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_colpck") = "" Then
                    MsgBox("Color and Packing should not be empty!")
                    display_Detail(tmp_seq)
                    check_ShippingDetail = False
                    btcSHM00001.SelectedIndex = 1
                    Exit Function
                ElseIf Not Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpqty")) > 0 Then
                    MsgBox("Shipped Qty should  be > 0 ")
                    display_Detail(tmp_seq)
                    check_ShippingDetail = False
                    btcSHM00001.SelectedIndex = 1
                    txtShpQty.Focus()


                    Exit Function
                ElseIf Not Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnstr")) > 0 Then
                    MsgBox("CTN:  Fm should  be > 0 ")
                    txtCtnStr.Enabled = True
                    txtCtnEnd.Enabled = True

                    display_Detail(tmp_seq)
                    check_ShippingDetail = False
                    btcSHM00001.SelectedIndex = 1
                    txtCtnStr.Focus()
                    Exit Function
                ElseIf Not Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnend")) > 0 Then
                    MsgBox("CTN:  To should  be > 0 ")
                    txtCtnStr.Enabled = True
                    txtCtnEnd.Enabled = True

                    display_Detail(tmp_seq)
                    check_ShippingDetail = False
                    btcSHM00001.SelectedIndex = 1
                    txtCtnEnd.Focus()
                    Exit Function
                ElseIf Not Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnend")) >= Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnstr")) Then
                    MsgBox("CTN:  To should  be > From ")
                    txtCtnStr.Enabled = True
                    txtCtnEnd.Enabled = True

                    display_Detail(tmp_seq)
                    check_ShippingDetail = False
                    btcSHM00001.SelectedIndex = 1
                    txtCtnEnd.Focus()
                    Exit Function
                End If

                flag_checking = True
                If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnftr")) Then
                    tmp_ctnftr = 1
                Else
                    tmp_ctnftr = Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnftr"))
                End If
                tmp_vol = rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_vol")
                'Val(txtVol.Text)




                If tmp_ctnftr = 1 Then
                    rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
                ElseIf tmp_ctnftr = 2 Then
                    rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum <= 4 "
                ElseIf tmp_ctnftr = 3 Then
                    rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum >= 7 and hpd_pdnum<=12 "
                ElseIf tmp_ctnftr = 4 Then
                    rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum >=13 and hpd_pdnum <=20 "
                ElseIf tmp_ctnftr = 5 Then
                    rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum >= 21 and hpd_pdnum <=30 "
                End If

                For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                    If Not (Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_l_cm")) = 12213.21 And _
                                    Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_w_cm")) = 43523 And _
                                    Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_h_cm")) = 66878) Then

                        tmp_ttlcmb = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm")

                        tmp_ttlgw = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlgw_kg")
                        tmp_ttlnw = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlnw_kg")
                        tmp_type = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_dimtyp")

                        '                        tmp_ttlcmb = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm") / 1000000
                        Dim tmp_txtTtlCtnD As Integer
                        tmp_txtTtlCtnD = rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ttlctn")

                        If tmp_ttlcmb / Val(tmp_txtTtlCtnD * 1) < tmp_vol * 0.9 Or tmp_ttlcmb / Val(tmp_txtTtlCtnD * 1) > tmp_vol * 1.1 Then
                            'If tmp_ttlcmb / Val(tmp_txtTtlCtnD * tmp_ctnftr) < tmp_vol * 0.9 Or tmp_ttlcmb / Val(tmp_txtTtlCtnD * tmp_ctnftr) > tmp_vol * 1.1 Then

                            tmp_msg = " '" & tmp_type & "' CBM   vs 'CBM in SC Col & Pck' should not be over 10% difference."
                            tmp_seq = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_shpseq")

                            ' display_Detail(tmp_seq)

                            If chk_cmin = 1 Then
                                weight1.Checked = True
                                weight1.Checked = True
                                display_dgPCKDIM("CM")
                            ElseIf chk_cmin = 2 Then
                                weight2.Checked = True
                                weight2.Checked = True
                                display_dgPCKDIM("IN")
                            Else
                                weight3.Checked = True
                                weight3.Checked = True
                                display_dgPCKDIM("ALL")
                            End If

                            If i = sReadingIndexS Then
                                If MsgBox(tmp_msg, vbYesNo, "System Message") = vbYes Then
                                    check_ShippingDetail = True
                                    flag_checking = True
                                Else
                                    check_ShippingDetail = False
                                    flag_checking = False
                                    Exit Function
                                End If
                            End If

                        End If

                        '  If rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_dimtyp") = "Mod" Then
                        If tmp_ttlgw = 0 Then
                            MsgBox(" Gross weight should be > 0.")
                            tmp_seq = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_shpseq")
                            display_Detail(tmp_seq)
                            If chk_cmin = 1 Then
                                weight1.Checked = True
                                weight1.Checked = True
                                display_dgPCKDIM("CM")
                            ElseIf chk_cmin = 2 Then
                                weight2.Checked = True
                                weight2.Checked = True
                                display_dgPCKDIM("IN")
                            Else
                                weight3.Checked = True
                                weight3.Checked = True
                                display_dgPCKDIM("ALL")
                            End If


                            check_ShippingDetail = False
                            flag_checking = False
                            Exit Function
                        End If



                        If tmp_ttlnw = 0 Then
                            MsgBox(" Net weight should be > 0.")
                            tmp_seq = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_shpseq")
                            display_Detail(tmp_seq)
                            If chk_cmin = 1 Then
                                weight1.Checked = True
                                weight1.Checked = True
                                display_dgPCKDIM("CM")
                            ElseIf chk_cmin = 2 Then
                                weight2.Checked = True
                                weight2.Checked = True
                                display_dgPCKDIM("IN")
                            Else
                                weight3.Checked = True
                                weight3.Checked = True
                                display_dgPCKDIM("ALL")
                            End If


                            check_ShippingDetail = False
                            flag_checking = False
                            Exit Function
                        End If



                        If tmp_ttlnw >= tmp_ttlgw Then
                            MsgBox(" Net weight should be smaller than Gross weight!")
                            tmp_seq = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_shpseq")
                            display_Detail(tmp_seq)
                            If chk_cmin = 1 Then
                                weight1.Checked = True
                                weight1.Checked = True
                                display_dgPCKDIM("CM")
                            ElseIf chk_cmin = 2 Then
                                weight2.Checked = True
                                weight2.Checked = True
                                display_dgPCKDIM("IN")
                            Else
                                weight3.Checked = True
                                weight3.Checked = True
                                display_dgPCKDIM("ALL")
                            End If


                            check_ShippingDetail = False
                            flag_checking = False
                            Exit Function
                        End If
                        'End If

                    End If
                Next

                tmp_ctnscheck.Tables("RESULT").DefaultView.RowFilter = "hdc_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq")
                If tmp_ctnscheck.Tables("RESULT").DefaultView.Count = 0 Then

                    If Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnend")) + 1 - Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnstr")) <> Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ttlctn")) Then

                        MsgBox("CTN:  'Fm- To' should  be equal to total carton number !")
                        txtCtnStr.Enabled = True
                        txtCtnEnd.Enabled = True

                        display_Detail(tmp_seq)
                        check_ShippingDetail = False
                        btcSHM00001.SelectedIndex = 1
                        txtCtnStr.Focus()
                        Exit Function
                    End If
                End If
                '''

                If Not tmp_shcptbkd Is Nothing Then
                    If Not tmp_shcptbkd.Tables("RESULT") Is Nothing Then
                        tmp_shcptbkd.Tables("RESULT").DefaultView.RowFilter = "shb_ordseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and shb_status <> 'Y' "



                        If tmp_shcptbkd.Tables("RESULT").DefaultView.Count > 0 Then
                            tmp_sum_shb_pct = 0
                            tmp_sum_shb_cstpct = 0
                            For i1 As Integer = 0 To tmp_shcptbkd.Tables("RESULT").DefaultView.Count - 1
                                tmp_sum_shb_pct = tmp_sum_shb_pct + tmp_shcptbkd.Tables("RESULT").DefaultView(i1)("shb_pct")
                            Next
                            For i1 As Integer = 0 To tmp_shcptbkd.Tables("RESULT").DefaultView.Count - 1
                                tmp_sum_shb_cstpct = tmp_sum_shb_cstpct + tmp_shcptbkd.Tables("RESULT").DefaultView(i1)("shb_cstpct")
                            Next

                            If tmp_sum_shb_pct <> 100 And tmp_sum_shb_cstpct <> 100 Then

                                MsgBox("Either Cost or Weight should be equal to 100% !")

                                display_Detail(tmp_seq)
                                check_ShippingDetail = False
                                btcSHM00001.SelectedIndex = 1

                                Exit Function
                            End If

                            For i1 As Integer = 0 To tmp_shcptbkd.Tables("RESULT").DefaultView.Count - 1

                                If IsDBNull(tmp_shcptbkd.Tables("RESULT").DefaultView(i1)("shb_cpt")) Then
                                    MsgBox("Component Description should not be empty!")

                                    display_Detail(tmp_seq)
                                    check_ShippingDetail = False
                                    btcSHM00001.SelectedIndex = 1

                                    Exit Function

                                End If

                                If Trim(tmp_shcptbkd.Tables("RESULT").DefaultView(i1)("shb_cpt")) = "" Then
                                    MsgBox("Component Description should not be empty!")

                                    display_Detail(tmp_seq)
                                    check_ShippingDetail = False
                                    btcSHM00001.SelectedIndex = 1

                                    Exit Function
                                End If
                            Next

                            For i1 As Integer = 0 To tmp_shcptbkd.Tables("RESULT").DefaultView.Count - 1
                                For i2 As Integer = 0 To tmp_shcptbkd.Tables("RESULT").DefaultView.Count - 1
                                    If tmp_shcptbkd.Tables("RESULT").DefaultView(i1)("shb_cpt") = tmp_shcptbkd.Tables("RESULT").DefaultView(i2)("shb_cpt") And i1 <> i2 Then
                                        MsgBox("Component Description should not be duplicated!")

                                        display_Detail(tmp_seq)
                                        check_ShippingDetail = False
                                        btcSHM00001.SelectedIndex = 1
                                        Exit Function
                                    End If
                                Next
                            Next


                        End If
                    End If
                End If



   



                '''

                If flag_cov_click = False Then

                    If CheckOutStandQty_savecheck(i) < 0 Then
                        display_Detail(tmp_seq)
                        MsgBox("Shipped QTY should be smaller than or equal to " + Str(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpqty") + CheckOutStandQty_savecheck(i)))

                        If (rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_shpqty") + CheckOutStandQty_savecheck(i)) <= 0 Then
                            '''
                            txtShpQty.Text = "0"
                            '                        cboItmNo.Text = ""
                            '                       cboColPck.Text = ""
                            '                      cboColPck.Enabled = False
                            '                     txtShpQty.Enabled = False
                            txtTtlCtnD.Text = "0"
                            cboItmNo.Enabled = True
                            cboColPck.Enabled = True
                            cboItmNo.Focus()
                            Exit Function
                        Else
                            txtShpQty.Text = "0"
                            If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()
                            '                        ShpQtyOK = False
                            'Exit Function
                        End If
                        check_ShippingDetail = False
                        flag_checking = False
                        Exit Function
                    End If
                    '20150724 
                End If
                '20150804

            End If
        Next


        'If dtl_counter = 0 Then
        '    check_ShippingDetail = False
        '    btcSHM00001.SelectedIndex = 1
        '    MsgBox("The shipment should at least has one detail!")
        '    Exit Function
        'End If

        If Not SHCartonSC() Then
            check_ShippingDetail = False
            btcSHM00001.SelectedIndex = 1
            Exit Function
        End If


        '        sfilter = "hdc_shpseq = '" + txtShpSeq.Text + "'"
        '        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = sfilter



 


        '''
        flag_checking = False
		
		cboItmNo.Enabled = False
        cboColPck.Enabled = False


        ''*** Folder1

        'If chkDel.Checked = False Then

        '    '--------------------------------------------------------------------------------------
        '    'Lester Wu , check CTR # and Seal # Mandatory if "CFS" is not selected
        '    If Me.optCtrSiz4.Checked = False And Trim(Me.txtCtrCfs.Text) = "" Then

        '        btcSHM00001.SelectedIndex = 1

        '        MsgBox("Please input CTR #!")
        '        If Me.txtCtrCfs.Enabled And Me.txtCtrCfs.Visible Then Me.txtCtrCfs.Focus()
        '        isValid = False
        '    ElseIf Me.optCtrSiz4.Checked = False And Trim(Me.txtSealNo.Text) = "" Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Please input Seal #!")
        '        If Me.txtSealNo.Enabled And Me.txtSealNo.Visible Then Me.txtSealNo.Focus()
        '        isValid = False
        '        'If txtOrdNo.Text = "" Then
        '    ElseIf txtOrdNo.Text = "" Then
        '        '--------------------------------------------------------------------------------------
        '        btcSHM00001.SelectedIndex = 1
        '        If optSearch0.Checked = True Then
        '            MsgBox("Invalid job No.")
        '            If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
        '        Else
        '            MsgBox("Invalid SC No.")
        '            If txtOrdNo.Enabled And txtOrdNo.Visible Then txtOrdNo.Focus()
        '        End If
        '        isValid = False

        '    ElseIf cboItmNo.Enabled And cboItmNo.Text = "" Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Item No.")
        '        If cboItmNo.Enabled And cboItmNo.Visible Then cboItmNo.Focus()
        '        isValid = False

        '    ElseIf cboColPck.Enabled And cboColPck.Text = "" Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Color Packing")
        '        If cboColPck.Enabled And cboColPck.Visible Then cboColPck.Focus()
        '        isValid = False

        '    ElseIf txtShpQty.Text = "" Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Ship Qty")
        '        If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()
        '        isValid = False

        '    ElseIf txtShpQty.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Ship Qty")
        '        If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()
        '        isValid = False

        '    ElseIf txtCtnStr.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Carton No.")
        '        If cmdMore.Enabled And cmdMore.Visible Then cmdMore.Focus()
        '        isValid = False

        '    ElseIf txtCtnEnd.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Carton No.")
        '        If cmdMore.Enabled And cmdMore.Visible Then cmdMore.Focus()
        '        isValid = False

        '    ElseIf CDbl(txtCtnStr.Text) > CDbl(txtCtnEnd.Text) Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Start carton no. > End carton no.")
        '        If txtCtnStr.Enabled And txtCtnStr.Visible Then txtCtnStr.Focus()
        '        isValid = False


        '    ElseIf txtMtrdcm.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Carton Length")
        '        If txtMtrdcm.Enabled And txtMtrdcm.Visible Then txtMtrdcm.Focus()
        '        isValid = False

        '    ElseIf txtMtrwcm.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Carton Width")
        '        If txtMtrwcm.Enabled And txtMtrwcm.Visible Then txtMtrwcm.Focus()
        '        isValid = False

        '    ElseIf txtMtrhcm.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Carton Height")
        '        If txtMtrhcm.Enabled And txtMtrhcm.Visible Then txtMtrhcm.Focus()
        '        isValid = False

        '    ElseIf txtActVol.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Actual CBM")
        '        If txtMtrdcm.Enabled And txtMtrdcm.Visible Then txtMtrdcm.Focus()
        '        isValid = False

        '    ElseIf txtGrsWgt.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Gross Weight")
        '        If txtGrsWgt.Enabled And txtGrsWgt.Visible Then txtGrsWgt.Focus()
        '        isValid = False

        '    ElseIf txtNetWgt.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Net Weight")
        '        If txtNetWgt.Enabled And txtNetWgt.Visible Then txtNetWgt.Focus()
        '        isValid = False

        '    ElseIf txtTtlNetD.Text = 0 Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Invalid Net Weight")
        '        If txtNetWgt.Enabled And txtNetWgt.Visible Then txtNetWgt.Focus()
        '        isValid = False

        '    ElseIf CDbl(txtGrsWgt.Text) < CDbl(txtNetWgt.Text) Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Gross weight should not smaller than net weight!")
        '        If txtGrsWgt.Enabled And txtGrsWgt.Visible Then txtGrsWgt.Focus()
        '        isValid = False

        '    ElseIf Not MultiLineTextIsValid(txtItmShm.Text, 25) Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Item Ship Mark should be 25 chars per line")
        '        If txtItmShm.Enabled And txtItmShm.Visible Then txtItmShm.Focus()
        '        isValid = False

        '    ElseIf Not MultiLineTextIsValid(txtCmpRmk.Text, 50) Then
        '        btcSHM00001.SelectedIndex = 1
        '        MsgBox("Component Remark should be 50 chars per line!")
        '        If txtCmpRmk.Enabled And txtCmpRmk.Visible Then txtCmpRmk.Focus()
        '        isValid = False

        '    End If

        '    If isValid = True Then
        '        If Me.chkPC.Checked = True Then
        '            If IsNumeric(Me.txtPC.Text) And IsNumeric(Me.txtShpQty.Text) Then
        '                If CLng(Me.txtPC.Text) <> CLng(Me.txtShpQty.Text) * CLng(Me.txtConFtr.Text) Then
        '                    btcSHM00001.SelectedIndex = 1
        '                    MsgBox("Ship Qty not match with Qty in PC!")
        '                    If txtPC.Enabled And txtPC.Visible Then txtPC.Focus()
        '                    isValid = False
        '                ElseIf CDbl(txtShpQty.Text) Mod CInt(txtMtrCtn.Text) <> 0 Then
        '                    btcSHM00001.SelectedIndex = 1
        '                    MsgBox("Shipped Qty should be divided by Master Qty")
        '                    If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()
        '                    isValid = False
        '                End If

        '            End If
        '        End If

        '    End If

        '    Dim sfilter As String

        '    If isValid = True Then
        '        sfilter = "hdc_shpseq = '" + txtShpSeq.Text + "'"
        '        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = sfilter

        '        If rs_SHDTLCTN.Tables("RESULT").DefaultView.Count <= 0 Then
        '            'If CInt(txtCtnEnd.Text) - CInt(txtCtnStr.Text) + 1 <> CInt(txtTtlCtnD.Text) Then
        '            If CLng(txtCtnEnd.Text) - CLng(txtCtnStr.Text) + 1 <> CLng(txtTtlCtnD.Text) Then
        '                btcSHM00001.SelectedIndex = 1
        '                MsgBox("Total Carton does not match with carton sequence!")
        '                If txtCtnStr.Enabled And txtCtnStr.Visible Then txtCtnStr.Focus()
        '                isValid = False
        '            End If
        '        End If
        '        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = ""
        '    End If
        'End If


        'If isValid = True Then
        '    isValid = SHCartonSC()
        'End If


        'If isValid = True Then
        '    check_ShippingDetail = True
        'Else
        '    check_ShippingDetail = False
        'End If

    End Function


    Private Function check_ShippingDetail2() As Boolean
        Dim dtl_counter As Integer
        Dim Err As String
        Dim isValid As Boolean
        Dim tmp_vol As Decimal
        Dim tmp_ttlcmb As Decimal
        Dim tmp_ttlgw As Decimal
        Dim tmp_ttlnw As Decimal
        Dim tmp_ttlgw_act As Decimal
        Dim tmp_ttlnw_act As Decimal

        Dim tmp_seq As Integer
        Dim tmp_ctnftr As Integer

        Dim tmp_ctnscheck As DataSet
        Dim tmp_msg As String
        Dim tmp_type As String
        '''change to defaultview checking



        If GetCtrlValue(cboShpSts) = "REL" Or GetCtrlValue(cboShpSts) = "CLO" Then
            check_ShippingDetail2 = True
            Exit Function
            '29
        End If


        isValid = True
        check_ShippingDetail2 = True
        If rs_SHIPGDTL Is Nothing Then
            Exit Function
        End If
        'Dim rs_SHPCKDIM As DataSet




        dtl_counter = 0
        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If rs_SHIPGDTL.Tables("RESULT").Rows(i)("Del") <> "Y" Then
                dtl_counter = dtl_counter + 1
            End If
        Next

        If dtl_counter = 0 Then
            check_ShippingDetail2 = False
            btcSHM00001.SelectedIndex = 1
            MsgBox("The shipment should at least has one detail!")
            Exit Function
        End If


    End Function



    Private Function check_ShippingDetail_COV() As Boolean
        check_ShippingDetail_COV = True

        gspStr = "sp_list_shipgdtl_cov  '" & cboCoCde.Text.Trim & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL_cov_list, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading cmdAddClick sp_select_SHIPGDTL :" & rtnStr)
            Exit Function
        End If

        '''change to defaultview checking

        If rs_SHIPGDTL_cov_list Is Nothing Then
            Exit Function
        End If


        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If rs_SHIPGDTL.Tables("RESULT").Rows(i)("COV") = "Y" Then
                For j As Integer = 0 To rs_SHIPGDTL_cov_list.Tables("RESULT").Rows.Count - 1

                    If rs_SHIPGDTL.Tables("RESULT").Rows(i)("HID_CTRCFS") = rs_SHIPGDTL_cov_list.Tables("RESULT").Rows(j)("HID_CTRCFS") Then
                        MsgBox("The container already exists in COV, please export it before import to COV again:" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("HID_CTRCFS") & " please exit/clear    'without save' !")
                        check_ShippingDetail_COV = False
                    End If

                    'If rs_SHIPGDTL.Tables("RESULT").Rows(i)("HID_SHPNO") = rs_SHIPGDTL_cov_list.Tables("RESULT").Rows(j)("HID_SHPNO") Then
                    '    MsgBox("The shipment already exists in COV, please export it before import to COV again:" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("HID_SHPNO") & " please exit/clear    'without save' !")
                    '    check_ShippingDetail_COV = False
                    'End If

                Next
            End If
        Next

    End Function


    'Private Function check_ShippingDetail() As Boolean

    '    Dim Err As String
    '    Dim isValid As Boolean
    '    Dim tmp_vol As Decimal
    '    Dim tmp_ttlcmb As Decimal
    '    Dim tmp_seq As Integer
    '    Dim tmp_ctnftr As Integer

    '    '''change to defaultview checking

    '    isValid = True
    '    check_ShippingDetail = True

    '    For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
    '        If rs_SHIPGDTL.Tables("RESULT").Rows(i)("Del") <> "Y" Then

    '            tmp_seq = rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq")

    '            If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctrsiz") = "" Then
    '                MsgBox("Container Size should not be empty!")
    '                display_Detail(tmp_seq)
    '                check_ShippingDetail = False
    '                btcSHM00001.SelectedIndex = 1
    '                Exit Function
    '            ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno") = "" And rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno") = "" Then
    '                MsgBox("Job# or SC# should not be empty!")
    '                display_Detail(tmp_seq)
    '                check_ShippingDetail = False
    '                btcSHM00001.SelectedIndex = 1
    '                Exit Function
    '            ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_itmno") = "" Then
    '                MsgBox("Item#  should not be empty!")
    '                display_Detail(tmp_seq)
    '                check_ShippingDetail = False
    '                btcSHM00001.SelectedIndex = 1
    '                Exit Function
    '            ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_colpck") = "" Then
    '                MsgBox("Color and Packing should not be empty!")
    '                display_Detail(tmp_seq)
    '                check_ShippingDetail = False
    '                btcSHM00001.SelectedIndex = 1
    '                Exit Function
    '            ElseIf Not Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpqty")) > 0 Then
    '                MsgBox("Shipped Qty should  be > 0 ")
    '                display_Detail(tmp_seq)
    '                check_ShippingDetail = False
    '                btcSHM00001.SelectedIndex = 1
    '                Exit Function
    '            ElseIf Not Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnstr")) > 0 Then
    '                MsgBox("CTN:  Fm should  be > 0 ")
    '                txtCtnStr.Enabled = True
    '                txtCtnEnd.Enabled = True

    '                display_Detail(tmp_seq)
    '                check_ShippingDetail = False
    '                btcSHM00001.SelectedIndex = 1
    '                Exit Function
    '            ElseIf Not Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnend")) > 0 Then
    '                MsgBox("CTN:  To should  be > 0 ")
    '                txtCtnStr.Enabled = True
    '                txtCtnEnd.Enabled = True

    '                display_Detail(tmp_seq)
    '                check_ShippingDetail = False
    '                btcSHM00001.SelectedIndex = 1
    '                Exit Function
    '            End If


    '            If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnftr")) Then
    '                tmp_ctnftr = 1
    '            Else
    '                tmp_ctnftr = Val(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ctnftr"))
    '            End If
    '            tmp_vol = rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_vol")
    '            'Val(txtVol.Text)

    '            If tmp_ctnftr = 1 Then
    '                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
    '            ElseIf tmp_ctnftr = 2 Then
    '                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum <= 4 "
    '            ElseIf tmp_ctnftr = 3 Then
    '                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum >= 7 and hpd_pdnum<=12 "
    '            ElseIf tmp_ctnftr = 4 Then
    '                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum >=13 and hpd_pdnum <=20 "
    '            ElseIf tmp_ctnftr = 5 Then
    '                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_shpseq") & " and hpd_pdnum >= 21 and hpd_pdnum <=30 "
    '            End If

    '            For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
    '                If Not (Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_l_cm")) = 0 And _
    '                                Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_w_cm")) = 0 And _
    '                                Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_h_cm")) = 0) Then


    '                    tmp_ttlcmb = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm") / 1000000
    '                    If tmp_ttlcmb < tmp_vol * 0.9 Or tmp_ttlcmb > tmp_vol * 1.1 Then
    '                        MsgBox(" 'Actual/Modified CBM'  vs 'CBM in SC Col & Pck' should not be over 10% difference.")
    '                        tmp_seq = rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_shpseq")
    '                        display_Detail(tmp_seq)
    '                        check_ShippingDetail = False
    '                        Exit Function
    '                    End If
    '                End If


    '            Next
    '        End If
    '    Next




    '    ''*** Folder1

    '    'If chkDel.Checked = False Then

    '    '    '--------------------------------------------------------------------------------------
    '    '    'Lester Wu , check CTR # and Seal # Mandatory if "CFS" is not selected
    '    '    If Me.optCtrSiz4.Checked = False And Trim(Me.txtCtrCfs.Text) = "" Then

    '    '        btcSHM00001.SelectedIndex = 1

    '    '        MsgBox("Please input CTR #!")
    '    '        If Me.txtCtrCfs.Enabled And Me.txtCtrCfs.Visible Then Me.txtCtrCfs.Focus()
    '    '        isValid = False
    '    '    ElseIf Me.optCtrSiz4.Checked = False And Trim(Me.txtSealNo.Text) = "" Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Please input Seal #!")
    '    '        If Me.txtSealNo.Enabled And Me.txtSealNo.Visible Then Me.txtSealNo.Focus()
    '    '        isValid = False
    '    '        'If txtOrdNo.Text = "" Then
    '    '    ElseIf txtOrdNo.Text = "" Then
    '    '        '--------------------------------------------------------------------------------------
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        If optSearch0.Checked = True Then
    '    '            MsgBox("Invalid job No.")
    '    '            If txtJobNo.Enabled And txtJobNo.Visible Then txtJobNo.Focus()
    '    '        Else
    '    '            MsgBox("Invalid SC No.")
    '    '            If txtOrdNo.Enabled And txtOrdNo.Visible Then txtOrdNo.Focus()
    '    '        End If
    '    '        isValid = False

    '    '    ElseIf cboItmNo.Enabled And cboItmNo.Text = "" Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Item No.")
    '    '        If cboItmNo.Enabled And cboItmNo.Visible Then cboItmNo.Focus()
    '    '        isValid = False

    '    '    ElseIf cboColPck.Enabled And cboColPck.Text = "" Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Color Packing")
    '    '        If cboColPck.Enabled And cboColPck.Visible Then cboColPck.Focus()
    '    '        isValid = False

    '    '    ElseIf txtShpQty.Text = "" Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Ship Qty")
    '    '        If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()
    '    '        isValid = False

    '    '    ElseIf txtShpQty.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Ship Qty")
    '    '        If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()
    '    '        isValid = False

    '    '    ElseIf txtCtnStr.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Carton No.")
    '    '        If cmdMore.Enabled And cmdMore.Visible Then cmdMore.Focus()
    '    '        isValid = False

    '    '    ElseIf txtCtnEnd.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Carton No.")
    '    '        If cmdMore.Enabled And cmdMore.Visible Then cmdMore.Focus()
    '    '        isValid = False

    '    '    ElseIf CDbl(txtCtnStr.Text) > CDbl(txtCtnEnd.Text) Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Start carton no. > End carton no.")
    '    '        If txtCtnStr.Enabled And txtCtnStr.Visible Then txtCtnStr.Focus()
    '    '        isValid = False


    '    '    ElseIf txtMtrdcm.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Carton Length")
    '    '        If txtMtrdcm.Enabled And txtMtrdcm.Visible Then txtMtrdcm.Focus()
    '    '        isValid = False

    '    '    ElseIf txtMtrwcm.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Carton Width")
    '    '        If txtMtrwcm.Enabled And txtMtrwcm.Visible Then txtMtrwcm.Focus()
    '    '        isValid = False

    '    '    ElseIf txtMtrhcm.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Carton Height")
    '    '        If txtMtrhcm.Enabled And txtMtrhcm.Visible Then txtMtrhcm.Focus()
    '    '        isValid = False

    '    '    ElseIf txtActVol.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Actual CBM")
    '    '        If txtMtrdcm.Enabled And txtMtrdcm.Visible Then txtMtrdcm.Focus()
    '    '        isValid = False

    '    '    ElseIf txtGrsWgt.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Gross Weight")
    '    '        If txtGrsWgt.Enabled And txtGrsWgt.Visible Then txtGrsWgt.Focus()
    '    '        isValid = False

    '    '    ElseIf txtNetWgt.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Net Weight")
    '    '        If txtNetWgt.Enabled And txtNetWgt.Visible Then txtNetWgt.Focus()
    '    '        isValid = False

    '    '    ElseIf txtTtlNetD.Text = 0 Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Invalid Net Weight")
    '    '        If txtNetWgt.Enabled And txtNetWgt.Visible Then txtNetWgt.Focus()
    '    '        isValid = False

    '    '    ElseIf CDbl(txtGrsWgt.Text) < CDbl(txtNetWgt.Text) Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Gross weight should not smaller than net weight!")
    '    '        If txtGrsWgt.Enabled And txtGrsWgt.Visible Then txtGrsWgt.Focus()
    '    '        isValid = False

    '    '    ElseIf Not MultiLineTextIsValid(txtItmShm.Text, 25) Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Item Ship Mark should be 25 chars per line")
    '    '        If txtItmShm.Enabled And txtItmShm.Visible Then txtItmShm.Focus()
    '    '        isValid = False

    '    '    ElseIf Not MultiLineTextIsValid(txtCmpRmk.Text, 50) Then
    '    '        btcSHM00001.SelectedIndex = 1
    '    '        MsgBox("Component Remark should be 50 chars per line!")
    '    '        If txtCmpRmk.Enabled And txtCmpRmk.Visible Then txtCmpRmk.Focus()
    '    '        isValid = False

    '    '    End If

    '    '    If isValid = True Then
    '    '        If Me.chkPC.Checked = True Then
    '    '            If IsNumeric(Me.txtPC.Text) And IsNumeric(Me.txtShpQty.Text) Then
    '    '                If CLng(Me.txtPC.Text) <> CLng(Me.txtShpQty.Text) * CLng(Me.txtConFtr.Text) Then
    '    '                    btcSHM00001.SelectedIndex = 1
    '    '                    MsgBox("Ship Qty not match with Qty in PC!")
    '    '                    If txtPC.Enabled And txtPC.Visible Then txtPC.Focus()
    '    '                    isValid = False
    '    '                ElseIf CDbl(txtShpQty.Text) Mod CInt(txtMtrCtn.Text) <> 0 Then
    '    '                    btcSHM00001.SelectedIndex = 1
    '    '                    MsgBox("Shipped Qty should be divided by Master Qty")
    '    '                    If txtShpQty.Enabled And txtShpQty.Visible Then txtShpQty.Focus()
    '    '                    isValid = False
    '    '                End If

    '    '            End If
    '    '        End If

    '    '    End If

    '    '    Dim sfilter As String

    '    '    If isValid = True Then
    '    '        sfilter = "hdc_shpseq = '" + txtShpSeq.Text + "'"
    '    '        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = sfilter

    '    '        If rs_SHDTLCTN.Tables("RESULT").DefaultView.Count <= 0 Then
    '    '            'If CInt(txtCtnEnd.Text) - CInt(txtCtnStr.Text) + 1 <> CInt(txtTtlCtnD.Text) Then
    '    '            If CLng(txtCtnEnd.Text) - CLng(txtCtnStr.Text) + 1 <> CLng(txtTtlCtnD.Text) Then
    '    '                btcSHM00001.SelectedIndex = 1
    '    '                MsgBox("Total Carton does not match with carton sequence!")
    '    '                If txtCtnStr.Enabled And txtCtnStr.Visible Then txtCtnStr.Focus()
    '    '                isValid = False
    '    '            End If
    '    '        End If
    '    '        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = ""
    '    '    End If
    '    'End If


    '    'If isValid = True Then
    '    '    isValid = SHCartonSC()
    '    'End If


    '    'If isValid = True Then
    '    '    check_ShippingDetail = True
    '    'Else
    '    '    check_ShippingDetail = False
    '    'End If

    'End Function


    Public Function MultiLineTextIsValid(ByVal S As String, ByVal maxChar As Integer) As Boolean

        MultiLineTextIsValid = True

        Dim v   '*** Variant
        Dim temp   '*** temp variable

        v = Split(S, Chr(10))   '*** split string by "vbNewLine"

        For Each temp In v
            If Len(temp) > maxChar Then   '*** if length of each string > maxChar

                MultiLineTextIsValid = False   '***return false
                'temp()
            End If
        Next

    End Function


    Function SHCartonSC() As Boolean
        Dim rs As DataSet

        Dim S As String

        If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            SHCartonSC = True
            Exit Function
        End If

        If rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Then
            SHCartonSC = True
            Exit Function
        End If

        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ordno") = "" Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ordseq") = 0 Then
            SHCartonSC = True
            Exit Function
        End If



        rs_SCDTLCTN = Nothing

        ''***************************************************
        ''*** Get SC Carton record     **********************
        ''***************************************************

        ''Marco Added for fixing global company code problem at 20040108
        'gsCompany = Trim(cboCoCde.Text)
        'Call Update_gs_Value(gsCompany)

        'gspStr = "sp_list_SCDTLCTN_SHM00001 '" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
        'rtnLong = execute_SQLStatement(gspStr, rs_SHDTLCTN_shcartonsc, rtnStr)

        'If rtnLong <> RC_SUCCESS Then
        '    MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
        '    Exit Function
        'End If

        ''If 1 = 1 Then
        ''End If

        'If rs_SHDTLCTN_shcartonsc.Tables("RESULT").Rows.Count <= 0 Then

        '    'Marco Added for fixing global company code problem at 20040108
        '    gsCompany = Trim(cboCoCde.Text)
        '    Call Update_gs_Value(gsCompany)

        '    gspStr = "sp_list_SCDTLCTN_SHM00001_2 '" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
        '    rtnLong = execute_SQLStatement(gspStr, rs_SHDTLCTN_shcartonsc, rtnStr)

        '    If rtnLong <> RC_SUCCESS Then
        '        MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
        '        Exit Function
        '    End If
        'End If

        ''***************************************************
        ''***** Get Shipping Detail record End  *************
        ''***************************************************

        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)


        '***************************************************
        '*** Get SC Carton record     **********************
        '***************************************************
        gspStr = "sp_list_SCDTLCTN_SHM00001  '" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SYUSRRIGHT_Check :" & rtnStr)
            Exit Function
        End If
        rs_SCDTLCTN = rs.Copy

        If rs.Tables("RESULT").Rows.Count <= 0 Then
            gspStr = "sp_list_SCDTLCTN_SHM00001_2  '" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
            rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_SYUSRRIGHT_Check :" & rtnStr)
                Exit Function
            End If

            rs_SCDTLCTN = rs.Copy

        End If

        Dim Flag_inRange As Boolean
        Dim Flag_EachRow As Boolean

        Dim msg As String

        Flag_EachRow = False
        Flag_inRange = False
        msg = ""

        If rs_SCDTLCTN.Tables("RESULT").Rows.Count <= 0 Then
            Flag_inRange = True
            SHCartonSC = True
            Exit Function
        End If

        For INDEX3 As Integer = 0 To rs_SCDTLCTN.Tables("RESULT").Rows.Count - 1
            If rs_SCDTLCTN.Tables("RESULT").Rows(INDEX3).Item("sdc_from") <= CLng(txtCtnStr.Text) And _
                rs_SCDTLCTN.Tables("RESULT").Rows(INDEX3).Item("sdc_to") >= CLng(txtCtnEnd.Text) Then
                Flag_inRange = True
            End If
        Next


        Flag_EachRow = Flag_inRange

        If Not Flag_EachRow Then
            msg = "Carton Seq. don't match with SC Carton Seq. OK?" + Chr(13) + "========================================" + Chr(13) + Chr(13)
            For INDEX3 As Integer = 0 To rs_SCDTLCTN.Tables("RESULT").Rows.Count - 1

                For index7 As Integer = 1 To 20 - Len(Str(rs_SCDTLCTN.Tables("RESULT").Rows(INDEX3).Item("sdc_from")))
                    msg = msg + " "
                Next
                msg = msg _
                   + Str(rs_SCDTLCTN.Tables("RESULT").Rows(INDEX3).Item("sdc_from")) _
                + "                   to "

                For index7 As Integer = 1 To 20 - Len(Str(rs_SCDTLCTN.Tables("RESULT").Rows(INDEX3).Item("sdc_to")))
                    msg = msg + " "
                Next

                msg = msg _
                + Str(rs_SCDTLCTN.Tables("RESULT").Rows(INDEX3).Item("sdc_to")) _
                + Chr(13)

            Next
        End If

        If Not Flag_EachRow Then
            If MsgBox(msg, vbYesNo, "System Message") = vbYes Then
                SHCartonSC = True
            Else
                SHCartonSC = False
            End If
        Else
            SHCartonSC = True
        End If
    End Function

    Private Sub cboCus1No_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboCus1No.KeyPress
        If e.KeyChar = Chr(13) Then

            ' gbPri.Enabled = True
            'btcSHM00001.TabPages(1).Enabled = True
            'btcSHM00001.TabPages(5).Enabled = True
            'txtVes.Focus()
            If valid_cbocus1no() = True Then
                Call cboCus1NoClick()
                Recordstatus = True

                gbPri.Enabled = True
                btcSHM00001.TabPages(1).Enabled = True
                btcSHM00001.TabPages(5).Enabled = True
                GroupBox1.Enabled = True
                GroupBox3.Enabled = True
                GroupBox12.Enabled = True

                '20150205 MC
                CmdCOV.Enabled = True
                'CmdCOV.Enabled = False

                cboCus1No.Enabled = False

                txtArrDat.Text = ""
                'txtArrDat.Text = Format(Today.Date, "MM/dd/yyyy")
            Else
                gbPri.Enabled = False
                btcSHM00001.TabPages(1).Enabled = False
                btcSHM00001.TabPages(5).Enabled = False
                GroupBox1.Enabled = False
                GroupBox3.Enabled = False
                GroupBox12.Enabled = False
                CmdCOV.Enabled = False
            End If

        End If
        txtVes.Focus()

    End Sub


    Private Sub cboCus1no_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboCus1No.KeyUp
        Call auto_search_combo(cboCus1No, e.KeyCode)

    End Sub


    Private Sub cboCus1No_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboCus1No.SelectedIndexChanged
        'Call cboCus1NoClick()
        ' Recordstatus = True

    End Sub

    Private Sub cboCus1NoClick()

        If cboCus1No.Text <> "" And Validate() = True Then
            cboCus2No.Items.Clear()
            cboCus2No.Text = ""

            gspStr = "sp_list_CUBASINF_SHM00001 '" & cboCoCde.Text & "','" & "P" & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_CUBASINF_P, rtnStr)
            gspStr = ""


            If InStr(cboCus1No.Text, " - ") - 1 >= 0 Then
                dr = rs_CUBASINF_P.Tables("RESULT").Select("cbi_cusno = " & "'" & Microsoft.VisualBasic.Left(cboCus1No.Text, InStr(cboCus1No.Text, " - ") - 1) & "'")
            End If
            txtBilEnt.Text = dr(0)("cbi_cusnam")
            cboUntSelD.Text = dr(0)("cpi_curcde")
            cboUntAmtD.Text = dr(0)("cpi_curcde")
            cboUntAmt.Text = dr(0)("cpi_curcde")

            '*** Secondary Customer for Primary Customer
            '' Cursor = Cursors.WaitCursor
            gsCompany = Trim(cboCoCde.Text)
            Call Update_gs_Value(gsCompany)


            gspStr = "sp_list_CUBASINF_SHM00001_1 '" & cboCoCde.Text & "','" & "S" & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_CUBASINF_S, rtnStr)
            gspStr = ""

            '' Cursor = Cursors.Default
            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading cboCus1NoClick sp_select_CUBASINF_Q 2 :" & rtnStr)
                '' Cursor = Cursors.Default
                Exit Sub
            End If

            If rs_CUBASINF_S.Tables("RESULT").Rows.Count = 0 Then       '***  Not Found Record
                cboCus2No.Enabled = False
            Else
                '''Call pckinvshpmark_select()

                'gspStr = "sp_select_SHRMKVAL '','P','" & Split(cboCus1No.Text.Trim, " - ")(0) & "',''  "
                'rtnLong = execute_SQLStatement(gspStr, rs_SHRMKVAL, rtnStr)
                'If rtnLong <> RC_SUCCESS Then
                'Me.Cursor = Windows.Forms.Cursors.Default
                ' MsgBox("Error on loading   sp_select_SHRMKVAL   : " & rtnStr)
                ' Exit Sub
                'Else
                '   For i As Integer = 0 To rs_SHRMKVAL.Tables("RESULT").Columns.Count - 1
                'rs_SHRMKVAL.Tables("RESULT").Columns(i).ReadOnly = False
                '   Next
                'rs_SHRMKVAL_ori = rs_SHRMKVAL.Copy()

                '''
                '             cboPckListFooter.Items.Clear()
                '             cboPckListFooter.Items.Add("")
                '            rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'packlist_footer'  and hrt_pricustno = '" & Split(cboCus1No.Text.Trim, " - ")(0) & "'"
                '             For index1 As Integer = 0 To rs_SHRMKVAL.Tables("RESULT").DefaultView.Count - 1
                '           cboPckListFooter.Items.Add(rs_SHRMKVAL.Tables("RESULT").DefaultView(index1)("hrt_rmkdsc"))
                '            Next

                '           txtBilRmk.Text = ""
                '           rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'packlist_footer'  and hrt_flgdef ='Y' and hrt_pricustno = '" & Split(cboCus1No.Text.Trim, " - ")(0) & "'"
                '           If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 Then
                'txtBilRmk.Text = rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval")
                '       End If

                'End If




                cboCus2No.Enabled = True
                cboCus2No.Items.Clear()
                cboCus2No.Text = ""

                'dr = rs_CUBASINF_S.Tables("RESULT").Select("csc_seccus >= 60000")
                dr = rs_CUBASINF_S.Tables("RESULT").Select("csc_prmcus = '" + Split(cboCus1No.Text, " - ")(0) + "'")


                If Not dr Is Nothing Then
                    'possible bug ?
                    'If dr.Length > 1 Then
                    If dr.Length > 0 Then
                        For index As Integer = 0 To dr.Length - 1
                            cboCus2No.Items.Add(dr(index)("csc_seccus").ToString + " - " + dr(index)("cbi_cussna").ToString)
                            cboCus2No_dtl.Items.Add(dr(index)("csc_seccus").ToString + " - " + dr(index)("cbi_cussna").ToString)

                        Next
                    End If
                End If
            End If
        End If

    End Sub

    Private Sub cboBilAdr_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboBilAdr.Click

        'If rs_CUCNTINF.Tables("RESULT") Is Nothing Then Exit Sub
        'If rs_CUCNTINF.Tables("RESULT").Rows.Count <= 0 Then Exit Sub

        'txtBilAdr.Text = cboBilAdr.Text

        'dr = rs_CUCNTINF.Tables("RESULT").Select("cci_cntadr = '" + Replace(txtBilAdr.Text, "'", "''") + "'")

        'If Not dr Is Nothing Then
        '    If dr.Length > 0 Then

        '        txtBilStt.Text = dr(0)("cci_cntstt")
        '        Call display_combo(dr(0)("cci_cntcty"), cboBilCty)
        '        txtBilZip.Text = dr(0)("cci_cntpst")
        '    Else
        '        txtBilStt.Text = ""
        '        cboBilCty.SelectedIndex = 0
        '        txtBilZip.Text = ""

        '    End If
        'Else
        '    MsgBox("There is no function, please contact EDP or System Administrator.")
        '    Exit Sub
        'End If

        ''rs_CUCNTINF.MoveFirst()
        ''rs_CUCNTINF.Find("cci_cntadr = '" + Replace(txtBilAdr.Text, "'", "''") + "'")
        ''If rs_CUCNTINF.EOF Then
        ''    txtBilStt.Text = ""
        ''    cboBilCty.ListIndex = 0
        ''    txtBilZip.Text = ""
        ''Else
        ''    txtBilStt.Text = rs_CUCNTINF("cci_cntstt")
        ''    Call Display_Combo(cboBilCty, rs_CUCNTINF("cci_cntcty"))
        ''    txtBilZip.Text = rs_CUCNTINF("cci_cntpst")
        ''End If

    End Sub

    Private Sub cboBilAdr_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboBilAdr.GotFocus

        If cboCus1No.Text = "" Then Exit Sub

        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_list_CUCNTINF_SHM00001 '" & cboCoCde.Text & "','" & Split(cboCus1No.Text, " - ")(0) & "','" & "B" & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_CUCNTINF, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading   cboBilAdr_GotFocus :" & rtnStr)
            Exit Sub
        End If

        cboBilAdr.Items.Clear()


        If rs_CUCNTINF.Tables("RESULT").Rows.Count > 0 Then
            For index As Integer = 0 To rs_CUCNTINF.Tables("RESULT").Rows.Count - 1
                cboBilAdr.Items.Add(rs_CUCNTINF.Tables("RESULT").Rows(index)("cci_cntadr"))
            Next
        End If

    End Sub

    Private Sub cboBilAdr_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboBilAdr.KeyUp
        If cboBilAdr.Text.Length > 0 Then
            Call auto_search_combo(cboBilAdr, e.KeyCode)
        End If

    End Sub

    Private Sub cboBilAdr_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboBilAdr.SelectedIndexChanged

        If rs_CUCNTINF.Tables("RESULT") Is Nothing Then Exit Sub
        If rs_CUCNTINF.Tables("RESULT").Rows.Count <= 0 Then Exit Sub

        txtBilAdr.Text = cboBilAdr.Text

        dr = rs_CUCNTINF.Tables("RESULT").Select("cci_cntadr = '" + Replace(txtBilAdr.Text, "'", "''") + "'")

        If Not dr Is Nothing Then
            If dr.Length > 0 Then

                txtBilStt.Text = dr(0)("cci_cntstt")
                Call display_combo(dr(0)("cci_cntcty"), cboBilCty)
                txtBilZip.Text = dr(0)("cci_cntpst")
            Else
                txtBilStt.Text = ""
                cboBilCty.SelectedIndex = 0
                txtBilZip.Text = ""

            End If
        Else
            MsgBox("There is no function, please contact EDP or System Administrator.")
            Exit Sub
        End If

        'rs_CUCNTINF.MoveFirst()
        'rs_CUCNTINF.Find("cci_cntadr = '" + Replace(txtBilAdr.Text, "'", "''") + "'")
        'If rs_CUCNTINF.EOF Then
        '    txtBilStt.Text = ""
        '    cboBilCty.ListIndex = 0
        '    txtBilZip.Text = ""
        'Else
        '    txtBilStt.Text = rs_CUCNTINF("cci_cntstt")
        '    Call Display_Combo(cboBilCty, rs_CUCNTINF("cci_cntcty"))
        '    txtBilZip.Text = rs_CUCNTINF("cci_cntpst")
        'End If

    End Sub

    Private Sub cboCoCde_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboCoCde.Click
        Call cboCoCdeClick()

    End Sub

    Private Sub cboCoCde_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboCoCde.KeyPress

        If e.KeyChar = Chr(13) Then
            txtShpNo.Focus()
        End If

    End Sub

    Private Sub cboCoCde_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboCoCde.KeyUp
        Call auto_search_combo(cboCoCde, e.KeyCode)
        Dim orgPos As Integer
        orgPos = cboCoCde.SelectedIndex
        If orgPos = -1 Then
            orgPos = 0
        End If
        cboCoCde.SelectedIndex = orgPos
        txtCoNam.Text = ChangeCompany(cboCoCde.SelectedItem, Me.Name)

    End Sub

    Private Sub cboCoCde_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboCoCde.SelectedIndexChanged
        txtCoNam.Text = ChangeCompany(cboCoCde.Text, Me.Name)


        'gspStr = "sp_select_CUBASINF_P '" & cboCoCde.Text & "','Primary'"
        'Me.Cursor = Windows.Forms.Cursors.WaitCursor
        'rtnLong = execute_SQLStatement(gspStr, rs_CUBASINF_P, rtnStr)
        'Me.Cursor = Windows.Forms.Cursors.Default
        'If rtnLong <> RC_SUCCESS Then
        '    MsgBox("Error on loading SHM00001  sp_select_CUBASINF_P : " & rtnStr)
        '    Exit Sub
        'End If

        'If rs_CUBASINF_P.Tables("RESULT").Rows.Count > 0 Then
        '    cboCus1No.Items.Clear()
        '    cboCus1No.Text = ""


        '    dr = rs_CUBASINF_P.Tables("RESULT").Select("cbi_cusno >= '50000'")


        '    If Not dr Is Nothing Then
        '        If dr.Length > 0 Then
        '            For index As Integer = 0 To dr.Length - 1
        '                cboCus1No.Items.Add(dr(index)("cbi_cusno") + " - " + dr(index)("cbi_cussna"))
        '            Next index
        '        End If
        '    End If
        'Else
        '    MsgBox("There is no function, please contact EDP or System Administrator.")
        '    Exit Sub
        'End If

    End Sub

    Private Sub cboCoCdeClick()
        txtCoNam.Text = ChangeCompany(cboCoCde.Text, Me.Name)
    End Sub

    Private Sub chkApprove_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkApprove.CheckedChanged

    End Sub

    Private Sub cboBilCty_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboBilCty.KeyUp
        Call auto_search_combo(cboBilCty, e.KeyCode)

    End Sub

    Private Sub cboBilCty_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboBilCty.SelectedIndexChanged

    End Sub

    Private Sub cmdPickDate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdPickDate.Click

        If GetCtrlValue(cboShpSts) = "REL" Or GetCtrlValue(cboShpSts) = "CLO" Then Exit Sub

        If Trim(txtSlnOnb.Text) = "" Then
            '            mvwSlnOnb.Value = Format(Today.Date, "MM/dd/yyyy")
            mvwSlnOnb.SetDate(Format(Today.Date, "MM/dd/yyyy"))
        Else
            If IsDate(txtSlnOnb.Text.Trim) Then
                mvwSlnOnb.SetDate(txtSlnOnb.Text)
            End If
            '            mvwSlnOnb.Value = txtSlnOnb.Text
        End If

        If mvwSlnOnb.Visible = False Then
            mvwSlnOnb.BringToFront()
            mvwSlnOnb.Visible = True
        Else
            mvwSlnOnb.Visible = False
            mvwSlnOnb.SendToBack()


        End If



    End Sub

    Private Function GetCtrlValue(ByVal Ctrl As Control) As String
        If TypeOf Ctrl Is ComboBox Then
            If Ctrl.Text <> "" Then
                If UBound(Split(Ctrl.Text, " - ")) > 0 Then
                    GetCtrlValue = Split(Ctrl.Text, " - ")(0)
                Else
                    GetCtrlValue = Ctrl.Text
                End If
            Else
                GetCtrlValue = ""
            End If
        End If
    End Function

    Private Sub mvwSlnOnb_DateChanged(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DateRangeEventArgs) Handles mvwSlnOnb.DateChanged
        cmdPickDate_a.Focus()

        '        txtArrDat.Focus()

    End Sub

    Private Sub mvwSlnOnb_DateSelected(ByVal sender As Object, ByVal e As System.Windows.Forms.DateRangeEventArgs) Handles mvwSlnOnb.DateSelected
        If txtIssDat.Text.Trim = "" Then
            txtIssDat.Text = Format(Date.Today, "MM/dd/yyyy").ToString
        End If

        If DateDiff("d", mvwSlnOnb.SelectionStart, txtIssDat.Text) > 15 Or DateDiff("d", mvwSlnOnb.SelectionStart, txtIssDat.Text) < -30 Then
            MsgBox("Invalid Sailing on/abt (ETD), valid date should within 15 days before issue date to 30 days after issue date.")
            If Add_flag = True Then
                txtSlnOnb.Text = ""
            Else
                If Not rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
                    If rs_SHIPGHDR.Tables("RESULT").Rows.Count > 0 Then
                        txtSlnOnb.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_slnonb")
                    End If
                End If
            End If
        Else
            txtSlnOnb.Text = mvwSlnOnb.SelectionStart

        End If

        mvwSlnOnb.Visible = False
        cmdPickDate_a.Focus()


        'txtArrDat.Focus()

    End Sub

    Private Sub chkDel_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkDel.CheckedChanged
        '''
    End Sub

    Private Sub chkDel_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkDel.Click
        'If not_to_delete_All() = True Then
        '    MsgBox("Cannot delete all details line records.")
        '    Exit Sub
        'End If


        If rs_SHIPGDTL.Tables("RESULT").Rows.Count >= 1 Then
            If chkDel.Checked = True Then
                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("COV") = "Y" Then
                    chkDel.Checked = False
                    MsgBox("COV rows could not delete!")
                    Exit Sub
                End If

                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = "Y"
                'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = "Y"

            Else
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = "N"
            End If
        End If
        'temp

        Recordstatus = True

        'Call DeleteClickCheck()

    End Sub

    Private Sub chkDel_ClientSizeChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkDel.ClientSizeChanged

    End Sub

    Private Sub cmdDelRow_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) 

        Dim newseq As Integer

        If btcSHM00001.SelectedIndex = 1 Then

            If rs_SHIPGDTL Is Nothing Then
                Exit Sub
            End If

            If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
                Exit Sub
            End If

            If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 0 Then
                Exit Sub
            End If

            If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 0 Then
                MsgBox("This Shipment has no detail record!")
                Exit Sub
            End If


            'If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 1 Then
            '    MsgBox("This Shipment  just has one detail line record only, cannot delete.")
            '    Exit Sub
            'End If

            If btcSHM00001.SelectedIndex <> 1 Then
                MsgBox("Please delete row in detail/summary page!")
                Exit Sub
            End If

            If rs_SHIPGDTL.Tables("RESULT").Rows.Count > sReadingIndexS Then
                If chkDel.Checked = False Then
                    chkDel.Checked = True
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = "Y"
                    '                Call Delete_itm_from_dtl(sReadingIndexS)
                Else
                    chkDel.Checked = False
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = "N"
                    '               Call UNDelete_itm_from_dtl(sReadingIndexS)
                End If
            End If
            Recordstatus = True
            '''Call DeleteClickCheck()
            newseq = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpseq")
            Call display_Detail(newseq)

        ElseIf btcSHM00001.SelectedIndex = 2 Then
            If Grid_Got_Focus = "dg_sainvhdr" Then
                If gi_dg_sainvhdr_row = -1 Then
                    Exit Sub
                End If
                rs_SHSMPINV.Tables("RESULT").Rows(gi_dg_sainvhdr_row)("hsi_creusr") = "~*UPD*~"
                If rs_SHSMPINV.Tables("RESULT").Rows(gi_dg_sainvhdr_row)("DEL") <> "Y" Then
                    rs_SHSMPINV.Tables("RESULT").Rows(gi_dg_sainvhdr_row)("DEL") = "Y"
                Else
                    rs_SHSMPINV.Tables("RESULT").Rows(gi_dg_sainvhdr_row)("DEL") = "N"
                End If

                display_SHSMPINV()

            End If
        ElseIf btcSHM00001.SelectedIndex = 3 Then

            If cboInvNoP.Items.Count > 0 Then
                If gi_grdDiscount_row = -1 Then
                    Exit Sub
                End If
                If Grid_Got_Focus = "grdDiscount" Then
                    rs_SHDISPRM_D.Tables("RESULT").Rows(gi_grdDiscount_row)("hdp_creusr") = "~*UPD*~"
                    If rs_SHDISPRM_D.Tables("RESULT").Rows(gi_grdDiscount_row)("DEL") <> "Y" Then
                        rs_SHDISPRM_D.Tables("RESULT").Rows(gi_grdDiscount_row)("DEL") = "Y"
                    Else
                        rs_SHDISPRM_D.Tables("RESULT").Rows(gi_grdDiscount_row)("DEL") = ""
                    End If
                    display_grdDiscount()

                ElseIf Grid_Got_Focus = "grdPremium" Then
                    If gi_grdPremium_row = -1 Then
                        Exit Sub
                    End If
                    'temp
                    rs_SHDISPRM_P.Tables("RESULT").Rows(gi_grdPremium_row)("hdp_creusr") = "~*UPD*~"
                    If rs_SHDISPRM_P.Tables("RESULT").Rows(gi_grdPremium_row)("DEL") <> "Y" Then
                        rs_SHDISPRM_P.Tables("RESULT").Rows(gi_grdPremium_row)("DEL") = "Y"
                    Else
                        rs_SHDISPRM_P.Tables("RESULT").Rows(gi_grdPremium_row)("DEL") = ""
                    End If
                    display_grdPremium()

                End If
            End If

            '''''
        ElseIf btcSHM00001.SelectedIndex = 5 Then
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*UPD*~"
            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("DEL") <> "Y" Then
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("DEL") = "Y"
            Else
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("DEL") = "N"
            End If

            display_grdShpSum()


        End If


        '''


    End Sub

    Private Sub display_grdShpSum()

        'type
        'A - All
        'F - Functional
        'P - Pricing
        'T - Sample and TO
        'S - Summary

        If rs_SHIPGDTL.Tables.Count = 0 Then
            Exit Sub
        End If

        reset_dis()
        Call reset_display()

        If rs_SHIPGDTL_display Is Nothing Then
            grdShpSum.DataSource = Nothing
            Exit Sub
        End If
        If rs_SHIPGDTL_display.Tables("RESULT") Is Nothing Then

            grdShpSum.DataSource = Nothing
            Exit Sub
        End If
        If rs_SHIPGDTL_display.Tables("RESULT").Rows.Count = 0 Then
            grdShpSum.DataSource = Nothing
            Exit Sub
        End If

        grdShpSum.DataSource = Nothing
        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.RowFilter = ""

        If Not flag_sorted Then
            rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_shpseq"
        Else



            Select Case col_sorted
                Case grdShpSum_hid_shpseq
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_shpseq"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_shpseq Desc"
                    End If

                Case grdShpSum_hid_invno
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_invno"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_invno Desc"
                    End If

                Case grdShpSum_hid_ctrcfs
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_ctrcfs"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_ctrcfs Desc"
                    End If

                Case grdShpSum_hid_cuspo
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_cuspo"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_cuspo Desc"
                    End If

                Case grdShpSum_hid_jobno
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_jobno"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_jobno Desc"
                    End If

                Case grdShpSum_hid_ordno
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_ordno"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_ordno Desc"
                    End If

                Case grdShpSum_hid_purord
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_purord"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_purord Desc"
                    End If

                Case grdShpSum_hid_itmno
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_itmno"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_itmno Desc"
                    End If

                Case grdShpSum_hid_cusitm
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_cusitm"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_cusitm Desc"
                    End If

                Case grdShpSum_hid_mannam
                    If direction = ListSortDirection_Ascending Then
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_mannam"
                    Else
                        rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = "hid_mannam Desc"
                    End If

            End Select

        End If


        'grdShpSum.DataSource = Nothing
        'grdShpSum.Refresh()
        'Exit Sub

        grdShpSum.DataSource = rs_SHIPGDTL_display.Tables("RESULT").DefaultView
        grdShpSum.Refresh()

        grdShpSum.RowHeadersWidth = 18
        grdShpSum.RowHeadersWidthSizeMode = DataGridViewRowHeadersWidthSizeMode.DisableResizing
        grdShpSum.ColumnHeadersHeight = 18
        grdShpSum.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        grdShpSum.AllowUserToResizeColumns = True
        grdShpSum.AllowUserToResizeRows = False
        grdShpSum.RowTemplate.Height = 18





        Dim i As Integer
        '        grdShpSum.Columns(grdShpSum_Del).Frozen = False

        i = 0 '0
        grdShpSum_Del = i
        grdShpSum.Columns(i).HeaderText = "Del"
        grdShpSum.Columns(i).Width = 430 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = False
        i = i + 1
        grdShpSum_COV = i
        grdShpSum.Columns(i).HeaderText = "COV (Export)"
        grdShpSum.Columns(i).Width = 430 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = False
        i = i + 1
        grdShpSum_hid_cocde = i
        grdShpSum.Columns(i).HeaderText = "Co. "
        grdShpSum.Columns(i).Width = 900 / 13
        grdShpSum.Columns(i).Visible = False
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_shpno = i
        grdShpSum.Columns(i).HeaderText = "Ship No."
        grdShpSum.Columns(i).Width = 900 / 13
        grdShpSum.Columns(i).Visible = False
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_shpseq = i
        grdShpSum.Columns(i).HeaderText = "Seq"
        grdShpSum.Columns(i).Width = 375 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_invno = i
        grdShpSum.Columns(i).HeaderText = "Invoice NO."
        grdShpSum.Columns(i).Width = 1200 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = False
        i = i + 1
        grdShpSum_hid_ctrsiz = i
        grdShpSum.Columns(i).HeaderText = "Ctr Size"
        grdShpSum.Columns(i).Width = 750 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = False
        i = i + 1
        grdShpSum_hid_ctrcfs = i
        grdShpSum.Columns(i).HeaderText = "Container No."
        grdShpSum.Columns(i).Width = 1250 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = False
        i = i + 1
        grdShpSum_hid_sealno = i
        grdShpSum.Columns(i).HeaderText = "Seal No."
        grdShpSum.Columns(i).Width = 1250 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = False
        i = i + 1
        grdShpSum_hid_cuspo = i
        grdShpSum.Columns(i).HeaderText = "Cus PO"
        grdShpSum.Columns(i).Width = 1100 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_jobno = i
        grdShpSum.Columns(i).HeaderText = "Job No."
        grdShpSum.Columns(i).Width = 900 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_ordno = i
        grdShpSum.Columns(i).HeaderText = "SC No."
        grdShpSum.Columns(i).Width = 990 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_purord = i
        grdShpSum.Columns(i).HeaderText = "PO No."
        grdShpSum.Columns(i).Width = 990 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_itmno = i
        grdShpSum.Columns(i).HeaderText = "Item No."
        grdShpSum.Columns(i).Width = 1240 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_cusitm = i
        grdShpSum.Columns(i).HeaderText = "Cus Item No."
        grdShpSum.Columns(i).Width = 900 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_colpck = i
        grdShpSum.Columns(i).HeaderText = "Col & Pack"
        grdShpSum.Columns(i).Width = 3900 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_cuscol = i
        grdShpSum.Columns(i).HeaderText = "Cus Color"
        grdShpSum.Columns(i).Width = 850 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_shpqty = i
        grdShpSum.Columns(i).HeaderText = "Ship Qty"
        grdShpSum.Columns(i).Width = 990 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_untcde = i
        grdShpSum.Columns(i).HeaderText = "UM"
        grdShpSum.Columns(i).Width = 370 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_ttlctn = i
        grdShpSum.Columns(i).HeaderText = "Ttl No of Ctr"
        grdShpSum.Columns(i).Width = 990 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_ctnstr = i
        grdShpSum.Columns(i).HeaderText = "Start Ctr"
        grdShpSum.Columns(i).Width = 720 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_ctnend = i
        grdShpSum.Columns(i).HeaderText = "End Ctr"
        grdShpSum.Columns(i).Width = 700 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_mtrdcm = i
        grdShpSum.Columns(i).HeaderText = "Dimension L X W X H"
        grdShpSum.Columns(i).Width = 2000 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_actvol = i
        grdShpSum.Columns(i).HeaderText = "Actual CBM"
        grdShpSum.Columns(i).Width = 1400 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_ttlvol = i
        grdShpSum.Columns(i).HeaderText = "Act Totla CBM"
        grdShpSum.Columns(i).Width = 1600 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_grswgt = i
        grdShpSum.Columns(i).HeaderText = "Act Gross Weight"
        grdShpSum.Columns(i).Width = 1410 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_ttlgrs = i
        grdShpSum.Columns(i).HeaderText = "Act Total Gross Weight"
        grdShpSum.Columns(i).Width = 1610 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_netwgt = i
        grdShpSum.Columns(i).HeaderText = "Act Net Weight"
        grdShpSum.Columns(i).Width = 1305 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_ttlnet = i
        grdShpSum.Columns(i).HeaderText = "Act Total Net Weight"
        grdShpSum.Columns(i).Width = 1605 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True

        i = i + 1
        grdShpSum_hid_paytrm = i
        grdShpSum.Columns(i).HeaderText = "Payment Terms"
        grdShpSum.Columns(i).Width = 2900 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum.Columns(i).Width = -1
        grdShpSum.Columns(i).Visible = False

        'grdShpSum_hid_paytrmdsc = i
        'grdShpSum.Columns(i).HeaderText = "Payment Terms Dsc"
        'grdShpSum.Columns(i).Width = 1005 / 13
        'grdShpSum.Columns(i).Visible = True
        'grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_prctrm = i
        grdShpSum.Columns(i).HeaderText = "Price Terms"
        grdShpSum.Columns(i).Width = 1005 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True


        i = i + 1
        grdShpSum_hid_selprc = i
        grdShpSum.Columns(i).HeaderText = "Unit Price"
        grdShpSum.Columns(i).Width = 900 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_untsel = i
        grdShpSum.Columns(i).HeaderText = "Currency"
        grdShpSum.Columns(i).Width = 900 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_untamt = i
        grdShpSum.Columns(i).HeaderText = "Amount Currency"
        grdShpSum.Columns(i).Width = 1400 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True
        i = i + 1
        grdShpSum_hid_ttlamt = i
        grdShpSum.Columns(i).HeaderText = "Total Amount"
        grdShpSum.Columns(i).Width = 1300 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True


        i = i + 1
        grdShpSum_hid_mannam = i
        grdShpSum.Columns(i).HeaderText = "Manufactorier Name"
        grdShpSum.Columns(i).Width = 1900 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True

        i = i + 1
        grdShpSum_hid_venno = i
        grdShpSum.Columns(i).HeaderText = "P.V."
        grdShpSum.Columns(i).Width = 1600 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True

        i = i + 1
        grdShpSum_hid_cusven = i
        grdShpSum.Columns(i).HeaderText = "C.V."
        grdShpSum.Columns(i).Width = 1600 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True

        i = i + 1
        grdShpSum_hid_pckrmk = i
        grdShpSum.Columns(i).HeaderText = "Packing Remark"
        grdShpSum.Columns(i).Width = 1900 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True

        i = i + 1
        grdShpSum.Columns(i).Width = -1
        grdShpSum.Columns(i).Visible = False
        i = i + 1
        grdShpSum.Columns(i).Width = -1
        grdShpSum.Columns(i).Visible = False
        i = i + 1
        grdShpSum.Columns(i).Width = -1
        grdShpSum.Columns(i).Visible = False

        i = i + 1
        grdShpSum_hid_custum = i
        grdShpSum.Columns(i).HeaderText = "Customer UM"
        grdShpSum.Columns(i).Width = 1300 / 13
        grdShpSum.Columns(i).Visible = True
        grdShpSum.Columns(i).ReadOnly = True


        ''))!reset readonly
        '        Call setStatus_grdShpSum(sMode)


        'Check Same Item
        For index_i As Integer = 0 To rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Count - 1
            For index_j As Integer = 0 To rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Count - 1
                If index_i <> index_j Then
                    If rs_SHIPGDTL_display.Tables("RESULT").DefaultView(index_i)("hid_shpseq").ToString() = rs_SHIPGDTL_display.Tables("RESULT").DefaultView(index_j)("hid_shpseq").ToString() Then
                        grdShpSum.Rows(index_i).DefaultCellStyle.BackColor = Color.LightBlue
                        grdShpSum.Rows(index_j).DefaultCellStyle.BackColor = Color.LightBlue
                        'MsgBox("Item:" & index_i + 1 & " Item:" & index_j + 1 & " are duplcated items, please choose either one only.")
                    End If
                End If
            Next
        Next

    End Sub



    Private Sub display_grdPremium()

        'type
        'A - All
        'F - Functional
        'P - Pricing
        'T - Sample and TO
        'S - Summary
        If rs_SHDISPRM_P Is Nothing Then
            Exit Sub
        End If

        If rs_SHDISPRM_P.Tables.Count = 0 Then
            Exit Sub
        End If

        For index7 As Integer = 0 To rs_SHDISPRM_P.Tables("RESULT").Columns.Count - 1
            '           rs_SHDISPRM_P.Tables("RESULT").Columns(index7).ReadOnly = False
        Next
        grdPremium.DataSource = rs_SHDISPRM_P.Tables("RESULT").DefaultView

        grdPremium.RowHeadersWidth = 18
        grdPremium.RowHeadersWidthSizeMode = DataGridViewRowHeadersWidthSizeMode.DisableResizing
        grdPremium.ColumnHeadersHeight = 18
        grdPremium.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        grdPremium.AllowUserToResizeColumns = True
        grdPremium.AllowUserToResizeRows = False
        grdPremium.RowTemplate.Height = 18

        grdPremium.DataSource = rs_SHDISPRM_P.Tables("RESULT").DefaultView



        Dim i As Integer
        '        grdPremium.Columns(grdPremium_Del).Frozen = False

        i = 0 '0
        grdPremium_DEL = i
        grdPremium.Columns(i).HeaderText = "DEL"
        grdPremium.Columns(i).Width = 400 / 13
        grdPremium.Columns(i).Visible = True
        grdPremium.Columns(i).ReadOnly = True
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable

        i = i + 1
        grdPremium_hdp_cde = i
        grdPremium.Columns(i).HeaderText = "Code"
        grdPremium.Columns(i).Width = 600 / 13
        grdPremium.Columns(i).Visible = True
        grdPremium.Columns(i).ReadOnly = True
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium_hdp_dsc = i
        grdPremium.Columns(i).HeaderText = "Description"
        grdPremium.Columns(i).Width = 4000 / 13
        grdPremium.Columns(i).Visible = True
        grdPremium.Columns(i).ReadOnly = True
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium_hdp_pctamt = i
        grdPremium.Columns(i).HeaderText = "Percentage/Amount"
        grdPremium.Columns(i).Width = 1800 / 13
        grdPremium.Columns(i).Visible = True
        grdPremium.Columns(i).ReadOnly = True
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium_hdp_pct = i
        grdPremium.Columns(i).HeaderText = "Percentage %"
        grdPremium.Columns(i).Width = 1300 / 13
        grdPremium.Columns(i).Visible = True
        '        grdPremium.Columns(i).ReadOnly = False
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium_hdp_amt = i
        grdPremium.Columns(i).HeaderText = "Amount"
        grdPremium.Columns(i).Width = 1300 / 13
        grdPremium.Columns(i).Visible = True
        grdPremium.Columns(i).ReadOnly = True
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        grdPremium.Columns(i).ReadOnly = True
        i = i + 1
        grdPremium_hdp_cocde = i
        grdPremium.Columns(i).HeaderText = ""
        grdPremium.Columns(i).Width = 900 / 13
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        grdPremium.Columns(i).ReadOnly = True
        i = i + 1
        grdPremium_hdp_shpno = i
        grdPremium.Columns(i).HeaderText = ""
        grdPremium.Columns(i).Width = 900 / 13
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).ReadOnly = True
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium_hdp_invno = i
        grdPremium.Columns(i).HeaderText = ""
        grdPremium.Columns(i).Width = 900 / 13
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).ReadOnly = True
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium_hdp_type = i
        grdPremium.Columns(i).HeaderText = ""
        grdPremium.Columns(i).Width = 900 / 13
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).ReadOnly = True
        grdPremium.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdPremium_hdp_seqno = i
        grdPremium.Columns(i).HeaderText = ""
        grdPremium.Columns(i).Width = 900 / 13
        grdPremium.Columns(i).Visible = False
        grdPremium.Columns(i).ReadOnly = True


        'i = i + 1
        'grdPremium_hdp_creusr = i
        'grdPremium.Columns(i).HeaderText = ""
        'grdPremium.Columns(i).Width = 900 / 13
        'grdPremium.Columns(i).Visible = False
        'grdPremium.Columns(i).ReadOnly = True


        ''))!reset readonly
        '        Call setStatus_grdPremium(sMode)

   
        For indexd As Integer = 0 To rs_SHDISPRM_P.Tables("RESULT").DefaultView.Count - 1
            If rs_SHDISPRM_P.Tables("RESULT").DefaultView(indexd)("hdp_pctamt") = "Amount" Then
     

                grdPremium.Rows(indexd).Cells(8).ReadOnly = True
                grdPremium.Rows(indexd).Cells(9).ReadOnly = False
            Else
       

                grdPremium.Rows(indexd).Cells(8).ReadOnly = False
                grdPremium.Rows(indexd).Cells(9).ReadOnly = True
            End If
        Next



    End Sub


    Private Sub display_grdDiscount()

        'type
        'A - All
        'F - Functional
        'P - Pricing
        'T - Sample and TO
        'S - Summary

        If rs_SHDISPRM_D Is Nothing Then
            Exit Sub
        End If


        If rs_SHDISPRM_D.Tables.Count = 0 Then
            Exit Sub
        End If

        For index7 As Integer = 0 To rs_SHDISPRM_D.Tables("RESULT").Columns.Count - 1
            '            rs_SHDISPRM_D.Tables("RESULT").Columns(index7).ReadOnly = False
        Next
        grdDiscount.DataSource = rs_SHDISPRM_D.Tables("RESULT").DefaultView


        grdDiscount.RowHeadersWidth = 18
        grdDiscount.RowHeadersWidthSizeMode = DataGridViewRowHeadersWidthSizeMode.DisableResizing
        grdDiscount.ColumnHeadersHeight = 18
        grdDiscount.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        grdDiscount.AllowUserToResizeColumns = True
        grdDiscount.AllowUserToResizeRows = False
        grdDiscount.RowTemplate.Height = 18

        grdDiscount.DataSource = rs_SHDISPRM_D.Tables("RESULT").DefaultView


        For indexd As Integer = 0 To rs_SHDISPRM_D.Tables("RESULT").DefaultView.Count - 1
            If rs_SHDISPRM_D.Tables("RESULT").DefaultView(indexd)(7) = "Amount" Then
                grdDiscount.Rows(indexd).Cells(8).ReadOnly = True
                grdDiscount.Rows(indexd).Cells(9).ReadOnly = False
            Else
                grdDiscount.Rows(indexd).Cells(8).ReadOnly = True
                grdDiscount.Rows(indexd).Cells(9).ReadOnly = False
            End If
        Next


        Dim i As Integer
        '        grdDiscount.Columns(grdDiscount_Del).Frozen = False

        i = 0 '0
        grdDiscount_DEL = i
        grdDiscount.Columns(i).HeaderText = "DEL"
        grdDiscount.Columns(i).Width = 400 / 13
        grdDiscount.Columns(i).Visible = True
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable

        i = i + 1
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable

        i = i + 1
        grdDiscount_hdp_cde = i
        grdDiscount.Columns(i).HeaderText = "Code"
        grdDiscount.Columns(i).Width = 600 / 13
        grdDiscount.Columns(i).Visible = True
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount_hdp_dsc = i
        grdDiscount.Columns(i).HeaderText = "Description"
        grdDiscount.Columns(i).Width = 4000 / 13
        grdDiscount.Columns(i).Visible = True
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount_hdp_pctamt = i
        grdDiscount.Columns(i).HeaderText = "Percentage/Amount"
        grdDiscount.Columns(i).Width = 1800 / 13
        grdDiscount.Columns(i).Visible = True
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount_hdp_pct = i
        grdDiscount.Columns(i).HeaderText = "Percentage %"
        grdDiscount.Columns(i).Width = 1300 / 13
        grdDiscount.Columns(i).Visible = True
        'grdDiscount.Columns(i).ReadOnly = False
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount_hdp_amt = i
        grdDiscount.Columns(i).HeaderText = "Amount"
        grdDiscount.Columns(i).Width = 1300 / 13
        grdDiscount.Columns(i).Visible = True
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount_hdp_cocde = i
        grdDiscount.Columns(i).HeaderText = ""
        grdDiscount.Columns(i).Width = 900 / 13
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount_hdp_shpno = i
        grdDiscount.Columns(i).HeaderText = ""
        grdDiscount.Columns(i).Width = 900 / 13
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount_hdp_invno = i
        grdDiscount.Columns(i).HeaderText = ""
        grdDiscount.Columns(i).Width = 900 / 13
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount_hdp_type = i
        grdDiscount.Columns(i).HeaderText = ""
        grdDiscount.Columns(i).Width = 900 / 13
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
        i = i + 1
        grdDiscount_hdp_seqno = i
        grdDiscount.Columns(i).HeaderText = ""
        grdDiscount.Columns(i).Width = 900 / 13
        grdDiscount.Columns(i).Visible = False
        grdDiscount.Columns(i).ReadOnly = True
        grdDiscount.Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable

        'i = i + 1
        'grdDiscount_hdp_creusr = i
        'grdDiscount.Columns(i).HeaderText = ""
        'grdDiscount.Columns(i).Width = 900 / 13
        'grdDiscount.Columns(i).Visible = False
        'grdDiscount.Columns(i).ReadOnly = True


        ''))!reset readonly
        '        Call setStatus_grdDiscount(sMode)




        For indexd As Integer = 0 To rs_SHDISPRM_D.Tables("RESULT").DefaultView.Count - 1
            If rs_SHDISPRM_D.Tables("RESULT").DefaultView(indexd)("hdp_pctamt") = "Amount" Then


                grdDiscount.Rows(indexd).Cells(8).ReadOnly = True
                grdDiscount.Rows(indexd).Cells(9).ReadOnly = False
            Else


                grdDiscount.Rows(indexd).Cells(8).ReadOnly = False
                grdDiscount.Rows(indexd).Cells(9).ReadOnly = True
            End If
        Next

    End Sub

    Private Sub grdDisPre_CellBeginEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellCancelEventArgs) Handles grdDiscount.CellBeginEdit, grdPremium.CellBeginEdit
        Recordstatus = True
        DisPreEditCellRow = sender.CurrentCell.RowIndex
        DisPreEditCellCol = sender.CurrentCell.ColumnIndex
    End Sub


    Private Sub grdDiscount_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdDiscount.CellClick
        '''list box set here
        If mmdSave.Enabled = False Then
            Exit Sub
        End If


        If grdDiscount.CurrentCell Is Nothing Then
            Exit Sub
        End If
        If grdDiscount.CurrentCell.ColumnIndex = dgvDisPre_Desc Then
            Exit Sub
        End If


        If Not e.RowIndex >= 0 Then
            Exit Sub
        End If


        If grdDiscount.SelectedCells.Count = 1 Then
            If grdDiscount.CurrentCell.ColumnIndex = dgvDisPre_Dele Then
                Recordstatus = True
                'rs_SHDISPRM_D.Tables("RESULT").Columns("del").ReadOnly = False
                rs_SHDISPRM_D.Tables("RESULT").Columns("hdp_creusr").ReadOnly = False
                If rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("del").ToString = " " Then
                    If rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_creusr").ToString <> "~*ADD*~" Then
                        rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_creusr") = "~*DEL*~"
                        rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("del") = "Y"
                    ElseIf rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_creusr").ToString = "~*ADD*~" Then
                        rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_creusr") = "~*NEW*~"
                        rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("del") = "Y"
                    End If
                Else
                    If rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_creusr").ToString = "~*NEW*~" Or rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_creusr").ToString = "~*ADD*~" Then
                        rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_creusr") = "~*ADD*~"
                    Else
                        rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_creusr") = "~*UPD*~"
                    End If
                    rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("del") = " "
                End If
            ElseIf grdDiscount.SelectedCells.Item(0).ColumnIndex = dgvDisPre_Code Then
                dropdownCombo(grdDiscount, "Discount")
            ElseIf grdDiscount.SelectedCells.Item(0).ColumnIndex = dgvDisPre_PctAmt Then
                If rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_pctamt") = "Percentage" Then
                    rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_pctamt") = "Amount"
                    rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_pct") = 0
                    rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_amt") = 0
                    '                    grdDiscount.Columns(8).ReadOnly = True

                    grdDiscount.Rows(grdDiscount.CurrentCell.RowIndex).Cells(8).ReadOnly = True
                    grdDiscount.Rows(grdDiscount.CurrentCell.RowIndex).Cells(9).ReadOnly = False

                    '                   grdDiscount.Columns(9).ReadOnly = False
                    grdDiscount.Refresh()
                Else
                    rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_pctamt") = "Percentage"
                    rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_pct") = 0
                    rs_SHDISPRM_D.Tables("RESULT").Rows(grdDiscount.CurrentCell.RowIndex)("hdp_amt") = 0
                    '      grdDiscount.Columns(8).ReadOnly = False
                    '     grdDiscount.Columns(9).ReadOnly = True

                    grdDiscount.Rows(grdDiscount.CurrentCell.RowIndex).Cells(8).ReadOnly = False
                    grdDiscount.Rows(grdDiscount.CurrentCell.RowIndex).Cells(9).ReadOnly = True


                    grdDiscount.Refresh()
                End If
            End If
        End If
        grdDiscount.Columns(6).ReadOnly = False
        grdDiscount.Refresh()

        Grid_Got_Focus = "grdDiscount"

        If Not grdDiscount.CurrentCell Is Nothing Then
            gi_grdDiscount_row = grdDiscount.CurrentCell.RowIndex
        Else
            gi_grdDiscount_row = -1
        End If


    End Sub


    Private Sub grdDiscount_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdDiscount.CellContentClick

    End Sub

    Private Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) 

    End Sub
    Private Function FindSC() As Boolean
        Dim S As String
        Dim i As Integer

        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_list_SCORDDTL_SHM00001_1 '" & cboCoCde.Text & "','" & txtOrdNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SCORDDTL, rtnStr)
        gspStr = ""

        '''''' Cursor = Cursors.Default

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading fillParameter sp_select_SCORDDTL_SHM00001_1C :" & rtnStr)
            Exit Function
        End If

        If rs_SCORDDTL.Tables("RESULT").Rows.Count > 0 Then
            FindSC = True
        Else
            FindSC = False
        End If

    End Function

    Private Sub ResetSCData()
        If rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub
        flg_DisplayShipDetailData = True

        txtOrdNo.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno") = ""

        txtJobNo.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_jobno") = ""


        txtCusPo.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuspo") = ""

        txtCusStyNo.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusstyno") = ""


        txtConsolNo.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_consolno") = ""

        chkrpl.Checked = False
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_replacement") = "N"




        cboItmNo.Items.Clear()


        'Call Display_Combo(cboItmNo, "")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno") = ""

        txtCusItm.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusitm") = ""

        cboColPck.Items.Clear()
        'Call Display_Combo(cboColPck, "")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colpck") = ""

        txtCusCol.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuscol") = ""

        txtColDsc.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_coldsc") = ""

        txtShpQty.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpqty") = 0

        txtCtnStr.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnstr") = 0

        txtCtnEnd.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnend") = 0

        txtTtlCtnD.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlctn") = 0

        txtUntCde.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = ""

        txtInrCtn.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrctn") = 0

        txtMtrCtn.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrctn") = 0

        txtVol.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_vol") = 0

        txtMtrdcm.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdcm") = 0

        txtMtrwcm.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwcm") = 0

        txtMtrhcm.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhcm") = 0

        txtActVol.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_actvol") = 0

        txtTtlVolD.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlvol") = 0

        txtGrsWgt.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_grswgt") = 0

        txtTtlGrsD.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlgrs") = 0

        txtNetWgt.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_netwgt") = 0

        txtTtlNetD.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlnet") = 0

        txtItmShm.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmshm") = ""

        txtCmpRmk.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cmprmk") = ""

        ' MichaelChiu 20170322
        ' txtManNam.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mannam") = ""

        cboManAdr.Items.Clear()

        ' MichaelChiu 20170322
        'txtManAdr.Text = ""
        ''txtaddinf.Text = ""

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_manadr") = ""

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untsel") = cboUntSelD.Text
        txtSelPrcD.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_selprc") = 0

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_UntAmt") = cboUntAmtD.Text
        txtTtlAmtD.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlamt") = 0


        txtInvNo.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_invno") = ""


        'hidden fields

        txtPrcTrm.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = 0

        txtPayTrm.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_paytrm") = 0

        txtOutQty.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("sod_outqty") = 0

        txtOrgQty.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_orgqty") = 0


        txtItmTyp.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmtyp") = ""

        txtItmDsc.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmdsc") = ""

        txtOrdSeq.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordseq") = 0

        txtColCde.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colcde") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alsitmno") = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alscolcde") = ""

        txtPurOrd.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purord") = ""

        txtPurSeq.Text = 0
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purseq") = 0

        txtVenNo.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_venno") = ""

        txtCusVen.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusven") = ""

        'Added by Mark Lau 20080611
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_custum") = ""
        txtCustUM.Text = ""

        flg_DisplayShipDetailData = False
    End Sub

    Private Sub SetStatusShipDetail()


        If rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Or GetCtrlValue(cboShpSts) = "REL" Or GetCtrlValue(cboShpSts) = "CLO" Then
            txtShpSeq.Enabled = False

            cboCtrSiz.Enabled = False


            'optCtrSiz0.Enabled = False
            'optCtrSiz1.Enabled = False
            'optCtrSiz2.Enabled = False
            'optCtrSiz3.Enabled = False
            'optCtrSiz4.Enabled = False

            '-------------------------
            'Lester Wu 2005-11-09 ----
            'txtCtrCfs.Enabled = True
            'txtSealNo.Enabled = True
            Call func_container_click()
            '-------------------------
            cboPckRmk.Enabled = False

            txtJobNo.Enabled = False

            txtOrdNo.Enabled = False

            txtOrdSeq.Enabled = False
            txtSelPrcD.Enabled = False


            txtCusPo.Enabled = False
            txtCusStyNo.Enabled = False
            txtCusItm.Enabled = False

            cboItmNo.Enabled = False
            txtItmTyp.Enabled = False

            cmdAss.Enabled = False


            'txtItmDsc.Enabled = False

            cboColPck.Enabled = False

            txtColCde.Enabled = False
            txtCusCol.Enabled = False
            txtColDsc.Enabled = True

            txtPC.Enabled = False
            txtShpQty.Enabled = False
            txtUntCde.Enabled = False

            txtCtnStr.Enabled = False
            txtCtnEnd.Enabled = False

            txtInrCtn.Enabled = False
            txtMtrCtn.Enabled = False
            txtVol.Enabled = False

            txtMtrdcm.Enabled = False
            txtMtrwcm.Enabled = False
            txtMtrhcm.Enabled = False
            txtActVol.Enabled = False

            txtGrsWgt.Enabled = False
            txtNetWgt.Enabled = False

            txtManNam.Enabled = True
            cboManAdr.Enabled = False
            txtManAdr.Enabled = True
            'txtaddinf.Enabled = True

            txtItmShm.Enabled = True
            txtCmpRmk.Enabled = True

            txtTtlVolD.Enabled = False
            txtTtlNetD.Enabled = False
            txtTtlGrsD.Enabled = False

            txtTtlCtnD.Enabled = False

            cboUntSelD.Enabled = False
            txtSelPrcD.Enabled = False

            cboUntAmtD.Enabled = False
            txtTtlAmtD.Enabled = False

            txtInvNo.Enabled = False

            txtPrcTrm.Enabled = False
            txtPayTrm.Enabled = False

            cboColPck.Enabled = False

            chkDel.Enabled = False

            'Added by Mark Lau 20080611
            txtCustUM.Enabled = False
            Exit Sub
        End If


        If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr")) Then
            Exit Sub
        End If
        'temp

        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*DEL*~" Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*NEW*~" Then
            txtShpSeq.Enabled = False

            cboCtrSiz.Enabled = False

            'optCtrSiz0.Enabled = False
            'optCtrSiz1.Enabled = False
            'optCtrSiz2.Enabled = False
            'optCtrSiz3.Enabled = False
            'optCtrSiz4.Enabled = False


            txtCtrCfs.Enabled = False
            txtSealNo.Enabled = False


            cboPckRmk.Enabled = False

            txtJobNo.Enabled = False

            txtOrdNo.Enabled = False

            txtOrdSeq.Enabled = False
            txtSelPrcD.Enabled = False


            txtCusPo.Enabled = False
            txtCusStyNo.Enabled = False
            txtCusItm.Enabled = False

            cboItmNo.Enabled = False
            txtItmTyp.Enabled = False

            cmdAss.Enabled = False


            'txtItmDsc.Enabled = False

            cboColPck.Enabled = False

            txtColCde.Enabled = False
            txtCusCol.Enabled = False
            txtColDsc.Enabled = False

            'Lester Wu 2007-07-14
            txtPC.Enabled = False
            txtShpQty.Enabled = False
            txtUntCde.Enabled = False

            txtCtnStr.Enabled = False
            txtCtnEnd.Enabled = False

            txtInrCtn.Enabled = False
            txtMtrCtn.Enabled = False
            txtVol.Enabled = False

            txtMtrdcm.Enabled = False
            txtMtrwcm.Enabled = False
            txtMtrhcm.Enabled = False
            txtActVol.Enabled = False


            txtGrsWgt.Enabled = False
            txtNetWgt.Enabled = False

            txtManNam.Enabled = False
            cboManAdr.Enabled = False
            txtManAdr.Enabled = False
            'txtaddinf.Enabled = False

            txtItmShm.Enabled = False
            txtCmpRmk.Enabled = False

            txtTtlVolD.Enabled = False
            txtTtlNetD.Enabled = False
            txtTtlGrsD.Enabled = False

            txtTtlCtnD.Enabled = False

            cboUntSelD.Enabled = False
            txtSelPrcD.Enabled = False

            cboUntAmtD.Enabled = False
            txtTtlAmtD.Enabled = False

            txtInvNo.Enabled = False

            txtPrcTrm.Enabled = False
            txtPayTrm.Enabled = False

            cboColPck.Enabled = False

            chkDel.Enabled = True

            'Added by Mark Lau 20080611
            txtCustUM.Enabled = False

        ElseIf rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*ADD*~" Then

            txtShpSeq.Enabled = False

            cboCtrSiz.Enabled = False

            'optCtrSiz0.Enabled = False
            'optCtrSiz1.Enabled = False
            'optCtrSiz2.Enabled = False
            'optCtrSiz3.Enabled = False
            'optCtrSiz4.Enabled = False


            '-------------------------
            'Lester Wu 2005-11-09 ----
            'txtCtrCfs.Enabled = True
            'txtSealNo.Enabled = True
            Call func_container_click()
            '-------------------------

            cboPckRmk.Enabled = True

            'If optSearch.Item(0).Value = True Then
            '    txtJobNo.Enabled = True
            '    txtOrdNo.Enabled = False
            'Else
            '    txtJobNo.Enabled = False
            '    txtOrdNo.Enabled = True
            'End If

            txtOrdSeq.Enabled = True
            txtSelPrcD.Enabled = True


            txtCusPo.Enabled = False
            txtCusStyNo.Enabled = False
            txtCusItm.Enabled = False

            cboItmNo.Enabled = True
            txtItmTyp.Enabled = False

            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmtyp") = "ASS" Then
                cmdAss.Enabled = True
                'txtPC.Enabled = True
                'lblpc.Enabled = True
            Else
                cmdAss.Enabled = False
                'txtPC.Enabled = False
                'lblpc.Enabled = False
            End If

            'txtItmDsc.Enabled = True

            cboColPck.Enabled = True

            txtColCde.Enabled = True
            txtCusCol.Enabled = False
            txtColDsc.Enabled = True

            'Lester Wu 2007-07-14
            txtPC.Enabled = True
            txtShpQty.Enabled = True

            'Rem by Lester Wu on 2005-09-12
            'txtUntCdeD.Enabled = True

            txtUntCde.Enabled = False

            Dim sfilter As String

            If txtShpSeq.Text <> "" Then

                sfilter = "hdc_shpseq = '" + txtShpSeq.Text + "'"
                rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = sfilter

                If rs_SHDTLCTN.Tables("RESULT").DefaultView.Count > 0 Then
                    txtCtnStr.Enabled = False
                    txtCtnEnd.Enabled = False
                Else
                    txtCtnStr.Enabled = True
                    txtCtnEnd.Enabled = True
                End If
            Else
                txtCtnStr.Enabled = False
                txtCtnEnd.Enabled = False
            End If

            rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = ""



            'If txtShpSeq.Text <> "" Or smode = cModeAdd   Or smode = cModeUpd  Then
            '    rs_SHDTLCTN.Filter = "hdc_shpseq = '" + txtShpSeq.Text + "'"
            '    If rs_SHDTLCTN.recordCount > 0 Then
            '        txtCtnStr.Enabled = False
            '        txtCtnEnd.Enabled = False
            '    Else
            '        txtCtnStr.Enabled = True
            '        txtCtnEnd.Enabled = True
            '    End If
            '    rs_SHDTLCTN.Filter = ""
            'Else
            '    txtCtnStr.Enabled = False
            '    txtCtnEnd.Enabled = False
            'End If

            txtInrCtn.Enabled = False
            txtMtrCtn.Enabled = False
            txtVol.Enabled = False

            txtMtrdcm.Enabled = True
            txtMtrwcm.Enabled = True
            txtMtrhcm.Enabled = True
            txtActVol.Enabled = False

            txtGrsWgt.Enabled = True
            txtNetWgt.Enabled = True

            txtManNam.Enabled = True
            cboManAdr.Enabled = True
            txtManAdr.Enabled = True
            'txtaddinf.Enabled = True

            txtItmShm.Enabled = True
            txtCmpRmk.Enabled = True

            txtTtlVolD.Enabled = False
            txtTtlNetD.Enabled = False
            txtTtlGrsD.Enabled = False

            txtTtlCtnD.Enabled = False

            cboUntSelD.Enabled = False
            txtSelPrcD.Enabled = False

            cboUntAmtD.Enabled = False
            txtTtlAmtD.Enabled = False

            txtInvNo.Enabled = True

            txtPrcTrm.Enabled = False
            txtPayTrm.Enabled = False

            'cboColPck.Enabled = True
            chkDel.Enabled = True

            'Added by Mark Lau 20080611
            txtCustUM.Enabled = False

        Else

            txtShpSeq.Enabled = False

            cboCtrSiz.Enabled = True

            'optCtrSiz0.Enabled = True
            'optCtrSiz1.Enabled = True
            'optCtrSiz2.Enabled = True
            'optCtrSiz3.Enabled = True
            'optCtrSiz4.Enabled = True

            'optCtrSiz(0).Enabled = True
            'optCtrSiz(1).Enabled = True
            'optCtrSiz(2).Enabled = True
            'optCtrSiz(3).Enabled = True
            'optCtrSiz(4).Enabled = True


            '-------------------------
            'Lester Wu 2005-11-09 ----
            'txtCtrCfs.Enabled = True
            'txtSealNo.Enabled = True
            Call func_container_click()
            '-------------------------

            cboPckRmk.Enabled = True

            txtJobNo.Enabled = False

            txtOrdNo.Enabled = False

            txtOrdSeq.Enabled = True
            txtSelPrcD.Enabled = True

            txtCusPo.Enabled = False
            txtCusStyNo.Enabled = False
            txtCusCol.Enabled = False
            txtCusItm.Enabled = False

            cboItmNo.Enabled = False
            txtItmTyp.Enabled = False

            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmtyp") = "ASS" Then
                cmdAss.Enabled = True
                'txtPC.Enabled = True
                'lblpc.Enabled = True
            Else
                cmdAss.Enabled = False
                'txtPC.Enabled = False
                'lblpc.Enabled = False
            End If

            'txtItmDsc.Enabled = False

            cboColPck.Enabled = False

            txtColCde.Enabled = False
            txtColDsc.Enabled = False

            'Lester Wu 2007-07-14
            txtPC.Enabled = True
            txtShpQty.Enabled = True

            txtUntCde.Enabled = False

            Dim sfilter As String

            If txtShpSeq.Text <> "" Then

                sfilter = "hdc_shpseq = '" + txtShpSeq.Text + "'"
                rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = sfilter

                If rs_SHDTLCTN.Tables("RESULT").DefaultView.Count > 0 Then
                    txtCtnStr.Enabled = False
                    txtCtnEnd.Enabled = False
                Else
                    txtCtnStr.Enabled = True
                    txtCtnEnd.Enabled = True
                End If
            Else
                txtCtnStr.Enabled = False
                txtCtnEnd.Enabled = False
            End If

            rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = ""

            txtInrCtn.Enabled = False
            txtMtrCtn.Enabled = False
            txtVol.Enabled = False

            txtMtrdcm.Enabled = True
            txtMtrwcm.Enabled = True
            txtMtrhcm.Enabled = True
            txtActVol.Enabled = False

            txtGrsWgt.Enabled = True
            txtNetWgt.Enabled = True

            txtManNam.Enabled = True
            cboManAdr.Enabled = True
            txtManAdr.Enabled = True
            'txtaddinf.Enabled = True

            txtItmShm.Enabled = True
            txtCmpRmk.Enabled = True

            txtTtlVolD.Enabled = False
            txtTtlNetD.Enabled = False
            txtTtlGrsD.Enabled = False

            txtTtlCtnD.Enabled = False

            cboUntSelD.Enabled = False
            txtSelPrcD.Enabled = False

            cboUntAmtD.Enabled = False
            txtTtlAmtD.Enabled = False

            txtInvNo.Enabled = True

            txtPrcTrm.Enabled = True
            txtPayTrm.Enabled = True

            cboColPck.Enabled = False
            chkDel.Enabled = True

            'Added by Mark Lau 20080611
            txtCustUM.Enabled = False
        End If

    End Sub
    Function func_container_click()
        If optCtrSiz4.Checked = True Then
            Me.txtCtrCfs.Enabled = False
            Me.txtSealNo.Enabled = False
        Else
            Me.txtCtrCfs.Enabled = True
            Me.txtSealNo.Enabled = True
        End If
    End Function


    Private Sub DisplayItmNo()
        Dim TmpItmNo As String
		     Dim flag_found As Boolean
        cboItmNo.Items.Clear()


        For index2 As Integer = 0 To rs_SCORDDTL.Tables("result").Rows.Count - 1
			 flag_found = False
            TmpItmNo = rs_SCORDDTL.Tables("result").Rows(index2)("sod_itmno")
		  For index3 As Integer = 0 To cboItmNo.Items.Count - 1
                If cboItmNo.Items(index3).ToString = Trim(TmpItmNo) Then
                    flag_found = True
                End If

            Next
            If Not flag_found Then
            cboItmNo.Items.Add(TmpItmNo)
			    End If
        Next

    End Sub


    Private Sub InitGrid()
        Dim rs() As ADOR.Recordset
        Dim S As String
        Dim i As Integer
        txtTtlHdpAmt.Text = "0"

        '*** Folder 2

        '***************************************************
        '*** Get Shipping Detail  record  ******************
        '***************************************************
        '***************************************************
        '***** Get Category record End  ********************
        '***************************************************

        '***************************************************
        '*** Get Carton Detail  record  ******************
        '***************************************************

        gspStr = "sp_select_SHDTLCTN '" & cboCoCde.Text & "','" & "rgkri3o" & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHDTLCTN, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
            Exit Sub
        End If


        'S = "SHDTLCTNpSp" & "~!@#$%^&*"

        'Screen.MousePointer = vbHourglass

        'rs = objBSGate.Enquire(gsConnStr, "sp_general", S)

        'Screen.MousePointer = vbDefault

        'If rs(0)(0) <> "0" Then  '*** An error has occured
        '    MsgBox(rs(0)(0))
        'Else
        '    rs_SHDTLCTN = CopyRS(rs(1))
        'End If
        '***************************************************
        '***** Get Carton Detail record End  *************
        '***************************************************

        '*** Folder 3

        '***************************************************
        '*** Get Invoice's Discount record            ******
        '***************************************************

        'S = "SHDISPRMpLp" & "~!@#$%^&*" & "pD"

        'Screen.MousePointer = vbHourglass

        'rs = objBSGate.Enquire(gsConnStr, "sp_general", S)

        'Screen.MousePointer = vbDefault

        'If rs(0)(0) <> "0" Then  '*** An error has occured
        '    MsgBox(rs(0)(0))
        'Else
        '    rs_SHDISPRM_D = CopyRS(rs(1))


        'End If
        ''***************************************************
        ''***** Get Invoice's Discount record End  ***********
        ''***************************************************

        ''***************************************************
        ''*** Get Invoice's Premiums record            ******
        ''***************************************************

        'S = "SHDISPRMpLp" & "~!@#$%^&*" & "pP"

        'Screen.MousePointer = vbHourglass

        'rs = objBSGate.Enquire(gsConnStr, "sp_general", S)

        'Screen.MousePointer = vbDefault

        'If rs(0)(0) <> "0" Then  '*** An error has occured
        '    MsgBox(rs(0)(0))
        'Else
        '    rs_SHDISPRM_P = CopyRS(rs(1))
        'End If
        ''***************************************************
        ''***** Get Invoice's Premiums record End  ***********
        ''***************************************************


        ''***************************************************
        ''*** Get Invoice Header record   *******************
        ''***************************************************
        'S = "SHINVHDR_SHM00001_1pLp" & "~!@#$%^&*"

        'Screen.MousePointer = vbHourglass

        'rs = objBSGate.Enquire(gsConnStr, "sp_general", S)

        'Screen.MousePointer = vbDefault

        'If rs(0)(0) <> "0" Then  '*** An error has occured
        '    MsgBox(rs(0)(0))
        'Else
        '    rs_SHINVHDR = CopyRS(rs(1))
        'End If

        ''***************************************************
        ''***** Get Invoice Header  record End  *************
        ''***************************************************

        'rs(1) = Nothing

        ''*** Folder 4

        ''***************************************************
        ''*** Get Ship Mark record               ************
        ''***************************************************
        'S = "SHSHPMRKpLp" & "~!@#$%^&*"

        'Screen.MousePointer = vbHourglass

        'rs = objBSGate.Enquire(gsConnStr, "sp_general", S)

        'Screen.MousePointer = vbDefault

        'If rs(0)(0) <> "0" Then  '*** An error has occured
        '    MsgBox(rs(0)(0))
        'Else
        '    rs_SHSHPMRK = CopyRS(rs(1))

        'End If


        ''***************************************************
        ''***************************************************
        ''***************************************************
        ''*** Folder 5
    End Sub

    Private Sub cboItmNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboItmNo.KeyDown
        Select Case e.KeyCode
            Case Keys.Left
                txtOrdNo.Focus()
        End Select

    End Sub

    Private Sub cboItmNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboItmNo.KeyPress
        Dim TmpPrcTrm As String
        Dim TmpPayTrm As String

        Dim TmpItmShm As String
        Dim TmpOrdNo As String
        Dim TmpJobNo As String

        Dim TmpItmNo As String
        Dim TmpInvno As String

        Dim TmpManNam As String
        Dim TmpManAdr As String

        If e.KeyChar <> Chr(13) Then Exit Sub
        not_enter_colpck = True
        counter_msg_not_enter_colpck = 0

        Cursor = Cursors.WaitCursor

        If flg_DisplayShipDetailData Then Exit Sub
        If txtOrdNo.Text = "" Then Exit Sub

        If rs_SCORDDTL.Tables("RESULT") Is Nothing Then Exit Sub
        If rs_SCORDDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub

        TmpItmShm = txtItmShm.Text
        TmpOrdNo = txtOrdNo.Text
        TmpJobNo = txtJobNo.Text

        TmpItmNo = cboItmNo.Text
        TmpInvno = txtInvNo.Text
        TmpManNam = txtManNam.Text
        TmpManAdr = txtManAdr.Text
        TmpPrcTrm = txtPrcTrm.Text
        TmpPayTrm = txtPayTrm.Text


        Call ResetSCData()

        flg_DisplayShipDetailData = True
        txtOrdNo.Text = TmpOrdNo
        txtJobNo.Text = TmpJobNo
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno") = TmpOrdNo

        Call DisplayItmNo()

        'Call DisplayCombo(cboItmNo, TmpItmNo)
        If chk_Display_Combo(cboItmNo, TmpItmNo) = False Then
            TmpItmNo = ""
        End If

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno") = TmpItmNo


        txtInvNo.Text = TmpInvno
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_invno") = TmpInvno

        txtItmShm.Text = TmpItmShm
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmshm") = TmpItmShm

        txtManNam.Text = TmpManNam
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mannam") = TmpManNam

        txtManAdr.Text = TmpManAdr
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_manadr") = TmpManAdr




        '        cboPrcTrm.Text = TmpPrcTrm
        txtPrcTrm.Text = TmpPrcTrm
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = TmpPrcTrm
        '       cboPayTrm.Text = TmpPayTrm
        txtPayTrm.Text = TmpPayTrm
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_paytrm") = TmpPayTrm


        flg_DisplayShipDetailData = False
        If rs_SCORDDTL.Tables("result").Rows.Count > 0 Then
            cboInvNoP.Items.Clear()
            For index3 As Integer = 0 To rs_SCORDDTL.Tables("result").Rows.Count - 1
                If Trim(rs_SCORDDTL.Tables("RESULT").Rows(index3).Item("sod_itmno") )= cboItmNo.Text.Trim Then
                    cboColPck.Items.Add(rs_SCORDDTL.Tables("RESULT").Rows(index3).Item("sod_colpck"))

                End If
            Next
            Cursor = Cursors.Default

        End If
        cboColPck.Enabled = True


        cboColPck.Focus()

        Cursor = Cursors.Default
        If optinvsm.Checked = True Then
            txtItmShm.Enabled = False
            cmdSelSM.Enabled = True
        Else
            txtItmShm.Enabled = True
            cmdSelSM.Enabled = False
        End If

    End Sub

    Private Sub cboItmNo_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboItmNo.KeyUp

        If cboItmNo.Text.Length > 0 Then
            Call auto_search_combo(cboItmNo, e.KeyCode)
        End If

        '       cboColPck.Focus()

    End Sub

    Private Sub cboItmNo_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboItmNo.SelectedIndexChanged

        If cboItmNo.Text.Trim <> "" Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = cboItmNo.Text.Trim

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmno")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmno") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmno") = tmpstr
                    End If
                End If
            End If
        End If

    End Sub
    Public Function chk_Display_Combo(ByVal Combo1 As ComboBox, ByVal code As String) As Boolean

        chk_Display_Combo = False
        Dim i As Integer
        On Error Resume Next

        If code <> "" And Combo1.Enabled = True And Combo1.Items.Count > 0 Then
            i = Combo1.Items.Count
            For Y As Integer = 0 To i - 1
                If Trim(code) = Trim(Combo1.Items(Y)) Then
                    chk_Display_Combo = True
                End If
            Next
        End If

        '    If chk_Display_Combo = False Then
        '        MsgBox("Agent - Data is Invalid, please select in Drop Down List.")
        '        ''btcSHM00001.SelectedIndex = 0
        '        'no_need_check_btcindex = True
        '        Combo1.Enabled = True
        '        If Combo1.Enabled And Combo1.Visible Then Combo1.Focus()
        '        Exit Function
        '    End If
        'End If


    End Function

    Private Sub cboColPck_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboColPck.KeyDown
        Select Case e.KeyCode
            Case Keys.Left
                cboItmNo.Focus()
        End Select

    End Sub

    Private Sub cboColPck_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboColPck.KeyPress
        Dim TmpordNo As String
        Dim Pck_index As Integer

        If e.KeyChar <> Chr(13) Then Exit Sub
        not_enter_colpck = False

        TmpordNo = txtOrdNo.Text.Trim


        If flg_DisplayShipDetailData Then Exit Sub
        If rs_SCORDDTL Is Nothing Then Exit Sub

        If rs_SCORDDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub

        txtCartonFactor.Text = "0"


        If cboItmNo.Text = "" Then
            MsgBox("Please select Item No. first")
            If cboItmNo.Enabled And cboItmNo.Visible Then cboItmNo.Focus()
            Exit Sub
        End If

        If cboColPck.Text = "" Then
            MsgBox("Please select Color and Packing info.")
            If cboColPck.Enabled And cboColPck.Visible Then cboColPck.Focus()
            Exit Sub
        End If


        If FindSC_RS() Then

            For index3 As Integer = 0 To rs_SCORDDTL.Tables("result").Rows.Count - 1
                If rs_SCORDDTL.Tables("RESULT").Rows(index3).Item("sod_itmno") = cboItmNo.Text.Trim And _
                         rs_SCORDDTL.Tables("RESULT").Rows(index3).Item("sod_colpck") = cboColPck.Text.Trim Then
                    Pck_index = index3
					 tmp_sc_seq = rs_SCORDDTL.Tables("RESULT").Rows(index3).Item("sod_ordseq")
                End If
            Next

            If rs_SCORDDTL.Tables("RESULT").Rows(Pck_index)("poh_pursts") = "CLO" Then
                MsgBox(rs_SCORDDTL.Tables("RESULT").Rows(Pck_index)("pod_purord") + " has been already closed!") '("PO was closed!")
                cboColPck.SelectedIndex = -1
                If rs_SCORDDTL.Tables("RESULT").Rows.Count <= 1 Then
                    If cboItmNo.Enabled And cboItmNo.Visible Then cboItmNo.Focus()
                Else
                    If cboColPck.Enabled And cboColPck.Visible Then cboColPck.Focus()
                End If
                Exit Sub
            End If

            If rs_SCORDDTL.Tables("RESULT").Rows(Pck_index)("poh_pursts") <> "REL" And rs_SCORDDTL.Tables("RESULT").Rows(Pck_index)("poh_pursts") <> "CLO" Then
                MsgBox(rs_SCORDDTL.Tables("RESULT").Rows(Pck_index)("pod_purord") + " has not been already released!") '("PO does not release!")
                cboColPck.SelectedIndex = -1
                If rs_SCORDDTL.Tables("RESULT").Rows.Count <= 1 Then
                    If cboItmNo.Enabled And cboItmNo.Visible Then cboItmNo.Focus()
                Else
                    If cboColPck.Enabled And cboColPck.Visible Then cboColPck.Focus()
                End If
                Exit Sub
            End If
            'If rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_colpck") <> cboColPck.Text Then

            For index3 As Integer = 0 To rs_SCORDDTL.Tables("result").Rows.Count - 1
                If rs_SCORDDTL.Tables("RESULT").Rows(index3).Item("sod_itmno") = cboItmNo.Text.Trim _
                And Trim(rs_SCORDDTL.Tables("RESULT").Rows(index3).Item("sod_colpck")) = cboColPck.Text.Trim Then
                    Call DisplaySCData_SC(index3)
                End If
            Next
            '''

            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colpck") = cboColPck.Text
            'End If
        Else
            MsgBox("SC record not found")
            'Call ResetSCData
        End If
        If txtColDsc.Enabled And txtColDsc.Visible Then txtColDsc.Focus()

        '''PCKDIM
        If UBound(Split(cboColPck.Text, " / ")) < 8 Then
            MsgBox("Invalid packing!")
            Exit Sub
        End If

        Call pck_cih_dimension()

        Dim i As Integer
        Dim j As Integer
        Dim tmp_CartonFactor As Integer

        If rs_SHPKDHIS.Tables("RESULT").Rows.Count > 1 Then
            tmp_CartonFactor = rs_SHPKDHIS.Tables("RESULT").Rows(0)("hip_conftr")
        End If

        flag_txtCartonFactor_KeyPress = True

        If tmp_CartonFactor < 1 Or tmp_CartonFactor > 5 Then
            txtCartonFactor.Text = "1"
        Else
            txtCartonFactor.Text = tmp_CartonFactor
        End If
        i = 0
        j = 0
        rs_SHPCKDIM.Tables("RESULT").DefaultView.RowFilter = ""


        If Val(txtCartonFactor.Text) = 1 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
        ElseIf Val(txtCartonFactor.Text) = 2 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum <= 4 "
        ElseIf Val(txtCartonFactor.Text) = 3 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 7 and hpd_pdnum<=12 "
        ElseIf Val(txtCartonFactor.Text) = 4 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=13 and hpd_pdnum <=20 "
        ElseIf Val(txtCartonFactor.Text) = 5 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 21 and hpd_pdnum <=30 "
        Else
            txtCartonFactor.Text = "1"
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
            'MsgBox("Please set Carton Factor smaller than 6!")
        End If




        If rs_SHPKDHIS.Tables("RESULT").Rows.Count > 0 Then
            For i = 0 To rs_SHPKDHIS.Tables("RESULT").Rows.Count - 1 Step 1
                For j = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1 Step 1

                    If j < rs_SHPCKDIM.Tables("RESULT").DefaultView.Count Then


                        If Not IsDBNull(rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_dimtyp")) Then
                            '0825

                            If rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_dimtyp") = rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_dimtyp") And _
                                    rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ctnnam") = rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ctnnam") And _
                                    rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_des") = rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_des") And _
                                    tmp_CartonFactor = rs_SHPKDHIS.Tables("RESULT").DefaultView(i)("hip_conftr") _
                                    Then

                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ctn") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ctn")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_l_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_l_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_w_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_w_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_h_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_h_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_cbm_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_cbm_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlcbm_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlcbm_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_gw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_gw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlgw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlgw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_nw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_nw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlnw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlnw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_l_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_l_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_w_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_w_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_h_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_h_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_cbm_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_cbm_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlcbm_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlcbm_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_gw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_gw_lb")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlgw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlgw_lb")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_nw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_nw_lb")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlnw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlnw_lb")
                                ' txtConFtr.Text = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_conftr")
                                txtCartonFactor.Text = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_conftr")



                            End If
                        End If

                    End If
                Next
            Next

        End If

        ''1021
        rs_SHPCKDIM.Tables("RESULT").DefaultView.Sort = "hpd_shpno,hpd_shpseq,hpd_pdseq,hpd_pdnum"

        'dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
        'dgPCKDIM.Refresh()


        dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
        dgPCKDIM.Refresh()
        display_dgPCKDIM("")

        '''sm
        If optitmsm.Checked = True Then
            For index As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
                If rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ordno") = txtOrdNo.Text.Trim Then
                    txtItmShm.Text = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_itmshm")
                End If
            Next
        End If
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untsel") = cboUntAmt.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untamt") = cboUntAmt.Text
        cboUntSelD.Text = cboUntAmt.Text
        cboUntAmtD.Text = cboUntAmt.Text

        Call Append_SHCPTBKD()
        Call display_SHCPTBKD()

        '  Call after_colpck()

        '''shcptbkd

        reset_dis()
        txtShpQty.Enabled = True
        txtCtnStr.Enabled = True
        txtCtnEnd.Enabled = True
        txtCartonFactor.Enabled = True
        txt_name_f1.Enabled = True
        txt_dsc_f1.Enabled = True
        txt_name_f2.Enabled = True
        txt_dsc_f2.Enabled = True
        txt_name_f3.Enabled = True
        txt_dsc_f3.Enabled = True
        'txtaddinf.Enabled = True
        cmdinscpb.Enabled = True
        txtColCde.Focus()
        txtOrdNo.Text = TmpordNo


        dgPCKDIM.Enabled = True
        dgSCCPTBKD.Enabled = True

        'dgPCKDIM.Visible= True
        dgSCCPTBKD.Visible = True
        cmdinscpb.Visible = True

        If optinvsm.Checked = True Then
            txtItmShm.Enabled = False
            cmdSelSM.Enabled = True
        Else
            txtItmShm.Enabled = True
            cmdSelSM.Enabled = False
        End If


        cur_sc_no = txtOrdNo.Text.Trim
        cur_job_no = txtJobNo.Text.Trim
        txtShpQty.Focus()


    End Sub

    Private Sub cboColPck_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboColPck.KeyUp

        If cboColPck.Text.Length > 0 Then
            Call auto_search_combo(cboColPck, e.KeyCode)
        End If

    End Sub

    Private Sub cboColPck_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboColPck.LostFocus
        'txtColCde.Focus()

        If not_enter_colpck = True Then
            If counter_msg_not_enter_colpck = 0 Then
                counter_msg_not_enter_colpck = counter_msg_not_enter_colpck + 1
                MsgBox("Please Select Color-Packing and press 'Enter' !")
            End If

            cboColPck.Focus()
            Exit Sub
        End If

        txtShpQty.Focus()


    End Sub

    Private Sub cboColPck_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboColPck.SelectedIndexChanged

        If cboColPck.Text.Trim <> "" Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr 
                tmpstr = cboColPck.Text.Trim

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_colpck")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_colpck") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_colpck") = tmpstr
                    End If
                End If
            End If
        End If

    End Sub


    Private Function FindSC_RS() As Boolean
        If rs_SCORDDTL Is Nothing Then Exit Function
        If rs_SCORDDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Function

        If cboColPck.Text <> "" And cboItmNo.Text <> "" Then

            For index2 As Integer = 0 To rs_SCORDDTL.Tables("RESULT").Rows.Count - 1

                If cboItmNo.Text = rs_SCORDDTL.Tables("RESULT").Rows(index2)("sod_itmno") And cboColPck.Text = rs_SCORDDTL.Tables("RESULT").Rows(index2)("sod_colpck") Then

                    FindSC_RS = True
                    Exit Function
                End If
            Next
        End If

        FindSC_RS = False
    End Function


    Private Sub DisplaySCData_SC(ByVal index3)
        If rs_SCORDDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub

        If rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub

        flg_DisplayShipDetailData = True

        txtOrdNo.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_ordno")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_ordno")

        txtJobNo.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("pod_jobord")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_jobno") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("pod_jobord")

        txtCusPo.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cuspo")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuspo") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cuspo")

        txtresppo.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_resppo")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_resppo") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_resppo")
        txtcussku.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cussku")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cussku") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cussku")



        txtCusItm.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cusitm")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusitm") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cusitm")

        ' Marco fix for getting incorrect unit price in shipping invoice , it should be net unit price from SC 20040128

        'txtSelPrcD.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_untprc")
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_selprc") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_untprc")

        txtSelPrcD.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_netuntprc")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_selprc") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_netuntprc")


        ' Marco fix for getting incorrect unit price in shipping invoice , it should be net unit price from SC 20040128


        'cboItmNo.Clear
        'cboItmNo.AddItem rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_itmno")
        'Call DisplayCombo(cboItmNo, rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_itmno"))
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno") = cboItmNo.Text

        'If rs_SHIPGDTL("hid_creusr") = "~*ADD*~" Then
        '    If optSearch.Item(0) = True Then
        '        cboItmNo.Enabled = False
        '    Else
        '        cboItmNo.Enabled = True
        '    End If
        'End If



        'cboColPck.Clear
        'cboColPck.AddItem rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_colpck")
        'Call DisplayCombo(cboColPck, rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_colpck"))
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colpck") = cboColPck.Text

        'If rs_SHIPGDTL("hid_creusr") = "~*ADD*~" Then
        '    If optSearch.Item(0) = True Then
        '        cboColPck.Enabled = False
        '    Else
        '        cboColPck.Enabled = True
        '    End If
        'End If

        txtCusCol.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cuscol")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuscol") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cuscol")

        txtColDsc.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_coldsc")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_coldsc") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_coldsc")

        txtShpQty.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_shpqty")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpqty") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_shpqty")

        'Rem by Lester Wu on 2005-09-12
        'txtUntCdeD.Text = ""
        txtUntCde.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_pckunt")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_pckunt")

        txtInrCtn.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_inrctn")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrctn") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_inrctn")

        txtMtrCtn.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_mtrctn")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrctn") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_mtrctn")

        txtVol.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cbm")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_vol") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cbm")

        If optinvsm.Checked = True Then
        Else
            txtItmShm.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("ssm_engdsc")
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmshm") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("ssm_engdsc")
        End If

        '''20141216

        'user asked for check this data
        'txtMtrdcm.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_mtrdcm")
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdcm") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_mtrdcm")

        'txtMtrwcm.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_mtrwcm")
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwcm") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_mtrwcm")

        'txtMtrhcm.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_mtrhcm")
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhcm") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_mtrhcm")

        'txtActVol.Text = 0
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_actvol") = 0

        'user asked for check this data
        '        If MsgBox("Replace Manufacturer Names value?", vbYesNo + vbDefaultButton2) = vbYes Then


        ''MichaelChiu 20170322
        If txtManNam.Text = "" Then
            txtManNam.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("vbi_vennam")
        End If
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mannam") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("vbi_vennam")

        'txtManAdr.Text = ""
        If sReadingIndexS - 1 >= 0 Then
            For index9 As Integer = 0 To sReadingIndexS - 1
                If txtManNam.Text.Trim = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_mannam") Then
                    If txtManAdr.Text = "" Then
                        txtManAdr.Text = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_manadr")
                    End If
                End If
            Next
        End If

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_manadr") = txtManAdr.Text.Trim
        'End If

        '*** Hidden fields
        txtPrcTrm.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("soh_prctrm")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("soh_prctrm")

        txtPayTrm.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("soh_paytrm")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_paytrm") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("soh_paytrm")

        txtOutQty.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_outqty")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("sod_outqty") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_outqty")

        txtItmTyp.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_itmtyp")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmtyp") = txtItmTyp.Text

        txt_name_f1.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_name_f1")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f1") = txt_name_f1.Text
        txt_dsc_f1.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_dsc_f1")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f1") = txt_dsc_f1.Text

        txt_name_f2.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_name_f2")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f2") = txt_name_f2.Text
        txt_dsc_f2.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_dsc_f2")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f2") = txt_dsc_f2.Text

        txt_name_f3.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_name_f3")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f3") = txt_name_f3.Text
        txt_dsc_f3.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_dsc_f3")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f3") = txt_dsc_f3.Text


        If txtItmTyp.Text = "ASS" Then
            cmdAss.Enabled = True
            'txtPC.Enabled = True
            'lblpc.Enabled = True
        Else
            cmdAss.Enabled = False
            'txtPC.Enabled = False
            'lblpc.Enabled = False
        End If

        txtItmDsc.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_itmdsc")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmdsc") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_itmdsc")

        'Added by Mark Lau 20060929
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alsitmno") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_alsitmno")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alscolcde") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_alscolcde")


        ' Added by Mark Lau 20090515
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusstyno") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cusstyno")
        txtCusStyNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusstyno")

        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_consolno") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("hid_consolno")
        'txtConsolNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_consolno")

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_replacement") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("soh_rplmnt")
        If rs_SCORDDTL.Tables("RESULT").Rows(index3)("soh_rplmnt") = "Y" Then
            chkrpl.Checked = True
        Else
            chkrpl.Checked = False
        End If

        'Added by Mark Lau 20080611
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_custum") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_custum")
        txtCustUM.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_custum")

        txtColCde.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_colcde")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colcde") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_colcde")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alsitmno") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_alsitmno")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alscolcde") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_alscolcde")

        txtOrdSeq.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_ordseq")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordseq") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_ordseq")


        '***************************************************
        '*** Get Shipping Detail  record  ******************
        '***************************************************
        gspStr = "sp_select_SCASSINF_SHM00001'" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SCASSINF, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            Me.Cursor = Windows.Forms.Cursors.Default
            MsgBox("Error on loading SCM00001 #016 rs_SCASSINF : " & rtnStr)
            Exit Sub
        Else
            'For i As Integer = 0 To rs_SCASSINF.Tables("RESULT").Columns.Count - 1
            '    rs_SCASSINF.Tables("RESULT").Columns(i).ReadOnly = False
            'Next
        End If
        For i As Integer = 0 To rs_SHASSINF.Tables("RESULT").Columns.Count - 1
            rs_SHASSINF.Tables("RESULT").Columns(i).ReadOnly = False
        Next i

        'rs_SHASSINF.Tables("result").DefaultView.RowFilter = "hai_shpseq =" & txtShpSeq.Text.Trim
        'For index99 As Integer = 0 To rs_SHASSINF.Tables("RESULT").DefaultView.Count - 1
        '    If index99 <= rs_SHASSINF.Tables("RESULT").DefaultView.Count - 1 Then
        '        rs_SHASSINF.Tables("RESULT").DefaultView(index99)("hai_shpseq") = 17899
        '        'temp
        '        'temp
        '    End If
        'Next
        'rs_SHASSINF.Tables("result").DefaultView.RowFilter = ""

        'delete 
        delete_shassinf_record(rs_SHASSINF, rs_SHASSINF.Tables("RESULT").Rows.Count - 1)


        For index9 As Integer = 0 To rs_SCASSINF.Tables("RESULT").Rows.Count - 1
            Append_Update_Asst("", txtShpSeq.Text.Trim, index9)
        Next

        '20141107
        'select..  count rows
        'delete (by filtering)    by set seq=17899   shp#  & seq, 
        'temp
        'append rows
        'update rows

        txtPurOrd.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("pod_purord")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purord") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("pod_purord")

        txtPurSeq.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("pod_purseq")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purseq") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("pod_purseq")


        txtVenNo.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_venno")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_venno") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_venno")

        Call loadcboManAdr()






        '''''''''''''''''''''''
        txtCusVen.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cusven")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusven") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_cusven")

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fa") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_examven")

        gspStr = "sp_list_VNCNTINF '', '" & Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fa"), "-")(0)) & "','U','ADR' "
        rtnLong = execute_SQLStatement(gspStr, rs_VNCNTINF2, rtnStr)
        gspStr = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_faaddr") = ""
        If rs_VNCNTINF2.Tables("RESULT").Rows.Count > 0 Then
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_faaddr") = rs_VNCNTINF2.Tables("RESULT").Rows(0)("vci_adr")
        End If

        ''

        Me.txtConFtr.Text = IIf(IsDBNull(rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_conftr")), "", rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_conftr"))
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_conftr") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_conftr")

        If rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_contopc") = "Y" Then
            Me.chkPC.Checked = True

            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_contopc")
            Me.txtConFtr.Visible = True
            '          'lblConftr.Visible = True

            '           lblPCPrc.Visible = True
            cboPCPrc.Visible = True
            cboPCPrc.Text = cboUntSelD.Text
            txtPCPrc.Visible = True
            txtPC.Visible = True


            '            lblPC.Visible = True


            If rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_conftr") > 0 Then
                txtPCPrc.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_netuntprc") / rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_conftr")
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pcprc") = txtPCPrc.Text
                txtPC.Text = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_shpqty") * rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_conftr")
            Else
                txtPCPrc.Text = ""
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pcprc") = IIf(txtPCPrc.Text = "", 0, txtPCPrc.Text)
                txtPC.Text = ""
            End If


            txtConFtr.Visible = True
            lblconftr.Visible = True
            txtPC.Enabled = True
            txtPC.Visible = True
            lblpc.Visible = True
            '20141007 

        Else
            Me.chkPC.Checked = False
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc") = rs_SCORDDTL.Tables("RESULT").Rows(index3)("sod_contopc")
            Me.txtConFtr.Visible = False
            'lblConftr.Visible = False
            'lblPCPrc.Visible = False
            cboPCPrc.Visible = False
            txtPCPrc.Visible = False
            txtPC.Visible = False
            'lblPC.Visible = False


            txtConFtr.Visible = False
            lblconftr.Visible = False
            txtPC.Enabled = False
            txtPC.Visible = False
            lblpc.Visible = False
            '20141007 

        End If

        flg_DisplayShipDetailData = False
    End Sub


    Private Sub tpSHM00001_2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tpSHM00001_2.Click

    End Sub

    Public Sub display_dimension(ByVal dimnumber)

        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq")
        rs_SHPCKDIM.Tables("RESULT").DefaultView.Sort = "hpd_shpno,hpd_shpseq,hpd_pdseq,hpd_pdnum"

        dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
        dgPCKDIM.Refresh()

    End Sub

    Public Sub handle_dimension(ByVal dimnumber)

        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq")

        '''Insert,  ini   check_if_zero_length
        '''Append  (rows.add) ,  if need  check_if_length < cal
        '''Delete,  (delete?) if need check_if_length > cal,rs_IMPRCINF_NewAddItem.Tables("RESULT").Rows(index).Delete()
        Dim length_pd As Integer
        Dim length_nd As Integer
        Dim length_df As Integer

        length_pd = rs_SHPCKDIM.Tables("RESULT").Rows.Count / 6
        length_nd = maxshpseq

        length_df = length_nd - length_pd

        'old p d
        If length_df > 0 Then


            ''''''''''''''''''''Insert Shipgdtl
            Call Append_dimension(length_pd, length_pd + 1)
            ''''''''''''''''''''cbopck keypress
            Call pck_cih_dimension()

            Dim i As Integer
            Dim j As Integer
            i = 0
            j = 0

            If rs_SHPKDHIS.Tables("RESULT").Rows.Count > 0 Then
                For i = 0 To rs_SHPKDHIS.Tables("RESULT").Rows.Count - 1 Step 1
                    For j = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1 Step 1

                        If j < rs_SHPCKDIM.Tables("RESULT").DefaultView.Count Then

                            If rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_dimtyp") = rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_dimtyp") And _
                                    rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ctnnam") = rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ctnnam") And _
                                    rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_des") = rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_des") Then

                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ctn") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ctn")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_l_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_l_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_w_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_w_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_h_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_h_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_cbm_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_cbm_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlcbm_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlcbm_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_gw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_gw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlgw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlgw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_nw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_nw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlnw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlnw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_l_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_l_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_w_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_w_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_h_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_h_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_cbm_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_cbm_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlcbm_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlcbm_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_gw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_gw_lb")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlgw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlgw_lb")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_nw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_nw_lb")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlnw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlnw_lb")


                            End If

                        End If
                    Next
                Next

            End If
        End If


    End Sub

    Public Sub delete_dimension(ByVal length_pd As Integer, ByVal delete_pd As Integer)
        Dim index3 As Integer

        'del p d
        '''maybe set not visible here
        rs_SHPCKDIM.Tables("RESULT").DefaultView.Sort = "hpd_shpno,hpd_shpseq,hpd_pdseq,hpd_pdnum"
        For index As Integer = rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1 To (length_pd - delete_pd) * 6 Step -1
            rs_SHPCKDIM.Tables("RESULT").DefaultView(index).Delete()
        Next

    End Sub



    Public Sub Append_dimension_COV(ByVal start_pos As Integer, ByVal ctnftr As Integer)
        Dim lastcount As Integer
        Dim append_max As Integer

        If ctnftr = 1 Or 2 Then
            append_max = 6
        ElseIf ctnftr = 3 Then
            append_max = 12
        ElseIf ctnftr = 4 Then
            append_max = 20
        Else
            append_max = 30
        End If


        For i2 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Columns.Count - 1
            rs_SHPCKDIM.Tables("RESULT").Columns(i2).ReadOnly = False
        Next i2


        'new p d
        For indexergfer As Integer = 1 To 1
            For index2 As Integer = 1 To append_max      'could check ftr & only 6?

                rs_SHPCKDIM.Tables("RESULT").Rows.Add()

                lastcount = rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1

                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_cocde") = cboCoCde.Text.Trim
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_shpno") = txtShpNo.Text.Trim
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_shpseq") = maxshpseq


                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_pdseq") = start_pos + 1
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_pdnum") = index2


                If (index2 Mod 2) = 1 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_dimtyp") = "Act"
                Else
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_dimtyp") = "Mod"
                End If

                If index2 = 1 Or index2 = 2 Or index2 = 5 Or index2 = 6 Or index2 = 7 Or index2 = 8 Or _
                 index2 = 13 Or index2 = 14 Or index2 = 21 Or index2 = 22 _
                Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "A"
                ElseIf index2 = 3 Or index2 = 4 Or index2 = 9 Or index2 = 10 Or index2 = 15 Or index2 = 16 Or _
                 index2 = 23 Or index2 = 24 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "B"
                ElseIf index2 = 11 Or index2 = 12 Or index2 = 17 Or index2 = 18 Or index2 = 25 Or index2 = 26 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "C"
                ElseIf index2 = 19 Or index2 = 20 Or index2 = 27 Or index2 = 28 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "D"
                ElseIf index2 = 29 Or index2 = 30 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "E"
                End If

                If index2 = 1 Or index2 = 2 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = "Crown"
                ElseIf index2 = 3 Or index2 = 4 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = "Trunk"
                ElseIf index2 = 5 Or index2 = 6 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = ""
                Else
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam")
                End If

                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctn") = "0"  'Val(txtTtlCtnD.Text) '??

                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_l_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_w_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_h_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_cbm_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlcbm_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_gw_kg") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlgw_kg") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_nw_kg") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlnw_kg") = 0

                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_l_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_w_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_h_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_cbm_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlcbm_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_gw_lb") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlgw_lb") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_nw_lb") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlnw_lb") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_creusr") = "~*ADD*~"



            Next
        Next

    End Sub


    Public Sub Append_dimension(ByVal start_pos As Integer, ByVal dimnumber As Integer)
        Dim lastcount As Integer

        For i2 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Columns.Count - 1
            rs_SHPCKDIM.Tables("RESULT").Columns(i2).ReadOnly = False
        Next i2


        'new p d
        For indexergfer As Integer = 1 To 1
            For index2 As Integer = 1 To 30      'could check ftr & only 6?

                rs_SHPCKDIM.Tables("RESULT").Rows.Add()

                lastcount = rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1

                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_cocde") = cboCoCde.Text.Trim
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_shpno") = txtShpNo.Text.Trim
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_shpseq") = maxshpseq


                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_pdseq") = start_pos + 1
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_pdnum") = index2


                If (index2 Mod 2) = 1 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_dimtyp") = "Act"
                Else
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_dimtyp") = "Mod"
                End If

                If index2 = 1 Or index2 = 2 Or index2 = 5 Or index2 = 6 Or index2 = 7 Or index2 = 8 Or _
                 index2 = 13 Or index2 = 14 Or index2 = 21 Or index2 = 22 _
                Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "A"
                ElseIf index2 = 3 Or index2 = 4 Or index2 = 9 Or index2 = 10 Or index2 = 15 Or index2 = 16 Or _
                 index2 = 23 Or index2 = 24 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "B"
                ElseIf index2 = 11 Or index2 = 12 Or index2 = 17 Or index2 = 18 Or index2 = 25 Or index2 = 26 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "C"
                ElseIf index2 = 19 Or index2 = 20 Or index2 = 27 Or index2 = 28 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "D"
                ElseIf index2 = 29 Or index2 = 30 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "E"
                End If

                If index2 = 1 Or index2 = 2 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = "Crown"
                ElseIf index2 = 3 Or index2 = 4 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = "Trunk"
                ElseIf index2 = 5 Or index2 = 6 Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = ""
                Else
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam")
                End If

                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctn") = "0"  'Val(txtTtlCtnD.Text) '??

                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_l_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_w_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_h_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_cbm_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlcbm_cm") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_gw_kg") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlgw_kg") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_nw_kg") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlnw_kg") = 0

                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_l_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_w_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_h_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_cbm_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlcbm_in") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_gw_lb") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlgw_lb") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_nw_lb") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlnw_lb") = 0
                rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_creusr") = "~*ADD*~"



            Next
        Next

    End Sub

    Public Sub Append_SHCPTBKD()
        Dim last__row As Integer
        Dim tmp_order As String

        If Not rs_SHCPTBKD Is Nothing Then
            rs_SHCPTBKD.Tables("result").DefaultView.RowFilter = "shb_ordseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and shb_status<>'Y'"
            If rs_SHCPTBKD.Tables("result").DefaultView.Count > 0 Then
                For index99 As Integer = 0 To rs_SHCPTBKD.Tables("result").Rows.Count - 1
                    If rs_SHCPTBKD.Tables("result").Rows(index99)("shb_ordseq") = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") Then
                        rs_SHCPTBKD.Tables("result").Rows(index99)("shb_status") = "Y"

                    End If
                Next
                'Exit Sub
                '20150615
            End If
        End If
        'test

        tmp_order = txtOrdNo.Text.Trim
        If tmp_order = "" Then
            tmp_order = Trim(Split(txtJobNo.Text.Trim, "-")(0))
        End If


        gspStr = "sp_select_SCCPTBKD '" & cboCoCde.Text & "','" & tmp_order & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SCCPTBKD, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            Me.Cursor = Windows.Forms.Cursors.Default
            MsgBox("Error on loading SCM00001 #111 sp_select_SCCPTBKD : " & rtnStr)
            Exit Sub
        Else
            For i As Integer = 0 To rs_SCCPTBKD.Tables("RESULT").Columns.Count - 1
                rs_SCCPTBKD.Tables("RESULT").Columns(i).ReadOnly = False
            Next
            'rs_SCCPTBKD_ori = rs_SCCPTBKD.Copy()

            For i As Integer = 0 To rs_SCCPTBKD.Tables("RESULT").Rows.Count - 1
                '           If rs_SCCPTBKD.Tables("RESULT").Rows(i)("scb_itmno") = cboItmNo.Text.Trim Then
                If rs_SCCPTBKD.Tables("RESULT").Rows(i)("scb_ordseq") = tmp_sc_seq Then

                    If rs_SHCPTBKD Is Nothing Then
                        gspStr = "sp_list_SHCPTBKD '" & "" & "','" & "" & "'"
                        rtnLong = execute_SQLStatement(gspStr, rs_SHCPTBKD, rtnStr)
                        gspStr = ""
                        If rtnLong <> RC_SUCCESS Then
                            MsgBox("Error on loading txtShpNoKeyPress sp_list_SHCPTBKD :" & rtnStr)
                            Exit Sub
                        End If
                        For ii As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").Columns.Count - 1
                            rs_SHCPTBKD.Tables("RESULT").Columns(ii).ReadOnly = False
                        Next ii

                    End If


                    rs_SHCPTBKD.Tables("RESULT").Rows.Add()
                    last__row = rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1

                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_status") = ""
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cocde") = cboCoCde.Text.Trim
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_ordno") = ""
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_ordseq") = txtShpSeq.Text.Trim

                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_itmno") = rs_SCCPTBKD.Tables("RESULT").Rows(i)("scb_itmno")
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cptseq") = rs_SCCPTBKD.Tables("RESULT").Rows(i)("scb_cptseq")
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cpt") = rs_SCCPTBKD.Tables("RESULT").Rows(i)("scb_cpt")
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_curcde") = rs_SCCPTBKD.Tables("RESULT").Rows(i)("scb_curcde")
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cst") = rs_SCCPTBKD.Tables("RESULT").Rows(i)("scb_cst")
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cstpct") = rs_SCCPTBKD.Tables("RESULT").Rows(i)("scb_cstpct")
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_pct") = rs_SCCPTBKD.Tables("RESULT").Rows(i)("scb_pct")
                    rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_creusr") = "~*ADD*~"

                End If
                'End If

            Next

        End If




    End Sub


    Public Sub Append_ctn(ByVal shpno, ByVal shpseq)
        Dim index As Integer

        '   rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = "hdc_ttlctn = 0"
        index = rs_SHDTLCTN.Tables("RESULT").Rows.Count

        '      If rs_SHDTLCTN.Tables("RESULT").DefaultView.Count >= 0 Then
        rs_SHDTLCTN.Tables("RESULT").Rows.Add()
        rs_SHDTLCTN.Tables("RESULT").Rows(index)("DEL") = "N"
        rs_SHDTLCTN.Tables("RESULT").Rows(index)("hdc_shpno") = shpno
        rs_SHDTLCTN.Tables("RESULT").Rows(index)("hdc_shpseq") = shpseq

        rs_SHDTLCTN.Tables("RESULT").Rows(index)("hdc_from") = 1
        rs_SHDTLCTN.Tables("RESULT").Rows(index)("hdc_to") = 1
        rs_SHDTLCTN.Tables("RESULT").Rows(index)("hdc_ttlctn") = 1
        rs_SHDTLCTN.Tables("RESULT").Rows(index)("hdc_creusr") = "~*ADD*~"
        rs_SHDTLCTN.Tables("RESULT").Rows(index)("hdc_credat") = Format(Date.Today, "MM/dd/yyyy").ToString
        rs_SHDTLCTN.Tables("RESULT").Rows(index)("hdc_upddat") = Format(Date.Today, "MM/dd/yyyy").ToString


    End Sub
    Public Sub Append_SHSHPMRK(ByVal invno, ByVal ordno)
        Dim index As Integer

        '   rs_SHSHPMRK.Tables("RESULT").DefaultView.RowFilter = "hdc_ttlctn = 0"
        index = rs_SHSHPMRK.Tables("RESULT").Rows.Count

        '      If rs_SHSHPMRK.Tables("RESULT").DefaultView.Count >= 0 Then
        rs_SHSHPMRK.Tables("RESULT").Rows.Add()
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_cocde") = cboCoCde.Text.Trim
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_shpno") = txtShpNo.Text.Trim

        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_invno") = invno
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_ordno") = ordno
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_shptyp") = "M"
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_imgnam") = ""
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_imgpth") = ""
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_engdsc") = ""
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_engrmk") = ""

        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_creusr") = "~*ADD*~"


    End Sub

    '' MichaelChiu 20170322
    Public Sub Append_SHSHPMRK_Detail(ByVal invno, ByVal ordno, ByVal imgnam, ByVal imgpth, ByVal engdsc, ByVal engrmk)
        Dim index As Integer

        index = rs_SHSHPMRK.Tables("RESULT").Rows.Count

        rs_SHSHPMRK.Tables("RESULT").Rows.Add()
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_cocde") = cboCoCde.Text.Trim
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_shpno") = txtShpNo.Text.Trim

        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_invno") = invno
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_ordno") = ordno
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_shptyp") = "M"
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_imgnam") = imgnam
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_imgpth") = imgpth
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_engdsc") = engdsc
        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_engrmk") = engrmk

        rs_SHSHPMRK.Tables("RESULT").Rows(index)("hsm_creusr") = "~*ADD*~"


    End Sub

    Public Sub Append_Update_Asst(ByVal shpno, ByVal shpseq, ByVal index9)

        For i As Integer = 0 To rs_SHASSINF.Tables("RESULT").Columns.Count - 1
            rs_SHASSINF.Tables("RESULT").Columns(i).ReadOnly = False
        Next i

        Dim index As Integer

        '   rs_SHASSINF.Tables("RESULT").DefaultView.RowFilter = "hdc_ttlctn = 0"
        index = rs_SHASSINF.Tables("RESULT").Rows.Count

        '      If rs_SHASSINF.Tables("RESULT").DefaultView.Count >= 0 Then
        rs_SHASSINF.Tables("RESULT").Rows.Add()
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_shpno") = ""
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_shpseq") = shpseq
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_ordno") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_ordno")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_ordseq") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_ordseq")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_itmno") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_itmno")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_assitm") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_assitm")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_assdsc") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_assdsc")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_cusitm") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_cusitm")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_colcde") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_colcde")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_coldsc") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_coldsc")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_cussku") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_cussku")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_upcean") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_upcean")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_cusrtl") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_cusrtl")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_untcde") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_untcde")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_inrqty") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_inrqty")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_mtrqty") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_mtrqty")
        If IsDate(rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_imperiod")) Then
            rs_SHASSINF.Tables("RESULT").Rows(index)("hai_imperiod") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_imperiod")
        Else
            rs_SHASSINF.Tables("RESULT").Rows(index)("hai_imperiod") = "01/01/1900"
        End If

        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_cusstyno") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_cusstyno")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_tordno") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_tordno")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_tordseq") = rs_SCASSINF.Tables("RESULT").Rows(index9)("sai_tordseq")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_creusr") = "~*ADD*~"
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_updusr") = gsUsrID
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_credat") = Format(Date.Today, "MM/dd/yyyy").ToString
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_upddat") = Format(Date.Today, "MM/dd/yyyy").ToString

    End Sub

    Public Sub Append_Update_Asst_cov(ByVal shpno, ByVal shpseq, ByVal index9)
        Dim index As Integer

        '   rs_SHASSINF.Tables("RESULT").DefaultView.RowFilter = "hdc_ttlctn = 0"
        index = rs_SHASSINF.Tables("RESULT").Rows.Count

        '      If rs_SHASSINF.Tables("RESULT").DefaultView.Count >= 0 Then

        rs_SHASSINF.Tables("RESULT").Rows.Add()
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_shpno") = shpno
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_shpseq") = shpseq
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_ordno") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_ordno")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_ordseq") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_ordseq")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_itmno") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_itmno")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_assitm") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_assitm")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_assdsc") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_assdsc")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_cusitm") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_cusitm")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_colcde") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_colcde")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_coldsc") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_coldsc")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_cussku") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_cussku")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_upcean") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_upcean")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_cusrtl") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_cusrtl")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_untcde") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_untcde")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_inrqty") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_inrqty")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_mtrqty") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_mtrqty")
        If IsDate(rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_imperiod")) Then
            rs_SHASSINF.Tables("RESULT").Rows(index)("hai_imperiod") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_imperiod")
        Else
            rs_SHASSINF.Tables("RESULT").Rows(index)("hai_imperiod") = "01/01/1900"
        End If

        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_cusstyno") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_cusstyno")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_tordno") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_tordno")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_tordseq") = rs_SHASSINF_cov_back.Tables("RESULT").Rows(index9)("hai_tordseq")
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_creusr") = "~*ADD*~"
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_updusr") = gsUsrID
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_credat") = Format(Date.Today, "MM/dd/yyyy").ToString
        rs_SHASSINF.Tables("RESULT").Rows(index)("hai_upddat") = Format(Date.Today, "MM/dd/yyyy").ToString

    End Sub

    Public Sub Append_cbd(ByVal shpno, ByVal shpseq)
        Dim index As Integer

        '   rs_SHCPTBKD.Tables("RESULT").DefaultView.RowFilter = "shb_ttlctn = 0"

        If rs_SHCPTBKD Is Nothing Then
            gspStr = "sp_list_SHCPTBKD '" & "" & "','" & "" & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_SHCPTBKD, rtnStr)
            gspStr = ""
            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_list_SHCPTBKD :" & rtnStr)
                Exit Sub
            End If
            For ii As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").Columns.Count - 1
                rs_SHCPTBKD.Tables("RESULT").Columns(ii).ReadOnly = False
            Next ii

        End If
        index = rs_SHCPTBKD.Tables("RESULT").Rows.Count

        '      If rs_SHCPTBKD.Tables("RESULT").DefaultView.Count >= 0 Then
        rs_SHCPTBKD.Tables("RESULT").Rows.Add()
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_status") = "N"
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_cocde") = cboCoCde.Text.Trim

        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_ordno") = shpno
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_ordseq") = shpseq

        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_itmno") = ""
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_cptseq") = 1
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_cpt") = ""
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_curcde") = ""
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_cst") = 0
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_cstpct") = 0
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_pct") = 0
        rs_SHCPTBKD.Tables("RESULT").Rows(index)("shb_creusr") = "~*ADD*~"
    End Sub
    Public Sub update_dimension_cov(ByVal ctnftr As Integer)
        Dim append_max As Integer

        If ctnftr = 1 Or 2 Then
            append_max = 6
        ElseIf ctnftr = 3 Then
            append_max = 12
        ElseIf ctnftr = 4 Then
            append_max = 20
        Else
            append_max = 30
        End If




        For index9 As Integer = rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1

            If index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max) <= rs_SHPCKDIM_cov_back.Tables("RESULT").Rows.Count - 1 Then
                'temp??

                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_cocde") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_cocde")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_shpno") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_shpno")
                '  rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_shpseq") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_shpseq")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_pdseq") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_pdseq")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_pdnum") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_pdnum")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_dimtyp") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_dimtyp")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_ctnnam") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_ctnnam")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_des") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_des")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_ctn") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_ctn")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_l_cm") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_l_cm")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_w_cm") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_w_cm")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_h_cm") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_h_cm")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_cbm_cm") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_cbm_cm")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_ttlcbm_cm") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_ttlcbm_cm")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_gw_kg") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_gw_kg")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_ttlgw_kg") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_ttlgw_kg")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_nw_kg") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_nw_kg")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_ttlnw_kg") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_ttlnw_kg")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_l_in") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_l_in")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_w_in") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_w_in")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_h_in") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_h_in")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_cbm_in") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_cbm_in")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_ttlcbm_in") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_ttlcbm_in")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_gw_lb") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_gw_lb")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_ttlgw_lb") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_ttlgw_lb")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_nw_lb") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_nw_lb")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_ttlnw_lb") = rs_SHPCKDIM_cov_back.Tables("RESULT").Rows(index9 - (rs_SHPCKDIM.Tables("RESULT").Rows.Count - append_max))("hpd_ttlnw_lb")
                rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_creusr") = "~*ADD*~"


            End If
        Next

    End Sub
    Public Sub update_ctn_cov(ByVal index_a)

        rs_SHDTLCTN.Tables("RESULT").Rows(rs_SHDTLCTN.Tables("RESULT").Rows.Count - 1)("hdc_from") = rs_SHDTLCTN_cov_back.Tables("RESULT").Rows(index_a)("hdc_from")
        rs_SHDTLCTN.Tables("RESULT").Rows(rs_SHDTLCTN.Tables("RESULT").Rows.Count - 1)("hdc_to") = rs_SHDTLCTN_cov_back.Tables("RESULT").Rows(index_a)("hdc_to")
        rs_SHDTLCTN.Tables("RESULT").Rows(rs_SHDTLCTN.Tables("RESULT").Rows.Count - 1)("hdc_ttlctn") = rs_SHDTLCTN_cov_back.Tables("RESULT").Rows(index_a)("hdc_ttlctn")



    End Sub
    Public Sub update_cbd_cov(ByVal index_a)

        rs_SHCPTBKD.Tables("RESULT").Rows(rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1)("shb_itmno") = rs_SHCPTBKD_cov_back.Tables("RESULT").Rows(index_a)("shb_itmno")
        rs_SHCPTBKD.Tables("RESULT").Rows(rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1)("shb_cptseq") = rs_SHCPTBKD_cov_back.Tables("RESULT").Rows(index_a)("shb_cptseq")
        rs_SHCPTBKD.Tables("RESULT").Rows(rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1)("shb_cpt") = rs_SHCPTBKD_cov_back.Tables("RESULT").Rows(index_a)("shb_cpt")
        rs_SHCPTBKD.Tables("RESULT").Rows(rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1)("shb_curcde") = rs_SHCPTBKD_cov_back.Tables("RESULT").Rows(index_a)("shb_curcde")
        rs_SHCPTBKD.Tables("RESULT").Rows(rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1)("shb_cst") = rs_SHCPTBKD_cov_back.Tables("RESULT").Rows(index_a)("shb_cst")
        rs_SHCPTBKD.Tables("RESULT").Rows(rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1)("shb_cstpct") = rs_SHCPTBKD_cov_back.Tables("RESULT").Rows(index_a)("shb_cstpct")
        rs_SHCPTBKD.Tables("RESULT").Rows(rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1)("shb_pct") = rs_SHCPTBKD_cov_back.Tables("RESULT").Rows(index_a)("shb_pct")

    End Sub

    Public Sub pck_cih_dimension()

        gspStr = "sp_select_SHPKDHIS '" & _
        Split(cboCus1No.Text.Trim, " - ")(0) & "','" & _
cboItmNo.Text.Trim & "','" & _
Split(cboColPck.Text, " / ")(0) & "','" & _
Split(cboColPck.Text, " / ")(1) & "','" & _
Split(cboColPck.Text, " / ")(2) & "','" & _
Split(cboColPck.Text, " / ")(3) & "','" & _
Split(cboColPck.Text, " / ")(4) & "','" & _
Split(cboColPck.Text, " / ")(5) & "','" & _
Split(cboColPck.Text, " / ")(6) & "','" & _
Split(cboColPck.Text, " / ")(8) & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHPKDHIS, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            Me.Cursor = Windows.Forms.Cursors.Default
            MsgBox("Error on loading SCM00001 #111 sp_select_SCCPTBKD : " & rtnStr)
            Exit Sub
        Else
            For i As Integer = 0 To rs_SHPKDHIS.Tables("RESULT").Columns.Count - 1
                rs_SHPKDHIS.Tables("RESULT").Columns(i).ReadOnly = False
            Next
            'rs_SHPKDHIS_ori = rs_SHPKDHIS.Copy()
        End If


    End Sub




    Private Sub SetShipDetailUpdateFlag()
        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") <> "~*ADD*~" And _
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") <> "~*UPD*~" And _
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") <> "~*DEL*~" And _
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") <> "~*NEW*~" Then

            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*UPD*~"
            End If



            'txtRvsDat.Text = Date
            'rs_SHIPGHDR("hih_rvsdat") = Format(Date, "mm/dd/yyyy")
        End If
    End Sub

    Public Function display_SHCPTBKD()


        Call display_Component()


    End Function


    'Public Function display_SCCPTBKD()

    '    If txtOrdNo.Text.Trim <> "" Then
    '        gspStr = "sp_select_SCCPTBKD '" & cboCoCde.Text & "','" & txtOrdNo.Text & "'"
    '        rtnLong = execute_SQLStatement(gspStr, rs_SHCPTBKD, rtnStr)
    '        If rtnLong <> RC_SUCCESS Then
    '            Me.Cursor = Windows.Forms.Cursors.Default
    '            MsgBox("Error on loading SCM00001 #111 sp_select_SCCPTBKD : " & rtnStr)
    '            Exit Function
    '        Else
    '            For i As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").Columns.Count - 1
    '                rs_SHCPTBKD.Tables("RESULT").Columns(i).ReadOnly = False
    '            Next
    '            'rs_SHCPTBKD_ori = rs_SHCPTBKD.Copy()

    '            For i As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1
    '                rs_SHCPTBKD.Tables("RESULT").Rows(i)("shb_creusr") = "~*ADD*~"
    '            Next

    '        End If



    '        Call display_Component(rs_SHCPTBKD)


    '    End If

    'End Function

    Private Sub cboInvNoP_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboInvNoP.KeyUp
        If cboInvNoP.Text.Length > 0 Then
            Call auto_search_combo(cboInvNoP, e.KeyCode)
        End If
    End Sub

    Private Sub cboInvNoP_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboInvNoP.SelectedIndexChanged
        Dim inCombo As Boolean

        rs_SHDISPRM_D.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" + cboInvNoP.Text + "'"
        rs_SHDISPRM_P.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" + cboInvNoP.Text + "'"

        Grid_Got_Focus = "grdDiscount"
        Call display_grdDiscount()
        Grid_Got_Focus = "grdPremium"
        Call display_grdPremium()


        '''cboInvNoP.Text
        'making a list, qry,disp
        list_sc_of_inv = ""
        For index As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_invno") = cboInvNoP.Text.Trim Then
                list_sc_of_inv = list_sc_of_inv & rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ordno") & ","
            End If
        Next

        cbo_scno.Items.Clear()
        cbo_scno.Text = ""
        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_invno") = cboInvNoP.Text.Trim Then
                If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno") <> "" Then
                    inCombo = False
                    For Y As Integer = 0 To cbo_scno.Items.Count - 1
                        If Trim(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno")) = Trim(cbo_scno.Items(Y)) Then
                            inCombo = True
                        End If
                    Next
                    If inCombo = False Then
                        cbo_scno.Items.Add(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno"))
                    End If
                Else
                    inCombo = False
                    For Y As Integer = 0 To cbo_scno.Items.Count - 1
                        If Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0)) = Trim(cbo_scno.Items(Y)) Then
                            inCombo = True
                        End If
                    Next
                    If inCombo = False Then
                        cbo_scno.Items.Add(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0))
                    End If
                End If


            End If
        Next
        '''
        If Len(list_sc_of_inv) > 0 Then
            list_sc_of_inv = Microsoft.VisualBasic.Left(list_sc_of_inv, Len(list_sc_of_inv) - 1)


            gspStr = "sp_select_SCDISPRM_SHM00001 '" & cboCoCde.Text & "','" & list_sc_of_inv & "','P'"
            rtnLong = execute_SQLStatement(gspStr, rs_SCDISPRM_P, rtnStr)
            If rtnLong <> RC_SUCCESS Then
                Me.Cursor = Windows.Forms.Cursors.Default
                MsgBox("Error on loading SH00001  sp_select_SCDISPRM_SHM00001: " & rtnStr)
                Exit Sub
            Else
                For i As Integer = 0 To rs_SCDISPRM_P.Tables("RESULT").Columns.Count - 1
                    rs_SCDISPRM_P.Tables("RESULT").Columns(i).ReadOnly = False
                Next
            End If
            grdPre.DataSource = rs_SCDISPRM_P.Tables("RESULT").DefaultView
            Display_pre()

            '''
            gspStr = "sp_select_SCDISPRM_SHM00001 '" & cboCoCde.Text & "','" & list_sc_of_inv & "','D'"
            rtnLong = execute_SQLStatement(gspStr, rs_SCDISPRM_D, rtnStr)
            If rtnLong <> RC_SUCCESS Then
                Me.Cursor = Windows.Forms.Cursors.Default
                MsgBox("Error on loading SH00001  sp_select_SCDISPRM_SHM00001: " & rtnStr)
                Exit Sub
            Else
                For i As Integer = 0 To rs_SCDISPRM_P.Tables("RESULT").Columns.Count - 1
                    rs_SCDISPRM_P.Tables("RESULT").Columns(i).ReadOnly = False
                Next
            End If
            grdDis.DataSource = rs_SCDISPRM_D.Tables("RESULT").DefaultView
            Display_Dis()
        End If


    End Sub
    Private Sub Display_Dis()
        With grdDis
            For i As Integer = 0 To .Columns.Count - 1
                Select Case i
                    Case 0
                        .Columns(i).HeaderText = "Del"
                        .Columns(i).Width = 40
                        .Columns(i).ReadOnly = True
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case 5
                        .Columns(i).HeaderText = "Code"
                        .Columns(i).Width = 80
                        .Columns(i).ReadOnly = True
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case 6
                        .Columns(i).HeaderText = "Description"
                        .Columns(i).Width = 350
                        rs_SCDISPRM_D.Tables("RESULT").Columns(6).ReadOnly = False
                        .Columns(i).ReadOnly = False
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case 7
                        .Columns(i).HeaderText = "Percentage/Amount"
                        .Columns(i).Width = 120
                        .Columns(i).ReadOnly = True
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case 8
                        .Columns(i).HeaderText = "%"
                        .Columns(i).Width = 75
                        .Columns(i).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case 9
                        .Columns(i).HeaderText = "Amount"
                        .Columns(i).Width = 90
                        .Columns(i).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case Else
                        .Columns(i).Visible = False
                End Select
            Next

        End With
    End Sub
    Private Sub Display_pre()
        With grdPre
            For i As Integer = 0 To .Columns.Count - 1
                Select Case i
                    Case 0
                        .Columns(0).HeaderText = "Del"
                        .Columns(0).Width = 40
                        .Columns(0).ReadOnly = True
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case 5
                        .Columns(5).HeaderText = "Code"
                        .Columns(5).Width = 80
                        .Columns(5).ReadOnly = True
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case 6
                        .Columns(6).HeaderText = "Description"
                        .Columns(6).Width = 350
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                        .Columns(6).ReadOnly = False
                        rs_SCDISPRM_P.Tables("RESULT").Columns(6).ReadOnly = False

                    Case 7
                        .Columns(7).HeaderText = "Percentage/Amount"
                        .Columns(7).Width = 120
                        .Columns(7).ReadOnly = True
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case 8
                        .Columns(8).HeaderText = "%"
                        .Columns(8).Width = 75
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case 9
                        .Columns(9).HeaderText = "Amount"
                        .Columns(9).Width = 90
                        .Columns(i).SortMode = DataGridViewColumnSortMode.NotSortable
                    Case Else
                        .Columns(i).Visible = False
                End Select
            Next
        End With

         




    End Sub

    Private Sub cmdAss_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdAss.Click
        If rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub

        Dim rs() As ADOR.Recordset
        Dim S As String
        Dim i As Integer


        'Marco Added for fixing global company code problem at 20040108
        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        '*** Folder 2

        ''***************************************************
        ''*** Get Shipping Detail  record  ******************
        ''***************************************************
        'gspStr = "sp_select_SCASSINF_SHM00001'" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
        'rtnLong = execute_SQLStatement(gspStr, rs_SCASSINF, rtnStr)

        'If rtnLong <> RC_SUCCESS Then
        '    Me.Cursor = Windows.Forms.Cursors.Default
        '    MsgBox("Error on loading SCM00001 #016 rs_SCASSINF : " & rtnStr)
        '    Exit Sub
        'Else
        '    'For i As Integer = 0 To rs_SCASSINF.Tables("RESULT").Columns.Count - 1
        '    '    rs_SCASSINF.Tables("RESULT").Columns(i).ReadOnly = False
        '    'Next
        'End If




        '***************************************************
        '***** Get Category record End  ********************
        '***************************************************
        rs_SHASSINF.Tables("result").DefaultView.RowFilter = "hai_shpseq =" & txtShpSeq.Text.Trim & " and hai_creusr <> '~*DEL*~'"


        shm1_1 = New SHM00001_1
        shm1_1.ma = Me


        shm1_1.ShowDialog()



    End Sub

    Private Sub cmdConInv_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdConInv.Click
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If

        If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub
        'If Not InputShipDetailIsValid Then Exit Sub



        shm1_2 = New SHM00001_2
        shm1_2.ma = Me



        shm1_2.ShowDialog()




    End Sub


    Private Function FindJOB() As Boolean

        Dim S As String
        Dim i As Integer

        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)

        gspStr = "sp_list_POORDDTL_SHM00001_1 '" & cboCoCde.Text & "','" & txtJobNo.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SCORDDTL, rtnStr)
        gspStr = ""

        '''''' Cursor = Cursors.Default

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading fillParameter sp_select_SCORDDTL_SHM00001_1C :" & rtnStr)
            Exit Function
        End If

        If rs_SCORDDTL.Tables("RESULT").Rows.Count > 0 Then
            FindJOB = True
        Else
            FindJOB = False
        End If


    End Function



    Private Sub DisplaySCData_Job()
        If rs_SCORDDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub
        If rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub

        flg_DisplayShipDetailData = True

        txtOrdNo.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_ordno")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_ordno")

        txtJobNo.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_jobord")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_jobno") = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_jobord")

        txtOrdSeq.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_ordseq")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordseq") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_ordseq")

        '***************************************************
        '*** Get Shipping Detail  record  ******************
        '***************************************************
        gspStr = "sp_select_SCASSINF_SHM00001'" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SCASSINF, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            Me.Cursor = Windows.Forms.Cursors.Default
            MsgBox("Error on loading SCM00001 #016 rs_SCASSINF : " & rtnStr)
            Exit Sub
        Else
            'For i As Integer = 0 To rs_SCASSINF.Tables("RESULT").Columns.Count - 1
            '    rs_SCASSINF.Tables("RESULT").Columns(i).ReadOnly = False
            'Next
        End If
        For i As Integer = 0 To rs_SHASSINF.Tables("RESULT").Columns.Count - 1
            rs_SHASSINF.Tables("RESULT").Columns(i).ReadOnly = False
        Next i

        'rs_SHASSINF.Tables("result").DefaultView.RowFilter = "hai_shpseq =" & txtShpSeq.Text.Trim
        'For index99 As Integer = 0 To rs_SHASSINF.Tables("RESULT").DefaultView.Count - 1
        '    rs_SHASSINF.Tables("RESULT").DefaultView(index99)("hai_shpseq") = 17899
        '    'temp
        '    'temp
        'Next
        'rs_SHASSINF.Tables("result").DefaultView.RowFilter = ""

        'delete 
        delete_shassinf_record(rs_SHASSINF, rs_SHASSINF.Tables("RESULT").Rows.Count - 1)


        For index9 As Integer = 0 To rs_SCASSINF.Tables("RESULT").Rows.Count - 1
            Append_Update_Asst("", txtShpSeq.Text.Trim, index9)
        Next

        '20141107
        'select..  count rows
        'delete (by filtering)    by set seq=17899   shp#  & seq, 
        'temp
        'append rows
        'update rows



        txtPurOrd.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purord")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purord") = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purord")

        txtPurSeq.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purseq")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purseq") = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purseq")

        'Michael Chiu 20170323
        txtVenNo.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_venno")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_venno") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_venno")

        Call loadcboManAdr()


            txtCusVen.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cusven")
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusven") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cusven")

            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fa") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_examven")

            gspStr = "sp_list_VNCNTINF '', '" & Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_fa"), "-")(0)) & "','U','ADR' "
            rtnLong = execute_SQLStatement(gspStr, rs_VNCNTINF2, rtnStr)
            gspStr = ""
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_faaddr") = ""
            If rs_VNCNTINF2.Tables("RESULT").Rows.Count > 0 Then
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_faaddr") = rs_VNCNTINF2.Tables("RESULT").Rows(0)("vci_adr")
            End If
            ''

        ''MichaelChiu 20170322
        If txtManNam.Text = "" Then
            txtManNam.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("vbi_vennam")
        End If

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mannam") = rs_SCORDDTL.Tables("RESULT").Rows(0)("vbi_vennam")

        'txtManAdr.Text = ""
        If sReadingIndexS - 1 >= 0 Then
            For index9 As Integer = 0 To sReadingIndexS - 1
                If txtManNam.Text.Trim = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_mannam") Then
                    If txtManAdr.Text = "" Then
                        txtManAdr.Text = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_manadr")
                    End If
                End If
            Next
        End If

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_manadr") = txtManAdr.Text.Trim



        ' Marco fix for getting incorrect unit price in shipping invoice , it should be net unit price from SC 20040128

        'txtSelPrcD.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_untprc")
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_selprc") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_untprc")

        txtSelPrcD.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_netuntprc")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_selprc") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_netuntprc")

        cboUntSelD.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_untprc")
        ' Marco fix for getting incorrect unit price in shipping invoice , it should be net unit price from SC 20040128


        txtCusPo.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cuspo")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuspo") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cuspo")

        txtresppo.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_resppo")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_resppo") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_resppo")
        txtcussku.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cussku")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cussku") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cussku")


        txtCusItm.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cusitm")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusitm") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cusitm")

        cboItmNo.Items.Clear()
        cboItmNo.Items.Add(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_itmno"))

        Call display_combo(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_itmno"), cboItmNo)

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmno") = cboItmNo.Text

        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*ADD*~" Then

            'If optSearch.Item(0) = True Then
            '    cboItmNo.Enabled = False
            'Else
            '    cboItmNo.Enabled = True
            'End If
        End If

        'Added by Mark Lau 20060929
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alsitmno") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_alsitmno")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alscolcde") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_alscolcde")

        ' Added by Mark Lau 20090515
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusstyno") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cusstyno")
        txtCusStyNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cusstyno")

        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_consolno") = rs_SCORDDTL.Tables("RESULT").Rows(0)("hid_consolno")
        'txtConsolNo.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_consolno")

        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_replacement") = rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_rplmnt")
        If rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_rplmnt") = "Y" Then
            chkrpl.Checked = True
        Else
            chkrpl.Checked = False
        End If



        'Added by Mark Lau 20080611
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_custum") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_custum")
        txtCustUM.Text = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_custum")

        txtItmTyp.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_itmtyp")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmtyp") = txtItmTyp.Text

        If txtItmTyp.Text = "ASS" Then
            cmdAss.Enabled = True
            'txtPC.Enabled = True
            'lblpc.Enabled = True
        Else
            cmdAss.Enabled = False
            'txtPC.Enabled = False
            'lblpc.Enabled = False
        End If

        cboColPck.Items.Clear()
        cboColPck.Items.Add(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_colpck"))
        Call display_combo(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_colpck"), cboColPck)
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colpck") = cboColPck.Text

        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*ADD*~" Then

            'If optSearch.Item(0) = True Then
            '    cboColPck.Enabled = False
            'Else
            '    cboColPck.Enabled = True
            'End If
        End If

        txtItmDsc.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_itmdsc")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmdsc") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_itmdsc")

        txtColCde.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_colcde")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_colcde") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_colcde")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alsitmno") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_alsitmno")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_alscolcde") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_alscolcde")

        txtCusCol.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cuscol")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_cuscol") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cuscol")

        txtColDsc.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_coldsc")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_coldsc") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_coldsc")

        txtOutQty.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_outqty")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("sod_outqty") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_outqty")

        txtShpQty.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_shpqty")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpqty") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_shpqty")

        'Rem by Lester Wu on 2005-09-12
        'txtUntCdeD.Text = ""
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_pckunt")

        txtUntCde.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_pckunt")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untcde") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_pckunt")

        txtInrCtn.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_inrctn")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_inrctn") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_inrctn")

        txtMtrCtn.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_mtrctn")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrctn") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_mtrctn")

        txtVol.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cbm")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_vol") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_cbm")


        txt_name_f1.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_name_f1")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f1") = txt_name_f1.Text
        txt_dsc_f1.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_dsc_f1")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f1") = txt_dsc_f1.Text

        txt_name_f2.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_name_f2")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f2") = txt_name_f2.Text
        txt_dsc_f2.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_dsc_f2")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f2") = txt_dsc_f2.Text

        txt_name_f3.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_name_f3")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_name_f3") = txt_name_f3.Text
        txt_dsc_f3.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_dsc_f3")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_dsc_f3") = txt_dsc_f3.Text


        If optinvsm.Checked = True Then
        Else
            txtItmShm.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("ssm_engdsc")
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_itmshm") = rs_SCORDDTL.Tables("RESULT").Rows(0)("ssm_engdsc")
        End If


        'user asked for check this data
        'txtMtrdcm.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_mtrdcm")
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrdcm") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_mtrdcm")

        'txtMtrwcm.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_mtrwcm")
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrwcm") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_mtrwcm")

        'txtMtrhcm.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_mtrhcm")
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mtrhcm") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_mtrhcm")

        'txtActVol.Text = 0
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_actvol") = 0

        txtPrcTrm.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_prctrm")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_prctrm") = rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_prctrm")

        txtPayTrm.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_paytrm")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_paytrm") = rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_paytrm")


        'Johnson 23-05-2002

        If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 1 Then
            flg_DisplayInvoiceHeaderData = True
            Call display_combo(rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_prctrm"), cboPrcTrm)
            Call display_combo(rs_SCORDDTL.Tables("RESULT").Rows(0)("soh_paytrm"), cboPayTrm)
            flg_DisplayInvoiceHeaderData = False
        End If

        'user asked for check this data
        'txtManNam.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("vbi_vennam")
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_mannam") = rs_SCORDDTL.Tables("RESULT").Rows(0)("vbi_vennam")

        'txtManAdr.Text = ""
        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_manadr") = ""

        txtPurOrd.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purord")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purord") = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purord")

        txtPurSeq.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purseq")
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_purseq") = rs_SCORDDTL.Tables("RESULT").Rows(0)("pod_purseq")

        'Lester Wu 2007-06-25
        Me.txtConFtr.Text = IIf(IsDBNull(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_conftr")), "", rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_conftr"))
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_conftr") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_conftr")

        If rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_contopc") = "Y" Then
            Me.chkPC.Checked = 1
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_contopc")
            Me.txtConFtr.Visible = True
            'lblConftr.Visible = True

            'lblPCPrc.Visible = True
            cboPCPrc.Visible = True
            cboPCPrc.Text = cboUntSelD.Text
            txtPCPrc.Visible = True
            txtPC.Visible = True
            'lblPC.Visible = True
            If rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_conftr") > 0 Then
                txtPCPrc.Text = round(rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_netuntprc") / rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_conftr"), 4)
                txtPC.Text = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_shpqty") * rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_conftr")
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pcprc") = txtPCPrc.Text
            Else
                txtPCPrc.Text = ""
                txtPC.Text = ""
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_pcprc") = IIf(txtPCPrc.Text = "", 0, txtPCPrc.Text)
            End If

            txtConFtr.Visible = True
            lblconftr.Visible = True
            txtPC.Enabled = True
            txtPC.Visible = True
            lblpc.Visible = True
            '20141007 
        Else
            Me.chkPC.Checked = False
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_contopc") = rs_SCORDDTL.Tables("RESULT").Rows(0)("sod_contopc")
            Me.txtConFtr.Visible = False
            'lblConftr.Visible = False
            'lblPCPrc.Visible = False
            cboPCPrc.Visible = False
            txtPCPrc.Visible = False
            txtPC.Visible = False
            'lblPC.Visible = False

            txtConFtr.Visible = False
            lblconftr.Visible = False
            txtPC.Enabled = False
            txtPC.Visible = False
            lblpc.Visible = False
            '20141007
        End If


        flg_DisplayShipDetailData = False
    End Sub

    Private Function Calc_GrnInvAmt(ByVal vInvNo As String) As DataSet


        Dim rs As New DataSet
        Dim rs1 As New DataSet
        Dim rs2 As New DataSet
        Dim rs3 As New DataSet

        Dim index_ds As Integer = 0

        'If rs_SHINVHDR Is Nothing Then
        '    Exit Function
        'End If
        If rs_SHINVHDR Is Nothing Then
            gspStr = "sp_list_SHINVHDR_SHM00001_1 '" & "" & "','" & "" & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_SHINVHDR, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGHDR :" & rtnStr)
                Exit Function
            End If

            'Exit Function
        End If

        rs3 = (rs_SHINVHDR.Copy)

        Dim InvTtlAmt As Double

        Dim tmpTtlAmt As Double
        Dim tmpTtlVol As Double
        Dim tmpTtlCtn As Double


        Dim tmpFmtAmt As Double
        Dim tmpAFAmt As Double
        Dim tmpGrnAmt As Double


        Dim disP As Double
        Dim disA As Double
        Dim PreP As Double
        Dim PreA As Double

        disP = 0
        disA = 0
        PreP = 0
        PreA = 0


        tmpTtlAmt = 0
        tmpTtlVol = 0
        tmpTtlCtn = 0

        tmpFmtAmt = 0
        tmpAFAmt = 0
        tmpGrnAmt = 0


        Dim ds As New DataSet
        ds.Tables.Add("result")
        ds.Tables("RESULT").Columns.Add("tmpinvno")
        ds.Tables("RESULT").Columns.Add("tmpinvamt")
        ds.Tables("RESULT").Columns.Add("tmpttlvol")
        ds.Tables("RESULT").Columns.Add("tmpttlctn")

        rs = (rs_SHIPGDTL.Copy)

        Dim Preinvno As String

        Dim GroupStr As String
        Dim InvNo As String
        Dim qty As Double
        Dim prc As Double

        Dim pervol As Double
        Dim perctn As Double

        Preinvno = "~!@#$%%^"

        qty = 0
        prc = 0

        pervol = 0
        perctn = 0


        'Lester Wu 2004/10/05 Cater Detail Record with same Cust PO,Order No, Manufacturer Name, Item No, Item Desc,Inner & Master Qty
        '                       but different selling price
        '-------------------------------------------------------------------------------------------------------------------------------
        'rs.sort = "hid_invno,hid_cuspo, hid_ordno, hid_mannam, hid_itmno, hid_itmdsc, hid_inrctn, hid_mtrctn"
        Dim sfilter As String
        sfilter = "hid_creusr <> '~*NEW*~'"

        rs.Tables("RESULT").DefaultView.RowFilter = sfilter
        For index4 As Integer = 0 To rs.Tables("RESULT").DefaultView.Count - 1

            If vInvNo <> "ALL" Then
                ds.Tables("RESULT").Rows.Add()
                index_ds = index_ds + 1


                ds.Tables("RESULT").Rows(index_ds - 1)("tmpinvno") = vInvNo
                ds.Tables("RESULT").Rows(index_ds - 1)("tmpinvamt") = 0
                ds.Tables("RESULT").Rows(index_ds - 1)("tmpttlvol") = 0
                ds.Tables("RESULT").Rows(index_ds - 1)("tmpttlctn") = 0
            Else

                For index5 As Integer = 0 To rs.Tables("RESULT").Rows.Count - 1

                    If Preinvno <> rs.Tables("RESULT").Rows(index5)("hid_invno") Then
                        ds.Tables("RESULT").Rows.Add()
                        index_ds = index_ds + 1
                        ds.Tables("RESULT").Rows(index_ds)("tmpinvno") = rs.Tables("RESULT").Rows(index5)("hid_invno")
                        ds.Tables("RESULT").Rows(index_ds)("tmpinvamt") = 0
                        ds.Tables("RESULT").Rows(index_ds)("tmpttlvol") = 0
                        ds.Tables("RESULT").Rows(index_ds)("tmpttlctn") = 0
                        Preinvno = rs.Tables("RESULT").Rows(index5)("hid_invno")
                    End If
                Next

            End If

        Next

        For index6 As Integer = 0 To ds.Tables("RESULT").Rows.Count - 1
            tmpTtlAmt = 0
            tmpTtlVol = 0
            tmpTtlCtn = 0

            tmpFmtAmt = 0
            tmpAFAmt = 0
            disP = 0
            disA = 0
            PreP = 0
            PreA = 0

            qty = 0
            prc = 0

            pervol = 0
            perctn = 0

            '''
            sfilter = "hid_invno = '" + ds.Tables("RESULT").Rows(0)("tmpinvno") + "'"
            '''movefirst
            'sfilter = "hid_invno = '" + ds.Tables("RESULT").Rows(index6)("tmpinvno") + "'"
            GroupStr = Trim(rs.Tables("RESULT").DefaultView(0)("hid_invno")) + _
                                        Trim(rs.Tables("RESULT").DefaultView(0)("hid_cuspo")) + Trim(rs.Tables("RESULT").DefaultView(0)("hid_ordno")) + _
                                        Trim(rs.Tables("RESULT").DefaultView(0)("hid_mannam")) + _
                                        Trim(rs.Tables("RESULT").DefaultView(0)("hid_itmno")) + Trim(rs.Tables("RESULT").DefaultView(0)("hid_itmdsc")) + _
                                        Trim(Str(rs.Tables("RESULT").DefaultView(0)("hid_inrctn"))) + Trim(Str(rs.Tables("RESULT").DefaultView(0)("hid_mtrctn"))) + Trim(Str(rs.Tables("RESULT").DefaultView(0)("hid_selprc")))

            rs.Tables("RESULT").DefaultView.RowFilter = sfilter
            For index4 As Integer = 0 To rs.Tables("RESULT").DefaultView.Count - 1

                If rs.Tables("RESULT").DefaultView(index4)("hid_creusr") <> "~*DEL*~" And rs.Tables("RESULT").DefaultView(index4)("hid_creusr") <> "~*NEW*~" Then
                    If GroupStr = Trim(rs.Tables("RESULT").DefaultView(index4)("hid_invno")) + _
                                     Trim(rs.Tables("RESULT").DefaultView(index4)("hid_cuspo")) + Trim(rs.Tables("RESULT").DefaultView(index4)("hid_ordno")) + _
                                     Trim(rs.Tables("RESULT").DefaultView(index4)("hid_mannam")) + _
                                     Trim(rs.Tables("RESULT").DefaultView(index4)("hid_itmno")) + Trim(rs.Tables("RESULT").DefaultView(index4)("hid_itmdsc")) + _
                                     Trim(Str(rs.Tables("RESULT").DefaultView(index4)("hid_inrctn"))) + Trim(Str(rs.Tables("RESULT").DefaultView(index4)("hid_mtrctn"))) + Trim(Str(rs.Tables("RESULT").DefaultView(index4)("hid_selprc"))) _
                                     Then
                        qty = qty + rs.Tables("RESULT").DefaultView(index4)("hid_shpqty")
                        prc = rs.Tables("RESULT").DefaultView(index4)("hid_selprc")

                        pervol = pervol + rs.Tables("RESULT").DefaultView(index4)("hid_ttlvol")
                        perctn = perctn + rs.Tables("RESULT").DefaultView(index4)("hid_ttlctn")
                    Else
                        tmpTtlAmt = tmpTtlAmt + round((qty * prc), 2)
                        tmpFmtAmt = tmpFmtAmt + round(qty * round(prc / 1.05, 2), 2)

                        tmpTtlVol = tmpTtlVol + pervol
                        tmpTtlCtn = tmpTtlCtn + perctn


                        GroupStr = Trim(rs.Tables("RESULT").DefaultView(index4)("hid_invno")) + _
                                    Trim(rs.Tables("RESULT").DefaultView(index4)("hid_cuspo")) + Trim(rs.Tables("RESULT").DefaultView(index4)("hid_ordno")) + _
                                    Trim(rs.Tables("RESULT").DefaultView(index4)("hid_mannam")) + _
                                    Trim(rs.Tables("RESULT").DefaultView(index4)("hid_itmno")) + Trim(rs.Tables("RESULT").DefaultView(index4)("hid_itmdsc")) + _
                                    Trim(Str(rs.Tables("RESULT").DefaultView(index4)("hid_inrctn"))) + Trim(Str(rs.Tables("RESULT").DefaultView(index4)("hid_mtrctn"))) + Trim(Str(rs.Tables("RESULT").DefaultView(index4)("hid_selprc")))

                        qty = rs.Tables("RESULT").DefaultView(index4)("hid_shpqty")
                        prc = rs.Tables("RESULT").DefaultView(index4)("hid_selprc")

                        pervol = rs.Tables("RESULT").DefaultView(index4)("hid_ttlvol")
                        perctn = rs.Tables("RESULT").DefaultView(index4)("hid_ttlctn")

                    End If
                End If

            Next


            tmpTtlAmt = tmpTtlAmt + round((qty * prc), 2)
            tmpTtlVol = tmpTtlVol + pervol
            tmpTtlCtn = tmpTtlCtn + perctn

            tmpFmtAmt = tmpFmtAmt + round(qty * round(prc / 1.05, 2), 2)
            tmpAFAmt = tmpAFAmt + round(tmpFmtAmt * 0.05, 2)


            'discount
            If Not rs_SHDISPRM_D Is Nothing Then

                rs1 = (rs_SHDISPRM_D.Copy)
                sfilter = "hdp_invno = '" + ds.Tables("RESULT").Rows(0)("tmpinvno") + "'"
                'sfilter = "hdp_invno = '" + rs_InvNo("tmpinvno") + "'"
                '''movefirst
                If Not rs1.Tables("RESULT") Is Nothing Then
                    rs1.Tables("RESULT").DefaultView.RowFilter = sfilter
                    For index7 As Integer = 0 To rs1.Tables("RESULT").DefaultView.Count - 1

                        If rs1.Tables("RESULT").DefaultView(index7)("hdp_creusr") <> "~*DEL*~" And rs1.Tables("RESULT").DefaultView(index7)("hdp_creusr") <> "~*NEW*~" Then
                            If rs1.Tables("RESULT").DefaultView(index7)("hdp_pctamt") = "Percentage" Then
                                disP = disP + (tmpTtlAmt * (rs1.Tables("RESULT").DefaultView(index7)("hdp_pct") / 100))
                            End If

                            If rs1.Tables("RESULT").DefaultView(index7)("hdp_pctamt") = "Amount" Then
                                disA = disA + rs1.Tables("RESULT").DefaultView(index7)("hdp_amt")
                            End If
                        End If

                    Next
                End If
            End If

            ''''            End If


            'If rs_SHDISPRM_D Is Nothing Then
            '    Calc_GrnInvAmt = ds
            '    Exit Function
            'End If


            'premium

            If Not rs2.Tables("RESULT") Is Nothing Then
                rs2 = (rs_SHDISPRM_P.Copy)
                sfilter = "hdp_invno = '" + ds.Tables("RESULT").Rows(0)("tmpinvno") + "'"
                If Not rs2.Tables("RESULT") Is Nothing Then

                    rs2.Tables("RESULT").DefaultView.RowFilter = sfilter

                    For index8 As Integer = 0 To rs2.Tables("RESULT").DefaultView.Count - 1
                        If rs2.Tables("RESULT").DefaultView(index8)("hdp_creusr") <> "~*DEL*~" And rs2.Tables("RESULT").DefaultView(index8)("hdp_creusr") <> "~*NEW*~" Then
                            If rs2.Tables("RESULT").DefaultView(index8)("hdp_pctamt") = "Percentage" Then
                                PreP = PreP + (tmpTtlAmt * (rs2.Tables("RESULT").DefaultView(index8)("hdp_pct") / 100))
                            End If

                            If rs2.Tables("RESULT").DefaultView(index8)("hdp_pctamt") = "Amount" Then
                                PreA = PreA + rs2.Tables("RESULT").DefaultView(index8)("hdp_amt")
                            End If
                        End If
                    Next
                End If

            End If

            '''
            If Not rs3.Tables("RESULT") Is Nothing Then

                sfilter = "hiv_invno = '" + ds.Tables("RESULT").Rows(0)("tmpinvno") + "'"
                If Not rs3.Tables("RESULT") Is Nothing Then
                    rs3.Tables("RESULT").DefaultView.RowFilter = sfilter

                    If rs3.Tables("RESULT").DefaultView.Count > 0 Then
                        If rs3.Tables("RESULT").DefaultView(0)("hiv_aformat") = 1 Then
                            tmpTtlAmt = tmpFmtAmt + tmpAFAmt
                        End If
                    End If
                End If
            End If

            'tmpTtlAmt = Round(tmpTtlAmt - Round(disP - disA + PreP + PreA, 2), 2)
            tmpTtlAmt = round(tmpTtlAmt - round(disP + disA, 2) + round(PreP + PreA, 2), 2)

            ds.Tables("RESULT").Rows(index6)("tmpinvamt") = tmpTtlAmt
            ds.Tables("RESULT").Rows(index6)("tmpttlvol") = tmpTtlVol
            ds.Tables("RESULT").Rows(index6)("tmpttlctn") = tmpTtlCtn

        Next

        '''''''''''''''''''

        Calc_GrnInvAmt = ds
    End Function

    Private Sub grdShpSum_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdShpSum.CellClick
        Dim Shpseq As Integer


        If sMode = cModeRead Or cboShpSts.Text.Trim = "REL - Released" Then
            Shpseq = grdShpSum.Item(grdShpSum_hid_shpseq, grdShpSum.CurrentCell.RowIndex).Value


            display_Detail(Shpseq)


            Exit Sub
        End If
        'If mode = cModeRead Or mode = cModeClear Or sMode = cModeRead Then
        '        Exit Sub
        '       End If

 
        Shpseq = grdShpSum.Item(grdShpSum_hid_shpseq, grdShpSum.CurrentCell.RowIndex).Value
        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            ''bug
            If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_Shpseq")) Then

                If Shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_Shpseq") Then
                    sReadingIndexS = i
                End If
            End If

        Next i
        If e.ColumnIndex = grdShpSum_hid_pckrmk Then
            checkBoxCell(grdShpSum)
        ElseIf e.ColumnIndex > 1 Then

            display_Detail(Shpseq)

            Exit Sub
        Else
            If Not IsNumeric(grdShpSum.Item(grdShpSum_hid_shpseq, grdShpSum.CurrentCell.RowIndex).Value) Then
                Exit Sub
            End If


            'If e.RowIndex >= 0 Then
            '    isSorting = False
            '    dr = rs_SHIPGDTL.Tables("RESULT").Select("", "hid_Shpseq")

            '    For index As Integer = 0 To dr.Length - 1
            '        If rs_SHIPGDTL.Tables("RESULT").DefaultView(e.RowIndex)("hid_Shpseq") = dr(index)("hid_Shpseq") Then
            '            sReadingIndexS = index
            '        End If
            '    Next
            'Else
            '    isSorting = True
            'End If


            If e.RowIndex >= 0 And e.ColumnIndex = 0 Then
                Recordstatus = True

                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del").ToString = "Y" Then
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = "N"

                    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") <> "~*NEW*~" Then
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_creusr") = "~*UPD*~"
                    End If

                    chkDel.Checked = False
                Else
                    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("COV") = "Y" Then
                        MsgBox ("COV rows could not delete!")
                        Exit Sub

                    end If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = "Y"
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*DEL*~"

                        chkDel.Checked = True
                    End If
                    rs_SHIPGDTL.Tables("RESULT").AcceptChanges()



                    'If grdShpSum.Columns(e.ColumnIndex).ReadOnly = False Then
                    '    If rs_SHIPGDTL.Tables("RESULT").DefaultView(e.RowIndex)("Del").ToString = "Y" Then
                    '        rs_SHIPGDTL.Tables("RESULT").DefaultView(e.RowIndex)("Del") = "N"

                    '        If rs_SHIPGDTL.Tables("RESULT").Rows(e.RowIndex).Item("hid_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(e.RowIndex).Item("hid_creusr") <> "~*NEW*~" Then
                    '            rs_SHIPGDTL.Tables("RESULT").Rows(e.RowIndex).Item("hid_creusr") = "~*UPD*~"
                    '        End If

                    '        chkDel.Checked = False
                    '    Else
                    '        rs_SHIPGDTL.Tables("RESULT").DefaultView(e.RowIndex)("Del") = "Y"
                    '        rs_SHIPGDTL.Tables("RESULT").DefaultView(e.RowIndex)("hid_creusr") = "~*DEL*~"

                    '        chkDel.Checked = True
                    '    End If
                    '    rs_SHIPGDTL.Tables("RESULT").AcceptChanges()
                    'End If
            End If

            Dim tmp_HID_CTRCFS As String

            If e.RowIndex >= 0 And e.ColumnIndex = 1 Then
                Recordstatus = True

                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Cov").ToString = "Y" Then
                    tmp_HID_CTRCFS = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("HID_CTRCFS").ToString
                    For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
                        If tmp_HID_CTRCFS = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("HID_CTRCFS").ToString Then

                            rs_SHIPGDTL.Tables("RESULT").Rows(index9)("Cov") = "N"

                            If rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("hid_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("hid_creusr") <> "~*NEW*~" Then
                                rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("hid_creusr") = "~*UPD*~"
                            End If
                        End If
                    Next


                Else

                    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctrcfs") <> "" Then
                        tmp_HID_CTRCFS = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("HID_CTRCFS").ToString
                        For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
                            If Trim(tmp_HID_CTRCFS) = Trim(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("HID_CTRCFS").ToString) Then

                                If rs_SHIPGDTL.Tables("RESULT").Rows(index9)("DEL") = "Y" Then
                                    MsgBox("Delete rows could not COV!")
                                    Exit Sub
                                End If

                         

                                rs_SHIPGDTL.Tables("RESULT").Rows(index9)("Cov") = "Y"

                                If rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("hid_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("hid_creusr") <> "~*NEW*~" Then
                                    rs_SHIPGDTL.Tables("RESULT").Rows(index9).Item("hid_creusr") = "~*UPD*~"
                                End If
                            End If
                        Next

                    Else
                        MsgBox("Container number  should not be empty for Shipment Converting!")
                    End If

                End If
                rs_SHIPGDTL.Tables("RESULT").AcceptChanges()

            End If



            ''reset detail page


            If rs_SHIPGDTL.Tables("RESULT").Rows.Count > sReadingIndexS Then
                Call display_Detail(Shpseq)
            End If

            For index_dis As Integer = 0 To rs_SHIPGDTL.Tables("result").Rows.Count - 1
                If Not IsDBNull(rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr")) Then

                    ' If rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr") > 1 Then
                    update_SHIPGDTL_dis(rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_shpseq"), rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr"))
                    ' End If

                End If

            Next

            For index_dis As Integer = 0 To rs_SHIPGDTL_dis.Tables("result").Rows.Count - 1
                If rs_SHIPGDTL_dis.Tables("result").Rows(index_dis)("hid_shpseq") = Shpseq Then
                    rs_SHIPGDTL_dis.Tables("result").Rows(index_dis)("DEL") = rs_SHIPGDTL.Tables("result").Rows(sReadingIndexS)("DEL")
                    rs_SHIPGDTL_dis.Tables("result").Rows(index_dis)("COV") = rs_SHIPGDTL.Tables("result").Rows(sReadingIndexS)("COV")
                End If
            Next



            'get seq
            ''get indexs
            '''make effect

            '''''display

        End If



        Call display_grdShpSum()
        display_Detail(Shpseq)

    End Sub


    Private Sub grdShpSum_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdShpSum.CellContentClick

    End Sub
     

    'Private Sub weight1_Click(ByVal sender As Object, ByVal e As System.EventArgs) 
    '    If weight1.Checked = True Then
    '        chk_cmin = 1
    '        weight1.Checked = True
    '    Else
    '        weight1.Checked = False
    '    End If
    '    Call display_dgPCKDIM("CM")

    'End Sub

    'Private Sub weight2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 
    'End Sub

    'Private Sub weight2_Click(ByVal sender As Object, ByVal e As System.EventArgs) 
    '    If weight2.Checked = True Then
    '        chk_cmin = 2
    '        weight2.Checked = True
    '    Else
    '        weight2.Checked = False
    '    End If
    '    Call display_dgPCKDIM("IN")

    'End Sub

    'Private Sub weight3_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 


    'End Sub

    Private Sub weight1_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles weight1.CheckedChanged

    End Sub

    'Private Sub weight3_Click(ByVal sender As Object, ByVal e As System.EventArgs) 
    '    If weight3.Checked = True Then
    '        chk_cmin = 3
    '        weight3.Checked = True
    '    Else
    '        weight3.Checked = False
    '    End If
    '    Call display_dgPCKDIM("ALL")

    'End Sub

    Private Sub weight1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles weight1.Click
        If weight1.Checked = True Then
            chk_cmin = 1
            weight1.Checked = True
        Else
            weight1.Checked = False
        End If
        Call display_dgPCKDIM("CM")
    End Sub

    Private Sub weight2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles weight2.CheckedChanged

    End Sub

    Private Sub weight2_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles weight2.Click
        If weight2.Checked = True Then
            chk_cmin = 2
            weight2.Checked = True
        Else
            weight2.Checked = False
        End If
        Call display_dgPCKDIM("IN")
    End Sub

    Private Sub weight3_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles weight3.CheckedChanged

    End Sub

    Private Sub weight3_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles weight3.Click
        If weight3.Checked = True Then
            chk_cmin = 3
            weight3.Checked = True
        Else
            weight3.Checked = False
        End If
        Call display_dgPCKDIM("ALL")
    End Sub


    Private Sub display_dgPCKDIM(ByVal type As String)


        'type
        'A - All
        'F - Functional
        'P - Pricing
        'T - Sample and TO
        'S - Summary

        'If rs_SHPCKDIM.Tables("RESULT").DefaultView.Count = 0 Then
        '    Exit Sub
        'End If
        If dgPCKDIM Is Nothing Then
            Exit Sub
        End If
        If dgPCKDIM.Rows.Count = 0 Then
            Exit Sub
        End If
        dgPCKDIM.RowHeadersWidth = 18
        dgPCKDIM.RowHeadersWidthSizeMode = DataGridViewRowHeadersWidthSizeMode.DisableResizing
        dgPCKDIM.ColumnHeadersHeight = 18
        dgPCKDIM.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.DisableResizing
        dgPCKDIM.AllowUserToResizeColumns = True
        dgPCKDIM.AllowUserToResizeRows = False
        dgPCKDIM.RowTemplate.Height = 18
        If rs_SHPCKDIM.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("RESULT").DefaultView
        dgPCKDIM.Refresh()

        Call set_read_dgPCKDIM()

        For index9 As Integer = 0 To dgPCKDIM.Columns.Count - 1
            dgPCKDIM.Columns(index9).SortMode = DataGridViewColumnSortMode.NotSortable
        Next

        Dim i As Integer
        i = 0 '0
        dgPCKDIM_hpd_cocde = i
        dgPCKDIM.Columns(i).Visible = False
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_shpno = i
        dgPCKDIM.Columns(i).Visible = False
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_shpseq = i
        dgPCKDIM.Columns(i).Visible = False
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_pdseq = i
        dgPCKDIM.Columns(i).Visible = False
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_pdnum = i
        dgPCKDIM.Columns(i).Visible = False



        '''
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_dimtyp = i
        dgPCKDIM.Columns(i).HeaderText = "Type"
        dgPCKDIM.Columns(i).Width = 37
        dgPCKDIM.Columns(i).Visible = True
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_ctnnam = i
        dgPCKDIM.Columns(i).HeaderText = "Name"
        dgPCKDIM.Columns(i).Width = 37
        dgPCKDIM.Columns(i).Visible = True
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_des = i
        dgPCKDIM.Columns(i).HeaderText = "Desc"
        dgPCKDIM.Columns(i).Width = 45
        dgPCKDIM.Columns(i).Visible = True
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_ctn = i
        dgPCKDIM.Columns(i).HeaderText = "Ctn"
        dgPCKDIM.Columns(i).Width = 63
        dgPCKDIM.Columns(i).Visible = True

        '''
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_l_cm = i
        dgPCKDIM.Columns(i).HeaderText = "L (cm)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = True
            Case "IN"
                dgPCKDIM.Columns(i).Visible = False
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_w_cm = i
        dgPCKDIM.Columns(i).HeaderText = "W (cm)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = True
            Case "IN"
                dgPCKDIM.Columns(i).Visible = False
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_h_cm = i
        dgPCKDIM.Columns(i).HeaderText = "H (cm)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = True
            Case "IN"
                dgPCKDIM.Columns(i).Visible = False
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_cbm_cm = i
        dgPCKDIM.Columns(i).HeaderText = "CBM (m)"
        dgPCKDIM.Columns(i).Width = 66
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = True
            Case "IN"
                dgPCKDIM.Columns(i).Visible = False
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_ttlcbm_cm = i
        dgPCKDIM.Columns(i).HeaderText = "TTl CBM (cm)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = True
            Case "IN"
                dgPCKDIM.Columns(i).Visible = False
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_gw_kg = i
        dgPCKDIM.Columns(i).HeaderText = "GW (kg)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = True
            Case "IN"
                dgPCKDIM.Columns(i).Visible = False
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_ttlgw_kg = i
        dgPCKDIM.Columns(i).HeaderText = "TtlGW (kg)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = True
            Case "IN"
                dgPCKDIM.Columns(i).Visible = False
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_nw_kg = i
        dgPCKDIM.Columns(i).HeaderText = "NW (kg)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = True
            Case "IN"
                dgPCKDIM.Columns(i).Visible = False
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM_hpd_ttlnw_kg = i
        dgPCKDIM.Columns(i).HeaderText = "TtlNW (kg)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = True
            Case "IN"
                dgPCKDIM.Columns(i).Visible = False
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select

        '''

        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM_hpd_l_in = i
        dgPCKDIM.Columns(i).HeaderText = "L (in)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = False
            Case "IN"
                dgPCKDIM.Columns(i).Visible = True
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM_hpd_w_in = i
        dgPCKDIM.Columns(i).HeaderText = "W (in)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = False
            Case "IN"
                dgPCKDIM.Columns(i).Visible = True
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM_hpd_h_in = i
        dgPCKDIM.Columns(i).HeaderText = "H (in)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = False
            Case "IN"
                dgPCKDIM.Columns(i).Visible = True
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM_hpd_cbm_in = i
        dgPCKDIM.Columns(i).HeaderText = "CBM (ft)"
        dgPCKDIM.Columns(i).Width = 66
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = False
            Case "IN"
                dgPCKDIM.Columns(i).Visible = True
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM_hpd_ttlcbm_in = i
        dgPCKDIM.Columns(i).HeaderText = "TtlCBM (ft)"
        dgPCKDIM.Columns(i).Width = 66
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = False
            Case "IN"
                dgPCKDIM.Columns(i).Visible = True
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM_hpd_gw_lb = i
        dgPCKDIM.Columns(i).HeaderText = "GW (lb)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = False
            Case "IN"
                dgPCKDIM.Columns(i).Visible = True
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM_hpd_ttlgw_lb = i
        dgPCKDIM.Columns(i).HeaderText = "TtlGW (lb)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = False
            Case "IN"
                dgPCKDIM.Columns(i).Visible = True
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM_hpd_nw_lb = i
        dgPCKDIM.Columns(i).HeaderText = "NW (lb)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = False
            Case "IN"
                dgPCKDIM.Columns(i).Visible = True
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM_hpd_ttlnw_lb = i
        dgPCKDIM.Columns(i).HeaderText = "TtlNW (lb)"
        dgPCKDIM.Columns(i).Width = 63
        Select Case type
            Case "CM"
                dgPCKDIM.Columns(i).Visible = False
            Case "IN"
                dgPCKDIM.Columns(i).Visible = True
            Case Else
                dgPCKDIM.Columns(i).Visible = True
        End Select


        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM.Columns(i).Visible = False
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM.Columns(i).Visible = False
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM.Columns(i).Visible = False
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM.Columns(i).Visible = False
        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub
        dgPCKDIM.Columns(i).Visible = False

        i = i + 1
        If i >= dgPCKDIM.ColumnCount Then Exit Sub

        dgPCKDIM.Columns(i).Visible = False


        'dgPCKDIM.DataSource = Nothing

        'End If

        ' ''))!reset readonly
        'Call setStatus_dgPCKDIM(sMode)
    End Sub
    Private Sub set_read_dgPCKDIM()

        For index As Integer = 0 To dgPCKDIM.ColumnCount - 1
            dgPCKDIM.Columns(index).ReadOnly = True
        Next
        If dgPCKDIM Is Nothing Then
            Exit Sub
        End If
        If dgPCKDIM.Rows.Count = 0 Then
            Exit Sub
        End If
        For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1

            If index <= dgPCKDIM.Rows.Count - 1 Then
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_l_cm).ReadOnly = False
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_w_cm).ReadOnly = False
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_h_cm).ReadOnly = False
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_l_in).ReadOnly = False
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_w_in).ReadOnly = False
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_h_in).ReadOnly = False

                '' added in 20170320
                If index Mod 2 = 1 Then
                    dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_ttlcbm_cm).ReadOnly = False
                    dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_ttlgw_kg).ReadOnly = False
                End If
            End If

            'If rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_pdnum") Mod 2 = 0 Then
            '20141203
            If index <= dgPCKDIM.Rows.Count - 1 Then
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_gw_kg).ReadOnly = False
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_nw_kg).ReadOnly = False
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_gw_lb).ReadOnly = False
                dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_nw_lb).ReadOnly = False

                '' added in 20170320
                If index Mod 2 = 1 Then
                    dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_ttlcbm_in).ReadOnly = False
                    dgPCKDIM.Rows(index).Cells(dgPCKDIM_hpd_ttlgw_lb).ReadOnly = False
                End If
            End If

            'End If


        Next

    End Sub

    Private Sub txtCartonFactor_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCartonFactor.KeyPress

        flag_txtCartonFactor_KeyPress = True


    End Sub

    Private Sub txtCartonFactor_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCartonFactor.TextChanged

        If txtCartonFactor.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then

            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtCartonFactor.Text
                If Not IsNumeric(tmpstr) Then
                    txtCartonFactor.Text = 1
                    MsgBox("Please set Carton Factor between 1 and 5!")
                    Exit Sub
                End If

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctnftr")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctnftr") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If

                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctnftr") = tmpstr
                    End If
                End If
            End If
        End If



        If flag_txtCartonFactor_KeyPress = True Then
            flag_txtCartonFactor_KeyPress = False

            If Val(Trim(txtCartonFactor.Text)) = 1 Then
                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
            ElseIf Val(Trim(txtCartonFactor.Text)) = 2 Then
                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum <= 4 "
            ElseIf Val(Trim(txtCartonFactor.Text)) = 3 Then
                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 7 and hpd_pdnum<=12 "
            ElseIf Val(Trim(txtCartonFactor.Text)) = 4 Then
                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=13 and hpd_pdnum <=20 "
            ElseIf Val(Trim(txtCartonFactor.Text)) = 5 Then
                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 21 and hpd_pdnum <=30 "
            Else
                txtCartonFactor.Text = "1"
                rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
                MsgBox("Please set Carton Factor smaller than 6!")
            End If


            For index9 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1
                If rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_shpseq") = txtShpSeq.Text.Trim Then
                    rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpdctnftr") = txtCartonFactor.Text.Trim

                    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("mode") <> "NEW" Then

                        rs_SHPCKDIM.Tables("RESULT").Rows(index9)("hpd_creusr") = "~*UDA*~"   'update mode, modify
                    End If


                End If
            Next

            rs_SHPCKDIM.Tables("RESULT").DefaultView.Sort = "hpd_shpno,hpd_shpseq,hpd_pdseq,hpd_pdnum"

            dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
            dgPCKDIM.Refresh()

        End If


        reset_dis()


    End Sub

    Private Sub cmdMore_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdMore.Click

        If rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Then Exit Sub
        'If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordno") = "" Then Exit Sub
        'for new order
        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ordseq") = 0 Then Exit Sub


        rs_SCDTLCTN = Nothing

        'Marco Added for fixing global company code problem at 20040108
        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)


        '***************************************************
        '*** Get SC Carton record     **********************
        '***************************************************
        gspStr = "sp_list_SCDTLCTN_SHM00001  '" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SYUSRRIGHT_Check :" & rtnStr)
            Exit Sub
        End If
        rs_SCDTLCTN = rs.Copy

        If rs.Tables("RESULT").Rows.Count <= 0 Then
            gspStr = "sp_list_SCDTLCTN_SHM00001_2  '" & cboCoCde.Text & "','" & txtOrdNo.Text & "','" & txtOrdSeq.Text & "'"
            rtnLong = execute_SQLStatement(gspStr, rs, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_SYUSRRIGHT_Check :" & rtnStr)
                Exit Sub
            End If

            rs_SCDTLCTN = rs.Copy

        End If




        '***************************************************
        '***** Get Shipping Detail record End  *************
        '***************************************************


        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = "hdc_shpno = '" + rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpno") + "' and " + "hdc_shpseq = " & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq")

        shm1_3 = New SHM00001_3
        shm1_3.ma = Me
        shm1_3.ShowDialog()


        '        SHM00001_3.Show()

        If Recordstatus_Dtl = True Then
            SetShipDetailUpdateFlag()
        End If

    End Sub

    Private Sub optDocTyp0_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optDocTyp0.CheckedChanged

    End Sub

    Private Sub txtInvDat_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtInvDat.TextChanged

    End Sub

    Private Sub cboPrcTrm_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboPrcTrm.KeyUp

        If cboPrcTrm.Text.Length > 0 Then
            Call auto_search_combo(cboPrcTrm, e.KeyCode)
        End If

    End Sub

    Private Sub cboPrcTrm_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboPrcTrm.LostFocus

    End Sub

    Private Sub cboPrcTrm_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboPrcTrm.SelectedIndexChanged
        Dim rs_tmp_SHIPGDTL As DataSet
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        rs_tmp_SHIPGDTL = rs_SHIPGDTL.Copy

        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If cboPrcTrm.Text.Trim <> "" Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = cboPrcTrm.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_prctrm") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_prctrm") = tmpstr


                    rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView.RowFilter = "hid_invno	= '" & cboInvNo.Text.Trim & "'"
                    For index9 As Integer = 0 To rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView.Count - 1
                        rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_prctrm") = tmpstr
                        If rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_creusr") <> "~*NEW*~" _
                        And rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_creusr") <> "~*ADD*~" Then
                            rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_creusr") = "~*UPD*~"
                        End If
                    Next


                End If
            End If
        End If

    End Sub

    Private Sub display_Component()


        If rs_SHCPTBKD Is Nothing Then
            Exit Sub
        End If

        If rs_SHCPTBKD.Tables("result") Is Nothing Then
            Exit Sub
        End If

        rs_SHCPTBKD.Tables("result").DefaultView.RowFilter = "shb_ordseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & ""
        rs_SHCPTBKD.Tables("RESULT").DefaultView.Sort = "shb_cptseq"
        dgSCCPTBKD.DataSource = rs_SHCPTBKD.Tables("result").DefaultView
        dgSCCPTBKD.Refresh()

        With dgSCCPTBKD
            For i As Integer = 0 To .Columns.Count - 1
                Select Case i
                    Case 0
                        dgSCCPTBKD_Del = i
                        .Columns(i).HeaderText = "Del"
                        .Columns(i).Width = 40
                        .Columns(i).ReadOnly = False
                    Case 5
                        .Columns(i).HeaderText = "  SEQ"
                        .Columns(i).Width = 30
                        .Columns(i).ReadOnly = False
                        .Columns(i).Visible = False


                    Case 6
                        dgSCCPTBKD_Mat = i
                        .Columns(i).HeaderText = "Material"
                        .Columns(i).Width = 199
                        .Columns(i).ReadOnly = False
                    Case 7
                        dgSCCPTBKD_Cur = i
                        .Columns(i).HeaderText = "CCY"
                        .Columns(i).Width = 44
                        .Columns(i).ReadOnly = True
                    Case 8
                        dgSCCPTBKD_CstAmt = i
                        .Columns(i).HeaderText = "Cost $"
                        .Columns(i).Width = 58
                        .Columns(i).ReadOnly = True
                    Case 9
                        dgSCCPTBKD_CstPer = i
                        .Columns(i).HeaderText = "Cost %"
                        .Columns(i).Width = 58
                        .Columns(i).ReadOnly = False
                    Case 10
                        dgSCCPTBKD_Wgt = i
                        .Columns(i).HeaderText = "WGT %"
                        .Columns(i).Width = 58
                        .Columns(i).ReadOnly = False
                    Case Else
                        .Columns(i).Visible = False
                End Select
            Next
        End With
    End Sub


    Private Sub display_SHSMPINV()
        If rs_SHSMPINV Is Nothing Then
            Exit Sub
        End If
        If rs_SHSMPINV.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If

        rs_SHSMPINV.Tables("RESULT").DefaultView.RowFilter = ""
        'rs_SHSMPINV.Tables("RESULT").DefaultView.RowFilter = "hsi_shinvno ='" & rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invno") & "'"
        'rs_SHSMPINV.Tables("RESULT").DefaultView.Sort = "hsi_sminvno  desc"


        dg_sainvhdr.DataSource = rs_SHSMPINV.Tables("RESULT").DefaultView
        dg_sainvhdr.Refresh()


        With dg_sainvhdr
            For i As Integer = 0 To .Columns.Count - 1
                Select Case i
                    Case dg_sainvhdr_Del
                        .Columns(i).HeaderText = "Del"
                        .Columns(i).Width = 40
                        '.ReadOnly = False
                    Case dg_sainvhdr_hsi_cocde
                        .Columns(i).Width = 0
                        .Columns(i).Visible = False
                        '.ReadOnly = True
                    Case dg_sainvhdr_hsi_cus1no
                        .Columns(i).Width = 0
                        .Columns(i).Visible = False
                        '.ReadOnly = True
                    Case dg_sainvhdr_hsi_shpno
                        .Columns(i).Width = 0
                        .Columns(i).Visible = False
                        '.ReadOnly = True
                    Case dg_sainvhdr_hsi_shinvno
                        .Columns(i).Width = 0
                        .Columns(i).Visible = False
                        '.ReadOnly = True
                    Case dg_sainvhdr_hsi_sminvno
                        .Columns(i).HeaderText = "Sample Invoice#"
                        .Columns(i).Width = 99
                        '.ReadOnly = True
                    Case dg_sainvhdr_hsi_rmk
                        .Columns(i).HeaderText = "Remark"
                        .Columns(i).Width = 199
                        '.ReadOnly = False
                    Case dg_sainvhdr_creusr
                        .Columns(i).Width = 0
                        .Columns(i).Visible = False
                        '.ReadOnly = True
                End Select
            Next
        End With
    End Sub

    'Private Sub grdDiscount_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdDiscount.CellEndEdit
    '    If DisPreEditCellCol = 5 Then
    '        If sender.name = "grdDiscount" Then
    '            textboxCombo(sender, "Discount")
    '        Else
    '            textboxCombo(sender, "Premium")
    '        End If

    '    End If


    'End Sub

    Private Sub grdDisPre_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdDiscount.CellEndEdit, grdPremium.CellEndEdit
        If DisPreEditCellCol = 5 Then
            If sender.name = "grdDiscount" Then
                textboxCombo(sender, "Discount")
            Else
                textboxCombo(sender, "Premium")
            End If

        End If
        If DisPreEditCellCol = 8 Then
            If sender.name = "grdDiscount" Then
                If grdDiscount.Rows(e.RowIndex).Cells(7).Value = "Percentage" Then
                    rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = "hiv_invno= '" & grdDiscount.Rows(e.RowIndex).Cells(12).Value & "'"
                    If Not IsDBNull((grdDiscount.Rows(e.RowIndex).Cells(8).Value)) Then
                        If rs_SHINVHDR.Tables("RESULT").DefaultView.Count > 0 Then
                            grdDiscount.Rows(e.RowIndex).Cells(9).Value = Val(rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_invamt")) * Val(grdDiscount.Rows(e.RowIndex).Cells(8).Value) / 100
                        End If

                    End If

                End If

            Else

                If grdPremium.Rows(e.RowIndex).Cells(7).Value = "Percentage" Then
                    rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = "hiv_invno= '" & grdPremium.Rows(e.RowIndex).Cells(12).Value & "'"

                    If Not IsDBNull((grdPremium.Rows(e.RowIndex).Cells(8).Value)) Then
                        If rs_SHINVHDR.Tables("RESULT").DefaultView.Count > 0 Then
                            grdPremium.Rows(e.RowIndex).Cells(9).Value = Val(rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_invamt")) * Val(grdPremium.Rows(e.RowIndex).Cells(8).Value) / 100

                        End If


                    End If
                End If

                'textboxCombo(sender, "Premium")
            End If
        ElseIf DisPreEditCellCol = 9 Then
            If sender.name = "grdDiscount" Then
                'If grdDiscount.Rows(e.RowIndex).Cells(7).Value = "Amount" Then
                '    rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = "hiv_invno= '" & grdDiscount.Rows(e.RowIndex).Cells(12).Value & "'"
                '    If Not IsDBNull(Val(grdDiscount.Rows(e.RowIndex).Cells(9).Value)) Then
                '        If rs_SHINVHDR.Tables("RESULT").DefaultView.Count > 0 Then
                '            grdDiscount.Rows(e.RowIndex).Cells(8).Value = round(Val(grdDiscount.Rows(e.RowIndex).Cells(9).Value) / Val(rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_invamt")), 3)
                '        End If

                '    End If

                'End If

            Else

                'If grdPremium.Rows(e.RowIndex).Cells(7).Value = "Amount" Then
                '    rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = "hiv_invno= '" & grdPremium.Rows(e.RowIndex).Cells(12).Value & "'"
                '    If Not IsDBNull(Val(grdPremium.Rows(e.RowIndex).Cells(9).Value)) Then
                '        If rs_SHINVHDR.Tables("RESULT").DefaultView.Count > 0 Then
                '            grdPremium.Rows(e.RowIndex).Cells(8).Value = round(Val(grdPremium.Rows(e.RowIndex).Cells(9).Value) / Val(rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_invamt")), 3)

                '        End If

                '    End If

                'End If

                'textboxCombo(sender, "Premium")
            End If
        End If

        Recordstatus = True

    End Sub
    Private Sub grdDiscount_CellEnter(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdDiscount.CellEnter


        If grdDiscount.Focused = True Then
            Grid_Got_Focus = "grdDiscount"
            Label72.ForeColor = Color.Green
            Label73.ForeColor = Color.Black
        ElseIf grdPremium.Focused = True Then
            Grid_Got_Focus = "grdPremium"
            Label72.ForeColor = Color.Black
            Label73.ForeColor = Color.Green
        End If

    End Sub

    Private Sub grdDiscount_CellValidating(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellValidatingEventArgs) Handles grdDiscount.CellValidating

        Dim row As DataGridViewRow = grdDiscount.CurrentRow
        Dim strNewVal As String

        strNewVal = row.Cells(e.ColumnIndex).EditedFormattedValue.ToString.Trim

        'If strNewVal = Nothing Then
        '    Exit Sub
        'End If

        Select Case e.ColumnIndex
            Case grdDiscount_hdp_pct, grdDiscount_hdp_amt

                If Not IsNumeric(strNewVal) Then
                    MsgBox("Please input Numeric value!")
                    e.Cancel = True
                    Exit Sub
                End If


        End Select
         Select e.ColumnIndex
            Case grdDiscount_hdp_pct
                If Not ((strNewVal >= 0) And (strNewVal <= 100)) Then
                    MsgBox("Data Out of Range!")
                    e.Cancel = True
                    Exit Sub
                End If

            Case grdDiscount_hdp_amt

                If Not rs_SHINVHDR Is Nothing Then
                    If Not rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_invamt") Is Nothing Then
                        If Not ((strNewVal >= 0) And (strNewVal <= Val(rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_invamt")))) Then
                            MsgBox("Data Out of Range!")
                            e.Cancel = True
                            Exit Sub
                        End If
                    End If

                End If


        End Select
    End Sub


    Private Sub grdDiscount_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles grdDiscount.Click

    End Sub

    Private Sub grdDiscount_DataError(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewDataErrorEventArgs) Handles grdDiscount.DataError
        'Intentionally Left Empty
    End Sub

    Private Sub grdDiscount_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles grdDiscount.DoubleClick
        '''
    End Sub

    Private Sub grdDiscount_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles grdDiscount.EditingControlShowing
        If grdDiscount.RowCount = 0 Then
            Exit Sub
        End If

        e.CellStyle.BackColor = Color.White

        Select Case grdDiscount.CurrentCell.ColumnIndex

            Case grdDiscount_hdp_pctamt, grdDiscount_hdp_pct, grdDiscount_hdp_amt
                Dim txtbox_grdDiscount As TextBox = CType(e.Control, TextBox)
                If Not (txtbox_grdDiscount Is Nothing) Then
                    AddHandler txtbox_grdDiscount.KeyPress, AddressOf txtbox_grdDiscount_KeyPress
                End If
        End Select


    End Sub
    
    Private Sub txtbox_grdDiscount_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        Dim iRow As Integer = grdDiscount.CurrentCell.RowIndex
        Dim iCol As Integer = grdDiscount.CurrentCell.ColumnIndex

        Dim curvalue As String = grdDiscount.CurrentCell.EditedFormattedValue

        Select Case grdDiscount.CurrentCell.ColumnIndex
            Case grdDiscount_hdp_pctamt, grdDiscount_hdp_pct, grdDiscount_hdp_amt
                If Not (e.KeyChar.ToString() = "." Or e.KeyChar = vbBack Or (e.KeyChar.ToString() >= "0" And e.KeyChar.ToString() <= "9")) Then
                    e.KeyChar = ""
                End If
        End Select
    End Sub
    Private Sub grdDiscount_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles grdDiscount.Enter
        If grdDis.Focused = True Then
            Grid_Got_Focus = "grdDiscount"
            'lblDisInfo.ForeColor = Color.Green
            'lblPreInfo.ForeColor = Color.Black
        ElseIf grdPre.Focused = True Then
            Grid_Got_Focus = "grdPremium"
            'lblDisInfo.ForeColor = Color.Black
            'lblPreInfo.ForeColor = Color.Green
        End If
    End Sub

    Private Sub grdDiscount_GiveFeedback(ByVal sender As Object, ByVal e As System.Windows.Forms.GiveFeedbackEventArgs) Handles grdDiscount.GiveFeedback

    End Sub

    Private Sub grdDiscount_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles grdDiscount.GotFocus

        Grid_Got_Focus = "grdDiscount"

        If Not grdDiscount.CurrentCell Is Nothing Then
            gi_grdDiscount_row = grdDiscount.CurrentCell.RowIndex
        Else
            gi_grdDiscount_row = -1
        End If

    End Sub

    'Private Sub grdPremium_CellBeginEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellCancelEventArgs) Handles grdPremium.CellBeginEdit
    '    Recordstatus = True
    '    DisPreEditCellRow = sender.CurrentCell.RowIndex
    '    DisPreEditCellCol = sender.CurrentCell.ColumnIndex

    'End Sub

    Private Sub grdPremium_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdPremium.CellClick
        '''list box set here
        If mmdSave.Enabled = False Then
            Exit Sub
        End If

        If grdPremium.CurrentCell Is Nothing Then
            Exit Sub
        End If
     
        If grdPremium.CurrentCell.ColumnIndex = dgvDisPre_Desc Then
            Exit Sub
        End If

        If Not e.RowIndex >= 0 Then
            Exit Sub
        End If

        If grdPremium.SelectedCells.Count = 1 Then
            If grdPremium.CurrentCell.ColumnIndex = dgvDisPre_Dele Then
                Recordstatus = True
                'rs_SHDISPRM_P.Tables("RESULT").Columns("del").ReadOnly = False
                rs_SHDISPRM_P.Tables("RESULT").Columns("hdp_creusr").ReadOnly = False
                If rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("del").ToString = " " Then
                    If rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_creusr").ToString <> "~*ADD*~" Then
                        rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_creusr") = "~*DEL*~"
                        rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("del") = "Y"
                    ElseIf rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_creusr").ToString = "~*ADD*~" Then
                        rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_creusr") = "~*NEW*~"
                        rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("del") = "Y"
                    End If
                Else
                    If rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_creusr").ToString = "~*NEW*~" Or rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_creusr").ToString = "~*ADD*~" Then
                        rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_creusr") = "~*ADD*~"
                    Else
                        rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_creusr") = "~*UPD*~"
                    End If
                    rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("del") = " "
                End If
            ElseIf grdPremium.SelectedCells.Item(0).ColumnIndex = dgvDisPre_Code Then
                dropdownCombo(grdPremium, "Premium")
            ElseIf grdPremium.SelectedCells.Item(0).ColumnIndex = dgvDisPre_PctAmt Then
                If rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_pctamt") = "Percentage" Then
                    rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_pctamt") = "Amount"
                    rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_pct") = 0
                    rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_amt") = 0
                    'grdPremium.Columns(8).ReadOnly = True
                    'grdPremium.Columns(9).ReadOnly = False

                    grdPremium.Rows(grdPremium.CurrentCell.RowIndex).Cells(8).ReadOnly = True
                    grdPremium.Rows(grdPremium.CurrentCell.RowIndex).Cells(9).ReadOnly = False

                    grdPremium.Refresh()
                Else
                    rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_pctamt") = "Percentage"
                    rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_pct") = 0
                    rs_SHDISPRM_P.Tables("RESULT").Rows(grdPremium.CurrentCell.RowIndex)("hdp_amt") = 0
                    'grdPremium.Columns(8).ReadOnly = False
                    'grdPremium.Columns(9).ReadOnly = True


                    grdPremium.Rows(grdPremium.CurrentCell.RowIndex).Cells(8).ReadOnly = False
                    grdPremium.Rows(grdPremium.CurrentCell.RowIndex).Cells(9).ReadOnly = True

                    grdPremium.Refresh()
                End If
            End If
        End If

        grdPremium.Columns(6).ReadOnly = False
        grdPremium.Refresh()

        Grid_Got_Focus = "grdPremium"

        If Not grdPremium.CurrentCell Is Nothing Then
            gi_grdPremium_row = grdPremium.CurrentCell.RowIndex
        Else
            gi_grdPremium_row = -1
        End If


    End Sub

    Private Sub grdPremium_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdPremium.CellContentClick

    End Sub

    'Private Sub grdPremium_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdPremium.CellEndEdit
    '    If DisPreEditCellCol = 5 Then
    '        If sender.name = "grdDiscount" Then
    '            textboxCombo(sender, "Discount")
    '        Else
    '            textboxCombo(sender, "Premium")
    '        End If

    '    End If

    'End Sub

    Private Sub grdPremium_CellEnter(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdPremium.CellEnter
        If grdDiscount.Focused = True Then
            Grid_Got_Focus = "grdDiscount"
            Label72.ForeColor = Color.Green
            Label73.ForeColor = Color.Black
        ElseIf grdPremium.Focused = True Then
            Grid_Got_Focus = "grdPremium"
            Label72.ForeColor = Color.Black
            Label73.ForeColor = Color.Green
        End If

    End Sub

    Private Sub grdPremium_CellMouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellMouseEventArgs) Handles grdPremium.CellMouseDown

    End Sub

    Private Sub grdPremium_DataError(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewDataErrorEventArgs) Handles grdPremium.DataError
        'Intentionally Left Empty
    End Sub

    Private Sub grdPremium_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles grdPremium.Enter
        If grdDiscount.Focused = True Then
            Grid_Got_Focus = "grdDiscount"
            'lblDisInfo.ForeColor = Color.Green
            'lblPreInfo.ForeColor = Color.Black
        ElseIf grdPremium.Focused = True Then
            Grid_Got_Focus = "grdPremium"
            'lblDisInfo.ForeColor = Color.Black
            'lblPreInfo.ForeColor = Color.Green
        End If

    End Sub

    Private Sub grdPremium_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles grdPremium.GotFocus

        Grid_Got_Focus = "grdPremium"

        If Not grdPremium.CurrentCell Is Nothing Then
            gi_grdPremium_row = grdPremium.CurrentCell.RowIndex
        Else
            gi_grdPremium_row = -1
        End If

    End Sub

    Private Sub lstCde_P_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles lstCde_P.DoubleClick

        lstCde_P.Visible = False

        If rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_cde") <> lstCde_P.Text Then
            If rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_creusr") = "~*ADD*~" Or rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_creusr") = "~*NEW*~" Then
                rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_cde") = Split(lstCde_P.Text, " - ")(0) '*** assign list box value to grid
                rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_dsc") = Split(lstCde_P.Text, " - ")(1) '*** assign list box value to grid
            End If
        End If

        If grdPremium.Enabled And grdPremium.Visible Then grdPremium.Focus()
        'temp
        'Call grdPremium_CellContentClick()


    End Sub

    Private Sub lstCde_P_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles lstCde_P.KeyPress
        ''32 ?
        If e.KeyChar = Chr(13) Then
            Call lstCde_P_DblClick()
        End If

    End Sub
    Private Sub lstCde_P_DblClick()
        lstCde_P.Visible = False

        If rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_cde") <> lstCde_P.Text Then
            If rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_creusr") = "~*ADD*~" Or rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_creusr") = "~*NEW*~" Then
                rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_cde") = Split(lstCde_P.Text, " - ")(0) '*** assign list box value to grid
                rs_SHDISPRM_P.Tables("result").Rows(0)("hdp_dsc") = Split(lstCde_P.Text, " - ")(1) '*** assign list box value to grid
            End If
        End If
        If grdPremium.Enabled And grdPremium.Visible Then grdPremium.Focus()
        'temp
        '        Call grdPremium_CellContentClick()
    End Sub

    Private Sub lstCde_P_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles lstCde_P.LostFocus
        lstCde_P.Visible = False
        If grdPremium.Enabled And grdPremium.Visible Then grdPremium.Focus()



    End Sub


    Private Sub lstCde_P_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lstCde_P.SelectedIndexChanged

    End Sub


    Private Sub SetStatusShipDISPRM()
        lstCde_D.Visible = False
        lstCde_P.Visible = False

        If rs_SHINVHDR.Tables("RESULT").Rows.Count <= 0 Then
            cboInvNoP.Enabled = False
            grdDiscount.Enabled = False
            grdPremium.Enabled = False
            grdDiscount.ReadOnly = False
            grdPremium.ReadOnly = False
        Else
            If GetCtrlValue(cboShpSts) = "REL" Or GetCtrlValue(cboShpSts) = "CLO" Then
                cboInvNoP.Enabled = True
                grdDiscount.Enabled = True
                grdPremium.Enabled = True
                grdDiscount.ReadOnly = False
                grdPremium.ReadOnly = False
            Else
                cboInvNoP.Enabled = True
                grdDiscount.Enabled = True
                grdPremium.Enabled = True
                grdDiscount.ReadOnly = False
                grdPremium.ReadOnly = False
            End If
        End If
    End Sub


    Private Sub grdDiscount_ButtonClick(ByVal ColIndex As Integer)

        If Not grdDiscount.ReadOnly = True Then Exit Sub

        If ColIndex = 0 And grdDiscount.Columns(0).ToString = "Y" Then
            'temp
            'Call grdDiscount_DoubleClick()
        End If

        With rs_SHDISPRM_D

            If ColIndex = 1 Then

                If rs_SHDISPRM_D.Tables("result").Rows(0)("hdp_creusr") = "~*ADD*~" Or rs_SHDISPRM_D.Tables("result").Rows(0)("hdp_creusr") = "~*NEW*~" Then
                    lstCde_D.Visible = True
                    If lstCde_D.Enabled And lstCde_D.Visible Then lstCde_D.Focus()

                    'temp
                    'lstCde_D.Move (grdDiscount.Columns(ColIndex).Left + grdDiscount.Left), (grdDiscount.RowTop(grdDiscount.row) + grdDiscount.Columns(ColIndex).Top + grdDiscount.Top)
                    lstCde_D.SelectedIndex = 0
                End If
            ElseIf ColIndex = 3 Then
                'temp
                'grdDiscount_DoubleClick()
            End If

        End With
    End Sub


    Private Sub lstCde_D_DblClick()
        lstCde_D.Visible = False

        If rs_SHDISPRM_D.Tables("result").Rows(0)("hdp_cde") <> lstCde_D.Text Then
            If rs_SHDISPRM_D.Tables("result").Rows(0)("hdp_creusr") = "~*ADD*~" Or rs_SHDISPRM_D.Tables("result").Rows(0)("hdp_creusr") = "~*NEW*~" Then
                rs_SHDISPRM_D.Tables("result").Rows(0)("hdp_cde") = Split(lstCde_D.Text, " - ")(0) '*** assign list box value to grid
                rs_SHDISPRM_D.Tables("result").Rows(0)("hdp_dsc") = Split(lstCde_D.Text, " - ")(1) '*** assign list box value to grid
            End If
        End If
        If grdDiscount.Enabled And grdDiscount.Visible Then grdDiscount.Focus()
        't
        'grdDiscount_Click()
    End Sub

    Private Sub lstCde_D_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles lstCde_D.KeyPress
        If e.KeyChar = Chr(13) Then
            lstCde_D_DblClick()
        End If
    End Sub

    Private Sub lstCde_D_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles lstCde_D.LostFocus
        lstCde_D.Visible = False
        If grdDiscount.Enabled And grdDiscount.Visible Then grdDiscount.Focus()

    End Sub


    'Private Sub lstCde_D_KeyPress(ByVal KeyAscii As Integer)
    '    't
    '    If e.KeyChar = Chr(13) Then
    '        lstCde_D_DblClick()
    '    End If
    'End Sub

    'Private Sub lstCde_D_LostFocus()
    '    lstCde_D.Visible = False
    '    If grdDiscount.Enabled And grdDiscount.Visible Then grdDiscount.Focus()
    'End Sub

    Private Sub lstCde_D_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lstCde_D.SelectedIndexChanged

    End Sub


    Private Sub dropdownCombo(ByVal dgv As DataGridView, ByVal typ As String)
        Dim cboCell As New DataGridViewComboBoxCell
        Dim iCol As Integer = dgv.CurrentCell.ColumnIndex
        Dim iRow As Integer = dgv.CurrentCell.RowIndex

        Dim row As DataGridViewRow = dgv.CurrentRow

        'If Not TypeOf dgv.Rows(iRow).Cells(iCol) Is DataGridViewComboBoxCell Then
        Select Case typ
            Case "Discount"
                For i As Integer = 0 To lstDis.Count - 1
                    cboCell.Items.Add(lstDis.Item(i).ToString)
                Next
            Case "Premium"
                For i As Integer = 0 To lstPre.Count - 1
                    cboCell.Items.Add(lstPre.Item(i).ToString)
                Next
        End Select

        cboCell.DropDownWidth = 250
        cboCell.DisplayStyle = DataGridViewComboBoxDisplayStyle.ComboBox

        dgv.Rows(iRow).Cells(iCol) = cboCell
        dgv.Rows(iRow).Cells(iCol).ReadOnly = False
        'End If
    End Sub

    'Private Sub textboxCombo(ByVal dgv As DataGridView, ByVal typ As String)
    '    Dim txtCell As New DataGridViewTextBoxCell
    '    Dim iCol As Integer = DisPreEditCellCol
    '    Dim iRow As Integer = DisPreEditCellRow

    '    Dim code As String = Split(dgv.Rows(iRow).Cells(iCol).Value, " - ")(0)
    '    Dim desc As String
    '    If Trim(dgv.Rows(iRow).Cells(iCol).Value.ToString) = "" Then
    '        desc = " "
    '    ElseIf dgv.Rows(iRow).Cells(iCol).Value.ToString.Length < 3 Then
    '        desc = dgv.Rows(iRow).Cells("hdp_dsc").Value
    '    Else
    '        desc = Split(dgv.Rows(iRow).Cells(iCol).Value, " - ")(1)
    '    End If
    '    Select Case typ
    '        Case "Discount"
    '            Dim drD() As DataRow = rs_SCDISPRM_D.Tables("RESULT").Select("hdp_seqno = '" & dgv.Rows(iRow).Cells("hdp_seqno").Value.ToString & "'")
    '            drD(0).Item("hdp_dsc") = desc
    '            drD(0).Item("hdp_cde") = code
    '        Case "Premium"
    '            Dim drP() As DataRow = rs_SCDISPRM_P.Tables("RESULT").Select("hdp_seqno = '" & dgv.Rows(iRow).Cells("hdp_seqno").Value.ToString & "'")
    '            drP(0).Item("hdp_dsc") = desc
    '            drP(0).Item("hdp_cde") = code
    '    End Select
    '    dgv.Rows(iRow).Cells(iCol) = txtCell
    '    dgv.Refresh()
    '    dgv.Rows(iRow).Cells(iCol).ReadOnly = False
    'End Sub

    Private Sub textboxCombo(ByVal dgv As DataGridView, ByVal typ As String)
        Dim txtCell As New DataGridViewTextBoxCell
        Dim iCol As Integer = DisPreEditCellCol
        Dim iRow As Integer = DisPreEditCellRow

        Dim code As String = Split(dgv.Rows(iRow).Cells(iCol).Value, " - ")(0)
        Dim desc As String
        If Trim(dgv.Rows(iRow).Cells(iCol).Value.ToString) = "" Then
            desc = " "
        ElseIf dgv.Rows(iRow).Cells(iCol).Value.ToString.Length < 3 Then
            If Not IsDBNull(dgv.Rows(iRow).Cells("hdp_dsc").Value) Then
                desc = dgv.Rows(iRow).Cells("hdp_dsc").Value
            Else
                desc = ""
            End If
        Else
            desc = Split(dgv.Rows(iRow).Cells(iCol).Value, " - ")(1)
        End If
        Select Case typ
            Case "Discount"
                Dim drD() As DataRow = rs_SHDISPRM_D.Tables("RESULT").Select("hdp_seqno = '" & dgv.Rows(iRow).Cells("hdp_seqno").Value.ToString & "'")
                drD(0).Item("hdp_dsc") = desc
                drD(0).Item("hdp_cde") = code
            Case "Premium"
                Dim drP() As DataRow = rs_SHDISPRM_P.Tables("RESULT").Select("hdp_seqno = '" & dgv.Rows(iRow).Cells("hdp_seqno").Value.ToString & "'")
                drP(0).Item("hdp_dsc") = desc
                drP(0).Item("hdp_cde") = code
        End Select
        ' dgv.Rows(iRow).Cells(iCol) = txtCell
        dgv.Refresh()
        dgv.Rows(iRow).Cells(iCol).ReadOnly = False
    End Sub
    Private Function updateInvoiceDetail(ByVal InvNo As String)

        Dim rs As DataSet

        Dim InvTtlAmt As Double
        Dim tmpTtlAmt As Double
        Dim tmpTtlCtn As Double
        Dim tmpTtlNwg As Double
        Dim tmpTtlGwg As Double
        Dim tmpTtlVol As Double
        Dim tmpFmtAmt As Double
        Dim tmpAFAmt As Double

        Dim disP As Double
        Dim disA As Double
        Dim PreP As Double
        Dim PreA As Double

        disP = 0
        disA = 0
        PreP = 0
        PreA = 0


        tmpTtlAmt = 0
        tmpTtlCtn = 0
        tmpTtlNwg = 0
        tmpTtlGwg = 0
        tmpTtlVol = 0
        tmpFmtAmt = 0
        tmpAFAmt = 0

        InvTtlAmt = 0

        'Lester Wu 2004/08/30
        'Variable to store text field values
        Dim strTtlAmtI_tmp As String


        '        If cboInvNo.Enabled And cboInvNo.Visible Then cboInvNo.SetFocus
        If rs_SHIPGDTL Is Nothing Then
            Exit Function
        End If

        If rs_SHIPGDTL.Tables("result") Is Nothing Then Exit Function

        If rs_SHIPGDTL.Tables("result").Rows.Count > 0 Then
            If rs_SHINVHDR.Tables("result").Rows.Count > 0 Then
                If InvNo = "" Then Exit Function

                rs = (rs_SHIPGDTL.Copy)

                rs.Tables("result").DefaultView.RowFilter = "hid_invno = '" + InvNo + "'"
                For index1 As Integer = 0 To rs.Tables("result").DefaultView.Count - 1
                    If rs.Tables("result").DefaultView(index1)("hid_creusr") <> "~*DEL*~" And rs.Tables("result").DefaultView(index1)("hid_creusr") <> "~*NEW*~" Then
                        tmpTtlCtn = tmpTtlCtn + rs.Tables("result").DefaultView(index1)("hid_ttlctn")
                        tmpTtlVol = tmpTtlVol + rs.Tables("result").DefaultView(index1)("hid_ttlvol")
                    End If

                Next


                Dim GroupStr As String
                Dim qty As Double
                Dim prc As Double

                qty = 0
                prc = 0


                ' AY Fix Invoice Header Bugs, if this invoice no. don't have shipping details at 20/01/2002

                If rs.Tables("result").DefaultView.Count <> 0 Then

                    'Lester Wu 2004/10/05 Cater Detail Record with same Cust PO,Order No, Manufacturer Name, Item No, Item Desc,Inner & Master Qty
                    '                       but different selling price
                    '-------------------------------------------------------------------------------------------------------------------------------
                    '                    rs.sort = "hid_cuspo, hid_ordno, hid_mannam, hid_itmno, hid_itmdsc, hid_inrctn, hid_mtrctn"

                    rs.Tables("result").DefaultView.Sort = "hid_cuspo, hid_ordno, hid_mannam, hid_itmno, hid_itmdsc, hid_inrctn, hid_mtrctn,hid_selprc"
                    '-------------------------------------------------------------------------------------------------------------------------------

                    'Lester Wu 2004/10/05 Cater Detail Record with same Cust PO,Order No, Manufacturer Name, Item No, Item Desc,Inner & Master Qty
                    '                       but different selling price
                    '-------------------------------------------------------------------------------------------------------------------------------
                    '                    GroupStr = Trim(rs.Tables("result").DefaultView(index)("hid_cuspo")) + Trim(rs.Tables("result").DefaultView(index)("hid_ordno")) + Trim(rs.Tables("result").DefaultView(index)("hid_mannam")) + _
                    '                                        Trim(rs.Tables("result").DefaultView(index)("hid_itmno")) + Trim(rs.Tables("result").DefaultView(index)("hid_itmdsc")) + _
                    '                                        Trim(str(rs.Tables("result").DefaultView(index)("hid_inrctn"))) + Trim(str(rs.Tables("result").DefaultView(index)("hid_mtrctn")))

                    GroupStr = Trim(rs.Tables("result").DefaultView(0)("hid_cuspo")) + Trim(rs.Tables("result").DefaultView(0)("hid_ordno")) + Trim(rs.Tables("result").DefaultView(0)("hid_mannam")) + _
                                        Trim(rs.Tables("result").DefaultView(0)("hid_itmno")) + Trim(rs.Tables("result").DefaultView(0)("hid_itmdsc")) + _
                                        Trim(Str(rs.Tables("result").DefaultView(0)("hid_inrctn"))) + Trim(Str(rs.Tables("result").DefaultView(0)("hid_mtrctn"))) + Trim(Str(rs.Tables("result").DefaultView(0)("hid_selprc")))
                    '-------------------------------------------------------------------------------------------------------------------------------

                End If

                For index As Integer = 0 To rs.Tables("result").DefaultView.Count - 1

                    If rs.Tables("result").DefaultView(index)("hid_creusr") <> "~*DEL*~" And rs.Tables("result").DefaultView(index)("hid_creusr") <> "~*NEW*~" Then
                        'Lester Wu 2004/10/05 Cater Detail Record with same Cust PO,Order No, Manufacturer Name, Item No, Item Desc,Inner & Master Qty
                        '                       but different selling price
                        '-------------------------------------------------------------------------------------------------------------------------------
                        '                        If GroupStr = Trim(rs.Tables("result").DefaultView(index)("hid_cuspo")) + Trim(rs.Tables("result").DefaultView(index)("hid_ordno")) + Trim(rs.Tables("result").DefaultView(index)("hid_mannam")) + _
                        '                                        Trim(rs.Tables("result").DefaultView(index)("hid_itmno")) + Trim(rs.Tables("result").DefaultView(index)("hid_itmdsc")) + _
                        '                                        Trim(str(rs.Tables("result").DefaultView(index)("hid_inrctn"))) + Trim(str(rs.Tables("result").DefaultView(index)("hid_inrctn"))) _
                        '                                        Then
                        If GroupStr = Trim(rs.Tables("result").DefaultView(index)("hid_cuspo")) + Trim(rs.Tables("result").DefaultView(index)("hid_ordno")) + Trim(rs.Tables("result").DefaultView(index)("hid_mannam")) + _
                                        Trim(rs.Tables("result").DefaultView(index)("hid_itmno")) + Trim(rs.Tables("result").DefaultView(index)("hid_itmdsc")) + _
                                        Trim(Str(rs.Tables("result").DefaultView(index)("hid_inrctn"))) + Trim(Str(rs.Tables("result").DefaultView(index)("hid_mtrctn"))) + Trim(Str(rs.Tables("result").DefaultView(index)("hid_selprc"))) _
                                        Then

                            '-------------------------------------------------------------------------------------------------------------------------------
                            '                            'Lester Wu 2007-06-27
                            '                            If rs.Tables("result").DefaultView(index)("hid_contopc") = "Y" Then
                            '                                qty = qty + rs.Tables("result").DefaultView(index)("hid_shpqty") * rs.Tables("result").DefaultView(index)("hid_conftr")
                            '                                prc = rs.Tables("result").DefaultView(index)("hid_pcprc")
                            '                            Else
                            qty = qty + rs.Tables("result").DefaultView(index)("hid_shpqty")
                            prc = rs.Tables("result").DefaultView(index)("hid_selprc")
                            '                            End If
                        Else
                            tmpTtlAmt = tmpTtlAmt + round((qty * prc), 2)
                            tmpFmtAmt = tmpFmtAmt + round(qty * round(prc / 1.05, 2), 2)
                            'ROUND(SUM(dbo.SHIPGDTL.hid_shpqty) * MAX(ROUND(dbo.SHIPGDTL.hid_selprc / 1.05, 4)), 2)
                            'Lester Wu 2004/10/05 Cater Detail Record with same Cust PO,Order No, Manufacturer Name, Item No, Item Desc,Inner & Master Qty
                            '                       but different selling price
                            '-------------------------------------------------------------------------------------------------------------------------------
                            '                            GroupStr = Trim(rs.Tables("result").DefaultView(index)("hid_cuspo")) + Trim(rs.Tables("result").DefaultView(index)("hid_ordno")) + Trim(rs.Tables("result").DefaultView(index)("hid_mannam")) + _
                            '                                       Trim(rs.Tables("result").DefaultView(index)("hid_itmno")) + Trim(rs.Tables("result").DefaultView(index)("hid_itmdsc")) + _
                            '                                       Trim(str(rs.Tables("result").DefaultView(index)("hid_inrctn"))) + Trim(str(rs.Tables("result").DefaultView(index)("hid_inrctn")))
                            GroupStr = Trim(rs.Tables("result").DefaultView(index)("hid_cuspo")) + Trim(rs.Tables("result").DefaultView(index)("hid_ordno")) + Trim(rs.Tables("result").DefaultView(index)("hid_mannam")) + _
                                       Trim(rs.Tables("result").DefaultView(index)("hid_itmno")) + Trim(rs.Tables("result").DefaultView(index)("hid_itmdsc")) + _
                                       Trim(Str(rs.Tables("result").DefaultView(index)("hid_inrctn"))) + Trim(Str(rs.Tables("result").DefaultView(index)("hid_mtrctn"))) + Trim(Str(rs.Tables("result").DefaultView(index)("hid_selprc")))
                            '-------------------------------------------------------------------------------------------------------------------------------
                            '                            If rs.Tables("result").DefaultView(index)("hid_contopc") = "Y" Then
                            '                                qty = rs.Tables("result").DefaultView(index)("hid_shpqty") * rs.Tables("result").DefaultView(index)("hid_conftr")
                            '                                prc = rs.Tables("result").DefaultView(index)("hid_pcprc")
                            '                            Else
                            qty = rs.Tables("result").DefaultView(index)("hid_shpqty")
                            prc = rs.Tables("result").DefaultView(index)("hid_selprc")
                            '                            End If
                        End If
                    End If
                Next

                tmpTtlAmt = tmpTtlAmt + round((qty * prc), 2)
                tmpFmtAmt = tmpFmtAmt + round(qty * round(prc / 1.05, 2), 2)

                If rs_SHINVHDR.Tables("result").DefaultView.Count = 0 Then
                    Exit Function
                End If
                'FOB or +/- 5%
                If rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_aformat") = "2" Then
                    'If optFOB(2).Value = True Then
                    InvTtlAmt = tmpTtlAmt
                    tmpFmtAmt = tmpTtlAmt
                    tmpAFAmt = 0
                Else
                    tmpAFAmt = round(tmpFmtAmt * 0.05, 2)
                    InvTtlAmt = tmpAFAmt + tmpFmtAmt
                    'tmpTtlAmt = tmpAFAmt + tmpFmtAmt
                End If

                Dim tmptmpttlamt

                'discount
                If Not rs_SHDISPRM_D Is Nothing Then
                    rs = (rs_SHDISPRM_D.Copy)
                    rs.Tables("result").DefaultView.RowFilter = "hdp_invno = '" + InvNo + "'"

                    For index As Integer = 0 To rs.Tables("result").DefaultView.Count - 1
                        If rs.Tables("result").DefaultView(index)("hdp_creusr") <> "~*DEL*~" And rs.Tables("result").DefaultView(index)("hdp_creusr") <> "~*NEW*~" Then
                            'If rs.Tables("result").DefaultView(index)("hdp_pct") <> 0 Then
                            'If rs.Tables("result").DefaultView(index)("hdp_type") = "D" Then
                            If rs.Tables("result").DefaultView(index)("hdp_pctamt") = "Percentage" Then
                                disP = disP + (tmpTtlAmt * (rs.Tables("result").DefaultView(index)("hdp_pct") / 100))
                            End If

                            'If rs.Tables("result").DefaultView(index)("hdp_amt") <> 0 Then
                            'If rs.Tables("result").DefaultView(index)("hdp_type") = "P" Then
                            If rs.Tables("result").DefaultView(index)("hdp_pctamt") = "Amount" Then
                                disA = disA + rs.Tables("result").DefaultView(index)("hdp_amt")
                            End If
                        End If
                    Next
                End If
                'premium

                If Not rs_SHDISPRM_P Is Nothing Then
                    rs = rs_SHDISPRM_P.Copy
                    rs.Tables("result").DefaultView.RowFilter = "hdp_invno = '" + InvNo + "'"

                    For index As Integer = 0 To rs.Tables("result").DefaultView.Count - 1
                        If rs.Tables("result").DefaultView(index)("hdp_creusr") <> "~*DEL*~" And rs.Tables("result").DefaultView(index)("hdp_creusr") <> "~*NEW*~" Then
                            'If rs.Tables("result").DefaultView(index)("hdp_pct") <> 0 Then
                            If rs.Tables("result").DefaultView(index)("hdp_pctamt") = "Percentage" Then
                                PreP = PreP + (tmpTtlAmt * (rs.Tables("result").DefaultView(index)("hdp_pct") / 100))
                            End If

                            'If rs.Tables("result").DefaultView(index)("hdp_amt") <> 0 Then
                            If rs.Tables("result").DefaultView(index)("hdp_pctamt") = "Amount" Then
                                PreA = PreA + rs.Tables("result").DefaultView(index)("hdp_amt")
                            End If
                        End If
                    Next

                End If

                tmpTtlAmt = round(InvTtlAmt - round(disP + disA, 2) + round(PreP + PreA, 2), 2)


                '                txtTtlAmtI.Text = tmpTtlAmt
                '                flg_DisplayInvoiceHeaderData = True
                '                If rs_SHINVHDR.Tables("result").defaultview(0)("hiv_ttlamt") <> CDbl(txtTtlAmtI.Text) Then
                '                    rs_SHINVHDR.Tables("result").defaultview(0)("hiv_ttlamt") = txtTtlAmtI.Text
                '                    Call SetShipInvHdrUpdateFlag_NoUpdateDate
                '                End If
                flg_DisplayInvoiceHeaderData = True

                If rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_ttlamt") <> CDbl(tmpTtlAmt) Then
                    rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_ttlamt") = tmpTtlAmt
                    Call SetShipInvHdrUpdateFlag_NoUpdateDate()
                End If
                '                If rs_SHINVHDR.Tables("result").defaultview(0)("hiv_invamt") <> tmpFmtAmt Or tmpFmtAmt <> CDbl(txtInvAmt.Text) Then
                '                    txtInvAmt.Text = tmpFmtAmt
                '                    rs_SHINVHDR.Tables("result").defaultview(0)("hiv_invamt") = tmpFmtAmt
                '                    Call SetShipInvHdrUpdateFlag_NoUpdateDate
                '                End If
                If rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_invamt") <> tmpFmtAmt Then
                    rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_invamt") = tmpFmtAmt
                    Call SetShipInvHdrUpdateFlag_NoUpdateDate()
                End If

                '                If rs_SHINVHDR.Tables("result").defaultview(0)("hiv_afamt") <> tmpAFAmt Or tmpAFAmt <> CDbl(txtAFamt.Text) Then
                '                    txtAFamt.Text = tmpAFAmt
                '                    rs_SHINVHDR.Tables("result").defaultview(0)("hiv_afamt") = tmpAFAmt
                '                    Call SetShipInvHdrUpdateFlag_NoUpdateDate
                '                End If
                If rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_afamt") <> tmpAFAmt Then
                    rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_afamt") = tmpAFAmt
                    Call SetShipInvHdrUpdateFlag_NoUpdateDate()
                End If


                '                TxtTtlCtnI.Text = tmpTtlCtn
                '                If rs_SHINVHDR.Tables("result").defaultview(0)("hiv_ttlctn") <> CDbl(TxtTtlCtnI.Text) Then
                '                    rs_SHINVHDR.Tables("result").defaultview(0)("hiv_ttlctn") = TxtTtlCtnI.Text
                '                    Call SetShipInvHdrUpdateFlag_NoUpdateDate
                '                End If
                If rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_ttlctn") <> CDbl(tmpTtlCtn) Then
                    rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_ttlctn") = tmpTtlCtn
                    Call SetShipInvHdrUpdateFlag_NoUpdateDate()
                End If

                '                txtTtlVolI.Text = round(tmpTtlVol, 4)
                '                If rs_SHINVHDR.Tables("result").defaultview(0)("hiv_ttlvol") <> CDbl(txtTtlVolI.Text) Then
                '                    rs_SHINVHDR.Tables("result").defaultview(0)("hiv_ttlvol") = txtTtlVolI.Text
                '                    Call SetShipInvHdrUpdateFlag_NoUpdateDate
                '                End If
                tmpTtlVol = round(tmpTtlVol, 4)
                If rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_ttlvol") <> CDbl(tmpTtlVol) Then
                    rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_ttlvol") = tmpTtlVol
                    Call SetShipInvHdrUpdateFlag_NoUpdateDate()
                End If

                flg_DisplayInvoiceHeaderData = False
            End If
        End If

    End Function

    Private Sub SetShipInvHdrUpdateFlag_NoUpdateDate()
        If rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_creusr") <> "~*ADD*~" And _
                    rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_creusr") <> "~*UPD*~" And _
                    rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_creusr") <> "~*DEL*~" And _
                    rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_creusr") <> "~*NEW*~" Then

            rs_SHINVHDR.Tables("result").DefaultView(0)("hiv_creusr") = "~*UPD*~"

            'txtInvDat.Text = Date
            'rs_SHINVHDR.Tables("result").defaultview(0)("hiv_invdat") = Format(Date, "mm/dd/yyyy")

        End If
    End Sub


    Public Sub InitShipInv()
        cboInvNo.Items.Clear()
        cboInvNoP.Items.Clear()

        For index As Integer = 0 To rs_SHINVHDR.Tables("result").Rows.Count - 1
            cboInvNo.Items.Add(rs_SHINVHDR.Tables("result").Rows(index)("hiv_invno"))
            cboInvNoP.Items.Add(rs_SHINVHDR.Tables("result").Rows(index)("hiv_invno"))
        Next

    End Sub

    Private Sub grdPre_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdPre.CellContentClick

    End Sub

    Private Sub cmdSelSM_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSelSM.Click


        sms = New frmShipMarkSelect
        sms.ma = Me

        sms.ShowDialog()

    End Sub

    Private Sub optinvsm_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optinvsm.CheckedChanged

    End Sub

    Private Sub optinvsm_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles optinvsm.Click
        If optinvsm.Checked = True Then
            txtItmShm.Enabled = False
            cmdSelSM.Enabled = True
        Else
            txtItmShm.Enabled = True
            cmdSelSM.Enabled = False
        End If
    End Sub

    Private Sub optitmsm_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optitmsm.CheckedChanged

    End Sub

    Private Sub optitmsm_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles optitmsm.Click

        If optitmsm.Checked = True Then
            txtItmShm.Enabled = True
            cmdSelSM.Enabled = False
        Else
            txtItmShm.Enabled = False
            cmdSelSM.Enabled = True
        End If

    End Sub

    Private Sub dgPCKDIM_CellBeginEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellCancelEventArgs) Handles dgPCKDIM.CellBeginEdit

        Dim row As DataGridViewRow = dgPCKDIM.CurrentRow
        Dim strOldVal As String
        strOldVal = row.Cells(e.ColumnIndex).EditedFormattedValue.ToString.Trim
        pdm_strOldVal = row.Cells(e.ColumnIndex).EditedFormattedValue.ToString.Trim


    End Sub

    Private Sub dgPCKDIM_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgPCKDIM.CellClick

        flag_cellendedit = False

        sReadingIndexP = e.RowIndex

        If ttlctn_times_mtr() = False Then
            MsgBox("cartoon quantity must be the times of Master quantity!")
            txtShpQty.Focus()
        End If

    End Sub

    Private Sub dgPCKDIM_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgPCKDIM.CellContentClick

    End Sub

    Private Sub dgPCKDIM_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgPCKDIM.CellEndEdit
        If flag_checking = True Then
            Exit Sub
        End If
        If rs_SHPCKDIM Is Nothing Then
            Exit Sub
        End If

        If rs_SHPCKDIM.Tables("RESULT").DefaultView.Count = 0 Then
            Exit Sub
        End If
        If IsDBNull(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_cm")) Then
            Exit Sub
        End If

        If e.RowIndex = 0 And e.ColumnIndex = 9 Then
            If CDbl(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_cm")) = CDbl(tmp_dgPCKDIM_0_9) Then
                Exit Sub
            End If

        End If

        '''default view


        Dim tmp_dgPCKDIM_hpd_l_cm As Decimal
        Dim tmp_dgPCKDIM_hpd_w_cm As Decimal
        Dim tmp_dgPCKDIM_hpd_h_cm As Decimal

        Dim tmp_dgPCKDIM_hpd_gw_kg As Decimal

        Dim tmp_dgPCKDIM_hpd_nw_kg As Decimal


        Dim tmp_dgPCKDIM_hpd_l_in As Decimal
        Dim tmp_dgPCKDIM_hpd_w_in As Decimal
        Dim tmp_dgPCKDIM_hpd_h_in As Decimal

        Dim tmp_dgPCKDIM_hpd_gw_lb As Decimal

        Dim tmp_dgPCKDIM_hpd_nw_lb As Decimal



        Dim row As DataGridViewRow = dgPCKDIM.CurrentRow
        Dim strNewVal As String
        strNewVal = row.Cells(e.ColumnIndex).EditedFormattedValue.ToString.Trim
        pdm_strNewVal = row.Cells(e.ColumnIndex).EditedFormattedValue.ToString.Trim


        If pdm_strNewVal = pdm_strOldVal Then
            Exit Sub
        End If

        Call rs_shpckdim_row_filtering()

        If rs_SHPCKDIM Is Nothing Then
            Exit Sub
        End If
        If rs_SHPCKDIM.Tables("RESULT").DefaultView.Count = 0 Then
            Exit Sub
        End If
        If IsDBNull(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_creusr")) Then
            Exit Sub
        End If
        If rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_creusr") <> "~*ADD*~" And _
           rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_creusr") <> "~*DEL*~" And _
           rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_creusr") <> "~*NEW*~" Then

            For index9 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                If rs_SHPCKDIM.Tables("RESULT").DefaultView(index9)("hpd_creusr") <> "~*ADD*~" And rs_SHPCKDIM.Tables("RESULT").DefaultView(index9)("hpd_creusr") <> "~*NEW*~" And rs_SHPCKDIM.Tables("RESULT").DefaultView(index9)("hpd_creusr") <> "~*UDA*~" Then
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(index9)("hpd_creusr") = "~*UPD*~"
                End If

            Next

            ' rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_creusr") = "~*UPD*~"

        End If


        'If strNewVal = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)(e.ColumnIndex).ToString() Then
        '    flag_cellendedit = True
        '    Exit Sub
        'End If

        Select Case e.ColumnIndex
            '1
            '2
            '3
            '4
            '5
            '6
            Case dgPCKDIM_hpd_l_cm, dgPCKDIM_hpd_w_cm, dgPCKDIM_hpd_h_cm
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_cm"), 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_cm"), 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_cm"), 3)

                tmp_dgPCKDIM_hpd_l_cm = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_cm"))
                tmp_dgPCKDIM_hpd_w_cm = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_cm"))
                tmp_dgPCKDIM_hpd_h_cm = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_cm"))

                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_cbm_cm") = round(tmp_dgPCKDIM_hpd_l_cm * tmp_dgPCKDIM_hpd_w_cm * tmp_dgPCKDIM_hpd_h_cm / 1000000, 4)
                'total
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm") = 0
                For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                    If e.RowIndex Mod 2 = 0 Then
                        If index Mod 2 = 0 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm") + rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_cbm_cm") * rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ctn"), 2)

                        End If
                    Else
                        If index Mod 2 = 1 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm") + round(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_cbm_cm") * rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ctn"), 2)
                        End If
                    End If
                Next


                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm"), 2)

                'ttl to all
                For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                    If e.RowIndex Mod 2 = 0 Then
                        If index Mod 2 = 0 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm"), 2)
                        End If
                    Else
                        If index Mod 2 = 1 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm"), 2)
                        End If
                    End If
                Next


                'Convert
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_in") = round(tmp_dgPCKDIM_hpd_l_cm * 0.3937, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_in") = round(tmp_dgPCKDIM_hpd_w_cm * 0.3937, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_in") = round(tmp_dgPCKDIM_hpd_h_cm * 0.3937, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_cbm_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_cbm_cm") * 35.3146625, 4)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm") * 35.3146625, 2)

            Case dgPCKDIM_hpd_l_in, dgPCKDIM_hpd_w_in, dgPCKDIM_hpd_h_in
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_in"), 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_in"), 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_in"), 3)

                tmp_dgPCKDIM_hpd_l_in = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_in"))
                tmp_dgPCKDIM_hpd_w_in = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_in"))
                tmp_dgPCKDIM_hpd_h_in = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_in"))

                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_cbm_in") = round(tmp_dgPCKDIM_hpd_l_in * tmp_dgPCKDIM_hpd_w_in * tmp_dgPCKDIM_hpd_h_in / (12 * 12 * 12), 4)
                'total
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in") = 0
                For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                    If e.RowIndex Mod 2 = 0 Then
                        If index Mod 2 = 0 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in") + round(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_cbm_in") * rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ctn"), 2)
                        End If
                    Else
                        If index Mod 2 = 1 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in") + round(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_cbm_in") * rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ctn"), 2)
                        End If
                    End If
                Next
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in"), 2)
                'ttl to all
                For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                    If e.RowIndex Mod 2 = 0 Then
                        If index Mod 2 = 0 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in")
                        End If
                    Else
                        If index Mod 2 = 1 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in")
                        End If
                    End If
                Next


                'Convert
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_cm") = round(tmp_dgPCKDIM_hpd_l_in / 0.3937, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_cm") = round(tmp_dgPCKDIM_hpd_w_in / 0.3937, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_cm") = round(tmp_dgPCKDIM_hpd_h_in / 0.3937, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_cbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_cbm_in") / 35.3146625, 4)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in") / 35.3146625, 2)


            Case dgPCKDIM_hpd_gw_kg
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_kg"), 3)
                'ttl
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_kg"), 3) * rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ctn")
                'conv
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_kg") / 0.45359, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_kg") / 0.45359, 3)
            Case dgPCKDIM_hpd_nw_kg
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_kg"), 3)
                'ttl
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_kg"), 3) * rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ctn")


                'conv
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_kg") / 0.45359, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_kg") / 0.45359, 3)
            Case dgPCKDIM_hpd_gw_lb
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_lb"), 3)
                'ttl
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_lb"), 3) * rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ctn")
                'conv
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_lb") * 0.45359, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_lb") * 0.45359, 3)

            Case dgPCKDIM_hpd_nw_lb
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_lb"), 3)
                'ttl
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_lb"), 3) * rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ctn")
                'conv
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_lb") * 0.45359, 3)
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_lb") * 0.45359, 3)
                '''added by Michael Chiu 20170320
                'Dim tmp_dgPCKDIM_hpd_ttlcbm_cm As Decimal
                'Dim tmp_dgPCKDIM_hpd_ttlcbm_in As Decimal
                ' Dim tmp_dgPCKDIM_hpd_ttlgw_kg As Decimal
                ' Dim tmp_dgPCKDIM_hpd_ttlgw_lb As Decimal


            Case dgPCKDIM_hpd_ttlcbm_cm
                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm"), 2)
                'ttl to all
                For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                    If e.RowIndex Mod 2 = 0 Then
                        If index Mod 2 = 0 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm"), 2)
                        End If
                    Else
                        If index Mod 2 = 1 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm"), 2)
                        End If
                    End If
                Next
                '' added in 20170320
            Case dgPCKDIM_hpd_ttlcbm_in

                rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in"), 2)
                'ttl to all
                For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                    If e.RowIndex Mod 2 = 0 Then
                        If index Mod 2 = 0 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in")
                        End If
                    Else
                        If index Mod 2 = 1 Then
                            rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in")
                        End If
                    End If
                Next
                'Case dgPCKDIM_hpd_ttlgw_kg


        End Select


        If rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_dimtyp") = "Act" Then
            If Not IsDBNull(rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_l_cm")) Then


                If _
                        rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_dimtyp") = "Mod" Then


                    'If rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_l_cm") = 0 _
                    'And rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_w_cm") = 0 _
                    'And rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_h_cm") = 0 _
                    'And rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_gw_kg") = 0 _
                    'And rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_ttlgw_kg") = 0 _
                    '        And rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_dimtyp") = "Mod" Then



                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_l_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_cm")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_w_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_cm")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_h_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_cm")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_cbm_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_cbm_cm")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_ttlcbm_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_gw_kg") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_kg")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_ttlgw_kg") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_kg")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_nw_kg") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_kg")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_ttlnw_kg") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_kg")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_l_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_l_in")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_w_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_w_in")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_h_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_h_in")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_cbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_cbm_in")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_gw_lb") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_gw_lb")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_ttlgw_lb") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_lb")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_nw_lb") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_nw_lb")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex + 1)("hpd_ttlnw_lb") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_lb")




                End If

            End If

        End If

        If e.RowIndex Mod 2 = 0 Then
            For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                If index Mod 2 = 1 Then
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm")
                    ''rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlgw_kg") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_kg")
                    'rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlnw_kg") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_kg")
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_in")
                    'rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlgw_lb") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlgw_lb")
                    'rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlnw_lb") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlnw_lb")
                End If
            Next
        End If

        If rs_SHPCKDIM Is Nothing Then
            Exit Sub
        End If


        'dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
        dgPCKDIM.Refresh()


        'Call Sub_cm_in()
        'Call Sub_kg_lb()
        'Call Sub_in_cm()
        'Call Sub_lb_kg()
        '        display_dimension("All")
        Recordstatus = True

        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlvol") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm")
        'txtTtlVolD.Text = rs_SHPCKDIM.Tables("RESULT").DefaultView(e.RowIndex)("hpd_ttlcbm_cm")
        'txtActVol.Text = 1
        'txtmodvol.Text = 1



        '        refto10%()
        If chk_cmin = 1 Then
            weight1.Checked = True
            weight1.Checked = True
            display_dgPCKDIM("CM")
        ElseIf chk_cmin = 2 Then
            weight2.Checked = True
            weight2.Checked = True
            display_dgPCKDIM("IN")
        Else
            weight3.Checked = True
            weight3.Checked = True
            display_dgPCKDIM("ALL")
        End If








        last_dg_PCKDIM_row = e.RowIndex
        last_dg_PCKDIM_col = e.ColumnIndex


        flag_cellendedit = True

    End Sub

    Private Sub dgPCKDIM_CellEnter(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgPCKDIM.CellEnter

        ''Call move_cell()

    End Sub

    Private Sub dgPCKDIM_CellLeave(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgPCKDIM.CellLeave
         '        Call move_cell()

        'e.ColumnIndex
        'e.RowIndex  - 1

        '        Call display_dgPCKDIM("All")

    End Sub

    Private Sub dgPCKDIM_CellValidated(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgPCKDIM.CellValidated


    End Sub
    Private Sub dgPCKDIM_CellValidating(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellValidatingEventArgs) Handles dgPCKDIM.CellValidating
        If rs_SHPCKDIM Is Nothing Then
            Exit Sub
        End If
        If rs_SHPCKDIM.Tables("result") Is Nothing Then
            Exit Sub
        End If
        If rs_SHPCKDIM.Tables("result").Rows.Count = 0 Then
            Exit Sub
        End If


        Dim row As DataGridViewRow = dgPCKDIM.CurrentRow
        Dim strNewVal As String

        strNewVal = row.Cells(e.ColumnIndex).EditedFormattedValue.ToString.Trim

        If strNewVal = Nothing Then
            Exit Sub
        End If

        Dim i As Integer
        i = 0 '0
        dgPCKDIM_hpd_cocde = i
        i = i + 1
        dgPCKDIM_hpd_shpno = i
        i = i + 1
        dgPCKDIM_hpd_shpseq = i
        i = i + 1
        dgPCKDIM_hpd_pdseq = i
        i = i + 1
        dgPCKDIM_hpd_pdnum = i

        i = i + 1
        dgPCKDIM_hpd_dimtyp = i
        i = i + 1
        dgPCKDIM_hpd_ctnnam = i
        i = i + 1
        dgPCKDIM_hpd_des = i
        i = i + 1
        dgPCKDIM_hpd_ctn = i

        '''
        i = i + 1
        dgPCKDIM_hpd_l_cm = i
        i = i + 1
        dgPCKDIM_hpd_w_cm = i
        i = i + 1
        dgPCKDIM_hpd_h_cm = i
        i = i + 1
        dgPCKDIM_hpd_cbm_cm = i
        i = i + 1
        dgPCKDIM_hpd_ttlcbm_cm = i
        i = i + 1
        dgPCKDIM_hpd_gw_kg = i
        i = i + 1
        dgPCKDIM_hpd_ttlgw_kg = i
        i = i + 1
        dgPCKDIM_hpd_nw_kg = i
        i = i + 1
        dgPCKDIM_hpd_ttlnw_kg = i
        i = i + 1
        dgPCKDIM_hpd_l_in = i
        i = i + 1
        dgPCKDIM_hpd_w_in = i
        i = i + 1
        dgPCKDIM_hpd_h_in = i
        i = i + 1
        dgPCKDIM_hpd_cbm_in = i
        i = i + 1
        dgPCKDIM_hpd_ttlcbm_in = i
        i = i + 1
        dgPCKDIM_hpd_gw_lb = i
        i = i + 1
        dgPCKDIM_hpd_ttlgw_lb = i
        i = i + 1
        dgPCKDIM_hpd_nw_lb = i
        i = i + 1
        dgPCKDIM_hpd_ttlnw_lb = i

        Select Case e.ColumnIndex
            Case dgPCKDIM_hpd_l_cm, dgPCKDIM_hpd_w_cm, dgPCKDIM_hpd_h_cm, dgPCKDIM_hpd_gw_kg, dgPCKDIM_hpd_nw_kg, dgPCKDIM_hpd_l_in, dgPCKDIM_hpd_w_in, dgPCKDIM_hpd_h_in, dgPCKDIM_hpd_gw_lb, dgPCKDIM_hpd_nw_lb


                If Not IsNumeric(strNewVal) Then
                    MsgBox("Please input Numeric value!")
                    e.Cancel = True
                    Exit Sub
                End If

                If Not (strNewVal >= 0) Then
                    MsgBox("Please input positive value!")
                    e.Cancel = True
                    Exit Sub
                End If

        End Select


    End Sub

    Private Sub dgPCKDIM_CellValuePushed(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellValueEventArgs) Handles dgPCKDIM.CellValuePushed

    End Sub

    Private Sub dgPCKDIM_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.Click
        flag_cellendedit = False
    End Sub

    Private Sub dgPCKDIM_CurrentCellChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.CurrentCellChanged


    End Sub

    Private Sub dgPCKDIM_CursorChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.CursorChanged

    End Sub

    Private Sub dgPCKDIM_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles dgPCKDIM.EditingControlShowing
        'If dgPCKDIM.RowCount = 0 Then
        '    Exit Sub
        'End If

        'e.CellStyle.BackColor = Color.White




        'Select Case dgPCKDIM.CurrentCell.ColumnIndex
        '    ''items to input
        '    Case dgPCKDIM_hpd_l_cm, dgPCKDIM_hpd_w_cm, dgPCKDIM_hpd_h_cm,
        '        dgPCKDIM_hpd_l_in, dgPCKDIM_hpd_w_in, dgPCKDIM_hpd_h_in,
        '        dgPCKDIM_hpd_gw_kg, dgPCKDIM_hpd_nw_kg, dgPCKDIM_hpd_gw_lb, dgPCKDIM_hpd_nw_lb

        '        Dim txtbox As TextBox = CType(e.Control, TextBox)
        '        If Not (txtbox Is Nothing) Then
        '            AddHandler txtbox.KeyPress, AddressOf txt_dgPCKDIM_KeyPress
        '            AddHandler txtbox.TextChanged, AddressOf txt_dgPCKDIM_TextChanged
        '        End If
        '        'Case dgPCKDIM_qpe_prctrm, dgPCKDIM_qpe_ftyprctrm
        '        '    If TypeOf (e.Control) Is DataGridViewComboBoxEditingControl Then
        '        '        Dim cboBox As ComboBox = CType(e.Control, ComboBox)
        '        '        If Not cboBox Is Nothing Then
        '        '            'RemoveHandler cboBox.SelectedIndexChanged, AddressOf cbo_dgPCKDIM_SelectedIndexChanged
        '        '            'AddHandler cboBox.SelectedIndexChanged, AddressOf cbo_dgPCKDIM_SelectedIndexChanged
        '        '        End If
        '        '    End If
        'End Select

        'If sMode = "UPDATE" Or sMode = "ADD" Then
        '    Recordstatus = True
        '    Dim CREUSR As String = dgPCKDIM.Item(dgPCKDIM_qud_creusr, dgPCKDIM.CurrentCell.RowIndex).Value
        '    If CREUSR <> "~*ADD*~" And CREUSR <> "~*NEW*~" Then
        '        dgPCKDIM.Item(dgPCKDIM_qud_creusr, dgPCKDIM.CurrentCell.RowIndex).Value = "~*UPD*~"
        '    End If
        '    'If rs_IMPRCINF.Tables("RESULT").Rows(dgPCKDIM.CurrentCell.RowIndex).Item("qpe_creusr") <> "~*ADD*~" Then
        '    '    rs_IMPRCINF.Tables("RESULT").Rows(dgPCKDIM.CurrentCell.RowIndex).Item("qpe_creusr") = "~*UPD*~"
        '    'End If
        'End If


    End Sub

    Private Sub dgPCKDIM_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.Enter

    End Sub

    Private Sub dgPCKDIM_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.GotFocus

        '''
    End Sub

    Private Sub dgPCKDIM_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgPCKDIM.KeyDown
        'Select e.KeyCode
        '    'Case Keys.Left
        '    '    txtShpQty.Focus()
        'End Select

    End Sub

    Private Sub dgPCKDIM_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles dgPCKDIM.KeyPress



        If e.KeyChar = Chr(13) Then

        End If






    End Sub

    Private Sub dgPCKDIM_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgPCKDIM.KeyUp

    End Sub

    Private Sub dgPCKDIM_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.Leave

    End Sub

    Private Sub dgPCKDIM_LocationChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.LocationChanged


    End Sub

    Private Sub dgPCKDIM_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.LostFocus
        flag_cellendedit = False
    End Sub

    Private Sub dgPCKDIM_MouseClick(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles dgPCKDIM.MouseClick
        flag_cellendedit = False
    End Sub

    Private Sub dgPCKDIM_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles dgPCKDIM.MouseDown
        flag_cellendedit = False
    End Sub

    Private Sub dgPCKDIM_MouseHover(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.MouseHover
        flag_cellendedit = False
    End Sub

    Private Sub dgPCKDIM_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles dgPCKDIM.MouseUp
        flag_cellendedit = False
    End Sub

    Private Sub dgPCKDIM_Move(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.Move

    End Sub

    Private Sub dgPCKDIM_RowEnter(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgPCKDIM.RowEnter

    End Sub

    Private Sub dgPCKDIM_SelectionChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.SelectionChanged

        If flag_cellendedit = True Then
            flag_cellendedit = False
            Call move_cell()
        End If
    End Sub

    Private Sub dgPCKDIM_Validated(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgPCKDIM.Validated

    End Sub

    Private Sub dgPCKDIM_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles dgPCKDIM.Validating

    End Sub

    Sub rs_shpckdim_row_filtering()
        If rs_SHPCKDIM Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1 < sReadingIndexS Then
            Exit Sub
        End If
        ' >? 

        If Val(txtCartonFactor.Text) = 1 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
        ElseIf Val(txtCartonFactor.Text) = 2 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum <= 4 "
        ElseIf Val(txtCartonFactor.Text) = 3 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 7 and hpd_pdnum<=12 "
        ElseIf Val(txtCartonFactor.Text) = 4 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=13 and hpd_pdnum <=20 "
        ElseIf Val(txtCartonFactor.Text) = 5 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 21 and hpd_pdnum <=30 "
        Else
            txtCartonFactor.Text = "1"
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
            MsgBox("Please set Carton Factor smaller than 6!")
        End If

        rs_SHPCKDIM.Tables("result").DefaultView.Sort = "hpd_pdnum"

    End Sub


    Sub rs_shpckdim_row_filtering_cal(ByVal tmp_seq)
        If rs_SHPCKDIM Is Nothing Then
            Exit Sub
        End If
        If Val(txtCartonFactor.Text) = 1 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & tmp_seq & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
        ElseIf Val(txtCartonFactor.Text) = 2 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & tmp_seq & " and hpd_pdnum <= 4 "
        ElseIf Val(txtCartonFactor.Text) = 3 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & tmp_seq & " and hpd_pdnum >= 7 and hpd_pdnum<=12 "
        ElseIf Val(txtCartonFactor.Text) = 4 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & tmp_seq & " and hpd_pdnum >=13 and hpd_pdnum <=20 "
        ElseIf Val(txtCartonFactor.Text) = 5 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & tmp_seq & " and hpd_pdnum >= 21 and hpd_pdnum <=30 "
        Else
            txtCartonFactor.Text = "1"
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & tmp_seq & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
            MsgBox("Please set Carton Factor smaller than 6!")
        End If

        rs_SHPCKDIM.Tables("result").DefaultView.Sort = "hpd_pdnum"

    End Sub

    Private Function InputIsValid() As Boolean
        Dim Err As String
        Dim isValid As Boolean
        isValid = True
        InputIsValid = True

        '*** Folder1

        If cboCus1No.Text.Trim = "" Then
            btcSHM00001.SelectedIndex = 0
            MsgBox("Customer should not be empty!")
            If cboCus1No.Enabled And cboCus1No.Visible Then cboCus1No.Focus()
            isValid = False
        ElseIf txtVes.Text = "" Then
            btcSHM00001.SelectedIndex = 0
            MsgBox("Vessel should not be empty!")
            If txtVes.Enabled And txtVes.Visible Then txtVes.Focus()
            isValid = False
        ElseIf txtSlnOnb.Text = "" Then
            btcSHM00001.SelectedIndex = 0
            MsgBox("Sailing on/abt (ETD)   Date should not be empty!")
            If txtSlnOnb.Enabled And txtSlnOnb.Visible Then txtSlnOnb.Focus()
            isValid = False
        ElseIf txtVoy.Text = "" Then
            btcSHM00001.SelectedIndex = 0
            MsgBox("Voyage should not be empty")
            If txtVoy.Enabled And txtVoy.Visible Then txtVoy.Focus()
            isValid = False

            '        ElseIf Not CheckDate(txtSlnOnb.Text) Then
        ElseIf Not IsDate(txtSlnOnb.Text) Then

            btcSHM00001.SelectedIndex = 0
            MsgBox("Invalid date")
            txtSlnOnb.Text = "01/01/2000"
            If txtSlnOnb.Enabled And txtSlnOnb.Visible Then txtSlnOnb.Focus()
            isValid = False

            '       ElseIf CheckDate(txtArrDat.Text.Trim) Then
        ElseIf IsDate(txtArrDat.Text.Trim) Then

            If DateDiff("d", txtArrDat.Text.Trim, txtSlnOnb.Text.Trim) > 0 Then
                btcSHM00001.SelectedIndex = 0
                MsgBox("ETA date should be later than ETD date")
                If txtArrDat.Enabled And txtArrDat.Visible Then txtArrDat.Focus()
                isValid = False
            End If

            ' AY -- Remark the checking method by UCP Shipping Department at 30/12/2002.
            'ElseIf Format(CDate(txtSlnOnb.Text), "MM/DD/YYYY") < (Format(CDate(txtIssDat.Text) - 7, "MM/DD/YYYY")) Then
            '    btcSHM00001.SelectedIndex = 0
            '    MsgBox "ETD date should be greater than or equal to 7 days before Issue date!"
            '    If txtSlnOnb.Enabled Then txtSlnOnb.SetFocus
            '    isValid = False
        ElseIf txtSlnOnb.Text = "" Then
            txtSlnOnb.Text = Today.ToShortDateString
        ElseIf DateDiff("d", txtSlnOnb.Text, IIf(txtIssDat.Text.Trim = "", Today.ToShortDateString, txtIssDat.Text.Trim)) > 30 Then
            '2015
            btcSHM00001.SelectedIndex = 0
            MsgBox("ETD date should be smaller than or equal to 30 days after Issue date!")
            txtSlnOnb.Text = Format(Today, "MM/DD/YYYY")
            If txtSlnOnb.Enabled And txtSlnOnb.Visible Then txtSlnOnb.Focus()
            isValid = False

            'ElseIf Not CheckDate(txtArrDat.Text) Then
            '    btcSHM00001.SelectedIndex = 0
            'MsgBox("Invalid date")
            'txtArrDat.Text = "01/01/1900"
            'If txtArrDat.Enabled And txtArrDat.Visible Then txtArrDat.Focus()
            'isValid = False

        ElseIf txtPotLoa.Text = "" Then
            btcSHM00001.SelectedIndex = 0
            MsgBox("Port of loading should not be empty")
            If txtPotLoa.Enabled And txtPotLoa.Visible Then txtPotLoa.Focus()
            isValid = False

        ElseIf txtBilEnt.Text = "" Then
            btcSHM00001.SelectedIndex = 0
            MsgBox("Billing Entity should not be empty")
            If txtBilEnt.Enabled And txtBilEnt.Visible Then txtBilEnt.Focus()
            isValid = False

        ElseIf txtBilAdr.Text = "" Then
            btcSHM00001.SelectedIndex = 0
            MsgBox("Billing Address should not be empty")
            If txtBilAdr.Enabled And txtBilAdr.Visible Then txtBilAdr.Focus()
            isValid = False

        ElseIf cboBilCty.Text = "" Then
            btcSHM00001.SelectedIndex = 0
            MsgBox("Country of Billing Address should not be empty")
            If cboBilCty.Enabled And cboBilCty.Visible Then cboBilCty.Focus()
            isValid = False

        ElseIf Not MultiLineTextIsValid(txtBilAdr.Text, 40) Then
            btcSHM00001.SelectedIndex = 0
            MsgBox("Billing Address should be 40 chars per line")
            If txtBilAdr.Enabled And txtBilAdr.Visible Then txtBilAdr.Focus()
            isValid = False

        ElseIf rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Then
            'btcSHM00001.SelectedIndex = 1
            'MsgBox("Pls Input info in Detail folder")
            'If cmdInsRow.Enabled And cmdInsRow.Visible Then cmdInsRow.Focus()
            'isValid = False


            'Marco added at 20031115
        ElseIf Not MultiLineTextIsValid(txtEngDsc.Text, 40) Then
            'btcSHM00001.SelectedIndex = 4
            'MsgBox("English Remark should be 40 chars per line")
            'If txtEngDsc.Enabled And txtEngDsc.Visible Then txtEngDsc.Focus()
            'isValid = False
        End If

        'Lester Wu , check in InputDetailIsValid instead of this function
        'Allan added at 20051107
        'If optCtrSiz(1).value <> True Then
        '    If Trim(txtCtrCfs.Text) = "" Then
        '        MsgBox "Please input CTR #"
        '        If txtCtrCfs.Enabled And txtCtrCfs.Visible Then txtCtrCfs.SetFocus
        '        isValid = False
        '    End If
        'End If
        '
        'If optCtrSiz(1).value <> True Then
        '    If Trim(txtSealNo.Text) = "" Then
        '        MsgBox "Please input Seal No"
        '        If txtSealNo.Enabled And txtSealNo.Visible Then txtSealNo.SetFocus
        '        isValid = False
        '    End If
        '
        'End If



        If isValid = True Then
            InputIsValid = True
        Else
            InputIsValid = False
        End If

    End Function

    'Private Function InputIsValid() As Boolean
    '    Dim Err As String
    '    Dim isValid As Boolean
    '    isValid = True
    '    InputIsValid = True

    '    '*** Folder1

    '    If cboCus1No.Text.Trim = "" Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("Customer should not be empty!")
    '        If cboCus1No.Enabled And cboCus1No.Visible Then cboCus1No.Focus()
    '        isValid = False
    '    ElseIf txtVes.Text = "" Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("Vessel should not be empty!")
    '        If txtVes.Enabled And txtVes.Visible Then txtVes.Focus()
    '        isValid = False
    '    End If

    '    If txtVoy.Text = "" Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("Voyage should not be empty")
    '        If txtVoy.Enabled And txtVoy.Visible Then txtVoy.Focus()
    '        isValid = False

    '    ElseIf Not CheckDate(txtSlnOnb.Text) Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("Invalid date")
    '        txtSlnOnb.Text = "01/01/1900"
    '        If txtSlnOnb.Enabled And txtSlnOnb.Visible Then txtSlnOnb.Focus()
    '        isValid = False

    '        ' AY -- Remark the checking method by UCP Shipping Department at 30/12/2002.
    '        'ElseIf Format(CDate(txtSlnOnb.Text), "MM/DD/YYYY") < (Format(CDate(txtIssDat.Text) - 7, "MM/DD/YYYY")) Then
    '        '    btcSHM00001.SelectedIndex = 0
    '        '    MsgBox "ETD date should be greater than or equal to 7 days before Issue date!"
    '        '    If txtSlnOnb.Enabled Then txtSlnOnb.SetFocus
    '        '    isValid = False
    '    End If
    '    If txtSlnOnb.Text = "" Then
    '        txtSlnOnb.Text = Today.ToShortDateString
    '    End If
    '    If DateDiff("d", txtSlnOnb.Text, Today.ToShortDateString) > 30 Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("ETD date should be smaller than or equal to 30 days after Issue date!")
    '        txtSlnOnb.Text = Format(Today, "MM/DD/YYYY")
    '        If txtSlnOnb.Enabled And txtSlnOnb.Visible Then txtSlnOnb.Focus()
    '        isValid = False

    '        'ElseIf Not CheckDate(txtArrDat.Text) Then
    '        '    btcSHM00001.SelectedIndex = 0
    '        'MsgBox("Invalid date")
    '        'txtArrDat.Text = "01/01/1900"
    '        'If txtArrDat.Enabled And txtArrDat.Visible Then txtArrDat.Focus()
    '        'isValid = False

    '    ElseIf txtPotLoa.Text = "" Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("Port of loading should not be empty")
    '        If txtPotLoa.Enabled And txtPotLoa.Visible Then txtPotLoa.Focus()
    '        isValid = False

    '    ElseIf txtBilEnt.Text = "" Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("Billing Entity should not be empty")
    '        If txtBilEnt.Enabled And txtBilEnt.Visible Then txtBilEnt.Focus()
    '        isValid = False

    '    ElseIf txtBilAdr.Text = "" Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("Billing Address should not be empty")
    '        If txtBilAdr.Enabled And txtBilAdr.Visible Then txtBilAdr.Focus()
    '        isValid = False

    '    ElseIf cboBilCty.Text = "" Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("Country of Billing Address should not be empty")
    '        If cboBilCty.Enabled And cboBilCty.Visible Then cboBilCty.Focus()
    '        isValid = False

    '    ElseIf Not MultiLineTextIsValid(txtBilAdr.Text, 40) Then
    '        btcSHM00001.SelectedIndex = 0
    '        MsgBox("Billing Address should be 40 chars per line")
    '        If txtBilAdr.Enabled And txtBilAdr.Visible Then txtBilAdr.Focus()
    '        isValid = False

    '    ElseIf rs_SHIPGDTL.Tables("RESULT").Rows.Count <= 0 Then
    '        btcSHM00001.SelectedIndex = 1
    '        MsgBox("Pls Input info in Detail folder")
    '        If cmdInsRow.Enabled And cmdInsRow.Visible Then cmdInsRow.Focus()
    '        isValid = False


    '        'Marco added at 20031115
    '    ElseIf Not MultiLineTextIsValid(txtEngDsc.Text, 40) Then
    '        btcSHM00001.SelectedIndex = 4
    '        MsgBox("English Remark should be 40 chars per line")
    '        If txtEngDsc.Enabled And txtEngDsc.Visible Then txtEngDsc.Focus()
    '        isValid = False
    '    End If

    '    'Lester Wu , check in InputDetailIsValid instead of this function
    '    'Allan added at 20051107
    '    'If optCtrSiz(1).value <> True Then
    '    '    If Trim(txtCtrCfs.Text) = "" Then
    '    '        MsgBox "Please input CTR #"
    '    '        If txtCtrCfs.Enabled And txtCtrCfs.Visible Then txtCtrCfs.SetFocus
    '    '        isValid = False
    '    '    End If
    '    'End If
    '    '
    '    'If optCtrSiz(1).value <> True Then
    '    '    If Trim(txtSealNo.Text) = "" Then
    '    '        MsgBox "Please input Seal No"
    '    '        If txtSealNo.Enabled And txtSealNo.Visible Then txtSealNo.SetFocus
    '    '        isValid = False
    '    '    End If
    '    '
    '    'End If



    '    If isValid = True Then
    '        InputIsValid = True
    '    Else
    '        InputIsValid = False
    '    End If

    'End Function

    Public Function CheckDate(ByVal theDate As String) As Boolean
        Dim month%, day%, year%
        Dim mm$, dd$, yyyy$
        Dim valid As Boolean

        valid = True
        mm$ = Mid(theDate, 1, 2)
        dd$ = Mid(theDate, 4, 2)
        yyyy$ = Mid(theDate, 7, 4)

        If IsDate(theDate) = False Then
            valid = False
            GoTo result
        End If
        ' Only accept either all date fields filled or all date fields empty
        If Not ((mm$ = "  " And dd$ = "  " And yyyy$ = "    ") Or (mm$ <> "  " And dd$ <> "  " And yyyy$ <> "    ")) Then
            valid = False
            GoTo result
        End If

        month% = Val(mm$)   ' Convert the date into numbers
        day% = Val(dd$)
        year% = Val(yyyy$)

        If month% > 12 Then    ' Check the month
            valid = False
            GoTo result
        End If
        If month% = 1 Or month% = 3 Or _
           month% = 5 Or month% = 7 Or _
           month% = 8 Or month% = 10 Or _
           month% = 12 Then             ' Check the day
            'If Date% > 31 Then
            If day% > 31 Then
                valid = False
                GoTo result
            End If
        End If
        If month% = 2 Or month% = 4 Or _
           month% = 6 Or month% = 9 Or _
           month% = 11 Then             ' Check the day
            'If Date% > 30 Then
            If day% > 30 Then
                valid = False
                GoTo result
            End If
        End If
        If month% = 2 And day% > 28 And _
           year% Mod 4 <> 0 Then ' Check the leap year
            valid = False
            GoTo result
        End If
        '*** Add to check Date is in valid year by Lewis on 15/04/2003 ********************
        If year% < 1950 Or year% > 2049 Then
            valid = False
            GoTo result
        End If
        '**********************************************************************************
result:
        CheckDate = valid
    End Function


    Private Sub cmdPickDate2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdPickDate2.Click

        If Trim(txtcargorcvdat.Text) = "" Then
            '            mvwcgrcvdat.Value = Format(Today.Date, "MM/dd/yyyy")
            mvwcgrcvdat.SetDate(Format(Today.Date, "MM/dd/yyyy"))
        Else
            mvwcgrcvdat.SetDate(txtcargorcvdat.Text)
            '            mvwcgrcvdat.Value = txtcargorcvdat.Text
        End If

        If mvwcgrcvdat.Visible = False Then
            mvwcgrcvdat.BringToFront()
            mvwcgrcvdat.Visible = True
        Else
            mvwcgrcvdat.Visible = False
            mvwcgrcvdat.SendToBack()

        End If




    End Sub

    Private Sub txtSlnOnb_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtSlnOnb.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtSlnOnb.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtSlnOnb.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_slnonb") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_slnonb") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub mvwcgrcvdat_DateChanged(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DateRangeEventArgs) Handles mvwcgrcvdat.DateChanged

    End Sub

    Private Sub mvwcgrcvdat_DateSelected(ByVal sender As Object, ByVal e As System.Windows.Forms.DateRangeEventArgs) Handles mvwcgrcvdat.DateSelected





        txtcargorcvdat.Text = mvwcgrcvdat.SelectionStart
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cargorcvdat") = txtcargorcvdat.Text

        If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
        End If

        mvwcgrcvdat.Visible = False


        txtCover.Focus()

    End Sub

    'Private Sub dg_sainvhdr_CellBeginEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellCancelEventArgs) 
    '    If dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_hsi_sminvno Then
    '        tmp_dg_sainvhdr_hsi_sminvno = rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_sminvno")

    '    End If

    'End Sub

    'Private Sub dg_sainvhdr_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) 
    '    If cmdSave.Enabled = False Then
    '        Exit Sub
    '    End If

    '    If dg_sainvhdr.SelectedCells.Count = 1 Then
    '        If dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_Del Then
    '            Recordstatus = True
    '            rs_SHSMPINV.Tables("RESULT").Columns("DEL").ReadOnly = False
    '            rs_SHSMPINV.Tables("RESULT").Columns("hsi_creusr").ReadOnly = False
    '            If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("DEL").ToString = "" Then
    '                If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString <> "~*ADD*~" Then
    '                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*DEL*~"
    '                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("DEL") = "Y"
    '                ElseIf rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString = "~*ADD*~" Then
    '                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*DEL*~"
    '                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("DEL") = "Y"
    '                End If

    '            Else

    '                If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString = "~*NEW*~" Or rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*ADD*~" Then
    '                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*ADD*~"
    '                Else
    '                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*UPD*~"
    '                End If
    '                rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("DEL") = ""
    '            End If

    '        ElseIf dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_hsi_sminvno Then
    '        End If
    '    End If


    '    Grid_Got_Focus = "dg_sainvhdr"
    '    If Not dg_sainvhdr.CurrentCell Is Nothing Then
    '        gi_dg_sainvhdr_row = dg_sainvhdr.CurrentCell.RowIndex
    '    Else
    '        gi_dg_sainvhdr_row = -1
    '    End If
    '    display_SHSMPINV()
    'End Sub

    'Private Sub dg_sainvhdr_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) 

    '    If cmdSave.Enabled = False Then
    '        Exit Sub
    '    End If

    '    If dg_sainvhdr.SelectedCells.Count = 1 Then
    '        If dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_Del Then

    '            If IsDBNull(rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("Del")) Then
    '                Exit Sub
    '            End If
    '            If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("Del") <> "Y" Then
    '                rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("Del") = ""
    '            End If
    '            Recordstatus = True

    '        ElseIf dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_hsi_sminvno Then
    '            rs_SHSMPINV.Tables("RESULT").Columns("hsi_sminvno").ReadOnly = False
    '            rs_SHSMPINV.Tables("RESULT").Columns("hsi_creusr").ReadOnly = False
    '            Dim tmp_cus1no As String
    '            Dim tmp_sminvno As String

    '            tmp_cus1no = Split(cboCus1No.Text.Trim, " - ")(0)
    '            tmp_sminvno = rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_sminvno")
    '            If check_sainvhdr(tmp_sminvno, tmp_cus1no) <> True Then
    '                rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_sminvno") = tmp_dg_sainvhdr_hsi_sminvno
    '                display_SHSMPINV()

    '                Exit Sub
    '            End If

    '            If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString <> "~*ADD*~" Then
    '                MsgBox("Please delete this row and Insert a new row, for modify.")

    '                rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_sminvno") = tmp_dg_sainvhdr_hsi_sminvno
    '                rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*DEL*~"
    '                rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("Del") = "Y"


    '            End If


    '        ElseIf dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_hsi_rmk Then
    '            If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString = "~*NEW*~" Or rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*ADD*~" Then
    '                rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*ADD*~"
    '            Else
    '                rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*UPD*~"
    '            End If

    '        End If
    '    End If

    '    Recordstatus = True
    '    display_SHSMPINV()

    'End Sub

    'Private Sub dg_sainvhdr_CellEnter(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) 
    '    If Grid_Got_Focus = "dg_sainvhdr" Then
    '        Label85.ForeColor = Color.Green
    '    End If
    'End Sub

    'Private Sub dg_sainvhdr_CellLeave(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) 
    '    Label85.ForeColor = Color.Black

    'End Sub

    'Private Sub dg_sainvhdr_CellValidating(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellValidatingEventArgs) 


    '    'If cmdSave.Enabled = False Then
    '    '    Exit Sub
    '    'End If


    '    'If rs_SHSMPINV Is Nothing Then
    '    '    Exit Sub
    '    'End If
    '    'If rs_SHSMPINV.Tables("result") Is Nothing Then
    '    '    Exit Sub
    '    'End If
    '    'If rs_SHSMPINV.Tables("result").Rows.Count = 0 Then
    '    '    Exit Sub
    '    'End If


    '    'Dim row As DataGridViewRow = dg_sainvhdr.CurrentRow()
    '    'Dim strNewVal As String
    '    'Dim strNewVal_creusr As String

    '    'strNewVal = row.Cells(e.ColumnIndex).EditedFormattedValue.ToString.Trim
    '    'strNewVal_creusr = row.Cells(dg_sainvhdr_creusr).EditedFormattedValue.ToString.Trim

    '    'Dim i As Integer

    '    'Select Case e.ColumnIndex
    '    '    Case dg_sainvhdr_Del
    '    '        If Not (Trim(strNewVal) <> "" Or strNewVal <> "Y") Then
    '    '            MsgBox("Please input valid value 'Y' or '',  while 'N' is not a valid value !")
    '    '            e.Cancel = True
    '    '            Exit Sub
    '    '        End If


    '    '    Case dg_sainvhdr_hsi_sminvno


    '    '        If Not (strNewVal_creusr = "~*ADD*~" Or strNewVal_creusr = "~*DEL*~") Then
    '    '            MsgBox("Please Delete this row, and insert a new row!")
    '    '            '  e.Cancel = True
    '    '            row.Cells(dg_sainvhdr_creusr).Value = "~*DEL*~"
    '    '            row.Cells(dg_sainvhdr_Del).Value = "Y"
    '    '            display_SHSMPINV()

    '    '            Exit Sub
    '    '        End If


    '    'End Select




    '    'Recordstatus = True

    'End Sub

    Private Sub dg_sainvhdr_Enter(ByVal sender As Object, ByVal e As System.EventArgs) 
        Grid_Got_Focus = "dg_sainvhdr"
    End Sub

    Private Function check_sainvhdr(ByVal tmp_sminvno As String, ByVal tmp_cus1no As String) As Boolean
        check_sainvhdr = False

        'sp_select_sainvhdr_cus1no
        gspStr = "sp_select_sainvhdr_cus1no'" & tmp_sminvno & " ','" & tmp_cus1no & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_sainvhdr_cus1no, rtnStr)

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_sainvhdr_cus1no:" & rtnStr)
            Exit Function
        End If
        '''
        If Not rs_sainvhdr_cus1no.Tables("RESULT") Is Nothing Then
            If rs_sainvhdr_cus1no.Tables("RESULT").Rows.Count = 0 Then
                MsgBox("The Sample Invoice is not belong to the customer!")
                Exit Function
            Else
            End If

        End If



        check_sainvhdr = True
    End Function

    Private Sub txtShpNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtShpNo.KeyPress



        If e.KeyChar = Chr(13) Then
            txtShpNo.Text = UCase(Trim(txtShpNo.Text))
            Call txtShpNoKeyPress()
            Recordstatus = False
            mmdFind.Enabled = False
        End If




    End Sub


    Private Sub txtShpNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtShpNo.TextChanged

    End Sub

    'Private Sub cboPckListFooter_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)

    '    If e.KeyChar = Chr(13) Then
    '        cboBilAdr.Focus()
    '    End If
    'End Sub

    'Private Sub cboPckListFooter_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs)
    '    If cboPckListFooter.Text.Length > 0 Then
    '        Call auto_search_combo(cboPckListFooter, e.KeyCode)
    '    End If

    'End Sub

    'Private Sub cboPckListFooter_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)

    '    If rs_SHRMKVAL.Tables("RESULT") Is Nothing Then Exit Sub

    '    rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkdsc = '" & cboPckListFooter.Text.Trim & "' "

    '    If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 And cboPckListFooter.Text.Trim <> "" Then
    '        txtBilRmk.Text = rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval")
    '    End If



    'End Sub

    Private Sub cboInvFooter_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboInvFooter.KeyUp
        If cboInvFooter.Text.Length > 0 Then
            Call auto_search_combo(cboInvFooter, e.KeyCode)
        End If

    End Sub

    Private Sub cboInvFooter_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboInvFooter.SelectedIndexChanged
        If rs_SHRMKVAL.Tables("RESULT") Is Nothing Then Exit Sub

        rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = " hrt_rmkcde = 'invoice_footer_remark'   and  hrt_rmkdsc = '" & cboInvFooter.Text.Trim & "' "

        If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 And cboInvFooter.Text.Trim <> "" Then
            txtFtrRmk.Text = rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval")
        End If


    End Sub



    Function ttlctn_times_mtr()

        If Val(txtMtrCtn.Text) = 0 Then
            ttlctn_times_mtr = False
            Exit Function
        End If

        ttlctn_times_mtr = True
        If Val(txtShpQty.Text) = 0 Then
            ttlctn_times_mtr = False

        End If

        If Val(txtShpQty.Text) / Val(txtMtrCtn.Text) - CInt(Val(txtShpQty.Text) / Val(txtMtrCtn.Text)) <> 0 Then
            ttlctn_times_mtr = False
        End If

    End Function

    Private Sub txtConsolNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtConsolNo.KeyDown
        'Select Case e.KeyCode
        '    Case Keys.Left
        '        txtSealNo.Focus()
        'End Select
    End Sub

    Private Sub txtConsolNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtConsolNo.KeyPress


        If e.KeyChar = Chr(13) Then
            txtOrdNo.Focus()
        End If
    End Sub

    Private Sub txtConsolNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtConsolNo.TextChanged
        If flag_display_not_for_change <> True Then
            If txtConsolNo.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
                If sMode = cModeAdd Or sMode = cModeUpd Then
                    Dim tmpstr
                    tmpstr = txtConsolNo.Text

                    ''bug
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_consolno")) Then
                        If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_consolno") Then
                            Recordstatus = True
                            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                            End If
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_consolno") = tmpstr
                        End If
                    End If
                End If
            End If
        End If
    End Sub

    Private Sub chkrpl_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkrpl.CheckedChanged

    End Sub

    Private Sub cboCtrSiz_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboCtrSiz.Click
        flag_cboCtrSiz_GotFocus = True
    End Sub

    Private Sub cboCtrSiz_DragOver(ByVal sender As Object, ByVal e As System.Windows.Forms.DragEventArgs) Handles cboCtrSiz.DragOver
        flag_cboCtrSiz_GotFocus = True
    End Sub

    Private Sub cboCtrSiz_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboCtrSiz.GotFocus
        flag_cboCtrSiz_GotFocus = True

    End Sub

    Private Sub cboCtrSiz_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboCtrSiz.KeyDown
        flag_cboCtrSiz_GotFocus = True
    End Sub

    Private Sub cboCtrSiz_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboCtrSiz.KeyPress
        flag_cboCtrSiz_GotFocus = True
        If e.KeyChar = Chr(13) Then
            txtCtrCfs.Focus()
        End If

    End Sub

    Private Sub cboCtrSiz_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboCtrSiz.KeyUp
        If cboCtrSiz.Text.Length > 0 Then
            Call auto_search_combo(cboCtrSiz, e.KeyCode)
        End If
        flag_cboCtrSiz_GotFocus = True
    End Sub

    Private Sub cboCtrSiz_MouseClick(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles cboCtrSiz.MouseClick
        flag_cboCtrSiz_GotFocus = True
    End Sub

    Private Sub cboCtrSiz_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles cboCtrSiz.MouseDown
        flag_cboCtrSiz_GotFocus = True
    End Sub

    Private Sub cboCtrSiz_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboCtrSiz.SelectedIndexChanged
        If flag_display_not_for_change <> True Then

            If flag_cboCtrSiz_GotFocus = True Then
                flag_cboCtrSiz_GotFocus = False
                Label17.Visible = True
                chkpckrmk.Visible = True
				 chkpckrmk.Enabled = True

                If cboCtrSiz.Text.Trim = "20'" Then
                    chkpckrmk.Text = "Part of 1 x 20'"
                    txtCtrCfs.Enabled = True
                    txtSealNo.Enabled = True
                ElseIf cboCtrSiz.Text.Trim = "40'(SD)" Then
                    chkpckrmk.Text = "Part of 1x40'(SD)"
                    txtCtrCfs.Enabled = True
                    txtSealNo.Enabled = True
                ElseIf cboCtrSiz.Text.Trim = "40'(HQ)" Then
                    chkpckrmk.Text = "Part of 1x40'(HQ)"
                    txtCtrCfs.Enabled = True
                    txtSealNo.Enabled = True
                ElseIf cboCtrSiz.Text.Trim = "45'" Then
                    chkpckrmk.Text = "Part of 1x45'"
                    txtCtrCfs.Enabled = True
                    txtSealNo.Enabled = True
                ElseIf cboCtrSiz.Text.Trim = "53'" Then
                    chkpckrmk.Text = "Part of 1x53'"
                    txtCtrCfs.Enabled = True
                    txtSealNo.Enabled = True
                ElseIf cboCtrSiz.Text.Trim = "40'HQ(Reefer Dry)" Then
                    chkpckrmk.Text = "Part of 1x40'HQ(Reefer Dry)"
                    'Label17.Visible = False
                    'chkpckrmk.Visible = False
                    txtCtrCfs.Enabled = True
                    txtSealNo.Enabled = True

                ElseIf cboCtrSiz.Text.Trim = "CFS" Then
                    Label17.Visible = False
                    chkpckrmk.Visible = False
                    chkpckrmk.Text = ""
                    txtCtrCfs.Enabled = False
                    txtSealNo.Enabled = False

                End If
                'chkpckrmk.Text = "Part of 1 x " & cboCtrSiz.Text

                'cboCtrSiz.Items.Add("20'")
                'cboCtrSiz.Items.Add("40'(SD)")
                'cboCtrSiz.Items.Add("40'(HQ)")
                'cboCtrSiz.Items.Add("40'HQ(Reefer Dry)")
                'cboCtrSiz.Items.Add("45'")
                'cboCtrSiz.Items.Add("CFS")

                If cboCtrSiz.Text.Trim <> "" Then
                    If sMode = cModeAdd Or sMode = cModeUpd Then
                        Dim tmpstr
                        tmpstr = cboCtrSiz.Text.Trim

                        ''bug
                        If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctrsiz")) Then
                            If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctrsiz") Then
                                Recordstatus = True
                                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                                End If
                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctrsiz") = tmpstr
                            End If
                        End If
                    End If
                End If

                If sMode = cModeAdd Or sMode = cModeUpd Then
                    Dim tmpstr
                    If chkpckrmk.Checked = True Then
                        tmpstr = chkpckrmk.Text
                    Else
                        tmpstr = ""
                    End If

                    ''bug
                    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk")) Then
                        If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk") Then
                            Recordstatus = True
                            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                            End If
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk") = tmpstr
                        End If
                    End If
                End If


            End If
        End If

    End Sub

    Private Sub chkpckrmk_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkpckrmk.CheckedChanged
        'If sMode = cModeAdd Or sMode = cModeUpd Then
        '    Dim tmpstr 
        '    If chkpckrmk.Checked = True Then
        '        tmpstr = chkpckrmk.Text
        '    Else
        '        tmpstr = ""
        '    End If
        '    If rs_SHIPGDTL Is Nothing Then
        '        Exit Sub
        '    End If
        '    ''bug
        '    If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk")) Then
        '        'If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk") Then
        '        Recordstatus = True
        '        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
        '            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
        '        End If
        '        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk") = tmpstr
        '    End If
        '    'End If
        'End If
    End Sub

    Private Sub SetStatusBar(ByVal Mode As String)
        If Mode = cModeInit Then
            StatusBar.Panels(0).Text = cModeInit
        ElseIf Mode = cModeAdd Then
            StatusBar.Panels(0).Text = cModeAdd
        ElseIf Mode = cModeUpd Then
            StatusBar.Panels(0).Text = cModeUpd
        ElseIf Mode = cModeSave Then
            StatusBar.Panels(0).Text = "Record Saved"
        ElseIf Mode = cModeDel Then
            StatusBar.Panels(0).Text = "Record Deleted"
        ElseIf Mode = cModeRead Then
            StatusBar.Panels(0).Text = "Read Only"
        ElseIf Mode = cModeClear Then
            StatusBar.Panels(0).Text = "Clear Screen"
        End If
    End Sub


    Private Function check_SHDISPRM_SCDISPRM()

        check_SHDISPRM_SCDISPRM = True

        If rs_SCDISPRM_D.Tables("result") Is Nothing Then
            Exit Function
        End If

        If rs_SCDISPRM_P.Tables("result") Is Nothing Then
            Exit Function
        End If

        If rs_SHDISPRM_D Is Nothing Then
            Exit Function
        End If

        If rs_SHDISPRM_P Is Nothing Then
            Exit Function
        End If


        If rs_SHDISPRM_D.Tables("result") Is Nothing Then
            Exit Function
        End If

        If rs_SHDISPRM_P.Tables("result") Is Nothing Then
            Exit Function
        End If

        If (rs_SCDISPRM_D.Tables("result").Rows.Count > 0 Or _
            rs_SCDISPRM_P.Tables("result").Rows.Count > 0) _
            And rs_SHDISPRM_D.Tables("result").Rows.Count = 0 _
            And rs_SHDISPRM_P.Tables("result").Rows.Count = 0 Then

            check_SHDISPRM_SCDISPRM = False

        End If

    End Function

    Private Sub Update_Carton_NewShpSeq(ByVal hid_shpno, ByVal hid_shpseq)
        Dim S As String
        Dim rs As ADOR.Recordset

        Dim IsUpdated As Boolean
        Dim IsDeleted As Boolean
        Dim IsAdded As Boolean

        IsUpdated = True
        IsDeleted = True
        IsAdded = True

        '*************************************
        '*** Delete Carton Record          ***
        '*************************************

        If rs_SHDTLCTN.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If





        ''


        '*************************************
        '*** Insert Carton Record          ***
        '*************************************



        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = "hdc_shpseq = " & hid_shpseq & "  and   hdc_creusr = '~*ADD*~'"

        For index9 As Integer = 0 To rs_SHDTLCTN.Tables("RESULT").DefaultView.Count - 1

            gspStr = "sp_insert_SHDTLCTN '" & cboCoCde.Text.Trim & "','" & hid_shpno & "','" & hid_shpseq & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_from") & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_to") & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_ttlctn") & "','" _
                                & gsUsrID & "'"

            rtnLong = execute_SQLStatement(gspStr, rs_save_only, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_sainvhdr_cus1no:" & rtnStr)
                Exit Sub
            End If
        Next



        '**************************************
        '*** Update Carton Record           ***
        '**************************************
        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = "hdc_shpno = '" & hid_shpno & "' and " & _
                  "hdc_shpseq = " & hid_shpseq & "  and " & _
                  "hdc_creusr = '~*UPD*~'"

        For index9 As Integer = 0 To rs_SHDTLCTN.Tables("RESULT").DefaultView.Count - 1

            gspStr = "sp_update_SHDTLCTN '" & cboCoCde.Text.Trim & "','" & hid_shpno & "','" & hid_shpseq & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_ctnseq") & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_from") & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_to") & "','" _
                            & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_ttlctn") & "','" _
                                & gsUsrID & "'"

            rtnLong = execute_SQLStatement(gspStr, rs_save_only, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_sainvhdr_cus1no:" & rtnStr)
                Exit Sub
            End If
        Next



        rs_SHDTLCTN.Tables("RESULT").DefaultView.RowFilter = "hdc_shpno = '" & hid_shpno & "' and " & _
          "hdc_shpseq = " & hid_shpseq & "  and " & _
          "(hdc_creusr = '~*DEL*~' or Del ='Y' )"

        For index9 As Integer = 0 To rs_SHDTLCTN.Tables("RESULT").DefaultView.Count - 1

            gspStr = "sp_Physical_Delete_SHDTLCTN_SHM00001_1 '" & cboCoCde.Text.Trim & "','" & hid_shpno & "','" & hid_shpseq & "','" & rs_SHDTLCTN.Tables("RESULT").DefaultView(index9)("hdc_ctnseq") & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_save_only, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_sainvhdr_cus1no:" & rtnStr)
                Exit Sub
            End If
        Next


        Dim rs_tmp As DataSet
        Dim hid_cov As String
        rs_tmp = rs_SHIPGDTL.Copy
        rs_tmp.Tables("result").DefaultView.RowFilter = "hid_shpseq = " & hid_shpseq
        If rs_tmp.Tables("result").DefaultView.Count > 0 Then
            hid_cov = rs_tmp.Tables("result").DefaultView(0)("COV")
        End If
        If hid_cov = "Y" Then
            gspStr = "sp_Physical_Delete_SHDTLCTN_SHM00001_1 '" & cboCoCde.Text.Trim & "','" & hid_shpno & "'," & hid_shpseq & ",0"
            rtnLong = execute_SQLStatement(gspStr, rs_save_only, rtnStr)

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_select_sainvhdr_cus1no:" & rtnStr)
                Exit Sub
            End If

        End If



        'If Not (IsDeleted Or IsAdded Or IsUpdated) Then
        '    MsgBox("M00056")
        '    IsUpdated = True
        '    IsDeleted = True
        '    IsAdded = True
        'End If




        '***************************************************
        '***************************************************
        '***************************************************

    End Sub


    'Private Sub Update_Carton()
    '    Dim S As String
    '    Dim rs As ADOR.Recordset

    '    Dim IsUpdated As Boolean
    '    Dim IsDeleted As Boolean
    '    Dim IsAdded As Boolean

    '    IsUpdated = True
    '    IsDeleted = True
    '    IsAdded = True

    '    '*************************************
    '    '*** Delete Carton Record          ***
    '    '*************************************



    '    .Filter = "hdc_shpno = '" & rs_SHIPGDTL("hid_shpno") & "' and " & _
    '              "hdc_shpseq = " & rs_SHIPGDTL("hid_shpseq") & "  and " & _
    '              "hdc_creusr = '~*DEL*~'"

    '    If .recordCount <= 0 Then
    '        IsDeleted = True
    '    Else
    '        While Not rs_SHDTLCTN.EOF

    '            'Marco Added for fixing global company code problem at 20040108
    '            gsCompany = Trim(cboCoCde.Text)
    '            Call Update_gs_Value(gsCompany)

    '            S = "SHDTLCTN_SHM00001_1pPp" & rs_SHIPGDTL("hid_ShpNo") & "','" & rs_SHIPGDTL("hid_shpseq") & "','" & .Fields("hdc_ctnseq")

    '            rs = objBSGate.Modify(gsConnStr, "sp_general", S)

    '            If rs(0) <> "0" Then  '*** An error has occured
    '                MsgBox(rs(0))
    '                IsDeleted = False
    '            End If
    '            .MoveNext()
    '        End While
    '    End If

    '    '*************************************
    '    '*** Insert Carton Record          ***
    '    '*************************************

    '    .Filter = "hdc_shpno = '" & rs_SHIPGDTL("hid_shpno") & "' and " & _
    '              "hdc_shpseq = " & rs_SHIPGDTL("hid_shpseq") & "  and " & _
    '              "hdc_creusr = '~*ADD*~'"

    '    If .recordCount <= 0 Then
    '        IsAdded = True
    '    Else
    '        While Not rs_SHDTLCTN.EOF

    '            'Marco Added for fixing global company code problem at 20040108
    '            gsCompany = Trim(cboCoCde.Text)
    '            Call Update_gs_Value(gsCompany)

    '            S = "SHDTLCTNpAp" & rs_SHIPGDTL("hid_ShpNo") & "','" & rs_SHIPGDTL("hid_ShpSeq") & "','" & _
    '                rs_SHDTLCTN("hdc_from") & "','" & rs_SHDTLCTN("hdc_to") & "','" & _
    '                rs_SHDTLCTN("hdc_ttlctn") & "','" & gsUsrID

    '            rs = objBSGate.Modify(gsConnStr, "sp_general", S)

    '            If rs(0) <> "0" Then  '*** An error has occured
    '                MsgBox(rs(0))
    '                IsAdded = False
    '            End If
    '            .MoveNext()
    '        End While
    '    End If


    '    '**************************************
    '    '*** Update Carton Record           ***
    '    '**************************************

    '    .Filter = "hdc_shpno = '" & rs_SHIPGDTL("hid_shpno") & "' and " + _
    '              "hdc_shpseq = " & rs_SHIPGDTL("hid_shpseq") & "  and " + _
    '              "hdc_creusr = '~*UPD*~'"

    '    If .recordCount <= 0 Then
    '        IsAdded = True
    '    Else
    '        While Not rs_SHDTLCTN.EOF

    '            'Marco Added for fixing global company code problem at 20040108
    '            gsCompany = Trim(cboCoCde.Text)
    '            Call Update_gs_Value(gsCompany)

    '            S = "SHDTLCTNpUp" & rs_SHIPGDTL("hid_ShpNo") & "','" & rs_SHIPGDTL("hid_ShpSeq") & "','" & _
    '                rs_SHDTLCTN("hdc_ctnseq") & "','" & _
    '                rs_SHDTLCTN("hdc_from") & "','" & rs_SHDTLCTN("hdc_to") & "','" & _
    '                rs_SHDTLCTN("hdc_ttlctn") & "','" & _
    '                gsUsrID

    '            rs = objBSGate.Modify(gsConnStr, "sp_general", S)

    '            If rs(0) <> "0" Then  '*** An error has occured
    '                MsgBox(rs(0))
    '                IsUpdated = False
    '            End If
    '            .MoveNext()
    '        End While
    '    End If

    '    If Not (IsDeleted Or IsAdded Or IsUpdated) Then
    '        msg("M00056")
    '        IsUpdated = True
    '        IsDeleted = True
    '        IsAdded = True
    '    End If



    '    '***************************************************
    '    '***************************************************
    '    '***************************************************

    'End Sub




    Private Sub cboCus1No_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboCus1No.Validating

        'Dim i As Integer
        'Dim Y As Integer
        'Dim inCombo As Boolean

        'i = cboCus1No.Items.Count
        'If cboCus1No.Text <> "" And cboCus1No.Enabled = True And cboCus1No.Items.Count > 0 Then
        '    For Y = 0 To i - 1
        '        If Trim(cboCus1No.Text) = Trim(cboCus1No.Items(Y)) Then
        '            inCombo = True
        '        End If
        '    Next

        '    If inCombo = False Then
        '        MsgBox("Primary Customer - Data is Invalid, please select in Drop Down List.")
        '        btcSHM00001.SelectedIndex = 0
        '        e.Cancel = True

        '        cboCus1No.Text = ""
        '        cboCus1No.Focus()

        '    Else


        '    End If
        'End If
    End Sub

    Private Function valid_cbocus1no() As Boolean

        Dim i As Integer
        Dim Y As Integer
        Dim inCombo As Boolean

        i = cboCus1No.Items.Count
        If cboCus1No.Text <> "" And cboCus1No.Enabled = True And cboCus1No.Items.Count > 0 Then
            For Y = 0 To i - 1
                If Trim(cboCus1No.Text) = Trim(cboCus1No.Items(Y)) Then
                    inCombo = True
                End If
            Next

            If inCombo = False Then
                MsgBox("Primary Customer - Data is Invalid, please select in Drop Down List.")
                btcSHM00001.SelectedIndex = 0
                '      e.Cancel = True

                cboCus1No.Text = ""
                cboCus1No.Focus()

            Else


            End If
        End If
        valid_cbocus1no = inCombo
    End Function


    Private Sub cboPckListFooter_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs)


        Dim tmpstr
        tmpstr = cboPckListFooter.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboPckListFooter.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Packing Footer Remark - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If


    End Sub

    Private Sub cboPayTrm_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboPayTrm.KeyUp

        If cboPayTrm.Text.Length > 0 Then
            Call auto_search_combo(cboPayTrm, e.KeyCode)
        End If

    End Sub

    Private Sub cboPayTrm_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboPayTrm.SelectedIndexChanged
        Dim rs_tmp_SHIPGDTL As DataSet

        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If
        rs_tmp_SHIPGDTL = rs_SHIPGDTL.Copy

        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If cboPayTrm.Text.Trim <> "" Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = cboPayTrm.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_paytrm") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_paytrm") = tmpstr


                    rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView.RowFilter = "hid_invno	= '" & cboInvNo.Text.Trim & "'"
                    For index9 As Integer = 0 To rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView.Count - 1
                        rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_paytrm") = tmpstr
                        If rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_creusr") <> "~*NEW*~" _
                        And rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_creusr") <> "~*ADD*~" Then
                            rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView(index9)("hid_creusr") = "~*UPD*~"
                        End If
                    Next


                End If
            End If
        End If

    End Sub

    Private Sub cboInvNoM_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboInvNoM.Click
        flag_cboInvNoM_KeyPress = True
        '        fillShipMark()
    End Sub

    Private Sub cboInvNoM_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboInvNoM.GotFocus
        '    flag_cboInvNoM_KeyPress = True
        '   fillShipMark().

    End Sub

    Private Sub cboInvNoM_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboInvNoM.KeyUp
        If cboInvNoM.Text.Length > 0 Then
            Call auto_search_combo(cboInvNoM, e.KeyCode)
        End If
    End Sub

    Private Sub cboInvNoM_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboInvNoM.SelectedIndexChanged
        Dim inCombo As Boolean
        If flag_cboInvNoM_KeyPress = True Then
            flag_cboInvNoM_KeyPress = False



            If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
                Exit Sub
            End If

            If cboInvNoM.Text.Trim = "" Then
                MsgBox("Please input Invoice!")
                Exit Sub
            End If


            Dim ord_found = False
            If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
                Append_SHSHPMRK(cboInvNoM.Text.Trim, cboOrdNo.Text.Trim)
                sReadingIndexI_S = 0
            Else
                For index9 As Integer = 0 To rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1
                    If rs_SHSHPMRK.Tables("RESULT").Rows(index9).Item("hsm_invno") = cboInvNoM.Text.Trim Then
                        ord_found = True
                        sReadingIndexI_S = index9

                    End If
                Next
                If ord_found = False Then
                    Append_SHSHPMRK(cboInvNoM.Text.Trim, cboOrdNo.Text.Trim)
                    sReadingIndexI_S = rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1
                End If
            End If





            'making a list, qry,disp

            DisplayShipMark()
            'For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            '    If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_invno") = cboInvNoM.Text.Trim Then
            '        If rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno") <> "" Then
            '            inCombo = False
            '            For Y As Integer = 0 To cboOrdNo.Items.Count - 1
            '                If Trim(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno")) = Trim(cboOrdNo.Items(Y)) Then
            '                    inCombo = True
            '                End If
            '            Next
            '            If inCombo = False Then
            '                cboOrdNo.Items.Add(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_ordno"))
            '            End If
            '        Else
            '            inCombo = False
            '            For Y As Integer = 0 To cboOrdNo.Items.Count - 1
            '                If Trim(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0)) = Trim(cboOrdNo.Items(Y)) Then
            '                    inCombo = True
            '                End If
            '            Next
            '            If inCombo = False Then
            '                cboOrdNo.Items.Add(Split(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_jobno"), "-")(0))
            '            End If
            '        End If


            '    End If
            'Next


            '''''1014


            '  sReadingIndexI_S = cboInvNoM.SelectedIndex

            If flg_DisplayShipMarkData Then
                Exit Sub
            End If
            '''??


            If FindSHPMRK_RS() Then
                'Call DisplayShipMark()
            End If




        End If
    End Sub

    Private Sub cboOrdNo_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboOrdNo.Click
        flag_cboOrdNo_Click = True

    End Sub

    Private Sub cboOrdNo_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboOrdNo.GotFocus
        flag_cboOrdNo_Click = True
    End Sub

    Private Sub cboOrdNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboOrdNo.KeyPress
        flag_cboOrdNo_Click = True
    End Sub

    Private Sub cboOrdNo_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboOrdNo.KeyUp
        If cboOrdNo.Text.Length > 0 Then
            Call auto_search_combo(cboOrdNo, e.KeyCode)
            flag_cboOrdNo_Click = True
        End If
    End Sub

    Private Sub cboOrdNo_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboOrdNo.SelectedIndexChanged
        'If flag_cboOrdNo_Click = True Then
        '    flag_cboOrdNo_Click = False

        '    If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
        '        Exit Sub
        '    End If

        '    If cboInvNoM.Text.Trim = "" Then
        '        MsgBox("Please input Invoice!")
        '        Exit Sub
        '    End If
        '    If cboOrdNo.Text.Trim = "" Then
        '        Exit Sub
        '    End If

        '    Dim ord_found = False
        '    If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
        '        Append_SHSHPMRK(cboInvNoM.Text.Trim, cboOrdNo.Text.Trim)
        '        sReadingIndexI_S = 0
        '    Else
        '        For index9 As Integer = 0 To rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1
        '            If rs_SHSHPMRK.Tables("RESULT").Rows(index9).Item("hsm_invno") = cboInvNoM.Text.Trim And _
        '                         rs_SHSHPMRK.Tables("RESULT").Rows(index9).Item("hsm_ordno") = cboOrdNo.Text.Trim Then
        '                ord_found = True
        '                sReadingIndexI_S = index9

        '            End If
        '        Next
        '        If ord_found = False Then
        '            Append_SHSHPMRK(cboInvNoM.Text.Trim, cboOrdNo.Text.Trim)
        '            sReadingIndexI_S = rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1
        '        End If
        '    End If

        '    '''
        '    'If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
        '    '    Exit Sub
        '    'End If
        If cboOrdNo.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = cboOrdNo.Text

                If sReadingIndexI_S > rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1 Then
                    Exit Sub
                End If

                If tmpstr <> rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_ordno") Then
                    Recordstatus = True


                    If rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*ADD*~" And rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*NEW*~" Then
                        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") = "~*UPD*~"
                    End If
                    rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_ordno") = tmpstr
                End If
            End If
        End If



        '    rs_SHSHPMRK.Tables("RESULT").DefaultView.RowFilter = "hsm_invno= '" & cboInvNoM.Text.Trim & "'  and hsm_ordno='" & cboOrdNo.Text.Trim & "'"
        '    If rs_SHSHPMRK.Tables("RESULT").DefaultView.Count > 0 And ord_found = True Then

        '        Call DisplayShipMark()

        '        Exit Sub
        '    End If



        '    gspStr = "sp_list_SCSHPMRK_SHM00001 '" & cboCoCde.Text & "','" & cboOrdNo.Text & "'"
        '    rtnLong = execute_SQLStatement(gspStr, rs_SCSHPMRK, rtnStr)

        '    If rtnLong <> RC_SUCCESS Then
        '        MsgBox("Error on loading txtShpNoKeyPress sp_select_SCSHPMRK :" & rtnStr)
        '        Exit Sub
        '    End If

        '    If rs_SCSHPMRK.Tables("RESULT").Rows.Count = 0 Then
        '        MsgBox("No Record Found!")
        '        Exit Sub
        '    End If

        '    For i As Integer = 0 To rs_SCSHPMRK.Tables("RESULT").Columns.Count - 1
        '        rs_SCSHPMRK.Tables("RESULT").Columns(i).ReadOnly = False
        '    Next i


        '    txtImgNam.Text = rs_SCSHPMRK.Tables("RESULT").Rows(0)("ssm_imgnam")
        '    txtEngDsc.Text = rs_SCSHPMRK.Tables("RESULT").Rows(0)("ssm_engdsc")
        '    txtImgPth.Text = rs_SCSHPMRK.Tables("RESULT").Rows(0)("ssm_imgpth")
        '    txtEngRmk.Text = rs_SCSHPMRK.Tables("RESULT").Rows(0)("ssm_engrmk")

        '    If txtImgPth.Text.Trim <> "" Then
        '        Picture1.Load(gs_PDO_SMImg & txtImgPth.Text.Trim)
        '        Picture1.SizeMode = PictureBoxSizeMode.Zoom
        '        Picture1.Visible = True
        '    End If


        'End If 'flag
    End Sub

    Private Sub cboBilAdr_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboBilAdr.Validating


        Dim tmpstr
        tmpstr = cboBilAdr.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboBilAdr.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Billing Address - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If

    End Sub

    Private Sub cboBilCty_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboBilCty.Validating

        Dim tmpstr
        tmpstr = cboBilCty.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboBilCty.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Billing City - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If


    End Sub

    Private Sub cboCtrSiz_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboCtrSiz.TextChanged


    End Sub

    Private Sub cboCtrSiz_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboCtrSiz.Validating

        Dim tmpstr
        tmpstr = cboCtrSiz.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboCtrSiz.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Container Size - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If


    End Sub

    Private Sub cboItmNo_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboItmNo.Validating
        Dim tmpstr
        tmpstr = cboItmNo.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboItmNo.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Item Number - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If



    End Sub

    Private Sub cboColPck_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboColPck.Validating
        Dim tmpstr
        tmpstr = cboColPck.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboColPck.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Color & Packing - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If



    End Sub

    Private Sub cboManAdr_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboManAdr.GotFocus
        'Dim tmpvenno As String

        'If txtVenNo.Text = "" Then Exit Sub
        'cboManAdr.Items.Clear()

        'tmpvenno = Trim(Split(txtVenNo.Text.Trim, "-")(0))


        'gsCompany = Trim(cboCoCde.Text)
        'Call Update_gs_Value(gsCompany)


        'gspStr = "sp_list_VNCNTINF '', '" & tmpvenno & "','U','ADR' "
        'rtnLong = execute_SQLStatement(gspStr, rs_VNCNTINF, rtnStr)
        'gspStr = ""

        ''''''' Cursor = Cursors.Default

        'If rtnLong <> RC_SUCCESS Then
        '    MsgBox("Error on loading  sp_list_VNCNTINF:" & rtnStr)
        '    Exit Sub
        'End If

        'If rs_VNCNTINF.Tables("RESULT").Rows.Count > 0 Then

        '    cboManAdr.Items.Clear()
        '    cboManAdr.Text = ""

        '    dr = rs_VNCNTINF.Tables("RESULT").Select("vci_adr <> 'testdedw1'")

        '    If Not dr Is Nothing Then
        '        If dr.Length > 0 Then
        '            For index As Integer = 0 To dr.Length - 1
        '                cboManAdr.Items.Add(Trim(dr(index)("vci_adr")))
        '            Next index
        '        End If
        '    End If
        'Else
        '    ' MsgBox("There is no function, please contact EDP or System Administrator.")
        '    Exit Sub
        'End If




    End Sub

    Private Sub cboManAdr_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboManAdr.SelectedIndexChanged

        '        If flg_DisplayShipDetailData Then Exit Sub


        'If rs_SHRMKVAL.Tables("RESULT") Is Nothing Then Exit Sub

        ' rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "  hrt_rmkcde = 'manufacturer_name'   and hrt_rmkdsc = '" & cboManAdr.Text.Trim & "' "

        ' If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 And cboManAdr.Text.Trim <> "" Then
        'txtManAdr.Text = rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval")
        '  End If


        'rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_manadr") = txtManAdr.Text
        If Split(cboManAdr.Text.Trim, "-")(0).Contains("Vendor Address") Then

            txtManNam.Text = ""
            txtManAdr.Text = Split(cboManAdr.Text.Trim, "-")(1)
            Exit Sub
        End If

        If Split(cboManAdr.Text.Trim, "-")(0).Contains("[") Then
            txtManNam.Text = Split(cboManAdr.Text.Trim, "[")(0)
            txtManAdr.Text = Split(cboManAdr.Text.Trim, "-")(1)
            Exit Sub
        Else
            txtManNam.Text = Split(cboManAdr.Text.Trim, "-")(0)
            txtManAdr.Text = Split(cboManAdr.Text.Trim, "-")(1)
        End If



    End Sub

    Private Sub cboManAdr_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboManAdr.Validating
        Dim tmpstr
        tmpstr = cboManAdr.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboManAdr.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Manufacturing Address - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If




    End Sub

    Private Sub cboInvNo_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboInvNo.Validating
        Dim tmpstr
        tmpstr = cboInvNo.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboInvNo.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Invoice Number - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If




    End Sub

    Private Sub cboPrcTrm_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboPrcTrm.Validating
        Dim tmpstr
        tmpstr = cboPrcTrm.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboPrcTrm.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Price term - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If



    End Sub

    Private Sub cboPayTrm_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboPayTrm.Validating
        Dim tmpstr
        tmpstr = cboPayTrm.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboPayTrm.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Payment Term - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If




    End Sub

    Private Sub cboInvFooter_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboInvFooter.Validating
        Dim tmpstr
        tmpstr = cboInvFooter.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboInvFooter.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Invoice Footer - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If




    End Sub

    Private Sub cboInvNoP_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboInvNoP.Validating
        Dim tmpstr
        tmpstr = cboInvNoP.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboInvNoP.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Invoice Number - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If





    End Sub

    Private Sub cboInvNoM_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboInvNoM.Validating
        Dim tmpstr
        tmpstr = cboInvNoM.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboInvNoM.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Invoice Number - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If




    End Sub

    Private Sub cboOrdNo_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboOrdNo.Validating
        Dim tmpstr
        tmpstr = cboOrdNo.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboOrdNo.Items.IndexOf(tmpstr) = -1 Then
            '     MsgBox("Shipment  : SC Number - Data is Invalid, please select in Drop Down List.")
            '    e.Cancel = True
        End If




    End Sub

    Private Sub CmdCOV_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CmdCOV.Click
        flag_cov_click = True

        If Recordstatus = True Then
            MsgBox("Please save before import COV.")
            Exit Sub
        End If

        FormIC = New frmImportContainer
        FormIC.ma = Me

        FormIC.ShowDialog()

        If FormIC.flag_ok_click Then
            Call cmdSaveClick()
        End If

        cal_all_inv_sum()
        'DisplayShipInv()
        cal_pre_dis()
        txtInvNo.Enabled = True


    End Sub



    Public Sub Insert_container(ByVal ctnnbr As String)

        'select from COV
        'sp_select_shipgdtl_cov
        gspStr = "sp_select_shipgdtl_cov  '" & cboCoCde.Text.Trim & "','" & ctnnbr & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL_cov_back, rtnStr)


        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading cmdAddClick sp_select_SHIPGDTL :" & rtnStr)
            Exit Sub
        End If

        For i As Integer = 0 To rs_SHIPGDTL_cov_back.Tables("RESULT").Columns.Count - 1
            rs_SHIPGDTL_cov_back.Tables("RESULT").Columns(i).ReadOnly = True
        Next i

        If rs_SHIPGDTL_cov_back.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If


        gspStr = "sp_select_SHIPGHDR  '" & cboCoCde.Text.Trim & "','" & rs_SHIPGDTL_cov_back.Tables("RESULT").Rows(0)("hid_shpno") & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_shipgdtl_hdr, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading sp_select_shipgdtl_hdr:" & rtnStr)
            Exit Sub
        Else

            If Split(cboCus1No.Text.Trim, " - ")(0) <> rs_shipgdtl_hdr.Tables("RESULT").Rows(0)("hih_cus1no") Then
                MsgBox("Different Customer, should not do COV!   please do not save. Exit 'Ship Module' and reload ! ")
                frmImportContainer.Close()
                mmdSave.Enabled = False


                Exit Sub
            End If
        End If

        '''

        'store in data set already
        'insert 1 by 1 to new row

        'flag_cmdInsRow_Click = True

        For index As Integer = 0 To rs_SHIPGDTL_cov_back.Tables("RESULT").Rows.Count - 1
            If check_insert_SHIPGDTL() = True Then
                Dim newshpseq As Integer

                ''20140320 fill befor new
                Call fill_SHIPGDTL()


                newshpseq = insert_SHIPGDTL_cov(index, True)

                no_Display_Detail = False
                sReadingIndexS = sReadingIndexS + 1
                Call display_Detail(newshpseq)

                GroupBox6.Enabled = True
                cboCtrSiz.Enabled = True

                txtManNam.Enabled = False
                cboManAdr.Enabled = False
                txtManAdr.Enabled = False
                'txtaddinf.Enabled = False
                txtInvNo.Enabled = False
                txtCartonFactor.Enabled = False
                txtCtnEnd.Enabled = False
                txtCtnStr.Enabled = False
                txtPC.Enabled = False
                txtConFtr.Enabled = False
                txtShpQty.Enabled = False
                txtItmDsc.Enabled = False
                '  Call reset_detail_control("Detail_Init")

                ''            Call reset_detail_data("Detail_Init", "All")
            Else
                Exit Sub
            End If


            'Exit Sub


            Insert_flag = True
            '      btcSHM00001.SelectedIndex = 1

            '*** Check Combo in list or not ?
            If not_in_Combo_HDR() = True Then
                Exit Sub
            End If

            'If not_in_Combo_DTL() = True Then
            '    Exit Sub
            'End If
            'temp

            'Call fill_SHIPGDTL()

            no_Display_Detail = True

            'dgPCKDIM.DataSource = rs_SHIPGDTL.Tables("RESULT").DefaultView
            'rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort() = "hid_shpseq"
            'no_Display_Detail = False
            'txtSeq.Text = rs_SHIPGDTL.Tables("RESULT").Rows(rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1)("hid_shpseq") + 1

            'Call reverse_Detail()

            ''??
            no_Display_Detail = True
            'drNewRow = rs_SHIPGDTL.Tables("RESULT").NewRow
            'no_Display_Detail = False
            'drNewRow("mode") = "NEW"
            'drNewRow("hid_shpseq") = rs_SHIPGDTL.Tables("RESULT").Rows.Count
            ''drNewRow("hid_apprve") = ""
            'rs_SHIPGDTL.Tables("RESULT").Rows.Add(drNewRow)
            'temp

            sReadingIndexS = rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1

            cmdBck.Enabled = True
            cmdNxt.Enabled = True
            '     Call reset_detail_control("Detail_Init")


            '''''

        Next

        Recordstatus = True

    End Sub
    'Public Function check_container(ByVal ctnnbr As String) As Boolean
    '    check_container = True

    '    'select from COV
    '    'sp_select_shipgdtl_cov
    '    gspStr = "sp_select_shipgdtl_cov  '" & cboCoCde.Text.Trim & "','" & ctnnbr & "'"
    '    rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL_cov_back, rtnStr)


    '    If rtnLong <> RC_SUCCESS Then
    '        MsgBox("Error on loading cmdAddClick sp_select_SHIPGDTL :" & rtnStr)
    '        Exit Function
    '    End If


    '    If rs_SHIPGDTL_cov_back.Tables("RESULT").Rows.Count = 0 Then
    '        Exit Function
    '    End If


    '    For index As Integer = 0 To rs_SHIPGDTL_cov_back.Tables("RESULT").Rows.Count - 1

    '    Next


    'End Function

    'Public Sub Insert_display(ByVal ctnnbr As String)


    '    For index_i As Integer = 0 To rs_SHIPGDTL.Tables("result").Rows.Count - 1

    '        Call Insertdis(rs_SHIPGDTL.Tables("result").Rows(index_i)("hid_ctnftr"))

    '    Next



    '    'select from COV
    '    'sp_select_shipgdtl_cov
    '    gspStr = "sp_select_shipgdtl_cov  '" & cboCoCde.Text.Trim & "','" & ctnnbr & "'"
    '    rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL_cov_back, rtnStr)


    '    If rtnLong <> RC_SUCCESS Then
    '        MsgBox("Error on loading cmdAddClick sp_select_SHIPGDTL :" & rtnStr)
    '        Exit Sub
    '    End If

    '    For i As Integer = 0 To rs_SHIPGDTL_cov_back.Tables("RESULT").Columns.Count - 1
    '        rs_SHIPGDTL_cov_back.Tables("RESULT").Columns(i).ReadOnly = True
    '    Next i

    '    If rs_SHIPGDTL_cov_back.Tables("RESULT").Rows.Count = 0 Then
    '        Exit Sub
    '    End If

    '    'store in data set already
    '    'insert 1 by 1 to new row

    '    'flag_cmdInsRow_Click = True

    '    For index As Integer = 0 To rs_SHIPGDTL_cov_back.Tables("RESULT").Rows.Count - 1
    '        If check_insert_SHIPGDTL() = True Then
    '            Dim newshpseq As Integer

    '            ''20140320 fill befor new
    '            Call fill_SHIPGDTL()

    '            newshpseq = insert_SHIPGDTL_cov(index, True)

    '            no_Display_Detail = False
    '            sReadingIndexS = sReadingIndexS + 1
    '            Call display_Detail(newshpseq)

    '            GroupBox6.Enabled = True
    '            cboCtrSiz.Enabled = True

    '            txtManNam.Enabled = False
    '            cboManAdr.Enabled = False
    '            txtManAdr.Enabled = False
    '            'txtaddinf.Enabled = False
    '            txtInvNo.Enabled = False
    '            txtCartonFactor.Enabled = False
    '            txtCtnEnd.Enabled = False
    '            txtCtnStr.Enabled = False
    '            txtPC.Enabled = False
    '            txtConFtr.Enabled = False
    '            txtShpQty.Enabled = False
    '            txtItmDsc.Enabled = False
    '            '  Call reset_detail_control("Detail_Init")

    '            ''            Call reset_detail_data("Detail_Init", "All")
    '        Else
    '            Exit Sub
    '        End If


    '        'Exit Sub


    '        Insert_flag = True
    '        '      btcSHM00001.SelectedIndex = 1

    '        '*** Check Combo in list or not ?
    '        If not_in_Combo_HDR() = True Then
    '            Exit Sub
    '        End If

    '        'If not_in_Combo_DTL() = True Then
    '        '    Exit Sub
    '        'End If
    '        'temp

    '        'Call fill_SHIPGDTL()

    '        no_Display_Detail = True

    '        'dgPCKDIM.DataSource = rs_SHIPGDTL.Tables("RESULT").DefaultView
    '        'rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort() = "hid_shpseq"
    '        'no_Display_Detail = False
    '        'txtSeq.Text = rs_SHIPGDTL.Tables("RESULT").Rows(rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1)("hid_shpseq") + 1

    '        'Call reverse_Detail()

    '        ''??
    '        no_Display_Detail = True
    '        'drNewRow = rs_SHIPGDTL.Tables("RESULT").NewRow
    '        'no_Display_Detail = False
    '        'drNewRow("mode") = "NEW"
    '        'drNewRow("hid_shpseq") = rs_SHIPGDTL.Tables("RESULT").Rows.Count
    '        ''drNewRow("hid_apprve") = ""
    '        'rs_SHIPGDTL.Tables("RESULT").Rows.Add(drNewRow)
    '        'temp

    '        sReadingIndexS = rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1

    '        cmdBck.Enabled = True
    '        cmdNxt.Enabled = True
    '        '     Call reset_detail_control("Detail_Init")


    '        '''''

    '    Next

    '    Recordstatus = True

    'End Sub


    Public Sub delete_container(ByVal ctnnbr As String)

        gspStr = "sp_Physical_Delete_SHPCKDIM_cov  '" & cboCoCde.Text.Trim & "','" & ctnnbr & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHPCKDIM_cov_back, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading delete ctner:" & rtnStr)
            Exit Sub
        End If

        gspStr = "sp_Physical_Delete_SHDTLCTN_cov  '" & cboCoCde.Text.Trim & "','" & ctnnbr & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHDTLCTN_cov_back, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading delete ctner:" & rtnStr)
            Exit Sub
        End If


        gspStr = "sp_Physical_Delete_SHCPTBKD_cov  '" & cboCoCde.Text.Trim & "','" & ctnnbr & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHDTLCTN_cov_back, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading delete ctner:" & rtnStr)
            Exit Sub
        End If

        gspStr = "sp_Physical_Delete_SHASSINF_cov  '" & ctnnbr & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHDTLCTN_cov_back, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading delete ctner:" & rtnStr)
            Exit Sub
        End If

        'select from COV
        'sp_select_shipgdtl_cov
        gspStr = "sp_Physical_Delete_SHIPGDTL_cov  '" & cboCoCde.Text.Trim & "','" & ctnnbr & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL_cov_back, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading delete ctner:" & rtnStr)
            Exit Sub
        End If


    End Sub

    Private Function FindSHPMRK_RS() As Boolean
        For INDEX9 As Integer = 0 To rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1
            If cboInvNoM.Text = rs_SHSHPMRK.Tables("RESULT").Rows(INDEX9).Item("hsm_invno") Then
                FindSHPMRK_RS = True
                Exit Function
            End If
        Next
        FindSHPMRK_RS = False
    End Function


    Function get_pdnum(ByVal tmp_CartonFactor, ByVal index_insert) As Integer
        If tmp_CartonFactor = 1 Then
            get_pdnum = index_insert + 5
        ElseIf tmp_CartonFactor = 2 Then
            get_pdnum = index_insert * 2 + 1
        ElseIf tmp_CartonFactor = 3 Then
            get_pdnum = index_insert * 2 + 7
        ElseIf tmp_CartonFactor = 4 Then
            get_pdnum = index_insert * 2 + 13
        ElseIf tmp_CartonFactor = 5 Then
            get_pdnum = index_insert * 2 + 21
        End If
    End Function
    Function reset_display()
        Dim shpseq As Integer
        Dim loc As Integer

        rs_SHIPGDTL_display = Nothing

        gspStr = "sp_list_SHIPGDTL_sum '" & cboCoCde.Text & "'"
        rtnLong = execute_SQLStatement(gspStr, rs_SHIPGDTL_display, rtnStr)
        gspStr = ""

        If rtnLong <> RC_SUCCESS Then
            MsgBox("Error on loading txtShpNoKeyPress sp_select_SHIPGDTL :" & rtnStr)
            Exit Function
        End If

        For i As Integer = 0 To rs_SHIPGDTL_display.Tables("RESULT").Columns.Count - 1
            rs_SHIPGDTL_display.Tables("RESULT").Columns(i).ReadOnly = False
        Next i
        If rs_SHIPGDTL_dis Is Nothing Then
            Exit Function
        End If
        For i As Integer = 0 To rs_SHIPGDTL_dis.Tables("result").Rows.Count - 1
            rs_SHIPGDTL_display.Tables("RESULT").Rows.Add()
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("Del") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("Del")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("Cov") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("Cov")

            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_cocde") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_cocde")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_shpno") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_shpno")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_shpseq") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_shpseq")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_invno") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_invno")

            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ctrsiz") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ctrsiz")
            If rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ctrsiz") = "" Then
                rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ctrsiz") = "CFS"
            End If

            If Microsoft.VisualBasic.Left(rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ctrsiz"), 9) = Microsoft.VisualBasic.Left("40'HQ(Reefer Dry)", 9) Then
                rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ctrsiz") = "40'HQ(Reefer Dry)"
            End If



            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ctrcfs") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ctrcfs")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_sealno") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_sealno")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_cuspo") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_cuspo")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_jobno") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_jobno")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ordno") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ordno")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_purord") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_purord")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_itmno") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_itmno")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_cusitm") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_cusitm")

            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("dcp") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_colpck")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_cuscol") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_cuscol")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_shpqty") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_shpqty")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_untcde") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_untcde")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ttlctn") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ttlctn")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ctnstr") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ctnstr")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ctnend") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ctnend")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_mtrdcm") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_mtrdcm") & " X " & rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_mtrwcm") & " X " & rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_mtrhcm")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_actvol") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_actvol")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ttlvol") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ttlvol")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_grswgt") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_grswgt")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ttlgrs") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ttlgrs")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_netwgt") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_netwgt")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ttlnet") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ttlnet")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_paytrm") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_paytrm")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_paytrmdsc") = ""
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_prctrm") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_prctrm")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_selprc") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_selprc")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_untsel") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_untsel")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_untamt") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_untamt")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_ttlamt") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_ttlamt")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_mannam") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_mannam")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_venno") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_venno")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_cusven") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_cusven")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_pckrmk") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_pckrmk")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_creusr") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_creusr")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_alsitmno") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_alsitmno")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_alscolcde") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_alscolcde")
            rs_SHIPGDTL_display.Tables("RESULT").Rows(i).Item("hid_custum") = rs_SHIPGDTL_dis.Tables("RESULT").Rows(i).Item("hid_custum")

        Next



    End Function


    Private Sub grdShpSum_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles grdShpSum.CellEndEdit
        Dim Shpseq As Integer
        Shpseq = grdShpSum.Item(grdShpSum_hid_shpseq, grdShpSum.CurrentCell.RowIndex).Value
        If rs_SHIPGDTL Is Nothing Then
            Exit Sub
        End If

        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            ''bug
            If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_Shpseq")) Then

                If Shpseq = rs_SHIPGDTL.Tables("RESULT").Rows(i).Item("hid_Shpseq") Then
                    sReadingIndexS = i
                End If
            End If
        Next i

        Select Case e.ColumnIndex
            Case grdShpSum_hid_invno
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_invno") = Trim(grdShpSum.CurrentCell.Value)
            Case grdShpSum_hid_ctrsiz
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctrsiz") = Trim(grdShpSum.CurrentCell.Value)
            Case grdShpSum_hid_ctrcfs
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_ctrcfs") = Trim(grdShpSum.CurrentCell.Value)
            Case grdShpSum_hid_sealno
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_sealno") = Trim(grdShpSum.CurrentCell.Value)
            Case grdShpSum_hid_pckrmk
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk") = Trim(grdShpSum.CurrentCell.Value)
        End Select


        If rs_SHIPGDTL.Tables("RESULT").Rows.Count > sReadingIndexS Then
            Call display_Detail(Shpseq)
        End If

        For index_dis As Integer = 0 To rs_SHIPGDTL.Tables("result").Rows.Count - 1
            If Not IsDBNull(rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr")) Then
                'If rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr") > 1 Then
                update_SHIPGDTL_dis(rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_shpseq"), rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr"))
                ' End If
            End If
        Next

        For index_dis As Integer = 0 To rs_SHIPGDTL_dis.Tables("result").Rows.Count - 1
            If rs_SHIPGDTL_dis.Tables("result").Rows(index_dis)("hid_shpseq") = Shpseq Then
                rs_SHIPGDTL_dis.Tables("result").Rows(index_dis)("hid_invno") = rs_SHIPGDTL.Tables("result").Rows(sReadingIndexS)("hid_invno")
                rs_SHIPGDTL_dis.Tables("result").Rows(index_dis)("hid_ctrsiz") = rs_SHIPGDTL.Tables("result").Rows(sReadingIndexS)("hid_ctrsiz")
                rs_SHIPGDTL_dis.Tables("result").Rows(index_dis)("hid_ctrcfs") = rs_SHIPGDTL.Tables("result").Rows(sReadingIndexS)("hid_ctrcfs")
                rs_SHIPGDTL_dis.Tables("result").Rows(index_dis)("hid_sealno") = rs_SHIPGDTL.Tables("result").Rows(sReadingIndexS)("hid_sealno")
                rs_SHIPGDTL_dis.Tables("result").Rows(index_dis)("hid_pckrmk") = rs_SHIPGDTL.Tables("result").Rows(sReadingIndexS)("hid_pckrmk")

            End If
        Next

        '        Call display_grdShpSum()


        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr").ToString = "~*NEW*~" Or rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr").ToString = "~*ADD*~" Then
            Recordstatus = True
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*ADD*~"
        Else
            Recordstatus = True
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*UPD*~"
        End If

        If rs_SHIPGDTL.Tables("RESULT").Rows.Count > sReadingIndexS Then
            Call display_Detail(Shpseq)
        End If
        reset_display()

    End Sub
    Function reset_dis()

        rs_SHIPGDTL_dis = rs_SHIPGDTL.Copy
        For i As Integer = 0 To rs_SHIPGDTL_dis.Tables("RESULT").Columns.Count - 1
            rs_SHIPGDTL_dis.Tables("RESULT").Columns(i).ReadOnly = False
        Next i
        For index_dis As Integer = 0 To rs_SHIPGDTL.Tables("result").Rows.Count - 1
            If IsDBNull(rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr")) Then
                Exit Function
            End If

            update_SHIPGDTL_dis(rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_shpseq"), rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr"))

            'If rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr") > 1 Then
            '    update_SHIPGDTL_dis(rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_shpseq"), rs_SHIPGDTL.Tables("result").Rows(index_dis)("hid_ctnftr"))
            'Else
            'End If
        Next


        'display
    End Function

    Private Sub dgSCCPTBKD_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgSCCPTBKD.CellClick
        Dim Shpseq As Integer
        Dim cptseq As Integer

        Recordstatus = True
        If e.ColumnIndex > 1 Then
            Exit Sub
        End If

        If Not IsNumeric(dgSCCPTBKD.Item(3, dgSCCPTBKD.CurrentCell.RowIndex).Value) Then
            Exit Sub
        End If
        If Not IsNumeric(dgSCCPTBKD.Item(5, dgSCCPTBKD.CurrentCell.RowIndex).Value) Then
            Exit Sub
        End If

        Shpseq = dgSCCPTBKD.Item(3, dgSCCPTBKD.CurrentCell.RowIndex).Value
        cptseq = dgSCCPTBKD.Item(5, dgSCCPTBKD.CurrentCell.RowIndex).Value


        For i As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1
            ''bug
            If Not IsDBNull(rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_ordseq")) Then

                If Shpseq = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_ordseq") _
                And cptseq = rs_SHCPTBKD.Tables("RESULT").Rows(i).Item("shb_cptseq") Then
                    sReadingIndexCB = i
                End If
            End If

        Next i

        If e.RowIndex >= 0 And e.ColumnIndex = 0 Then
            If rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB)("shb_status").ToString = "Y" Then
                rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB)("shb_status") = ""

                If rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB)("shb_creusr") = "~*AEL*~" Then
                    rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB).Item("shb_creusr") = "~*ADD*~"
                Else
                    rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB).Item("shb_creusr") = "~*UPD*~"
                End If

                'If rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB).Item("shb_creusr") <> "~*ADD*~" And rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB).Item("shb_creusr") <> "~*NEW*~" Then
                '    rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB).Item("shb_creusr") = "~*UPD*~"
                'End If

            Else
                rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB)("shb_status") = "Y"

                If rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB).Item("shb_creusr") = "~*ADD*~" Or rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB).Item("shb_creusr") = "~*NEW*~" Then
                    rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB)("shb_creusr") = "~*AEL*~"
                Else
                    rs_SHCPTBKD.Tables("RESULT").Rows(sReadingIndexCB)("shb_creusr") = "~*DEL*~"
                End If

            End If

            rs_SHCPTBKD.Tables("RESULT").AcceptChanges()

        End If






        ''reset detail page 

        Call display_SHCPTBKD()


        '''20141007
    End Sub


    Private Sub dgSCCPTBKD_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgSCCPTBKD.CellContentClick

    End Sub

    Private Sub dgSCCPTBKD_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgSCCPTBKD.CellEndEdit

        If rs_SHCPTBKD.Tables("RESULT").DefaultView(e.RowIndex)("shb_creusr") <> "~*ADD*~" And _
  rs_SHCPTBKD.Tables("RESULT").DefaultView(e.RowIndex)("shb_creusr") <> "~*ADEL*~" And _
   rs_SHCPTBKD.Tables("RESULT").DefaultView(e.RowIndex)("shb_creusr") <> "~*NEW*~" Then

            rs_SHCPTBKD.Tables("RESULT").DefaultView(e.RowIndex)("shb_creusr") = "~*UPD*~"


            ' rs_SHCPTBKD.Tables("RESULT").DefaultView(e.RowIndex)("shb_creusr") = "~*UPD*~"

        End If

        '''
        CalculateMatBkd()

        Recordstatus = True

    End Sub

    Private Sub dgSCCPTBKD_CellValidating(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellValidatingEventArgs) Handles dgSCCPTBKD.CellValidating


        If rs_SHCPTBKD Is Nothing Then
            Exit Sub
        End If
        If rs_SHCPTBKD.Tables("result") Is Nothing Then
            Exit Sub
        End If
        If rs_SHCPTBKD.Tables("result").Rows.Count = 0 Then
            Exit Sub
        End If


        Dim row As DataGridViewRow = dgSCCPTBKD.CurrentRow
        Dim strNewVal As String

        strNewVal = row.Cells(e.ColumnIndex).EditedFormattedValue.ToString.Trim
        Dim i As Integer

        Select Case e.ColumnIndex
            Case 7
                If Not (strNewVal = "USD" Or strNewVal = "HKD" Or strNewVal = "RMB" Or strNewVal = cboUntAmt.Text.Trim) Then
                    MsgBox("Please input valid currency!")
                    e.Cancel = True
                    Exit Sub
                End If


            Case 8, 9, 10


                If Not IsNumeric(strNewVal) Then
                    MsgBox("Please input Numeric value!")
                    e.Cancel = True
                    Exit Sub
                End If


        End Select




    End Sub

    Private Sub dgSCCPTBKD_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles dgSCCPTBKD.EditingControlShowing

        If dgSCCPTBKD.RowCount = 0 Then
            Exit Sub
        End If

        e.CellStyle.BackColor = Color.White

        Select Case dgSCCPTBKD.CurrentCell.ColumnIndex

            Case dgSCCPTBKD_CstAmt, dgSCCPTBKD_CstPer, dgSCCPTBKD_Wgt
                Dim txtbox_dgSCCPTBKD As TextBox = CType(e.Control, TextBox)
                If Not (txtbox_dgSCCPTBKD Is Nothing) Then
                    AddHandler txtbox_dgSCCPTBKD.KeyPress, AddressOf txtbox_dgSCCPTBKD_KeyPress
                End If
        End Select



    End Sub

    Private Sub dgSCCPTBKD_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgSCCPTBKD.GotFocus
        Grid_Got_Focus = "dgSCCPTBKD"

    End Sub

    Private Sub cboCus2No_dtl_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboCus2No_dtl.SelectedIndexChanged


        If cboCus2No_dtl.Text.Trim <> "" Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = cboCus2No_dtl.Text.Trim

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cus2no")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cus2no") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_cus2no") = tmpstr
                    End If
                End If
            End If
        End If


    End Sub

    Private Sub cboUntSelD_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboUntSelD.SelectedIndexChanged

    End Sub

    Private Sub cal_header_sum()
        Dim tmp_CartonFactor As Integer
        Dim tmp_mod_vol As Decimal = 0

        txtTtlCtn.Text = ""
        txtTtlcbm.Text = ""
        txtTtlAmt.Text = ""
        txtTtlNwg.Text = ""
        txtTtlGwg.Text = ""


        If rs_SHIPGDTL Is Nothing Then
            txtTtlCtn.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlctn")
            txtTtlcbm.Text = Val(rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlcbm"))
            txtTtlNwg.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlnwg")
            txtTtlGwg.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlgwg")
            txtTtlAmt.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlamt")

            Exit Sub
        End If

        If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If

        For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If rs_SHIPGDTL.Tables("RESULT").Rows(index9)("del") <> "Y" Then

                txtTtlCtn.Text = Val(txtTtlCtn.Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlctn")) * Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr"))
                '            txtTtlcbm.Text = Val(txtTtlcbm.Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_vol")) * Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlctn")) * Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr"))
                txtTtlAmt.Text = Val(txtTtlAmt.Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))

                rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlnet") = 0
                rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlgrs") = 0

                If rs_SHPCKDIM Is Nothing Then
                    Exit Sub
                End If
                For index99 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1

                    If rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 5 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 6 Then
                        tmp_CartonFactor = 1
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 4 Then
                        tmp_CartonFactor = 2
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 7 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 12 Then
                        tmp_CartonFactor = 3
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 13 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 20 Then
                        tmp_CartonFactor = 4
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 21 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 30 Then
                        tmp_CartonFactor = 5
                    End If

                    If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr")) Then
                        Exit Sub
                    End If
                    If rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpno") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpno") And _
                            rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpseq") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpseq") And _
                                rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_dimtyp") = "Act" And _
                        tmp_CartonFactor = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr") Then

                        '                    tmp_CartonFactor = Val(txtCartonFactor.Text) Then
                        'temp mod

                        rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlnet") = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlnet") + rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_ttlnw_kg")
                        rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlgrs") = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlgrs") + rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_ttlgw_kg")

                        tmp_mod_vol = round(rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_ttlcbm_cm"), 2)


                    End If
                Next

                txtTtlNwg.Text = Val(txtTtlNwg.Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlnet"))
                txtTtlGwg.Text = Val(txtTtlGwg.Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlgrs"))
                txtTtlcbm.Text = Val(txtTtlcbm.Text) + tmp_mod_vol

            End If
            '''1009
        Next

        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlctn") = Val(txtTtlCtn.Text.Trim)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlcbm") = Val(txtTtlcbm.Text.Trim)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlnwg") = Val(txtTtlNwg.Text.Trim)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlgwg") = Val(txtTtlGwg.Text.Trim)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlamt") = Val(txtTtlAmt.Text.Trim)
    End Sub


    Private Sub cmdinscpb_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdinscpb.Click
        Dim last__row As Integer
        Dim max_seq As Integer

        max_seq = 0

        If rs_SHCPTBKD Is Nothing Then
            '            If rs_SHCPTBKD.Tables("RESULT") Is Nothing Then

            gspStr = "sp_list_SHCPTBKD '" & "" & "','" & "" & "'"
            rtnLong = execute_SQLStatement(gspStr, rs_SHCPTBKD, rtnStr)
            gspStr = ""

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading txtShpNoKeyPress sp_list_SHCPTBKD :" & rtnStr)
                Exit Sub
            End If
            For i As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").Columns.Count - 1
                rs_SHCPTBKD.Tables("RESULT").Columns(i).ReadOnly = False
            Next i


        Else
            For i As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1
                If rs_SHCPTBKD.Tables("RESULT").Rows(i)("shb_ordseq") = txtShpSeq.Text.Trim Then
                    If rs_SHCPTBKD.Tables("RESULT").Rows(i)("shb_cptseq") > max_seq Then
                        max_seq = rs_SHCPTBKD.Tables("RESULT").Rows(i)("shb_cptseq")
                    End If
                End If
            Next
        End If
        max_seq = max_seq + 1

        rs_SHCPTBKD.Tables("RESULT").Rows.Add()
        last__row = rs_SHCPTBKD.Tables("RESULT").Rows.Count - 1

        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_status") = ""
        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cocde") = cboCoCde.Text.Trim
        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_ordno") = ""
        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_ordseq") = txtShpSeq.Text.Trim

        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_itmno") = cboItmNo.Text.Trim

        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cptseq") = max_seq
        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cpt") = ""
        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_curcde") = cboUntAmt.Text
        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cst") = 0
        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_cstpct") = 0
        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_pct") = 0
        rs_SHCPTBKD.Tables("RESULT").Rows(last__row)("shb_creusr") = "~*ADD*~"

        Call display_SHCPTBKD()


        dgSCCPTBKD.CurrentCell = dgSCCPTBKD.Item(6, dgSCCPTBKD.RowCount - 1)
        dgSCCPTBKD.BeginEdit(True)

        '''1009
    End Sub

    Private Sub cbo_scno_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cbo_scno.SelectedIndexChanged

        rs_SCDISPRM_D.Tables("RESULT").DefaultView.RowFilter = "sdp_ordno = '" + cbo_scno.Text.Trim + "'"
        rs_SCDISPRM_P.Tables("RESULT").DefaultView.RowFilter = "sdp_ordno = '" + cbo_scno.Text.Trim + "'"

        '        Grid_Got_Focus = "grdDiscount"
        Call Display_Dis()
        '       Grid_Got_Focus = "grdPremium"
        Call Display_pre()


    End Sub
    Function fillshipinv()

        Dim i As Integer

        If rs_SHINVHDR Is Nothing Then
            Exit Function
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Function
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Function
        End If

        If sReadingIndexI_I > rs_SHINVHDR.Tables("RESULT").Rows.Count Then
            Exit Function
        End If

        If cboInvNo.Text.Trim <> "" Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invno") = cboInvNo.Text.Trim
        Else
            Exit Function
        End If


        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invdat") = txtInvDat.Text.Trim

        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_prctrm") = cboPrcTrm.Text.Trim
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_paytrm") = cboPayTrm.Text.Trim


        If optDocTyp0.Checked = True Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp") = optDocTyp0.Text.Trim
        End If
        If optDocTyp1.Checked = True Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp") = optDocTyp1.Text.Trim
        End If
        If optDocTyp2.Checked = True Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp") = optDocTyp2.Text.Trim
        End If



        If optFOB1.Checked = True Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp") = optFOB1.Text.Trim
        End If
        If optFOB2.Checked = True Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp") = optFOB2.Text.Trim
        End If


        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doc") = txtDoc.Text
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_bank") = cbobank.Text
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cover") = txtCover.Text

        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ftrrmk") = txtFtrRmk.Text







        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcstmt") = txtLcStmt.Text
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_untamt") = cboUntAmtI.Text

        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlamt") = Val(txtTtlAmtI.Text)
        'temp1014
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invamt") = Val(txtInvAmt.Text)
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_afamt") = Val(txtAFamt.Text)
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlvol") = Val(txtTtlVolI.Text)
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlctn") = Val(TxtTtlCtnI.Text)

        'txtTtlHdpAmt.Text = 0
        'txtTtlHdpAmt.Text = round(txtTtlAmtI.Text - txtInvAmt.Text - txtAFamt.Text, 2)
        If IsDate(txtcargorcvdat.Text) Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cargorcvdat") = txtcargorcvdat.Text
        Else
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cargorcvdat") = "01/01/1900"
        End If


        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcno") = txtLCNo.Text
        If IsDate(txtLCdat.Text) Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_LCdat") = txtLCdat.Text
        Else
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_LCdat") = "01/01/1900"
        End If
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcbank") = txtLcBank.Text


        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptnam") = txtexptnam.Text.Trim
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptaddr") = txtexptaddr.Text.Trim

        'temp
        '        Call display_SHSMPINV()
        'temp

        'If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invsts") = "CLO" Then
        '    chkClose.Checked = True
        'Else
        '    chkClose.Checked = False
        'End If


    End Function

    Private Sub cal_inv_sum()
        Dim tmp_cboInvNo As String = cboInvNo.Text.Trim
        Dim tmp_CartonFactor As Integer
        Dim rs_tmp_P As DataSet
        Dim rs_tmp_D As DataSet
        Dim rs_tmp_SHIPGDTL As DataSet
        Dim tmpttlamt As Decimal
        Dim tmp_Recordstatus = Recordstatus
        Dim tmp_mod_vol As Decimal = 0


        If rs_SHDISPRM_P Is Nothing Then
            Exit Sub
        End If
        If rs_SHDISPRM_D Is Nothing Then
            Exit Sub
        End If
        rs_tmp_P = rs_SHDISPRM_P.Copy
        rs_tmp_D = rs_SHDISPRM_D.Copy
        rs_tmp_SHIPGDTL = rs_SHIPGDTL.Copy


        tmpttlamt = 0
        txtTtlVolI.Text = ""
        TxtTtlCtnI.Text = ""
        txtInvAmt.Text = ""

        'txtTtlAmtI.Text = ""
        'txtTtlHdpAmt.Text = ""
        If rs_tmp_SHIPGDTL Is Nothing Then
            Exit Sub
        End If

        If rs_tmp_SHIPGDTL.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If

        For index9 As Integer = 0 To rs_tmp_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("DEL") <> "Y" Then
                'tmpttlamt = Val(tmpttlamt) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))
                '20141111

                If tmp_cboInvNo = rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno") Then
                    TxtTtlCtnI.Text = Val(TxtTtlCtnI.Text) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlctn")) * Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr"))
                    txtInvAmt.Text = round((Val(txtInvAmt.Text) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))), 2)
                    tmpttlamt = Val(tmpttlamt) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))


                    'rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol") = 0

                    For index99 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1

                        If rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 5 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 6 Then
                            tmp_CartonFactor = 1
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 4 Then
                            tmp_CartonFactor = 2
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 7 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 12 Then
                            tmp_CartonFactor = 3
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 13 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 20 Then
                            tmp_CartonFactor = 4
                        ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 21 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 30 Then
                            tmp_CartonFactor = 5
                        End If

                        If IsDBNull(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr")) Then
                            Exit Sub
                        End If
                        If rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpno") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpno") And _
                                rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpseq") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpseq") And _
                                    rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_dimtyp") = "Mod" And _
                        tmp_CartonFactor = rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr") Then
                            'temp mod

                            'rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol") = rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol") + rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_ttlcbm_cm")
                            tmp_mod_vol = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_ttlcbm_cm")
                            tmp_mod_vol = round(tmp_mod_vol, 2)
                        End If
                    Next

                    '                txtTtlVolI.Text = Val(txtTtlVolI.Text) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol"))
                    '''1009
                    txtTtlVolI.Text = Val(txtTtlVolI.Text) + tmp_mod_vol
                End If  'inv


            End If
        Next
        '''
        Dim tmp_amt As Decimal = 0
        If Not rs_tmp_P.Tables("RESULT") Is Nothing Then
            rs_tmp_P.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" & tmp_cboInvNo & "'"
            If rs_tmp_P.Tables("RESULT").DefaultView.Count > 0 Then
                For index99 As Integer = 0 To rs_tmp_P.Tables("RESULT").DefaultView.Count - 1
                    If Not IsDBNull(rs_tmp_P.Tables("RESULT").DefaultView(index99)("hdp_amt")) Then
                        tmp_amt = tmp_amt + Val(rs_tmp_P.Tables("RESULT").DefaultView(index99)("hdp_amt"))

                    End If

                Next
            End If
        End If
        If Not rs_tmp_D.Tables("RESULT") Is Nothing Then
            rs_tmp_D.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" & tmp_cboInvNo & "'"
            If rs_tmp_D.Tables("RESULT").DefaultView.Count > 0 Then
                For index99 As Integer = 0 To rs_tmp_D.Tables("RESULT").DefaultView.Count - 1
                    If Not IsDBNull(rs_tmp_D.Tables("RESULT").DefaultView(0)("hdp_amt")) Then
                        tmp_amt = tmp_amt - Val(rs_tmp_D.Tables("RESULT").DefaultView(index99)("hdp_amt"))

                    End If
                Next

            End If
        End If


        txtTtlHdpAmt.Text = round((1) * tmp_amt, 2)
        txtTtlAmtI.Text = (round((Val(tmpttlamt) + tmp_amt), 2)).ToString
        '        txtTtlAmtI.Text = (Val(tmpttlamt) - tmp_amt).ToString


        Recordstatus = tmp_Recordstatus
    End Sub




    Private Sub cal_pre_dis()
        Dim tmp_invamt
        Dim tmp_inv_creusr

        If Not rs_SHDISPRM_P Is Nothing Then
            If Not rs_SHDISPRM_P.Tables("RESULT") Is Nothing Then
                For index9 As Integer = 0 To rs_SHDISPRM_P.Tables("RESULT").Rows.Count - 1
                    For index99 As Integer = 0 To rs_SHINVHDR.Tables("RESULT").Rows.Count - 1
                        If rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_invno") = rs_SHINVHDR.Tables("RESULT").Rows(index99)("hiv_invno") Then
                            tmp_invamt = Val(rs_SHINVHDR.Tables("RESULT").Rows(index99)("hiv_invamt")) / 100
                        End If
                    Next
                    If tmp_invamt <> 0 Then
                        If round(Val(rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_amt")), 2) <> round(tmp_invamt * Val(rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_pct")), 2) Then
                            If rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_pct") <> 0 Then
                                rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_amt") = tmp_invamt * rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_pct")
                            End If

                            Recordstatus = True
                            If rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_creusr").ToString <> "~*DEL*~" Then
                                If rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_creusr").ToString = "~*NEW*~" Or rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_creusr").ToString = "~*ADD*~" Then
                                    rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_creusr") = "~*ADD*~"
                                Else
                                    rs_SHDISPRM_P.Tables("RESULT").Rows(index9)("hdp_creusr") = "~*UPD*~"
                                End If
                            End If
                        End If
                    End If
                Next
            End If
        End If

        If Not rs_SHDISPRM_D Is Nothing Then
            If Not rs_SHDISPRM_D.Tables("RESULT") Is Nothing Then
                For index9 As Integer = 0 To rs_SHDISPRM_D.Tables("RESULT").Rows.Count - 1
                    For index99 As Integer = 0 To rs_SHINVHDR.Tables("RESULT").Rows.Count - 1
                        If rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_invno") = rs_SHINVHDR.Tables("RESULT").Rows(index99)("hiv_invno") Then
                            tmp_invamt = Val(rs_SHINVHDR.Tables("RESULT").Rows(index99)("hiv_invamt")) / 100
                        End If
                    Next
                    If tmp_invamt <> 0 Then
                        If round(Val(rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_amt")), 2) <> round(tmp_invamt * Val(rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_pct")), 2) Then
                            If rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_pct") <> 0 Then
                                rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_amt") = tmp_invamt * rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_pct")
                            End If

                            Recordstatus = True
                            If rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_creusr").ToString <> "~*DEL*~" Then
                                If rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_creusr").ToString = "~*NEW*~" Or rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_creusr") = "~*ADD*~" Then
                                    rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_creusr") = "~*ADD*~"
                                Else
                                    rs_SHDISPRM_D.Tables("RESULT").Rows(index9)("hdp_creusr") = "~*UPD*~"
                                End If
                            End If
                        End If
                    End If
                Next
            End If
        End If
        '  display_grdPremium()
        ' display_grdDiscount()

    End Sub


    Private Sub cal_all_inv_sum()

        Dim tmp_cboInvNo As String '' cboInvNoText.Trim ''' for loop
        Dim tmp_CartonFactor As Integer
        Dim rs_tmp_P As DataSet
        Dim rs_tmp_D As DataSet
        Dim rs_tmp_SHIPGDTL As DataSet
        Dim tmpttlamt As Decimal
        Dim tmp_Recordstatus = Recordstatus

        Dim txtTtlVolI_Text
        Dim TxtTtlCtnI_Text
        Dim txtInvAmt_Text

        If rs_SHDISPRM_P Is Nothing Then
            Exit Sub
        End If
        If rs_SHDISPRM_D Is Nothing Then
            Exit Sub
        End If
        rs_tmp_P = rs_SHDISPRM_P.Copy
        rs_tmp_D = rs_SHDISPRM_D.Copy
        rs_tmp_SHIPGDTL = rs_SHIPGDTL.Copy


        For index999 As Integer = 0 To rs_SHINVHDR.Tables("RESULT").Rows.Count - 1
            tmp_cboInvNo = rs_SHINVHDR.Tables("RESULT").Rows(index999)("hiv_invno")

            tmpttlamt = 0
            txtTtlVolI_Text = ""
            TxtTtlCtnI_Text = ""
            txtInvAmt_Text = ""

            'txtTtlAmtI_Text = ""
            'txtTtlHdpAmt_Text = ""
            If rs_tmp_SHIPGDTL Is Nothing Then
                Exit Sub
            End If

            If rs_tmp_SHIPGDTL.Tables("RESULT") Is Nothing Then
                Exit Sub
            End If

            For index9 As Integer = 0 To rs_tmp_SHIPGDTL.Tables("RESULT").Rows.Count - 1
                If rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("del") <> "Y" Then
                    'tmpttlamt = Val(tmpttlamt) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))
                    '20141111
                    '  tmpttlamt = 0

                    If tmp_cboInvNo = rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno") Then
                        TxtTtlCtnI_Text = Val(TxtTtlCtnI_Text) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlctn")) * Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr"))
                        txtInvAmt_Text = Val(txtInvAmt_Text) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))
                        tmpttlamt = Val(tmpttlamt) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))


                        'rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol") = 0

                        For index99 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1

                            If rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 5 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 6 Then
                                tmp_CartonFactor = 1
                            ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 4 Then
                                tmp_CartonFactor = 2
                            ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 7 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 12 Then
                                tmp_CartonFactor = 3
                            ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 13 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 20 Then
                                tmp_CartonFactor = 4
                            ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 21 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 30 Then
                                tmp_CartonFactor = 5
                            End If

                            If IsDBNull(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr")) Then
                                Exit Sub
                            End If
                            If rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpno") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpno") And _
                                    rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpseq") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpseq") And _
                                        rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_dimtyp") = "Mod" And _
                            tmp_CartonFactor = rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr") Then
                                'temp mod

                                'rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol") = rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol") + rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_ttlcbm_cm")

                            End If
                        Next

                        txtTtlVolI_Text = Val(txtTtlVolI_Text) + Val(rs_tmp_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol"))

                        '''1009

                    End If  'inv

                End If

            Next
            '''
            Dim tmp_amt As Decimal = 0
            If Not rs_tmp_P.Tables("RESULT") Is Nothing Then
                rs_tmp_P.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" & tmp_cboInvNo & "'"
                If rs_tmp_P.Tables("RESULT").DefaultView.Count > 0 Then
                    For index99 As Integer = 0 To rs_tmp_P.Tables("RESULT").DefaultView.Count - 1
                        If Not IsDBNull(rs_tmp_P.Tables("RESULT").DefaultView(index99)("hdp_amt")) Then
							If rs_tmp_P.Tables("RESULT").DefaultView(index99)("hdp_creusr") <> "~*DEL*~" And rs_tmp_P.Tables("RESULT").DefaultView(index99)("del") <> "Y" Then
                                tmp_amt = tmp_amt + Val(rs_tmp_P.Tables("RESULT").DefaultView(index99)("hdp_amt"))
                            End If
                        End If

                    Next
                End If
            End If
            If Not rs_tmp_D.Tables("RESULT") Is Nothing Then
                rs_tmp_D.Tables("RESULT").DefaultView.RowFilter = "hdp_invno = '" & tmp_cboInvNo & "'"
                If rs_tmp_D.Tables("RESULT").DefaultView.Count > 0 Then
                    For index99 As Integer = 0 To rs_tmp_D.Tables("RESULT").DefaultView.Count - 1
                        If Not IsDBNull(rs_tmp_D.Tables("RESULT").DefaultView(0)("hdp_amt")) Then
                             If rs_tmp_D.Tables("RESULT").DefaultView(index99)("hdp_creusr") <> "~*DEL*~" And rs_tmp_D.Tables("RESULT").DefaultView(index99)("del") <> "Y" Then
                                tmp_amt = tmp_amt - Val(rs_tmp_D.Tables("RESULT").DefaultView(index99)("hdp_amt"))
                            End If

                        End If
                    Next

                End If
            End If


            'txtTtlHdpAmt_Text = (1) * tmp_amt
            '''txtTtlAmtI_Text = (Val(tmpttlamt) + tmp_amt).ToString
            If Not round(rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_ttlamt"), 2) = round((Val(tmpttlamt) + tmp_amt), 2) Then
                rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_ttlamt") = (Val(tmpttlamt) + tmp_amt)   ''' +/- '''txtTtlAmtI_Text '''
                If rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") <> "~*NEW*~" Then
                    rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") = "~*UPD*~"
                End If
            End If

            If Not round(rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_ttlvol"), 2) = round(Val(txtTtlVolI_Text), 2) Then
                rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_ttlvol") = Val(txtTtlVolI_Text)
                If rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") <> "~*NEW*~" Then
                    rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") = "~*UPD*~"
                End If
            End If

            If Not round(rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_ttlctn"), 2) = round(Val(TxtTtlCtnI_Text), 2) Then
                rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_ttlctn") = Val(TxtTtlCtnI_Text)
                If rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") <> "~*NEW*~" Then
                    rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") = "~*UPD*~"
                End If
            End If

            If Not round(rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_invamt"), 2) = round((Val(tmpttlamt)), 2) Then ''' Then
                rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_invamt") = (Val(tmpttlamt)) '''
                If rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") <> "~*NEW*~" Then
                    rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_creusr") = "~*UPD*~"
                End If
            End If

            rs_SHINVHDR.Tables("RESULT").Rows(index999).Item("hiv_untamt") = cboUntAmt.Text.Trim
            '''20141231

            '        txtTtlAmtI_Text = (Val(tmpttlamt) - tmp_amt).ToString

        Next


        Recordstatus = tmp_Recordstatus


        'Dim tmp_cboInvNo As String
        'Dim tmp_CartonFactor As Integer
        'Dim txtTtlAmtI_Text As Decimal
        'Dim txtTtlVolI_Text As Decimal
        'Dim TxtTtlCtnI_Text As Decimal
        'Dim txtInvAmt_Text As Decimal
        'Dim tmp_recordsetstatus
        'tmp_recordsetstatus = Recordstatus


        'If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
        '    Exit Sub
        'End If
        'If rs_SHINVHDR Is Nothing Then
        '    Exit Sub
        'End If
        'If rs_SHINVHDR.Tables("result") Is Nothing Then
        '    Exit Sub
        'End If



        'For index3 As Integer = 0 To rs_SHINVHDR.Tables("result").Rows.Count - 1
        '    tmp_cboInvNo = rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invno")

        '    txtTtlAmtI_Text = 0
        '    txtTtlVolI_Text = 0
        '    TxtTtlCtnI_Text = 0
        '    txtInvAmt_Text = 0

        '    'txtAFamt_Text = ""
        '    'txtTtlHdpAmt_Text = ""
        '    If rs_SHIPGDTL Is Nothing Then
        '        Exit Sub
        '    End If

        '    For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
        '        txtTtlAmtI_Text = Val(txtTtlAmtI_Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))

        '        If tmp_cboInvNo = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_invno") Then
        '            TxtTtlCtnI_Text = Val(TxtTtlCtnI_Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlctn"))
        '            txtInvAmt_Text = Val(txtInvAmt_Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))



        '            'rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol") = 0

        '            For index99 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1

        '                If rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 5 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 6 Then
        '                    tmp_CartonFactor = 1
        '                ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 4 Then
        '                    tmp_CartonFactor = 2
        '                ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 7 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 12 Then
        '                    tmp_CartonFactor = 3
        '                ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 13 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 20 Then
        '                    tmp_CartonFactor = 4
        '                ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 21 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 30 Then
        '                    tmp_CartonFactor = 5
        '                End If

        '                If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr")) Then
        '                    Exit Sub
        '                End If

        '                If rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpno") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpno") And _
        '                        rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpseq") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpseq") And _
        '                            rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_dimtyp") = "Mod" And _
        '                tmp_CartonFactor = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr") Then
        '                    'temp mod

        '                    'rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol") = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol") + rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_ttlcbm_cm")

        '                End If
        '            Next

        '            txtTtlVolI_Text = Val(txtTtlVolI_Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlvol"))
        '            '''1009
        '        End If  'inv
        '    Next
        '    '''



        '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ttlamt") = txtInvAmt_Text    ''' +/- '''txtTtlAmtI_Text '''
        '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ttlvol") = txtTtlVolI_Text
        '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_ttlctn") = TxtTtlCtnI_Text
        '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_invamt") = txtInvAmt_Text '''

        '    rs_SHINVHDR.Tables("RESULT").Rows(index3).Item("hiv_untamt") = cboUntAmt_Text .Trim

        '    txtTtlAmtI_Text = 0
        '    txtTtlVolI_Text = 0
        '    TxtTtlCtnI_Text = 0

        'Next
        'txtInvAmt_Text = 0 ''ttl?
        'Recordstatus = tmp_recordsetstatus

    End Sub

    Private Sub gbPri_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gbPri.Enter

    End Sub

    Private Sub txtcargorcvdat_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtcargorcvdat.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If IsDate(txtcargorcvdat.Text.Trim) Or txtcargorcvdat.Text.Trim = "" Then

            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtcargorcvdat.Text
                If tmpstr = "" Then
                    tmpstr = "01/01/1900"
                End If
                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_CARGORCVDAT") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_CARGORCVDAT") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub optDocTyp1_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optDocTyp1.CheckedChanged

    End Sub

    Private Sub optDocTyp2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optDocTyp2.CheckedChanged

    End Sub

    Private Sub chkpckrmk_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkpckrmk.Click
        If sMode = cModeAdd Or sMode = cModeUpd Then
            Dim tmpstr
            If chkpckrmk.Checked = True Then
                tmpstr = chkpckrmk.Text.Trim
                If tmpstr = "" Then

                    If cboCtrSiz.Text.Trim = "20'" Then
                        chkpckrmk.Text = "Part of 1 x 20'"
                    ElseIf cboCtrSiz.Text.Trim = "40'(SD)" Then
                        chkpckrmk.Text = "Part of 1x40'(SD)"
                    ElseIf cboCtrSiz.Text.Trim = "40'(HQ)" Then
                        chkpckrmk.Text = "Part of 1x40'(HQ)"
                    ElseIf cboCtrSiz.Text.Trim = "45'" Then
                        chkpckrmk.Text = "Part of 1x53'"
                    ElseIf cboCtrSiz.Text.Trim = "53'" Then
                        chkpckrmk.Text = "Part of 1x53'"
                    ElseIf cboCtrSiz.Text.Trim = "40'HQ(Reefer Dry)" Then
                        chkpckrmk.Text = "Part of 1x40'HQ(Reefer Dry)"
                        'Label17.Visible = False
                        'chkpckrmk.Visible = False

                    ElseIf cboCtrSiz.Text.Trim = "CFS" Then
                        Label17.Visible = False
                        chkpckrmk.Visible = False
                        chkpckrmk.Text = ""
                    End If

                    '                    chkpckrmk.Text = cboCtrSiz.Text
                    tmpstr = chkpckrmk.Text.Trim
                End If
            Else
                tmpstr = ""
            End If
            If rs_SHIPGDTL Is Nothing Then
                Exit Sub
            End If
            ''bug
            If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk")) Then
                'If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk") Then
                Recordstatus = True
                If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                End If
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pckrmk") = tmpstr
            End If
            'End If
        End If
    End Sub

    Private Sub chkpckrmk_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkpckrmk.GotFocus

    End Sub

    Private Sub chkpckrmk_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles chkpckrmk.KeyPress

    End Sub

    Public Sub fillup_SHPCKDIM(ByVal hpd_shpseq)
        Dim lastcount As Integer
        Dim ori_pdseq As Integer
        Dim ori_ctn As Integer
        Dim tmp_ori_count As Integer
        Dim flg_found As Boolean
        Dim tmp_dr() As DataRow
        Dim tmp_dr2() As DataRow




        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & hpd_shpseq

        tmp_dr = rs_SHPCKDIM.Tables("result").Select("hpd_shpseq =" & hpd_shpseq)


        If rs_SHPCKDIM.Tables("result").DefaultView.Count < 30 Then
            For i2 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Columns.Count - 1
                rs_SHPCKDIM.Tables("RESULT").Columns(i2).ReadOnly = False
            Next i2

            tmp_dr2 = tmp_dr.Clone


            For index2 As Integer = 1 To 30
                flg_found = False

                For index As Integer = 0 To tmp_dr2.Length - 1
                    ori_pdseq = tmp_dr2(index)("hpd_pdseq")
                    ori_ctn = tmp_dr2(index)("hpd_ctn")
                    If tmp_dr2(index)("hpd_pdnum") = index2 Then
                        flg_found = True
                    End If
                Next

                If flg_found = False Then
                    rs_SHPCKDIM.Tables("RESULT").Rows.Add()
                    lastcount = rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1

                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_cocde") = cboCoCde.Text.Trim
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_shpno") = txtShpNo.Text.Trim
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_shpseq") = hpd_shpseq
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_pdseq") = ori_pdseq
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_pdnum") = index2

                    If (index2 Mod 2) = 1 Then
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_dimtyp") = "Act"
                    Else
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_dimtyp") = "Mod"
                    End If

                    If index2 = 1 Or index2 = 2 Or index2 = 5 Or index2 = 6 Or index2 = 7 Or index2 = 8 Or _
                     index2 = 13 Or index2 = 14 Or index2 = 21 Or index2 = 22 _
                    Then
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "A"
                    ElseIf index2 = 3 Or index2 = 4 Or index2 = 9 Or index2 = 10 Or index2 = 15 Or index2 = 16 Or _
                     index2 = 23 Or index2 = 24 Then
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "B"
                    ElseIf index2 = 11 Or index2 = 12 Or index2 = 17 Or index2 = 18 Or index2 = 25 Or index2 = 26 Then
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "C"
                    ElseIf index2 = 19 Or index2 = 20 Or index2 = 27 Or index2 = 28 Then
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "D"
                    ElseIf index2 = 29 Or index2 = 30 Then
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam") = "E"
                    End If

                    If index2 = 1 Or index2 = 2 Then
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = "Crown"
                    ElseIf index2 = 3 Or index2 = 4 Then
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = "Trunk"
                    ElseIf index2 = 5 Or index2 = 6 Then
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = ""
                    Else
                        rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_des") = rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctnnam")
                    End If

                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ctn") = ori_ctn

                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_l_cm") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_w_cm") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_h_cm") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_cbm_cm") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlcbm_cm") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_gw_kg") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlgw_kg") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_nw_kg") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlnw_kg") = 0

                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_l_in") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_w_in") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_h_in") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_cbm_in") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlcbm_in") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_gw_lb") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlgw_lb") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_nw_lb") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_ttlnw_lb") = 0
                    rs_SHPCKDIM.Tables("RESULT").Rows(lastcount)("hpd_creusr") = "~*ADD*~"

                End If


            Next

        End If




    End Sub


    Function cal_dtl_pckdim(ByVal shpseq, ByVal ctn, ByVal size_weight)
        If Not Val(ctn) > 0 Then
            ' ctn = 1
            'txtTtlCtnD.Text = 1
            Exit Function

        End If
        '''default view
        rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & shpseq
        For index9 As Integer = 0 To rs_SHPCKDIM.Tables("result").DefaultView.Count - 1
            rs_SHPCKDIM.Tables("RESULT").DefaultView(index9)("hpd_ctn") = ctn
        Next


        Dim tmp_dgPCKDIM_hpd_l_cm As Decimal
        Dim tmp_dgPCKDIM_hpd_w_cm As Decimal
        Dim tmp_dgPCKDIM_hpd_h_cm As Decimal

        Dim tmp_dgPCKDIM_hpd_gw_kg As Decimal

        Dim tmp_dgPCKDIM_hpd_nw_kg As Decimal


        Dim tmp_dgPCKDIM_hpd_l_in As Decimal
        Dim tmp_dgPCKDIM_hpd_w_in As Decimal
        Dim tmp_dgPCKDIM_hpd_h_in As Decimal

        Dim tmp_dgPCKDIM_hpd_gw_lb As Decimal

        Dim tmp_dgPCKDIM_hpd_nw_lb As Decimal



        Call rs_shpckdim_row_filtering_cal(shpseq)

        If rs_SHPCKDIM Is Nothing Then
            Exit Function
        End If


        Dim e_ColumnIndex
        If size_weight = 1 Then
            e_ColumnIndex = dgPCKDIM_hpd_l_cm
        ElseIf size_weight = 2 Then
            e_ColumnIndex = dgPCKDIM_hpd_gw_kg
        ElseIf size_weight = 3 Then
            e_ColumnIndex = dgPCKDIM_hpd_nw_kg
        End If
        For e_index As Integer = 0 To rs_SHPCKDIM.Tables("result").DefaultView.Count - 1

            '            For e_index As Integer = 0 To rs_SHPCKDIM.Tables("result").DefaultView.Count - 1
            

            Select Case e_ColumnIndex
                '1
                '2
                '3
                '4
                '5
                '6
                Case dgPCKDIM_hpd_l_cm, dgPCKDIM_hpd_w_cm, dgPCKDIM_hpd_h_cm
                    If rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_creusr") <> "~*ADD*~" And rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_creusr") <> "~*NEW*~" And rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_creusr") <> "~*UDA*~" Then
                        rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_creusr") = "~*UPD*~"
                    End If

                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_l_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_l_cm"), 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_w_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_w_cm"), 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_h_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_h_cm"), 3)

                    tmp_dgPCKDIM_hpd_l_cm = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_l_cm"))
                    tmp_dgPCKDIM_hpd_w_cm = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_w_cm"))
                    tmp_dgPCKDIM_hpd_h_cm = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_h_cm"))

                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_cbm_cm") = round(tmp_dgPCKDIM_hpd_l_cm * tmp_dgPCKDIM_hpd_w_cm * tmp_dgPCKDIM_hpd_h_cm / 1000000, 4)
                    'total
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm") = 0
                    For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                        If e_index Mod 2 = 0 Then
                            If index Mod 2 = 0 Then
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm") + round(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_cbm_cm") * rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ctn"), 2)
                            End If
                        Else
                            If index Mod 2 = 1 Then
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm") + round(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_cbm_cm") * rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ctn"), 2)
                            End If
                        End If
                    Next


                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm"), 2)

                    'ttl to all
                    For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                        If e_index Mod 2 = 0 Then
                            If index Mod 2 = 0 Then
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm")
                            End If
                        Else
                            If index Mod 2 = 1 Then
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_cm") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm")
                            End If
                        End If
                    Next


                    'Convert
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_l_in") = round(tmp_dgPCKDIM_hpd_l_cm * 0.3937, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_w_in") = round(tmp_dgPCKDIM_hpd_w_cm * 0.3937, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_h_in") = round(tmp_dgPCKDIM_hpd_h_cm * 0.3937, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_cbm_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_cbm_cm") * 0.3937, 4)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm") * 0.3937, 2)

                Case dgPCKDIM_hpd_l_in, dgPCKDIM_hpd_w_in, dgPCKDIM_hpd_h_in
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_l_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_l_in"), 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_w_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_w_in"), 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_h_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_h_in"), 3)

                    tmp_dgPCKDIM_hpd_l_in = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_l_in"))
                    tmp_dgPCKDIM_hpd_w_in = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_w_in"))
                    tmp_dgPCKDIM_hpd_h_in = Val(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_h_in"))

                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_cbm_in") = round(tmp_dgPCKDIM_hpd_l_in * tmp_dgPCKDIM_hpd_w_in * tmp_dgPCKDIM_hpd_h_in / 1000000, 4)
                    'total
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in") = 0
                    For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                        If e_index Mod 2 = 0 Then
                            If index Mod 2 = 0 Then
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in") + round(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_cbm_in") * rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ctn"), 2)
                            End If
                        Else
                            If index Mod 2 = 1 Then
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in") + round(rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_cbm_in") * rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ctn"), 2)
                            End If
                        End If
                    Next
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in"), 2)
                    'ttl to all
                    For index As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1
                        If e_index Mod 2 = 0 Then
                            If index Mod 2 = 0 Then
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in")
                            End If
                        Else
                            If index Mod 2 = 1 Then
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(index)("hpd_ttlcbm_in") = rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in")
                            End If
                        End If
                    Next


                    'Convert
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_l_cm") = round(tmp_dgPCKDIM_hpd_l_in / 0.3937, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_w_cm") = round(tmp_dgPCKDIM_hpd_w_in / 0.3937, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_h_cm") = round(tmp_dgPCKDIM_hpd_h_in / 0.3937, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_cbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_cbm_in") / 0.3937, 4)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_cm") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlcbm_in") / 0.3937, 2)


                Case dgPCKDIM_hpd_gw_kg
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_kg"), 3)
                    'ttl
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlgw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_kg"), 3) * rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ctn")
                    'conv
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_kg") / 0.45359, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlgw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlgw_kg") / 0.45359, 3)
                Case dgPCKDIM_hpd_nw_kg
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_kg"), 3)
                    'ttl
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlnw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_kg"), 3) * rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ctn")


                    'conv
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_kg") / 0.45359, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlnw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlnw_kg") / 0.45359, 3)
                Case dgPCKDIM_hpd_gw_lb
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_lb"), 3)
                    'ttl
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlgw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_lb"), 3) * rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ctn")
                    'conv
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_gw_lb") * 0.45359, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlgw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlgw_lb") * 0.45359, 3)

                Case dgPCKDIM_hpd_nw_lb
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_lb"), 3)
                    'ttl
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlnw_lb") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_lb"), 3) * rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ctn")
                    'conv
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_nw_lb") * 0.45359, 3)
                    rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlnw_kg") = round(rs_SHPCKDIM.Tables("RESULT").DefaultView(e_index)("hpd_ttlnw_lb") * 0.45359, 3)
            End Select

        Next




    End Function

    Function cal_mod_ttlvol(ByVal shpseq As Integer)

        Dim tmp_ctnftr As Integer

        If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnftr")) Then
            tmp_ctnftr = 1
        Else
            tmp_ctnftr = Val(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ctnftr"))
        End If

        If tmp_ctnftr = 1 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & shpseq & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
        ElseIf tmp_ctnftr = 2 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & shpseq & " and hpd_pdnum <= 4 "
        ElseIf tmp_ctnftr = 3 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & shpseq & " and hpd_pdnum >= 7 and hpd_pdnum<=12 "
        ElseIf tmp_ctnftr = 4 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & shpseq & " and hpd_pdnum >=13 and hpd_pdnum <=20 "
        ElseIf tmp_ctnftr = 5 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & shpseq & " and hpd_pdnum >= 21 and hpd_pdnum <=30 "
        End If
        rs_SHPCKDIM.Tables("result").DefaultView.Sort = "hpd_pdnum"


        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_ttlvol") = rs_SHPCKDIM.Tables("RESULT").DefaultView(1)("hpd_ttlcbm_cm")
        '        txtTtlVolD.Text = rs_SHPCKDIM.Tables("RESULT").DefaultView(1)("hpd_ttlcbm_cm")

    End Function


    'Private Sub txt_dgOthDtl_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)


    '    Dim iRow As Integer = dgOthDtl.CurrentCell.RowIndex
    '    Dim iCol As Integer = dgOthDtl.CurrentCell.ColumnIndex

    '    Dim curvalue As String = dgOthDtl.CurrentCell.EditedFormattedValue


    '    Select Case dgOthDtl.CurrentCell.ColumnIndex
    '        Case dgOthDtl_qpe_mu, dgOthDtl_qpe_comper, dgOthDtl_qpe_cushcstbufper, dgOthDtl_qpe_othdisper, dgOthDtl_qpe_upsper, dgOthDtl_qpe_labper, dgOthDtl_qpe_faper, dgOthDtl_qpe_pliper, dgOthDtl_qpe_dmdper, dgOthDtl_qpe_rbtper, dgOthDtl_qpe_cus1dp

    '            ' Check Numeric
    '            If Not (e.KeyChar = vbBack Or e.KeyChar.ToString() = "." Or (e.KeyChar.ToString() >= "0" And e.KeyChar.ToString() <= "9")) Then
    '                e.KeyChar = ""
    '            Else
    '                If curvalue.IndexOf(".") > 0 And e.KeyChar.ToString() = "." Then
    '                    e.KeyChar = ""
    '                End If
    '            End If



    '            flag_dgOthDtl_keypress = True

    '    End Select


    '    Select Case dgOthDtl.CurrentCell.ColumnIndex
    '        Case dgOthDtl_inner_in, dgOthDtl_inner_cm, dgOthDtl_master_in, dgOthDtl_master_cm
    '            If Not (e.KeyChar = vbBack Or e.KeyChar.ToString() = "x" Or e.KeyChar.ToString() = "." Or (e.KeyChar.ToString() >= "0" And e.KeyChar.ToString() <= "9")) Then
    '                e.KeyChar = ""
    '            End If
    '            flag_dgOthDtl_keypress = True
    '    End Select

    'End Sub

    'Private Sub txt_dgOthDtl_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
    '    Dim iRow As Integer = dgOthDtl.CurrentCell.RowIndex
    '    Dim iCol As Integer = dgOthDtl.CurrentCell.ColumnIndex

    '    Dim curvalue As String = dgOthDtl.CurrentCell.EditedFormattedValue
    '    Dim i As Integer

    '    Select Case dgOthDtl.CurrentCell.ColumnIndex

    '        Case dgOthDtl_qpe_cus1dp
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qud_cus1dp") = curvalue
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_cus1dp") = curvalue
    '            flag_no_update_mu(sReadingIndexQ) = False
    '        Case dgOthDtl_qpe_mu
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_mu") = curvalue
    '            flag_no_update_mu(sReadingIndexQ) = False
    '        Case dgOthDtl_qpe_icmper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_icmper") = curvalue
    '        Case dgOthDtl_qpe_pkgper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_pkgper") = curvalue
    '        Case dgOthDtl_qpe_comper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_comper") = curvalue
    '        Case dgOthDtl_qpe_cushcstbufper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_cushcstbufper") = curvalue
    '        Case dgOthDtl_qpe_othdisper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_othdisper") = curvalue
    '        Case dgOthDtl_qpe_upsper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_upsper") = curvalue
    '        Case dgOthDtl_qpe_labper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_labper") = curvalue
    '        Case dgOthDtl_qpe_faper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_faper") = curvalue
    '        Case dgOthDtl_qpe_pliper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_pliper") = curvalue
    '        Case dgOthDtl_qpe_dmdper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_dmdper") = curvalue
    '        Case dgOthDtl_qpe_rbtper
    '            If curvalue = "" Or curvalue = "." Then
    '                curvalue = "0"
    '            End If
    '            rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qpe_rbtper") = curvalue
    '    End Select
    '    If flag_dgOthDtl_keypress = True Then

    '        ''when prcemt chnage
    '        ''Call calculate_gbPandelCstEmt(rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qud_qutseq"))


    '        ''cft, cbm
    '        Select Case dgOthDtl.CurrentCell.ColumnIndex
    '            Case dgOthDtl_qpe_mu, dgOthDtl_qpe_icmper, dgOthDtl_qpe_pkgper
    '                Call calculate_gbPandelCstEmt(rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qud_qutseq"))
    '                '''20130830
    '            Case dgOthDtl_qpe_cus1dp
    '                Call calculate_gbPandelCstEmt_adjprc(rs_QUOTNDTL.Tables("RESULT").Rows(iRow).Item("qud_qutseq"))
    '            Case dgOthDtl_qud_cft
    '                If flag_dgOthDtl_keypress = True Then
    '                    flag_dgOthDtl_keypress = False
    '                    Dim cbm_value As Decimal
    '                    If IsNumeric(curvalue) Then
    '                        cbm_value = curvalue * CFT_CBM
    '                        dgOthDtl.Item(dgOthDtl_qud_cbm, iRow).Value = Decimal.Round(cbm_value, 4)
    '                    End If
    '                End If
    '            Case dgOthDtl_qud_cbm
    '                If flag_dgOthDtl_keypress = True Then
    '                    flag_dgOthDtl_keypress = False
    '                    Dim cft_value As Decimal
    '                    If IsNumeric(curvalue) Then
    '                        cft_value = curvalue * CBM_CFT
    '                        dgOthDtl.Item(dgOthDtl_qud_cft, iRow).Value = Decimal.Round(cft_value, 4)
    '                    End If
    '                End If
    '                'Case dgOthDtl_ipi_grswgt, dgOthDtl_ipi_netwgt
    '                '    If flag_dgOthDtl_keypress = True Then
    '                '        flag_dgOthDtl_keypress = False
    '                '    End If
    '            Case dgOthDtl_inner_in, dgOthDtl_inner_cm, dgOthDtl_master_in, dgOthDtl_master_cm
    '                If flag_dgOthDtl_keypress = True Then
    '                    flag_dgOthDtl_keypress = False

    '                    Dim tmpstrarry As String() = Split(curvalue, "x")
    '                    Dim validformat As Boolean
    '                    validformat = True
    '                    If tmpstrarry.Length <> 3 Then
    '                        validformat = False
    '                    End If
    '                    If validformat Then
    '                        For i = 0 To tmpstrarry.Length - 1
    '                            If Not IsNumeric(tmpstrarry(i)) Then
    '                                validformat = False
    '                            End If
    '                        Next i
    '                    End If

    '                    If validformat Then
    '                        Dim resultstr As String
    '                        Dim tmpvalL As Decimal
    '                        Dim tmpvalW As Decimal
    '                        Dim tmpvalH As Decimal

    '                        resultstr = ""
    '                        tmpvalL = 0.0
    '                        tmpvalW = 0.0
    '                        tmpvalH = 0.0

    '                        tmpvalL = Split(curvalue, "x")(0)
    '                        tmpvalW = Split(curvalue, "x")(1)
    '                        tmpvalH = Split(curvalue, "x")(2)

    '                        Select Case dgOthDtl.CurrentCell.ColumnIndex
    '                            Case dgOthDtl_inner_in
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrdin") = tmpvalL
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrwin") = tmpvalW
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrhin") = tmpvalH

    '                                tmpvalL = Decimal.Round(tmpvalL * In_CM, 4)
    '                                tmpvalW = Decimal.Round(tmpvalW * In_CM, 4)
    '                                tmpvalH = Decimal.Round(tmpvalH * In_CM, 4)

    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrdcm") = tmpvalL
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrwcm") = tmpvalW
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrhcm") = tmpvalH

    '                                resultstr = tmpvalL & "x" & tmpvalW & "x" & tmpvalH
    '                                dgOthDtl.Item(dgOthDtl_inner_cm, iRow).Value = resultstr
    '                            Case dgOthDtl_inner_cm
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrdcm") = tmpvalL
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrwcm") = tmpvalW
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrhcm") = tmpvalH

    '                                tmpvalL = Decimal.Round(tmpvalL * CM_In, 4)
    '                                tmpvalW = Decimal.Round(tmpvalW * CM_In, 4)
    '                                tmpvalH = Decimal.Round(tmpvalH * CM_In, 4)

    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrdin") = tmpvalL
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrwin") = tmpvalW
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_inrhin") = tmpvalH

    '                                resultstr = tmpvalL & "x" & tmpvalW & "x" & tmpvalH
    '                                dgOthDtl.Item(dgOthDtl_inner_in, iRow).Value = resultstr
    '                            Case dgOthDtl_master_in
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrdin") = tmpvalL
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrwin") = tmpvalW
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrhin") = tmpvalH

    '                                tmpvalL = Decimal.Round(tmpvalL * In_CM, 4)
    '                                tmpvalW = Decimal.Round(tmpvalW * In_CM, 4)
    '                                tmpvalH = Decimal.Round(tmpvalH * In_CM, 4)

    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrdcm") = tmpvalL
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrwcm") = tmpvalW
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrhcm") = tmpvalH

    '                                resultstr = tmpvalL & "x" & tmpvalW & "x" & tmpvalH
    '                                dgOthDtl.Item(dgOthDtl_master_cm, iRow).Value = resultstr

    '                                If IsNumeric(tmpvalL) And IsNumeric(tmpvalW) And IsNumeric(tmpvalH) Then
    '                                    Dim tmp_cbm As Decimal
    '                                    Dim tmp_cft As Decimal
    '                                    tmp_cbm = Decimal.Round(tmpvalL * tmpvalW * tmpvalH / 1000000, 4)
    '                                    tmp_cft = Decimal.Round(tmp_cbm * CBM_CFT, 4)
    '                                    dgOthDtl.Item(dgOthDtl_qud_cbm, iRow).Value = tmp_cbm
    '                                    dgOthDtl.Item(dgOthDtl_qud_cft, iRow).Value = tmp_cft
    '                                End If
    '                            Case dgOthDtl_master_cm
    '                                If IsNumeric(tmpvalL) And IsNumeric(tmpvalW) And IsNumeric(tmpvalH) Then
    '                                    Dim tmp_cbm As Decimal
    '                                    Dim tmp_cft As Decimal
    '                                    tmp_cbm = Decimal.Round(tmpvalL * tmpvalW * tmpvalH / 1000000, 4)
    '                                    tmp_cft = Decimal.Round(tmp_cbm * CBM_CFT, 4)
    '                                    dgOthDtl.Item(dgOthDtl_qud_cbm, iRow).Value = tmp_cbm
    '                                    dgOthDtl.Item(dgOthDtl_qud_cft, iRow).Value = tmp_cft
    '                                End If

    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrdcm") = tmpvalL
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrwcm") = tmpvalW
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrhcm") = tmpvalH
    '                                tmpvalL = Decimal.Round(tmpvalL * CM_In, 4)
    '                                tmpvalW = Decimal.Round(tmpvalW * CM_In, 4)
    '                                tmpvalH = Decimal.Round(tmpvalH * CM_In, 4)
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrdin") = tmpvalL
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrwin") = tmpvalW
    '                                rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_mtrhin") = tmpvalH

    '                                resultstr = tmpvalL & "x" & tmpvalW & "x" & tmpvalH
    '                                dgOthDtl.Item(dgOthDtl_master_in, iRow).Value = resultstr
    '                        End Select
    '                    End If

    '                    flag_dgOthDtl_keypress = False
    '                End If
    '        End Select


    '        If rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ).Item("qud_creusr") = "~*ADD*~" Or rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ).Item("qud_creusr") = "~*NEW*~" Then
    '            rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ).Item("qud_creusr") = "~*NEW*~"
    '        Else

    '            rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ).Item("qud_creusr") = "~*UPD*~"
    '        End If

    '        If rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ).Item("qpe_creusr") = "~*ADD*~" Or rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ).Item("qpe_creusr") = "~*NEW*~" Then
    '            rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ).Item("qpe_creusr") = "~*NEW*~"
    '        Else
    '            rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ).Item("qpe_creusr") = "~*UPD*~"
    '        End If




    '        dgOthDtl.DataSource = rs_QUOTNDTL.Tables("RESULT").DefaultView

    '        dgOthDtl.Refresh()






    '    End If



    '    Dim qutseq As Integer

    '    ''reset detail page
    '    qutseq = dgOthDtl.Item(dgOthDtl_qud_qutseq, dgOthDtl.CurrentCell.RowIndex).Value


    '    If rs_QUOTNDTL.Tables("RESULT").Rows.Count > sReadingIndexQ Then

    '        'If txtItmNo.Text.Trim <> rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_itmno").ToString.Trim Then
    '        txtItmNo.Text = rs_QUOTNDTL.Tables("RESULT").Rows(sReadingIndexQ)("qud_itmno").ToString.Trim
    '        Call display_Detail(qutseq)
    '        ''Call txtItmNo_Press()

    '        'End If
    '    End If

    'End Sub




    Private Sub cboSort1_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboSort1.SelectedIndexChanged
        cboSort2.SelectedIndex = -1
        cboSort3.SelectedIndex = -1

        If (cboSort1.Text = cboSort2.Text Or cboSort1.Text = cboSort3.Text) And _
            (cboSort1.Text <> "N/A") And (cboSort1.Text.Trim <> "") Then
            MsgBox("Sort key duplicated")
            cboSort1.SelectedIndex = 0
            Exit Sub
        End If

        TmpSort = ""

        If cboSort1.Text = "Container" Then
            TmpSort = TmpSort + "hid_ctrcfs,"
        ElseIf cboSort1.Text = "Invoice" Then
            TmpSort = TmpSort + "hid_invno,"
        ElseIf cboSort1.Text = "SC#" Then
            TmpSort = TmpSort + "hid_ordno,"
        ElseIf cboSort1.Text = "Cust PO" Then
            TmpSort = TmpSort + "hid_cuspo,"
        End If

        If cboSort2.Text = "Container" Then
            TmpSort = TmpSort + "hid_ctrcfs,"
        ElseIf cboSort2.Text = "Invoice" Then
            TmpSort = TmpSort + "hid_invno,"
        ElseIf cboSort2.Text = "SC#" Then
            TmpSort = TmpSort + "hid_ordno,"
        ElseIf cboSort2.Text = "Cust PO" Then
            TmpSort = TmpSort + "hid_cuspo,"
        End If

        If cboSort3.Text = "Container" Then
            TmpSort = TmpSort + "hid_ctrcfs,"
        ElseIf cboSort3.Text = "Invoice" Then
            TmpSort = TmpSort + "hid_invno,"
        ElseIf cboSort3.Text = "SC#" Then
            TmpSort = TmpSort + "hid_ordno,"
        ElseIf cboSort3.Text = "Cust PO" Then
            TmpSort = TmpSort + "hid_cuspo,"
        End If




        If TmpSort <> "" Then

            TmpSort = Microsoft.VisualBasic.Left(TmpSort, Len(TmpSort) - 1)
            rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = TmpSort + " ASC"

            'Check Same Item
            For index_i As Integer = 0 To rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Count - 1
                For index_j As Integer = 0 To rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Count - 1
                    If index_i <> index_j Then
                        If rs_SHIPGDTL_display.Tables("RESULT").DefaultView(index_i)("hid_shpseq").ToString() = rs_SHIPGDTL_display.Tables("RESULT").DefaultView(index_j)("hid_shpseq").ToString() Then
                            grdShpSum.Rows(index_i).DefaultCellStyle.BackColor = Color.LightBlue
                            grdShpSum.Rows(index_j).DefaultCellStyle.BackColor = Color.LightBlue
                            'MsgBox("Item:" & index_i + 1 & " Item:" & index_j + 1 & " are duplcated items, please choose either one only.")
                        End If
                    End If
                Next
            Next
        End If


    End Sub

    Private Sub cboSort2_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboSort2.SelectedIndexChanged
        cboSort3.SelectedIndex = -1

        Dim TmpSort As String

        If (cboSort2.Text = cboSort1.Text Or cboSort2.Text = cboSort3.Text) And _
            (cboSort2.Text <> "N/A") And (cboSort2.Text.Trim <> "") Then
            MsgBox("Sort key duplicated")
            cboSort2.SelectedIndex = 0
            Exit Sub
        End If

        TmpSort = ""

        If cboSort1.Text = "Container" Then
            TmpSort = TmpSort + "hid_ctrcfs,"
        ElseIf cboSort1.Text = "Invoice" Then
            TmpSort = TmpSort + "hid_invno,"
        ElseIf cboSort1.Text = "SC#" Then
            TmpSort = TmpSort + "hid_ordno,"
        End If

        If cboSort2.Text = "Container" Then
            TmpSort = TmpSort + "hid_ctrcfs,"
        ElseIf cboSort2.Text = "Invoice" Then
            TmpSort = TmpSort + "hid_invno,"
        ElseIf cboSort2.Text = "SC#" Then
            TmpSort = TmpSort + "hid_invno,"
        End If

        If cboSort3.Text = "Container" Then
            TmpSort = TmpSort + "hid_ctrcfs,"
        ElseIf cboSort3.Text = "Invoice" Then
            TmpSort = TmpSort + "hid_invno,"
        ElseIf cboSort3.Text = "SC#" Then
            TmpSort = TmpSort + "hid_ordno,"
        End If

        If TmpSort <> "" Then
            TmpSort = Microsoft.VisualBasic.Left(TmpSort, Len(TmpSort) - 1)
            rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = TmpSort + " ASC"

            'Check Same Item
            For index_i As Integer = 0 To rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Count - 1
                For index_j As Integer = 0 To rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Count - 1
                    If index_i <> index_j Then
                        If rs_SHIPGDTL_display.Tables("RESULT").DefaultView(index_i)("hid_shpseq").ToString() = rs_SHIPGDTL_display.Tables("RESULT").DefaultView(index_j)("hid_shpseq").ToString() Then
                            grdShpSum.Rows(index_i).DefaultCellStyle.BackColor = Color.LightBlue
                            grdShpSum.Rows(index_j).DefaultCellStyle.BackColor = Color.LightBlue
                            'MsgBox("Item:" & index_i + 1 & " Item:" & index_j + 1 & " are duplcated items, please choose either one only.")
                        End If
                    End If
                Next
            Next
        End If

    End Sub

    Private Sub cboSort3_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboSort3.SelectedIndexChanged
        Dim TmpSort As String

        If (cboSort3.Text = cboSort1.Text Or cboSort3.Text = cboSort2.Text) And _
            (cboSort3.Text <> "N/A") And (cboSort3.Text.Trim <> "") Then
            MsgBox("Sort key duplicated")
            cboSort3.SelectedIndex = 0
            Exit Sub
        End If

        TmpSort = ""

        If cboSort1.Text = "Container" Then
            TmpSort = TmpSort + "hid_ctrcfs,"
        ElseIf cboSort1.Text = "Invoice" Then
            TmpSort = TmpSort + "hid_invno,"
        ElseIf cboSort1.Text = "SC#" Then
            TmpSort = TmpSort + "hid_ordno,"
        End If

        If cboSort2.Text = "Container" Then
            TmpSort = TmpSort + "hid_ctrcfs,"
        ElseIf cboSort2.Text = "Invoice" Then
            TmpSort = TmpSort + "hid_invno,"
        ElseIf cboSort2.Text = "SC#" Then
            TmpSort = TmpSort + "hid_invno,"
        End If

        If cboSort3.Text = "Container" Then
            TmpSort = TmpSort + "hid_ctrcfs,"
        ElseIf cboSort3.Text = "Invoice" Then
            TmpSort = TmpSort + "hid_invno,"
        ElseIf cboSort3.Text = "SC#" Then
            TmpSort = TmpSort + "hid_ordno,"
        End If

        If TmpSort <> "" Then
            TmpSort = Microsoft.VisualBasic.Left(TmpSort, Len(TmpSort) - 1)
            rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Sort = TmpSort + " ASC"

            'Check Same Item
            For index_i As Integer = 0 To rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Count - 1
                For index_j As Integer = 0 To rs_SHIPGDTL_display.Tables("RESULT").DefaultView.Count - 1
                    If index_i <> index_j Then
                        If rs_SHIPGDTL_display.Tables("RESULT").DefaultView(index_i)("hid_shpseq").ToString() = rs_SHIPGDTL_display.Tables("RESULT").DefaultView(index_j)("hid_shpseq").ToString() Then
                            grdShpSum.Rows(index_i).DefaultCellStyle.BackColor = Color.LightBlue
                            grdShpSum.Rows(index_j).DefaultCellStyle.BackColor = Color.LightBlue
                            'MsgBox("Item:" & index_i + 1 & " Item:" & index_j + 1 & " are duplcated items, please choose either one only.")
                        End If
                    End If
                Next
            Next
        End If

    End Sub

        Function update_inv_revisedat(ByVal shpseq, ByVal invno)
        Dim rs_tmp_SHIPGDTL As DataSet
        rs_tmp_SHIPGDTL = rs_SHIPGDTL.Copy

        If shpseq > 0 Then
            rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView.RowFilter = "hid_shpseq	= " & shpseq & ""
            If rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView.Count = 0 Then
                Exit Function
            End If
            invno = rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView(0)("hid_invno")
            If rs_SHINVHDR Is Nothing Then
                Exit Function
            End If
            If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
                Exit Function
            End If

            rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = "hiv_invno	= '" & invno & "'"
            If rs_SHINVHDR.Tables("RESULT").DefaultView.Count > 0 Then
                rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_revisedat") = Format(Date.Today, "MM/dd/yyyy").ToString
                rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_creusr") = "~*UPD*~"
            End If
            rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = ""

            rs_tmp_SHIPGDTL.Tables("RESULT").DefaultView.RowFilter = ""

        Else
            If Trim(invno) <> "" Then
                If Not rs_SHINVHDR Is Nothing Then
                    If Not rs_SHINVHDR.Tables("RESULT") Is Nothing Then

                        rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = "hiv_invno	= '" & invno & "'"
                        If rs_SHINVHDR.Tables("RESULT").DefaultView.Count > 0 Then
                            rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_revisedat") = Format(Date.Today, "MM/dd/yyyy").ToString
                            rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_creusr") = "~*UPD*~"
                        End If
                        rs_SHINVHDR.Tables("RESULT").DefaultView.RowFilter = ""
                    End If
                End If
            End If
        End If
    End Function



    Private Sub cmdShpmrkAttchmnt_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdShpmrkAttchmnt.Click


        If ShipmrkAttchmnt Is Nothing Then
            ShipmrkAttchmnt = New SCM00001_ShpmrkAtchmt
        End If

        ShipmrkAttchmnt.setCompanyCode(cboCoCde.Text, txtCoNam.Text)
        ShipmrkAttchmnt.setSCNo(cboOrdNo.Text)

        ShipmrkAttchmnt.ShowDialog()

    End Sub

    Private Sub txtPrcTrm_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPrcTrm.TextChanged

    End Sub


    Function fill_all_trm()
        For i As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            display_combo(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_prctrm"), cboPrcTrm)
            rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_prctrm") = cboPrcTrm.Text.Trim

            display_combo(rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_paytrm"), cboPayTrm)
            rs_SHIPGDTL.Tables("RESULT").Rows(i)("hid_paytrm") = cboPayTrm.Text.Trim
        Next i
    End Function

    Private Sub txt_name_f1_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txt_name_f1.TextChanged
        If txt_name_f1.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txt_name_f1.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_name_f1")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_name_f1") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_name_f1") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txt_name_f2_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txt_name_f2.TextChanged
        If txt_name_f2.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txt_name_f2.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_name_f2")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_name_f2") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_name_f2") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txt_name_f3_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txt_name_f3.TextChanged
        If txt_name_f3.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txt_name_f3.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_name_f3")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_name_f3") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_name_f3") = tmpstr
                    End If
                End If
            End If
        End If





    End Sub

    Private Sub txt_dsc_f1_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txt_dsc_f1.TextChanged
        If txt_dsc_f1.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txt_dsc_f1.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_dsc_f1")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_dsc_f1") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_dsc_f1") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txt_dsc_f2_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txt_dsc_f2.TextChanged
        If txt_dsc_f2.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txt_dsc_f2.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_dsc_f2")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_dsc_f2") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_dsc_f2") = tmpstr
                    End If
                End If
            End If
        End If




    End Sub

    Private Sub txt_dsc_f3_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txt_dsc_f3.TextChanged
        If txt_dsc_f3.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txt_dsc_f3.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_dsc_f3")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_dsc_f3") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_dsc_f3") = tmpstr
                    End If
                End If
            End If
        End If



    End Sub

    Private Sub txtCover_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtCover.GotFocus
        txtCover.Width = 600
        txtCover.Height = 90
        txtCover.BringToFront()

        txtCover.Location = New Point(114, 177)

        richtext_focus = "txtCover"

    End Sub

    Private Sub txtCover_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtCover.LostFocus

        txtCover.Width = 600
        txtCover.Height = 20
        'txtCover.BringToFront()
        txtCover.Location = New Point(114, 177)
        richtext_focus = ""

    End Sub

    Private Sub txtCover_TextChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCover.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtCover.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtCover.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cover") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cover") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtItmShm_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtItmShm.GotFocus
        txtItmShm.Width = 283
        txtItmShm.Height = 90
        txtItmShm.BringToFront()

        txtItmShm.Location = New Point(644, 183)

        richtext_focus = "txtItmShm"

    End Sub

    Private Sub txtItmShm_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtItmShm.LostFocus
        txtItmShm.Width = 283
        txtItmShm.Height = 20

        txtItmShm.Location = New Point(644, 183)
        richtext_focus = ""

    End Sub


    Private Sub txtItmShm_TextChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtItmShm.TextChanged
        If txtItmShm.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtItmShm.Text

                ''bug
                If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmshm")) Then
                    If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmshm") Then
                        Recordstatus = True
                        If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
                            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
                        End If
                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_itmshm") = tmpstr
                    End If
                End If
            End If
        End If


    End Sub

    Private Sub txtFtrRmk_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtFtrRmk.GotFocus

        richtext_focus = "txtFtrRmk"

    End Sub

    Private Sub txtFtrRmk_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtFtrRmk.LostFocus
        richtext_focus = ""

    End Sub

    Private Sub txtFtrRmk_TextChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtFtrRmk.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtFtrRmk.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtFtrRmk.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ftrrmk") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ftrrmk") = tmpstr
                End If
            End If
        End If



    End Sub

    Private Sub RichTextBox1_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtEngRmk.TextChanged
        If rs_SHSHPMRK.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHSHPMRK.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtEngRmk.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtEngRmk.Text

                If sReadingIndexI_S > rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1 Then
                    Exit Sub
                End If
                If sReadingIndexI_S = -1 Then
                    Exit Sub
                End If
                If tmpstr <> rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engrmk") Then
                    Recordstatus = True


                    If rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*ADD*~" And rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") <> "~*NEW*~" Then
                        rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_creusr") = "~*UPD*~"
                    End If
                    rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engrmk") = tmpstr
                End If
            End If
        End If



    End Sub



    Private Sub checkBoxCell(ByVal dgv As DataGridView)

        Dim chkCell As New DataGridViewCheckBoxCell

        Dim iCol As Integer = dgv.CurrentCell.ColumnIndex
        Dim iRow As Integer = dgv.CurrentCell.RowIndex

        Dim row As DataGridViewRow = dgv.CurrentRow


        dgv.Rows(iRow).Cells(iCol) = chkCell
        dgv.Rows(iRow).Cells(iCol).ReadOnly = False

    End Sub

    Private Sub cmdMore_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cmdMore.KeyDown
        Select Case e.KeyCode
            Case Keys.Left
                txtCtnEnd.Focus()
        End Select
    End Sub

    Private Sub cmdMore_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cmdMore.KeyPress
       
    End Sub

    'Private Sub 'txtaddinf_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) 
    '    If 'txtaddinf.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
    '        If sMode = cModeAdd Or sMode = cModeUpd Then
    '            Dim tmpstr
    '            tmpstr = 'txtaddinf.Text

    '            ''bug
    '            If Not IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_addinf")) Then
    '                If tmpstr <> rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_addinf") Then
    '                    Recordstatus = True
    '                    If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*ADD*~" And rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") <> "~*NEW*~" Then
    '                        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("HId_creusr") = "~*UPD*~"
    '                    End If
    '                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_addinf") = tmpstr
    '                End If
    '            End If
    '        End If
    '    End If




    'End Sub

    Private Sub Label98_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label98.Click

    End Sub

    Private Sub cboPckListFooter_KeyUp1(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboPckListFooter.KeyUp
        If cboPckListFooter.Text.Length > 0 Then
            Call auto_search_combo(cboPckListFooter, e.KeyCode)
        End If

    End Sub

    Private Sub cboPckListFooter_SelectedIndexChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboPckListFooter.SelectedIndexChanged

        If rs_SHRMKVAL.Tables("RESULT") Is Nothing Then Exit Sub

        rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "  hrt_rmkcde = 'packlist_footer'   and hrt_rmkdsc = '" & cboPckListFooter.Text.Trim & "' "

        If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 And cboPckListFooter.Text.Trim <> "" Then
            txtBilRmk.Text = rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval")
        End If



    End Sub

    Private Sub cboPckListFooter_Validating1(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboPckListFooter.Validating


        Dim tmpstr
        tmpstr = cboPckListFooter.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboPckListFooter.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Packing Footer Remark - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If


    End Sub

    Private Sub txtBilRmk_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtBilRmk.GotFocus

        richtext_focus = "txtBilRmk"
    End Sub

    Private Sub txtBilRmk_LostFocus1(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtBilRmk.LostFocus
        richtext_focus = ""

    End Sub

    Private Sub txtBilRmk_TextChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtBilRmk.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtBilRmk.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtBilRmk.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_plrmk") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_plrmk") = tmpstr
                End If
            End If
        End If




    End Sub

    Private Sub txtArrDat_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtArrDat.KeyPress
        'If e.KeyChar = Chr(13) Then
        '    txtPotLoa.Focus()
        'End If

    End Sub

    Private Sub txtArrDat_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtArrDat.LostFocus
        'txtPotLoa.Focus()


    End Sub

    Private Sub txtArrDat_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtArrDat.TextChanged
        If rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHIPGHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtArrDat.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtArrDat.Text

                If tmpstr <> rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_arrdat") Then
                    Recordstatus = True


                    If rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*ADD*~" And rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") <> "~*NEW*~" Then
                        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_creusr") = "~*UPD*~"
                    End If
                    rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_arrdat") = tmpstr
                End If
            End If
        End If

    End Sub



    Private Function CheckOutStandQty() As Long

        Dim rs_tmp As DataSet
        Dim AccQty As Long

        AccQty = 0

        rs_tmp = rs_SHIPGDTL.Copy

        rs_tmp.Tables("RESULT").DefaultView.RowFilter = "hid_ordno = '" + txtOrdNo.Text + "' and hid_ordseq = '" + txtOrdSeq.Text + "'"
        If rs_tmp.Tables("RESULT").DefaultView.Count > 0 Then
            For index9 As Integer = 0 To rs_tmp.Tables("RESULT").DefaultView.Count - 1
                AccQty = AccQty + (rs_tmp.Tables("RESULT").DefaultView(index9)("hid_orgqty") - rs_tmp.Tables("RESULT").DefaultView(index9)("hid_shpqty"))
            Next
        End If

        CheckOutStandQty = rs_SHIPGDTL.Tables("RESULT").rows(sReadingIndexS)("sod_outqty") + AccQty
    End Function

    Private Function CheckOutStandQty_savecheck(ByVal reading_i) As Long

        Dim rs_tmp As DataSet
        Dim AccQty As Long

        AccQty = 0

        rs_tmp = rs_SHIPGDTL.Copy

        rs_tmp.Tables("RESULT").DefaultView.RowFilter = "hid_ordno = '" + rs_SHIPGDTL.Tables("RESULT").Rows(reading_i)("hid_ordno") + "' and hid_ordseq = '" + rs_SHIPGDTL.Tables("RESULT").Rows(reading_i)("hid_ordseq").ToString + "'"
        If rs_tmp.Tables("RESULT").DefaultView.Count > 0 Then
            For index9 As Integer = 0 To rs_tmp.Tables("RESULT").DefaultView.Count - 1
                If IsDBNull(rs_tmp.Tables("RESULT").DefaultView(index9)("hid_orgqty")) Then
                    rs_tmp.Tables("RESULT").DefaultView(index9)("hid_orgqty") = 0
                End If
                If IsDBNull(rs_tmp.Tables("RESULT").DefaultView(index9)("hid_shpqty")) Then
                    rs_tmp.Tables("RESULT").DefaultView(index9)("hid_shpqty") = 0
                End If

                AccQty = AccQty + (rs_tmp.Tables("RESULT").DefaultView(index9)("hid_orgqty") - rs_tmp.Tables("RESULT").DefaultView(index9)("hid_shpqty"))
            Next
        End If

        If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(reading_i)("sod_outqty")) Then
            rs_SHIPGDTL.Tables("RESULT").Rows(reading_i)("sod_outqty") = 0
        End If

        CheckOutStandQty_savecheck = rs_SHIPGDTL.Tables("RESULT").Rows(reading_i)("sod_outqty") + AccQty
    End Function

    Private Sub txtArrDat_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles txtArrDat.Validating
        'If txtArrDat.Text.Trim <> "" Then

        '    If Not IsDate(txtArrDat.Text.Trim) Then
        '        MsgBox("Please Input in date format!")
        '        txtArrDat.Text = ""
        '        txtArrDat.Focus()

        '    End If

        'End If

    End Sub

    Function after_colpck()



        txtCartonFactor.Text = "0"
        If UBound(Split(cboColPck.Text, " / ")) < 8 Then
            MsgBox("Invalid packing!")
            Exit Function
        End If




        Call pck_cih_dimension()

        Dim i As Integer
        Dim j As Integer
        Dim tmp_CartonFactor As Integer

        If rs_SHPKDHIS.Tables("RESULT").Rows.Count > 1 Then
            tmp_CartonFactor = rs_SHPKDHIS.Tables("RESULT").Rows(0)("hip_conftr")
        End If

        flag_txtCartonFactor_KeyPress = True

        If tmp_CartonFactor < 1 Or tmp_CartonFactor > 5 Then
            txtCartonFactor.Text = "1"
        Else
            txtCartonFactor.Text = tmp_CartonFactor
        End If
        i = 0
        j = 0
        rs_SHPCKDIM.Tables("RESULT").DefaultView.RowFilter = ""


        If Val(txtCartonFactor.Text) = 1 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
        ElseIf Val(txtCartonFactor.Text) = 2 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum <= 4 "
        ElseIf Val(txtCartonFactor.Text) = 3 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 7 and hpd_pdnum<=12 "
        ElseIf Val(txtCartonFactor.Text) = 4 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=13 and hpd_pdnum <=20 "
        ElseIf Val(txtCartonFactor.Text) = 5 Then
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >= 21 and hpd_pdnum <=30 "
        Else
            txtCartonFactor.Text = "1"
            rs_SHPCKDIM.Tables("result").DefaultView.RowFilter = "hpd_shpseq =" & rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_shpseq") & " and hpd_pdnum >=5 and  hpd_pdnum<=6 "
            'MsgBox("Please set Carton Factor smaller than 6!")
        End If




        If rs_SHPKDHIS.Tables("RESULT").Rows.Count > 0 Then
            For i = 0 To rs_SHPKDHIS.Tables("RESULT").Rows.Count - 1 Step 1
                For j = 0 To rs_SHPCKDIM.Tables("RESULT").DefaultView.Count - 1 Step 1

                    If j < rs_SHPCKDIM.Tables("RESULT").DefaultView.Count Then


                        If Not IsDBNull(rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_dimtyp")) Then
                            '0825

                            If rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_dimtyp") = rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_dimtyp") And _
                                    rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ctnnam") = rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ctnnam") And _
                                    rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_des") = rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_des") And _
                                    tmp_CartonFactor = rs_SHPKDHIS.Tables("RESULT").DefaultView(i)("hip_conftr") _
                                    Then

                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ctn") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ctn")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_l_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_l_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_w_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_w_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_h_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_h_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_cbm_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_cbm_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlcbm_cm") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlcbm_cm")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_gw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_gw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlgw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlgw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_nw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_nw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlnw_kg") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlnw_kg")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_l_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_l_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_w_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_w_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_h_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_h_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_cbm_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_cbm_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlcbm_in") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlcbm_in")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_gw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_gw_lb")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlgw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlgw_lb")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_nw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_nw_lb")
                                rs_SHPCKDIM.Tables("RESULT").DefaultView(j)("hpd_ttlnw_lb") = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_ttlnw_lb")
                                ' txtConFtr.Text = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_conftr")
                                txtCartonFactor.Text = rs_SHPKDHIS.Tables("RESULT").Rows(i)("hip_conftr")



                            End If
                        End If

                    End If
                Next
            Next

        End If

        ''1021
        rs_SHPCKDIM.Tables("RESULT").DefaultView.Sort = "hpd_shpno,hpd_shpseq,hpd_pdseq,hpd_pdnum"

        'dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
        'dgPCKDIM.Refresh()


        dgPCKDIM.DataSource = rs_SHPCKDIM.Tables("result").DefaultView
        dgPCKDIM.Refresh()
        display_dgPCKDIM("")



        '''sm
        If optitmsm.Checked = True Then
            For index As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
                If rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_ordno") = txtOrdNo.Text.Trim Then
                    txtItmShm.Text = rs_SHIPGDTL.Tables("RESULT").Rows(index)("hid_itmshm")
                End If
            Next
        End If
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untsel") = cboUntAmt.Text
        rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_untamt") = cboUntAmt.Text
        cboUntSelD.Text = cboUntAmt.Text
        cboUntAmtD.Text = cboUntAmt.Text

        Call Append_SHCPTBKD()
        Call display_SHCPTBKD()

        '''shcptbkd

        reset_dis()
        txtShpQty.Enabled = True
        txtCtnStr.Enabled = True
        txtCtnEnd.Enabled = True
        txtCartonFactor.Enabled = True
        txt_name_f1.Enabled = True
        txt_dsc_f1.Enabled = True
        txt_name_f2.Enabled = True
        txt_dsc_f2.Enabled = True
        txt_name_f3.Enabled = True
        txt_dsc_f3.Enabled = True
        'txtaddinf.Enabled = True
        cmdinscpb.Enabled = True
        txtColCde.Focus()
        'txtOrdNo.Text = TmpordNo


        dgPCKDIM.Enabled = True
        dgSCCPTBKD.Enabled = True

        'dgPCKDIM.Visible= True
        dgSCCPTBKD.Visible = True
        cmdinscpb.Visible = True

        If optinvsm.Checked = True Then
            txtItmShm.Enabled = False
            cmdSelSM.Enabled = True
        Else
            txtItmShm.Enabled = True
            cmdSelSM.Enabled = False
        End If


        cur_sc_no = txtOrdNo.Text.Trim
        cur_job_no = txtJobNo.Text.Trim


        txtItmShm.Enabled = True
        txtManNam.Enabled = True
        cboManAdr.Enabled = True
        txtManAdr.Enabled = True
        txtInvNo.Enabled = True
        'txtaddinf.Enabled = True

        txtShpQty.Focus()
    End Function

    Private Sub grdShpSum_ColumnHeaderMouseClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellMouseEventArgs) Handles grdShpSum.ColumnHeaderMouseClick
        Dim ccl As DataGridViewColumn = _
            grdShpSum.Columns(e.ColumnIndex)
        Dim oldColumn As DataGridViewColumn = grdShpSum.SortedColumn

        ListSortDirection_Ascending = 1
        ListSortDirection_Descending = 2


        If oldColumn IsNot Nothing Then
            ' If oldColumn is null, then the DataGridView is not currently sorted. 
            If oldColumn Is ccl AndAlso grdShpSum.SortOrder = _
                SortOrder.Ascending Then
                direction = ListSortDirection_Ascending
                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.Ascending
            Else
                direction = ListSortDirection_Descending
                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.Descending
                ' Sort a new column and remove the old SortGlyph.
            End If
        Else
            'direction = ListSortDirection_Ascending
            'oldColumn.HeaderCell.SortGlyphDirection = SortOrder.Ascending
        End If
        '' Sort the selected column.
        'grdShpSum.Sort(ccl, direction)
        'If direction = ListSortDirection_Ascending Then
        '    ccl.HeaderCell.SortGlyphDirection = SortOrder.Ascending
        'Else
        '    ccl.HeaderCell.SortGlyphDirection = SortOrder.Descending
        'End If


        Select Case ccl.Index
            Case grdShpSum_hid_shpseq
                col_sorted = grdShpSum_hid_shpseq
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_shpseq"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_shpseq Desc"
                End If
                flag_sorted = True
            Case grdShpSum_hid_invno
                col_sorted = grdShpSum_hid_invno
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_invno"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_invno Desc"
                End If
                flag_sorted = True
            Case grdShpSum_hid_ctrcfs
                col_sorted = grdShpSum_hid_ctrcfs
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_ctrcfs"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_ctrcfs Desc"
                End If
                flag_sorted = True
            Case grdShpSum_hid_cuspo
                col_sorted = grdShpSum_hid_cuspo
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_cuspo"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_cuspo Desc"
                End If
                flag_sorted = True
            Case grdShpSum_hid_jobno
                col_sorted = grdShpSum_hid_jobno
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_jobno"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_jobno Desc"
                End If
                flag_sorted = True
            Case grdShpSum_hid_ordno
                col_sorted = grdShpSum_hid_ordno
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_ordno"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_ordno Desc"
                End If
                flag_sorted = True
            Case grdShpSum_hid_purord
                col_sorted = grdShpSum_hid_purord
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_purord"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_purord Desc"
                End If
                flag_sorted = True
            Case grdShpSum_hid_itmno
                col_sorted = grdShpSum_hid_itmno
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_itmno"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_itmno Desc"
                End If
                flag_sorted = True
            Case grdShpSum_hid_cusitm
                col_sorted = grdShpSum_hid_cusitm
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_cusitm"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_cusitm Desc"
                End If
                flag_sorted = True
            Case grdShpSum_hid_mannam
                col_sorted = grdShpSum_hid_mannam
                If direction = ListSortDirection_Ascending Then
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_mannam"
                Else
                    rs_SHIPGDTL.Tables("RESULT").DefaultView.Sort = "hid_mannam Desc"
                End If
                flag_sorted = True
        End Select

        '''
    End Sub


    Private Sub grdShpSum_RowHeaderMouseClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellMouseEventArgs) Handles grdShpSum.RowHeaderMouseClick

        '''
    End Sub

    Private Sub smi_Copy_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles smi_Copy.Click
        Select Case richtext_focus
            Case "txtBilAdr"
                Call menu_copy((txtBilAdr))
            Case "txtEngDsc"
                Call menu_copy((txtEngDsc))
            Case "txtCover"
                Call menu_copy((txtCover))
            Case "txtFtrRmk"
                Call menu_copy((txtFtrRmk))
            Case "txtBilRmk"
                Call menu_copy((txtBilRmk))
            Case "txtDoc"
                Call menu_copy((txtDoc))
            Case "txtItmDsc"
                Call menu_copy((txtItmDsc))
            Case "txtItmShm"
                Call menu_copy((txtItmShm))
            Case "txtexptaddr"
                Call menu_copy((txtexptaddr))
        End Select

        '''

    End Sub

    Private Sub smi_Paste_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles smi_Paste.Click
        Select Case richtext_focus
            Case "txtBilAdr"
                Call menu_paste((txtBilAdr))
            Case "txtEngDsc"
                Call menu_paste((txtEngDsc))
            Case "txtCover"
                Call menu_paste((txtCover))
            Case "txtFtrRmk"
                Call menu_paste((txtFtrRmk))
            Case "txtBilRmk"
                Call menu_paste((txtBilRmk))
            Case "txtDoc"
                Call menu_paste((txtDoc))
            Case "txtItmDsc"
                Call menu_paste((txtItmDsc))
            Case "txtItmShm"
                Call menu_paste((txtItmShm))
            Case "txtexptaddr"
                Call menu_paste((txtexptaddr))
        End Select

        '''
    End Sub
    Function menu_paste(ByVal sender As RichTextBox)

        sender.Paste()


    End Function
    Function menu_undo(ByVal sender As RichTextBox)
        If sender.CanUndo = True Then
            ' Undo the last operation.
            sender.Undo()
            ' Clear the undo buffer to prevent last action from being redone.
            'sender.ClearUndo()
        End If


    End Function
    Function menu_copy(ByVal sender As RichTextBox)
        If sender.SelectionLength > 0 Then
            ' Copy the selected text to the Clipboard.
            sender.Copy()
        End If


    End Function
    Function menu_convert(ByVal sender As RichTextBox)
        '   sender.Rtf = sender.Text
        sender.Text = sender.Text.ToString



    End Function
    Private Sub ConvertToPlainTextToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ConvertToPlainTextToolStripMenuItem.Click
        Select Case richtext_focus
            Case "txtBilAdr"
                Call menu_Convert((txtBilAdr))
            Case "txtEngDsc"
                Call menu_Convert((txtEngDsc))
            Case "txtCover"
                Call menu_Convert((txtCover))
            Case "txtFtrRmk"
                Call menu_Convert((txtFtrRmk))
            Case "txtBilRmk"
                Call menu_convert((txtBilRmk))
            Case "txtDoc"
                Call menu_convert((txtDoc))
            Case "txtItmDsc"
                Call menu_convert((txtItmDsc))
            Case "txtItmShm"
                Call menu_convert((txtItmShm))
            Case "txtexptaddr"
                Call menu_convert((txtexptaddr))

        End Select


        '''
    End Sub

    Private Sub UndoToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UndoToolStripMenuItem.Click

        Select Case richtext_focus
            Case "txtBilAdr"
                Call menu_undo((txtBilAdr))
            Case "txtEngDsc"
                Call menu_undo((txtEngDsc))
            Case "txtCover"
                Call menu_undo((txtCover))
            Case "txtFtrRmk"
                Call menu_undo((txtFtrRmk))
            Case "txtBilRmk"
                Call menu_undo((txtBilRmk))
            Case "txtDoc"
                Call menu_undo((txtDoc))
            Case "txtItmDsc"
                Call menu_undo((txtItmDsc))
            Case "txtItmShm"
                Call menu_undo((txtItmShm))
            Case "txtexptaddr"
                Call menu_undo((txtexptaddr))

        End Select

        '''
    End Sub



    Function move_cell()
        If weight1.Checked = True Then
            chk_cmin = 1
        End If
        If weight2.Checked = True Then
            chk_cmin = 2
        End If
        If weight3.Checked = True Then
            chk_cmin = 3
        End If


        'loop_check_pckdim_count = loop_check_pckdim_count + 1
        'If loop_check_pckdim_count = 2 Then
        '    loop_check_pckdim_count = 0
        '    Exit Function
        'End If



        If last_dg_PCKDIM_row = 0 And last_dg_PCKDIM_col = 0 Then
            Exit Function
        End If




        If dgPCKDIM_hpd_nw_lb = 0 Then '''
            Exit Function
        End If
        If chk_cmin = 1 Then
            If last_dg_PCKDIM_col = dgPCKDIM_hpd_nw_kg Then

                If dgPCKDIM.RowCount > last_dg_PCKDIM_row + 1 Then
                    dgPCKDIM.CurrentCell = dgPCKDIM.Item(9, last_dg_PCKDIM_row + 1)
                    dgPCKDIM.BeginEdit(True)
                End If

            Else
                Select Case last_dg_PCKDIM_col
                    Case dgPCKDIM_hpd_l_cm
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_w_cm, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_w_cm
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_h_cm, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_h_cm
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_gw_kg, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_gw_kg
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_nw_kg, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                End Select
            End If

        ElseIf chk_cmin = 2 Then
            If last_dg_PCKDIM_col = dgPCKDIM_hpd_nw_lb Then

                If dgPCKDIM.RowCount > last_dg_PCKDIM_row + 1 Then
                    dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_l_in, last_dg_PCKDIM_row + 1)
                    dgPCKDIM.BeginEdit(True)
                End If


            Else
                Select Case last_dg_PCKDIM_col
                    Case dgPCKDIM_hpd_l_in
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_w_in, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_w_in
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_h_in, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_h_in
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_gw_lb, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_gw_lb
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_nw_lb, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                End Select
            End If
        Else
            If last_dg_PCKDIM_col = dgPCKDIM_hpd_nw_lb Then
                If dgPCKDIM.RowCount > last_dg_PCKDIM_row + 1 Then
                    dgPCKDIM.CurrentCell = dgPCKDIM.Item(9, last_dg_PCKDIM_row + 1)
                    dgPCKDIM.BeginEdit(True)
                End If

            Else
                Select Case last_dg_PCKDIM_col
                    Case dgPCKDIM_hpd_l_cm
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_w_cm, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_w_cm
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_h_cm, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_h_cm
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_gw_kg, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_gw_kg
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_nw_kg, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_nw_kg
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_l_in, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)

                    Case dgPCKDIM_hpd_l_in
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_w_in, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_w_in
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_h_in, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_h_in
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_gw_lb, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                    Case dgPCKDIM_hpd_gw_lb
                        dgPCKDIM.CurrentCell = dgPCKDIM.Item(dgPCKDIM_hpd_nw_lb, last_dg_PCKDIM_row)
                        dgPCKDIM.BeginEdit(True)
                End Select
            End If



        End If

    End Function


    Private Sub cmdPickDate_a_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdPickDate_a.Click

        If GetCtrlValue(cboShpSts) = "REL" Or GetCtrlValue(cboShpSts) = "CLO" Then Exit Sub

        If Trim(txtArrDat.Text) = "" Then
            '            mvw_a.Value = Format(Today.Date, "MM/dd/yyyy")
            mvw_a.SetDate(Format(Today.Date, "MM/dd/yyyy"))
        Else
            mvw_a.SetDate(txtArrDat.Text)
            '            mvw_a.Value = txtArrDat.Text
        End If

        If mvw_a.Visible = False Then
            mvw_a.BringToFront()
            mvw_a.Visible = True
        Else
            mvw_a.Visible = False
            mvw_a.SendToBack()


        End If



    End Sub

    Private Sub mvw_a_DateChanged(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DateRangeEventArgs) Handles mvw_a.DateChanged
        txtPotLoa.Focus()

    End Sub

    Private Sub mvw_a_DateSelected(ByVal sender As Object, ByVal e As System.Windows.Forms.DateRangeEventArgs) Handles mvw_a.DateSelected
        If txtIssDat.Text.Trim = "" Then
            txtIssDat.Text = Format(Date.Today, "MM/dd/yyyy").ToString
        End If

        If DateDiff("d", mvw_a.SelectionStart, mvwSlnOnb.SelectionStart) > 0 Then
            MsgBox("ETA date should be later than ETD date.")
            If Add_flag = True Then
                txtArrDat.Text = ""
            Else
                If Not rs_SHIPGHDR.Tables("RESULT") Is Nothing Then
                    If rs_SHIPGHDR.Tables("RESULT").Rows.Count > 0 Then
                        txtArrDat.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_arrdat")
                    End If
                End If
            End If
        Else
            txtArrDat.Text = mvw_a.SelectionStart

        End If

        mvw_a.Visible = False

        txtPotLoa.Focus()

    End Sub

    Private Sub txtexptnam_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtexptnam.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtexptnam.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtexptnam.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptnam") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptnam") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtexptaddr_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtexptaddr.GotFocus

        richtext_focus = "txtexptaddr"
    End Sub

    Private Sub txtexptaddr_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtexptaddr.LostFocus
        richtext_focus = ""
    End Sub

    Private Sub txtexptaddr_MouseLeave(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtexptaddr.MouseLeave

    End Sub

    Private Sub txtexptaddr_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtexptaddr.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtexptaddr.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtexptaddr.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptaddr") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptaddr") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub optDocTyp0_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles optDocTyp0.Click

        If optDocTyp0.Checked = True Then
            If rs_SHINVHDR Is Nothing Then
                Exit Sub
            End If

            If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
                Exit Sub
            End If
            If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
                Exit Sub
            End If
            If optDocTyp0.Text.Trim <> "" Then
                If sMode = cModeAdd Or sMode = cModeUpd Then
                    Dim tmpstr
                    tmpstr = optDocTyp0.Text.Trim

                    If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doc") Then
                        Recordstatus = True


                        If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                        End If
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp") = tmpstr
                    End If
                End If
            End If

        End If

    End Sub

    Private Sub optDocTyp0_ClientSizeChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles optDocTyp0.ClientSizeChanged

    End Sub

    Private Sub optDocTyp1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles optDocTyp1.Click
        If optDocTyp1.Checked = True Then


            If rs_SHINVHDR Is Nothing Then
                Exit Sub
            End If

            If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
                Exit Sub
            End If
            If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
                Exit Sub
            End If
            If optDocTyp1.Text.Trim <> "" Then
                If sMode = cModeAdd Or sMode = cModeUpd Then
                    Dim tmpstr
                    tmpstr = optDocTyp1.Text.Trim

                    If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doc") Then
                        Recordstatus = True


                        If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                        End If
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp") = tmpstr
                    End If
                End If
            End If
        End If

    End Sub

    Private Sub optDocTyp2_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles optDocTyp2.Click
        If optDocTyp2.Checked = True Then


            If rs_SHINVHDR Is Nothing Then
                Exit Sub
            End If

            If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
                Exit Sub
            End If
            If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
                Exit Sub
            End If
            If optDocTyp2.Text.Trim <> "" Then
                If sMode = cModeAdd Or sMode = cModeUpd Then
                    Dim tmpstr
                    tmpstr = optDocTyp2.Text.Trim

                    If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doc") Then
                        Recordstatus = True


                        If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                        End If
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp") = tmpstr
                    End If
                End If
            End If
        End If


    End Sub




    Private Sub cal_dtl_sum()
        Dim tmp_CartonFactor As Integer

        txtTtlCtn.Text = ""
        txtTtlAmt.Text = ""
        txtTtlNwg.Text = ""
        txtTtlGwg.Text = ""

        If rs_SHIPGDTL Is Nothing Then
            txtTtlCtn.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlctn")
            txtTtlNwg.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlnwg")
            txtTtlGwg.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlgwg")
            txtTtlAmt.Text = rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlamt")

            Exit Sub
        End If

        If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If

        For index9 As Integer = 0 To rs_SHIPGDTL.Tables("RESULT").Rows.Count - 1
            If rs_SHIPGDTL.Tables("RESULT").Rows(index9)("del") <> "Y" Then

                txtTtlCtn.Text = Val(txtTtlCtn.Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlctn")) * Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr"))
                txtTtlAmt.Text = Val(txtTtlAmt.Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlamt"))

                rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlnet") = 0
                rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlgrs") = 0

                If rs_SHPCKDIM Is Nothing Then
                    Exit Sub
                End If
                For index99 As Integer = 0 To rs_SHPCKDIM.Tables("RESULT").Rows.Count - 1

                    If rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 5 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 6 Then
                        tmp_CartonFactor = 1
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 4 Then
                        tmp_CartonFactor = 2
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 7 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 12 Then
                        tmp_CartonFactor = 3
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 13 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 20 Then
                        tmp_CartonFactor = 4
                    ElseIf rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") >= 21 And rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_pdnum") <= 30 Then
                        tmp_CartonFactor = 5
                    End If

                    If IsDBNull(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr")) Then
                        Exit Sub
                    End If
                    If rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpno") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpno") And _
                            rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_shpseq") = rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_shpseq") And _
                                rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_dimtyp") = "Mod" And _
                        tmp_CartonFactor = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ctnftr") Then

                        '                    tmp_CartonFactor = Val(txtCartonFactor.Text) Then
                        'temp mod

                        rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlnet") = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlnet") + rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_ttlnw_kg")
                        rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlgrs") = rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlgrs") + rs_SHPCKDIM.Tables("RESULT").Rows(index99)("hpd_ttlgw_kg")

                    End If
                Next

                txtTtlNwg.Text = Val(txtTtlNwg.Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlnet"))
                txtTtlGwg.Text = Val(txtTtlGwg.Text) + Val(rs_SHIPGDTL.Tables("RESULT").Rows(index9)("hid_ttlgrs"))

            End If
            '''1009
        Next

        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlctn") = Val(txtTtlCtn.Text.Trim)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlnwg") = Val(txtTtlNwg.Text.Trim)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlgwg") = Val(txtTtlGwg.Text.Trim)
        rs_SHIPGHDR.Tables("RESULT").Rows(0).Item("hih_ttlamt") = Val(txtTtlAmt.Text.Trim)
    End Sub
     
    Private Sub cmdPickDate3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdPickDate3.Click

        If Trim(txtLCdat.Text) = "" Then
            '            mvwLCdat.Value = Format(Today.Date, "MM/dd/yyyy")
            mvwLCdat.SetDate(Format(Today.Date, "MM/dd/yyyy"))
        Else
            mvwLCdat.SetDate(txtLCdat.Text)
            '            mvwLCdat.Value = txtLCdat.Text
        End If

        If mvwLCdat.Visible = False Then
            mvwLCdat.BringToFront()
            mvwLCdat.Visible = True
        Else
            mvwLCdat.Visible = False
            mvwLCdat.SendToBack()

        End If




    End Sub

    Private Sub txtLCNo_TextChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtLCNo.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtLCNo.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtLCNo.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_LCno") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_LCno") = tmpstr
                End If
            End If
        End If


    End Sub

    Private Sub txtLCdat_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtLCdat.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If IsDate(txtLCdat.Text.Trim) Or txtLCdat.Text.Trim = "" Then

            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtLCdat.Text
                If tmpstr = "" Then
                    tmpstr = "01/01/1900"
                End If
                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_LCDAT") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_LCDAT") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub txtLcBank_TextChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtLcBank.TextChanged
        If rs_SHINVHDR Is Nothing Then
            Exit Sub
        End If

        If rs_SHINVHDR.Tables("RESULT") Is Nothing Then
            Exit Sub
        End If
        If rs_SHINVHDR.Tables("RESULT").Rows.Count = 0 Then
            Exit Sub
        End If
        If txtLcBank.Text <> "" Or sMode = cModeAdd Or sMode = cModeUpd Then
            If sMode = cModeAdd Or sMode = cModeUpd Then
                Dim tmpstr
                tmpstr = txtLcBank.Text

                If tmpstr <> rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_LCBank") Then
                    Recordstatus = True


                    If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
                        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
                    End If
                    rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_LCBank") = tmpstr
                End If
            End If
        End If

    End Sub

    Private Sub mvwLCdat_DateChanged(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DateRangeEventArgs) Handles mvwLCdat.DateChanged

    End Sub

    Private Sub mvwLCdat_DateSelected(ByVal sender As Object, ByVal e As System.Windows.Forms.DateRangeEventArgs) Handles mvwLCdat.DateSelected




        txtLCdat.Text = mvwLCdat.SelectionStart
        rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_LCdat") = txtLCdat.Text

        If rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*ADD*~" And rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") <> "~*NEW*~" Then
            rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_creusr") = "~*UPD*~"
        End If

        mvwLCdat.Visible = False


    End Sub

    Private Sub dg_sainvhdr_CellBeginEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellCancelEventArgs) Handles dg_sainvhdr.CellBeginEdit
        If dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_hsi_sminvno Then
            tmp_dg_sainvhdr_hsi_sminvno = rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_sminvno")

        End If

    End Sub

    Private Sub dg_sainvhdr_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dg_sainvhdr.CellClick
        If mmdSave.Enabled = False Then
            Exit Sub
        End If

        If dg_sainvhdr.SelectedCells.Count = 1 Then
            If dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_Del Then
                Recordstatus = True
                rs_SHSMPINV.Tables("RESULT").Columns("DEL").ReadOnly = False
                rs_SHSMPINV.Tables("RESULT").Columns("hsi_creusr").ReadOnly = False
                If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("DEL").ToString = "" Then
                    If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString <> "~*ADD*~" Then
                        '                        rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*DEL*~"
                        rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("DEL") = "Y"
                    ElseIf rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString = "~*ADD*~" Then
                        '                        rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*DEL*~"
                        rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("DEL") = "Y"
                    End If

                Else

                    If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString = "~*NEW*~" Or rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*ADD*~" Then
                        rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*ADD*~"
                    Else
                        rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*UPD*~"
                    End If
                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("DEL") = ""
                End If

            ElseIf dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_hsi_sminvno Then
            End If
        End If


        Grid_Got_Focus = "dg_sainvhdr"
        If Not dg_sainvhdr.CurrentCell Is Nothing Then
            gi_dg_sainvhdr_row = dg_sainvhdr.CurrentCell.RowIndex
        Else
            gi_dg_sainvhdr_row = -1
        End If
        display_SHSMPINV()

    End Sub

     

    Private Sub dg_sainvhdr_CellEndEdit1(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dg_sainvhdr.CellEndEdit

        If mmdSave.Enabled = False Then
            Exit Sub
        End If

        If dg_sainvhdr.SelectedCells.Count = 1 Then
            If dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_Del Then

                If IsDBNull(rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("Del")) Then
                    Exit Sub
                End If
                If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("Del") <> "Y" Then
                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("Del") = ""
                End If
                Recordstatus = True

            ElseIf dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_hsi_sminvno Then
                rs_SHSMPINV.Tables("RESULT").Columns("hsi_sminvno").ReadOnly = False
                rs_SHSMPINV.Tables("RESULT").Columns("hsi_creusr").ReadOnly = False
                Dim tmp_cus1no As String
                Dim tmp_sminvno As String

                tmp_cus1no = Split(cboCus1No.Text.Trim, " - ")(0)
                If IsDBNull(rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_sminvno")) Then
                    tmp_sminvno = ""
                Else
                    tmp_sminvno = rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_sminvno")
                End If
                If check_sainvhdr(tmp_sminvno, tmp_cus1no) <> True Then
                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_sminvno") = tmp_dg_sainvhdr_hsi_sminvno
                    display_SHSMPINV()

                    Exit Sub
                End If

                If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString <> "~*ADD*~" Then
                    MsgBox("To modify the Invoice number, please delete this row and Insert a new row, for modification.")

                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_sminvno") = tmp_dg_sainvhdr_hsi_sminvno
                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*DEL*~"
                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("Del") = "Y"


                End If

                If Trim(tmp_sminvno) = "" Then
                    MsgBox("Sample Invoice should not be empty!")
                End If

            ElseIf dg_sainvhdr.CurrentCell.ColumnIndex = dg_sainvhdr_hsi_rmk Then
                If rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr").ToString = "~*NEW*~" Or rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*ADD*~" Then
                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*ADD*~"
                Else
                    rs_SHSMPINV.Tables("RESULT").DefaultView(dg_sainvhdr.CurrentCell.RowIndex)("hsi_creusr") = "~*UPD*~"
                End If

            End If
        End If

        Recordstatus = True
        display_SHSMPINV()


    End Sub

    Private Sub dg_sainvhdr_CellEnter1(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dg_sainvhdr.CellEnter
        Grid_Got_Focus = "dg_sainvhdr"
        If Grid_Got_Focus = "dg_sainvhdr" Then
            Label85.ForeColor = Color.Green
        End If
    End Sub

    Private Sub dg_sainvhdr_CellLeave1(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dg_sainvhdr.CellLeave
        Label85.ForeColor = Color.Black
    End Sub

    Private Sub rb_cfs_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles rb_cfs.CheckedChanged

    End Sub

    Private Sub rb_cfs_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles rb_cfs.Click

        If rb_cfs.Checked = True Then
            txtConsolNo.Enabled = True
            cboCtrSiz.Enabled = False
            txtCtrCfs.Enabled = False
            txtSealNo.Enabled = False
            chkpckrmk.Enabled = False
            txtConsolNo.Focus()

            cboCtrSiz.Text = ""
            txtCtrCfs.Text = ""
            txtSealNo.Text = ""
            chkpckrmk.Text = ""


        Else
            txtConsolNo.Enabled = False
            txtConsolNo.Text = ""
            cboCtrSiz.Enabled = True
            txtCtrCfs.Enabled = True
            txtSealNo.Enabled = True
            chkpckrmk.Enabled = True
            cboCtrSiz.Focus()
        End If

    End Sub

    Private Sub rb_ctn_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles rb_ctn.CheckedChanged

    End Sub

    Private Sub rb_ctn_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles rb_ctn.Click

        If rb_ctn.Checked = False Then
            txtConsolNo.Enabled = True
            cboCtrSiz.Enabled = False
            txtCtrCfs.Enabled = False
            txtSealNo.Enabled = False
            chkpckrmk.Enabled = False
            txtConsolNo.Focus()
        Else
            txtConsolNo.Enabled = False
            txtConsolNo.Text = ""
            cboCtrSiz.Enabled = True
            txtCtrCfs.Enabled = True
            txtSealNo.Enabled = True
            chkpckrmk.Enabled = True
            cboCtrSiz.Focus()

        End If

    End Sub

    Private Sub GroupBox8_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GroupBox8.Enter

    End Sub

    Private Sub GroupBox6_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GroupBox6.Enter

    End Sub

    Private Sub Label106_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label106.Click

    End Sub

    Private Sub GroupBox14_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GroupBox14.Enter

    End Sub

    Private Sub Label108_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label108.Click

    End Sub

    Private Sub Label67_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label67.Click

    End Sub

    Private Sub GroupBox2_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GroupBox2.Enter

    End Sub
     
    Private Sub dg_sainvhdr_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dg_sainvhdr.CellContentClick

    End Sub
    Private Sub dg_sainvhdr_CellContentClick_1(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs)

    End Sub

    Private Sub dg_sainvhdr_GotFocus1(ByVal sender As Object, ByVal e As System.EventArgs) Handles dg_sainvhdr.GotFocus
        Grid_Got_Focus = "dg_sainvhdr"
        If Not dg_sainvhdr.CurrentCell Is Nothing Then
            gi_dg_sainvhdr_row = dg_sainvhdr.CurrentCell.RowIndex
        Else
            gi_dg_sainvhdr_row = -1
        End If
    End Sub

    Private Sub dg_sainvhdr_Enter1(ByVal sender As Object, ByVal e As System.EventArgs) Handles dg_sainvhdr.Enter
        Grid_Got_Focus = "dg_sainvhdr"

    End Sub
    Private Sub Label55_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label55.Click
    End Sub

    Private Sub cms_CopyNPaste_Opening(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cms_CopyNPaste.Opening

    End Sub

    Private Sub txtShpSeq_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtShpSeq.TextChanged

    End Sub

    Private Sub Label13_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label13.Click

    End Sub
    Public Sub delete_shassinf_record(ByRef tmp_rs_SHASSINF As DataSet, ByVal tmp_counter As Integer)

        tmp_counter = tmp_rs_SHASSINF.Tables("RESULT").Rows.Count - 1

        For index99 As Integer = 0 To tmp_counter
            If tmp_rs_SHASSINF.Tables("RESULT").Rows(index99)("hai_shpseq") = txtShpSeq.Text.Trim Then
                tmp_rs_SHASSINF.Tables("RESULT").Rows(index99)("hai_creusr") = "~*DEL*~"
            End If
        Next

    End Sub

    Private Sub grdPremium_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles grdPremium.EditingControlShowing
        If grdPremium.RowCount = 0 Then
            Exit Sub
        End If

        e.CellStyle.BackColor = Color.White

        Select Case grdPremium.CurrentCell.ColumnIndex

            Case grdPremium_hdp_pctamt, grdPremium_hdp_pct, grdPremium_hdp_amt
                Dim txtbox_grdPremium As TextBox = CType(e.Control, TextBox)
                If Not (txtbox_grdPremium Is Nothing) Then
                    AddHandler txtbox_grdPremium.KeyPress, AddressOf txtbox_grdPremium_KeyPress
                End If
        End Select

    End Sub



    Private Sub txtbox_grdPremium_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        Dim iRow As Integer = grdPremium.CurrentCell.RowIndex
        Dim iCol As Integer = grdPremium.CurrentCell.ColumnIndex

        Dim curvalue As String = grdPremium.CurrentCell.EditedFormattedValue

        Select Case grdPremium.CurrentCell.ColumnIndex
            Case grdPremium_hdp_pctamt, grdPremium_hdp_pct, grdPremium_hdp_amt
                If Not (e.KeyChar.ToString() = "." Or e.KeyChar = vbBack Or (e.KeyChar.ToString() >= "0" And e.KeyChar.ToString() <= "9")) Then
                    e.KeyChar = ""
                End If
        End Select
    End Sub

    Private Sub grdPremium_CellValidating(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellValidatingEventArgs) Handles grdPremium.CellValidating
        Dim row As DataGridViewRow = grdPremium.CurrentRow
        Dim strNewVal As String

        strNewVal = row.Cells(e.ColumnIndex).EditedFormattedValue.ToString.Trim

        'If strNewVal = Nothing Then
        '    Exit Sub
        'End If

        Select Case e.ColumnIndex
            Case grdPremium_hdp_pct, grdPremium_hdp_amt

                If Not IsNumeric(strNewVal) Then
                    MsgBox("Please input Numeric value!")
                    e.Cancel = True
                    Exit Sub
                End If


        End Select

        Select Case e.ColumnIndex
            Case grdPremium_hdp_pct
                If Not ((strNewVal >= 0) And (strNewVal <= 100)) Then
                    MsgBox("Data Out of Range!")
                    e.Cancel = True
                    Exit Sub
                End If

            Case grdPremium_hdp_amt
                If Not rs_SHINVHDR Is Nothing Then
                    If Not ((strNewVal >= 0) And (strNewVal <= Val(rs_SHINVHDR.Tables("RESULT").DefaultView(0)("hiv_invamt")))) Then
                        MsgBox("Data Out of Range!")
                        e.Cancel = True
                        Exit Sub
                    End If
                End If


        End Select

    End Sub


    Private Sub txtbox_dgSCCPTBKD_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        Dim iRow As Integer = dgSCCPTBKD.CurrentCell.RowIndex
        Dim iCol As Integer = dgSCCPTBKD.CurrentCell.ColumnIndex

        Dim curvalue As String = dgSCCPTBKD.CurrentCell.EditedFormattedValue

        Select Case dgSCCPTBKD.CurrentCell.ColumnIndex
            Case dgSCCPTBKD_CstAmt, dgSCCPTBKD_CstPer, dgSCCPTBKD_Wgt
                If Not (e.KeyChar.ToString() = "." Or e.KeyChar = vbBack Or (e.KeyChar.ToString() >= "0" And e.KeyChar.ToString() <= "9")) Then
                    e.KeyChar = ""
                End If
        End Select
    End Sub

    Private Sub grdPremium_RowHeaderMouseClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellMouseEventArgs) Handles grdPremium.RowHeaderMouseClick

    End Sub

    Private Sub grdPremium_RowHeaderMouseDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellMouseEventArgs) Handles grdPremium.RowHeaderMouseDoubleClick

    End Sub


    Private Sub grdPremium_RowHeaderCellChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewRowEventArgs) Handles grdPremium.RowHeaderCellChanged

    End Sub

    Private Sub grdPremium_RowHeadersBorderStyleChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles grdPremium.RowHeadersBorderStyleChanged

    End Sub

    Private Sub grdPremium_RowHeadersDefaultCellStyleChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles grdPremium.RowHeadersDefaultCellStyleChanged

    End Sub

    Private Sub grdPremium_RowHeadersWidthChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles grdPremium.RowHeadersWidthChanged

    End Sub

    Private Sub grdPremium_RowHeadersWidthSizeModeChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewAutoSizeModeEventArgs) Handles grdPremium.RowHeadersWidthSizeModeChanged

    End Sub



    Private Sub CalculateMatBkd()
        Dim dblDp As Double
        Dim tmpshpseq As Integer

        dblDp = 0
        tmpshpseq = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpseq")


        If txtPCPrc.Text.Trim <> "" Then
            dblDp = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_pcprc")
        Else
            dblDp = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_selprc")
        End If


        If Not rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
            If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 0 Then
                Exit Sub
            End If
        End If



        If rs_SHCPTBKD.Tables.Count > 0 Then
            If rs_SHCPTBKD.Tables("RESULT").Rows.Count > 0 Then
                rs_SHCPTBKD.Tables("RESULT").DefaultView.RowFilter = "shb_ordseq = " & tmpshpseq

                For index As Integer = 0 To rs_SHCPTBKD.Tables("RESULT").DefaultView.Count - 1
                    'If rs_SHIPGDTL.Tables("RESULT").DefaultView(sReadingIndexS)("mode").ToString <> "NEW" Then
                    '    Recordstatus = True
                    '    rs_SHIPGDTL.Tables("RESULT").DefaultView(sReadingIndexS)("mode") = "UPD"
                    'End If
                    'If rs_SHCPTBKD.Tables("RESULT").DefaultView(index)("mode").ToString <> "NEW" Then
                    '    rs_SHCPTBKD.Tables("RESULT").DefaultView(index)("mode") = "UPD"
                    '    If rs_SHCPTBKD.Tables("RESULT").DefaultView(index)("shb_creusr") <> "~*NEW*~" And rs_SHCPTBKD.Tables("RESULT").DefaultView(index)("shb_creusr") <> "~*ADD*~" And rs_SHCPTBKD.Tables("RESULT").DefaultView(index)("shb_creusr") <> "~*DEL*~" Then
                    '        rs_SHCPTBKD.Tables("RESULT").DefaultView(index)("shb_creusr") = "~*UPD*~"
                    '    End If
                    '    Recordstatus = True
                    'End If

                    'If IsDBNull(rs_SHCPTBKD.Tables("RESULT").Defaultview(index)("shb_pct")) = True Then
                    '    rs_SHCPTBKD.Tables("RESULT").Defaultview(index)("shb_pct") = rs_SHCPTBKD.Tables("RESULT").Defaultview(index)("shb_cstpct")
                    'End If

                    'If CDbl(IIf(IsDBNull(rs_SHCPTBKD.Tables("RESULT").Defaultview(index)("shb_pct")) = True, 0, rs_SHCPTBKD.Tables("RESULT").Defaultview(index)("shb_pct"))) = 0 Then
                    '    rs_SHCPTBKD.Tables("RESULT").Defaultview(index)("shb_pct") = rs_SHCPTBKD.Tables("RESULT").Defaultview(index)("shb_cstpct")
                    'End If

                    rs_SHCPTBKD.Tables("RESULT").DefaultView(index)("shb_cst") = (dblDp * CDbl(IIf(IsDBNull(rs_SHCPTBKD.Tables("RESULT").DefaultView(index)("shb_cstpct")) = True, 0, rs_SHCPTBKD.Tables("RESULT").DefaultView(index)("shb_cstpct")))) / 100
                Next

                dgSCCPTBKD.Refresh()
            End If
        End If
    End Sub



    Private Sub Label102_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label102.Click

    End Sub



    Private Sub cboexptnam_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboexptnam.SelectedIndexChanged

        txtexptnam.Text = cboexptnam.Text

        If cboexptnam.Text.Trim = "" Then
            txtexptaddr.Text = ""
        End If


        If rs_SHRMKVAL.Tables("RESULT") Is Nothing Then Exit Sub

        rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "  hrt_rmkcde = 'exporter_info'   and hrt_rmkdsc = '" & cboexptnam.Text.Trim & "' "

        If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 And cboexptnam.Text.Trim <> "" Then
            txtexptaddr.Text = rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval")
        End If

       
    End Sub


    Private Sub cboexptnam_Validating(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles cboexptnam.Validating
        Dim tmpstr
        tmpstr = cboexptnam.Text
        If tmpstr = "" Then
            Exit Sub
        End If

        If cboexptnam.Items.IndexOf(tmpstr) = -1 Then
            MsgBox("Shipment  : Manufacturing Address - Data is Invalid, please select in Drop Down List.")
            e.Cancel = True
        End If
    End Sub


    Private Sub cboexptnamFooter_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboexptnam.KeyUp
        If cboexptnam.Text.Length > 0 Then
            Call auto_search_combo(cboexptnam, e.KeyCode)
        End If

    End Sub

    Private Sub CmdBatUpdate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CmdBatUpdate.Click
        '' Michaelchiu 20170321
        PanShpbchup.Enabled = True

        PanShpbchup.Width = 216
        PanShpbchup.Height = 347
        PanShpbchup.Location = New Point(296, 14)
        PanShpbchup.BringToFront()
        loadDgShpbchup()
        PanShpbchup.Visible = True
    End Sub

    '' MichaelChiu 20170323
    Private Sub loadcboManAdr()

        Dim tmpvenno As String

        If txtVenNo.Text.Trim <> "" Then
            cboManAdr.Items.Clear()

            tmpvenno = Trim(Split(txtVenNo.Text.Trim, "-")(0))


            gsCompany = Trim(cboCoCde.Text)
            Call Update_gs_Value(gsCompany)


            gspStr = "sp_list_VNCNTINF '', '" & tmpvenno & "','U','ADR' "
            rtnLong = execute_SQLStatement(gspStr, rs_VNCNTINF, rtnStr)
            gspStr = ""

            '''''' Cursor = Cursors.Default



            '' MichaelChiu 20170322
            ''cboManAdr.Text = ""

            If rtnLong <> RC_SUCCESS Then
                MsgBox("Error on loading  sp_list_VNCNTINF:" & rtnStr)
                Exit Sub
            End If

            If rs_VNCNTINF.Tables("RESULT").Rows.Count > 0 Then

                dr = rs_VNCNTINF.Tables("RESULT").Select("vci_adr <> ''")

                If Not dr Is Nothing Then
                    If dr.Length > 0 Then
                        For index As Integer = 0 To dr.Length - 1
                            cboManAdr.Items.Add("Vendor Address-" + Trim(dr(index)("vci_adr")))
                        Next index
                    End If
                End If


                'cboManAdr.SelectedIndex = 0

            End If
        End If
        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

        gspStr = "sp_select_SHRMKVAL '','P','" & Split(cboCus1No.Text.Trim, " - ")(0) & "',''  "

        rtnLong = execute_SQLStatement(gspStr, rs_SHRMKVAL, rtnStr)
        If rtnLong <> RC_SUCCESS Then
            Me.Cursor = Windows.Forms.Cursors.Default
            MsgBox("Error on loading   sp_select_SHRMKVAL   : " & rtnStr)
            Exit Sub
        Else
            For i2 As Integer = 0 To rs_SHRMKVAL.Tables("RESULT").Columns.Count - 1
                rs_SHRMKVAL.Tables("RESULT").Columns(i2).ReadOnly = False
            Next

            rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'manufacturer_name'  and hrt_pricustno = '" & Split(cboCus1No.Text.Trim, " - ")(0) & "'"
            Dim tmphrt_rmkdsc As String

            For index1 As Integer = 0 To rs_SHRMKVAL.Tables("RESULT").DefaultView.Count - 1
                rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "hrt_rmkcde = 'manufacturer_name'  and hrt_pricustno = '" & Split(cboCus1No.Text.Trim, " - ")(0) & "'"
                tmphrt_rmkdsc = rs_SHRMKVAL.Tables("RESULT").DefaultView(index1)("hrt_rmkdsc")
                rs_SHRMKVAL.Tables("RESULT").DefaultView.RowFilter = "  hrt_rmkcde = 'manufacturer_name'   and hrt_rmkdsc = '" & tmphrt_rmkdsc.Trim & "' "

                If rs_SHRMKVAL.Tables("RESULT").DefaultView.Count > 0 Then
                    cboManAdr.Items.Add(tmphrt_rmkdsc + "-" + rs_SHRMKVAL.Tables("RESULT").DefaultView(0)("hrt_rmkval"))
                    'cboManAdr.SelectedIndex = 0
                End If
            Next



        End If
    End Sub

    '' Michaelchiu 20170322
    Private Sub loadDgShpbchup()
        rs_SHINVHDR_tmp = rs_SHINVHDR.Copy()
        rs_SHINVHDR_tmp.Tables("RESULT").DefaultView.RowFilter = "hiv_shpno = '" & txtShpNo.Text.Trim & "'"
        Dim Col As DataColumn = rs_SHINVHDR_tmp.Tables("RESULT").Columns.Add("hiv_status", GetType(String))
        Col.SetOrdinal(0)
        For i As Integer = 0 To rs_SHINVHDR_tmp.Tables("RESULT").Rows.Count - 1
            rs_SHINVHDR_tmp.Tables("RESULT").DefaultView(i)("hiv_status") = "Y"
        Next

        DgShpbchup.Enabled = True
        CmdShpchupok.Enabled = True
        CmdShpchupcancel.Enabled = True
        display_DgShpComponent()


    End Sub
    '' Michaelchiu 20170322
    Private Sub display_DgShpComponent()
        DgShpbchup.DataSource = rs_SHINVHDR_tmp.Tables("RESULT").DefaultView

        With DgShpbchup
            For i As Integer = 0 To .Columns.Count - 1
                Select Case i
                    Case 0
                        CmdBatUpdate_Batchupdate_apply = i
                        .Columns(i).HeaderText = "Apply"
                        .Columns(i).Width = 45
                    Case 3
                        CmdBatUpdate_Batchupdate_innvo = i
                        .Columns(i).HeaderText = "Invoice No."
                        .Columns(i).Width = 90

                    Case Else
                        .Columns(i).Visible = False
                End Select
            Next
        End With
    End Sub


    '' Michaelchiu 20170322
    Private Sub CmdBatUpdate_CellClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles DgShpbchup.CellClick
        If e.RowIndex >= 0 Then
            If e.ColumnIndex = CmdBatUpdate_Batchupdate_apply Then
                If DgShpbchup.CurrentRow.Cells("hiv_status").Value = "" Then
                    DgShpbchup.CurrentRow.Cells("hiv_status").Value = "Y"
                Else
                    DgShpbchup.CurrentRow.Cells("hiv_status").Value = ""
                End If
            End If
        End If
    End Sub
    '' Michaelchiu 20170322

    Private Sub CmdShpchupok_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CmdShpchupok.Click

        PanShpbchup.Enabled = False
        PanShpbchup.Visible = False
        ShippingMaskBatchUpdate()
    End Sub
    '' Michaelchiu 20170322
    Private Sub CmdShpchupcancel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CmdShpchupcancel.Click
        PanShpbchup.Enabled = False
        PanShpbchup.Visible = False
    End Sub

    '' Michaelchiu 20170322
    Private Sub ShippingMaskBatchUpdate()
        Dim RdExist As Boolean = False
        For i As Integer = 0 To rs_SHINVHDR_tmp.Tables("RESULT").Rows.Count - 1
            If rs_SHINVHDR_tmp.Tables("RESULT").DefaultView(i)("hiv_status") = "Y" Then
                RdExist = False
                For j As Integer = 0 To rs_SHSHPMRK.Tables("RESULT").Rows.Count - 1
                    If rs_SHINVHDR_tmp.Tables("RESULT").DefaultView(i)("hiv_invno") = rs_SHSHPMRK.Tables("RESULT").DefaultView(j)("hsm_invno") Then
                        RdExist = True
                        rs_SHSHPMRK.Tables("RESULT").Rows(j).Item("hsm_imgnam") = rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgnam")
                        rs_SHSHPMRK.Tables("RESULT").Rows(j).Item("hsm_imgpth") = rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth")
                        rs_SHSHPMRK.Tables("RESULT").Rows(j).Item("hsm_engdsc") = rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engdsc")
                        rs_SHSHPMRK.Tables("RESULT").Rows(j).Item("hsm_engrmk") = rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engrmk")
                        If (rs_SHSHPMRK.Tables("RESULT").Rows(j).Item("hsm_creusr") <> "~*ADD*~") Then
                            rs_SHSHPMRK.Tables("RESULT").Rows(j).Item("hsm_creusr") = "~*UPD*~"
                        End If

                    End If
                Next

                If RdExist = False Then
                    ' MsgBox("Adding new shipping mask", 0, "title")
                    Append_SHSHPMRK_Detail(rs_SHINVHDR_tmp.Tables("RESULT").DefaultView(i)("hiv_invno"), cboOrdNo.Text.Trim, rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgnam"), rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_imgpth"), rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engdsc"), rs_SHSHPMRK.Tables("RESULT").Rows(sReadingIndexI_S).Item("hsm_engrmk"))
                End If

            End If
        Next
        Recordstatus = True
    End Sub


    Private Sub CmdBatUpdate2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CmdBatUpdate2.Click
        '' Michaelchiu 20170323
        PanShpbchup2.Enabled = True

        PanShpbchup2.Width = 216
        PanShpbchup2.Height = 347
        PanShpbchup2.Location = New Point(430, 11)
        PanShpbchup2.BringToFront()
        loadDgShpbchup2()
        PanShpbchup2.Visible = True
    End Sub
    '' Michaelchiu 20170323
    Private Sub loadDgShpbchup2()
        rs_SHINVHDR_tmp2 = rs_SHINVHDR.Copy()
        rs_SHINVHDR_tmp2.Tables("RESULT").DefaultView.RowFilter = "hiv_shpno = '" & txtShpNo.Text.Trim & "'"
        Dim Col As DataColumn = rs_SHINVHDR_tmp2.Tables("RESULT").Columns.Add("hiv_status", GetType(String))
        Col.SetOrdinal(0)
        For i As Integer = 0 To rs_SHINVHDR_tmp2.Tables("RESULT").Rows.Count - 1
            rs_SHINVHDR_tmp2.Tables("RESULT").DefaultView(i)("hiv_status") = "Y"
        Next

        DgShpbchup2.Enabled = True
        CmdShpchupok2.Enabled = True
        CmdShpchupcancel2.Enabled = True
        display_DgShpComponent2()


    End Sub
    '' Michaelchiu 20170323
    Private Sub display_DgShpComponent2()
        DgShpbchup2.DataSource = rs_SHINVHDR_tmp2.Tables("RESULT").DefaultView

        With DgShpbchup2
            For i As Integer = 0 To .Columns.Count - 1
                Select Case i
                    Case 0
                        CmdBatUpdate_Batchupdate_apply2 = i
                        .Columns(i).HeaderText = "Apply"
                        .Columns(i).Width = 45
                    Case 3
                        CmdBatUpdate_Batchupdate_innvo2 = i
                        .Columns(i).HeaderText = "Invoice No."
                        .Columns(i).Width = 90

                    Case Else
                        .Columns(i).Visible = False
                End Select
            Next
        End With
    End Sub

    '' Michaelchiu 20170323
    Private Sub CmdBatUpdate2_CellClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles DgShpbchup2.CellClick
        If e.RowIndex >= 0 Then
            If e.ColumnIndex = CmdBatUpdate_Batchupdate_apply2 Then
                If DgShpbchup2.CurrentRow.Cells("hiv_status").Value = "" Then
                    DgShpbchup2.CurrentRow.Cells("hiv_status").Value = "Y"
                Else
                    DgShpbchup2.CurrentRow.Cells("hiv_status").Value = ""
                End If
            End If
        End If
    End Sub
    '' Michaelchiu 20170323

    Private Sub CmdShpchupok2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CmdShpchupok2.Click

        PanShpbchup2.Enabled = False
        PanShpbchup2.Visible = False
        ShippingMaskBatchUpdate2()
    End Sub
    '' Michaelchiu 20170323
    Private Sub CmdShpchupcancel2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CmdShpchupcancel2.Click
        PanShpbchup2.Enabled = False
        PanShpbchup2.Visible = False
    End Sub


    '' Michaelchiu 20170323
    Private Sub ShippingMaskBatchUpdate2()
        For i As Integer = 0 To rs_SHINVHDR_tmp2.Tables("RESULT").Rows.Count - 1
            If rs_SHINVHDR_tmp2.Tables("RESULT").DefaultView(i)("hiv_status") = "Y" Then

                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_prctrm") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_prctrm")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_paytrm") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_paytrm")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_doctyp") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doctyp")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_doc") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_doc")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_cover") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cover")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_ftrrmk") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ftrrmk")
                ' rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_untamt") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_untamt")
                ' rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_ttlamt") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlamt")
                ' rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_ttlvol") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlvol")
                ' rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_ttlctn") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_ttlctn")

                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_bank") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_bank")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_aformat") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_aformat")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_invamt") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invamt")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_afamt") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_afamt")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_invsts") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_invsts")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_lcstmt") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcstmt")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_cargorcvdat") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_cargorcvdat")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_plrmk") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_plrmk")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_exptnam") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptnam")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_exptaddr") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_exptaddr")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_lcno") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcno")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_lcbank") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcbank")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_lcdat") = rs_SHINVHDR.Tables("RESULT").Rows(sReadingIndexI_I).Item("hiv_lcdat")
                rs_SHINVHDR.Tables("RESULT").Rows(i).Item("hiv_creusr") = "~*UPD*~"

            End If
        Next
        Recordstatus = True
    End Sub
    Private Sub mmdDelRow_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdDelRow.Click
        If checkFocus(Me) Then Exit Sub
        Dim newseq As Integer

        If btcSHM00001.SelectedIndex = 1 Then

            If rs_SHIPGDTL Is Nothing Then
                Exit Sub
            End If

            If rs_SHIPGDTL.Tables("RESULT") Is Nothing Then
                Exit Sub
            End If

            If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 0 Then
                Exit Sub
            End If

            If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 0 Then
                MsgBox("This Shipment has no detail record!")
                Exit Sub
            End If


            'If rs_SHIPGDTL.Tables("RESULT").Rows.Count = 1 Then
            '    MsgBox("This Shipment  just has one detail line record only, cannot delete.")
            '    Exit Sub
            'End If

            If btcSHM00001.SelectedIndex <> 1 Then
                MsgBox("Please delete row in detail/summary page!")
                Exit Sub
            End If

            If rs_SHIPGDTL.Tables("RESULT").Rows.Count > sReadingIndexS Then
                If chkDel.Checked = False Then
                    chkDel.Checked = True
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = "Y"
                    '                Call Delete_itm_from_dtl(sReadingIndexS)
                Else
                    chkDel.Checked = False
                    rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("Del") = "N"
                    '               Call UNDelete_itm_from_dtl(sReadingIndexS)
                End If
            End If
            Recordstatus = True
            '''Call DeleteClickCheck()
            newseq = rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS).Item("hid_shpseq")
            Call display_Detail(newseq)

        ElseIf btcSHM00001.SelectedIndex = 2 Then
            If Grid_Got_Focus = "dg_sainvhdr" Then
                If gi_dg_sainvhdr_row = -1 Then
                    Exit Sub
                End If
                rs_SHSMPINV.Tables("RESULT").Rows(gi_dg_sainvhdr_row)("hsi_creusr") = "~*UPD*~"
                If rs_SHSMPINV.Tables("RESULT").Rows(gi_dg_sainvhdr_row)("DEL") <> "Y" Then
                    rs_SHSMPINV.Tables("RESULT").Rows(gi_dg_sainvhdr_row)("DEL") = "Y"
                Else
                    rs_SHSMPINV.Tables("RESULT").Rows(gi_dg_sainvhdr_row)("DEL") = "N"
                End If

                display_SHSMPINV()

            End If
        ElseIf btcSHM00001.SelectedIndex = 3 Then

            If cboInvNoP.Items.Count > 0 Then
                If gi_grdDiscount_row = -1 Then
                    Exit Sub
                End If
                If Grid_Got_Focus = "grdDiscount" Then
                    rs_SHDISPRM_D.Tables("RESULT").Rows(gi_grdDiscount_row)("hdp_creusr") = "~*UPD*~"
                    If rs_SHDISPRM_D.Tables("RESULT").Rows(gi_grdDiscount_row)("DEL") <> "Y" Then
                        rs_SHDISPRM_D.Tables("RESULT").Rows(gi_grdDiscount_row)("DEL") = "Y"
                    Else
                        rs_SHDISPRM_D.Tables("RESULT").Rows(gi_grdDiscount_row)("DEL") = ""
                    End If
                    display_grdDiscount()

                ElseIf Grid_Got_Focus = "grdPremium" Then
                    If gi_grdPremium_row = -1 Then
                        Exit Sub
                    End If
                    'temp
                    rs_SHDISPRM_P.Tables("RESULT").Rows(gi_grdPremium_row)("hdp_creusr") = "~*UPD*~"
                    If rs_SHDISPRM_P.Tables("RESULT").Rows(gi_grdPremium_row)("DEL") <> "Y" Then
                        rs_SHDISPRM_P.Tables("RESULT").Rows(gi_grdPremium_row)("DEL") = "Y"
                    Else
                        rs_SHDISPRM_P.Tables("RESULT").Rows(gi_grdPremium_row)("DEL") = ""
                    End If
                    display_grdPremium()

                End If
            End If

            '''''
        ElseIf btcSHM00001.SelectedIndex = 5 Then
            rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("hid_creusr") = "~*UPD*~"
            If rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("DEL") <> "Y" Then
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("DEL") = "Y"
            Else
                rs_SHIPGDTL.Tables("RESULT").Rows(sReadingIndexS)("DEL") = "N"
            End If

            display_grdShpSum()


        End If


        '''


    End Sub

    Private Sub mmdExit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdExit.Click
        If checkFocus(Me) Then Exit Sub

        Dim YesNoCancel As Integer

        Dim status As String

        If cboShpSts.Text = "" Then
            status = ""
        Else
            status = Split(cboShpSts.Text, " - ")(0)
        End If
        '20150205 MC
        'If Recordstatus = True Then
        If Recordstatus = True And Enq_right_local = True And status = "OPE" Then
            If Add_flag = True Or Insert_flag = True Then
                YesNoCancel = MsgBox("Record is newly created.  Do you want to save before clear the screen?", MsgBoxStyle.YesNoCancel)
            Else
                YesNoCancel = MsgBox("Record has been modified.  Do you want to save before clear the screen?", MsgBoxStyle.YesNoCancel)
            End If

            If YesNoCancel = vbYes Then
                If mmdSave.Enabled Then
                    Call cmdSaveClick()
                Else
                    MsgBox("You are not allow to save record!", MsgBoxStyle.Exclamation)
                    Exit Sub
                End If
                ' Me.Close()


                '20131115 avoid ini for all cases    
                'sMode = cModeInit
                'temp
                'Call formInit(cModeInit)

            ElseIf YesNoCancel = vbNo Then
                Call setStatus(cModeClear)
                Me.Close()

                sMode = cModeClear
            ElseIf YesNoCancel = vbCancel Then
                Exit Sub
            End If
        Else
            Call setStatus(cModeClear)
            sMode = cModeClear
            If txtShpNo.Enabled And txtShpNo.Visible Then
                txtShpNo.Focus()
            End If
        End If



    End Sub

    Private Sub mmdSearch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdSearch.Click
        'If checkFocus(Me) Then Exit Sub
        Dim frmSYM00018 As New SYM00018


        '20130909  
        gsCompany = Trim(cboCoCde.Text)
        Call Update_gs_Value(gsCompany)


        frmSYM00018.keyName = txtShpNo.Name
        frmSYM00018.strModule = "SH"

        frmSYM00018.show_frmSYM00018(Me)




    End Sub

    Private Sub PrintInvoiceToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PrintInvoiceToolStripMenuItem.Click

        FrmINR00001 = New INR00001
        FrmINR00001.companycode = cboCoCde.Text
        FrmINR00001.cboCoCde.Enabled = False
        FrmINR00001.txtFromQuotNo.Text = cboInvNoM.SelectedItem.ToString
        FrmINR00001.txtToQuotNo.Text = cboInvNoM.SelectedItem.ToString
        FrmINR00001.txtFromQuotNo.Enabled = False
        FrmINR00001.txtToQuotNo.Enabled = False

        FrmINR00001.ShowDialog()
    End Sub

    Private Sub PrintPackingListToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PrintPackingListToolStripMenuItem.Click

        FrmPKR00001 = New PKR00001
        FrmPKR00001.companycode = cboCoCde.Text
        FrmPKR00001.cboCoCde.Enabled = False
        FrmPKR00001.txtFromQuotNo.Text = cboInvNoM.SelectedItem.ToString
        FrmPKR00001.txtToQuotNo.Text = cboInvNoM.SelectedItem.ToString
        FrmPKR00001.txtFromQuotNo.Enabled = False
        FrmPKR00001.txtToQuotNo.Enabled = False

        FrmPKR00001.ShowDialog()
    End Sub


    Private Sub mmdPrint_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdPrint.Click
        If checkFocus(Me) Then Exit Sub
    End Sub

    Private Sub mmdFunction_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdFunction.Click
        If checkFocus(Me) Then Exit Sub
    End Sub

    Private Sub mmdDelete_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdDelete.Click
        If checkFocus(Me) Then Exit Sub
    End Sub

    Private Sub mmdCopy_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdCopy.Click
        If checkFocus(Me) Then Exit Sub
    End Sub

    Private Sub mmdAttach_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdAttach.Click
        If checkFocus(Me) Then Exit Sub
    End Sub

    Private Sub mmdLink_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mmdLink.Click
        If checkFocus(Me) Then Exit Sub
    End Sub
End Class









































