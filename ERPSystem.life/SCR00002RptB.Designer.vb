'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3655
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet9"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet9
    Inherits Global.System.Data.DataSet
    
    Private tableSCR00002RptB As SCR00002RptBDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SCR00002RptB")) Is Nothing) Then
                MyBase.Tables.Add(New SCR00002RptBDataTable(ds.Tables("SCR00002RptB")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SCR00002RptB() As SCR00002RptBDataTable
        Get
            Return Me.tableSCR00002RptB
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet9 = CType(MyBase.Clone,DataSet9)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("SCR00002RptB")) Is Nothing) Then
                MyBase.Tables.Add(New SCR00002RptBDataTable(ds.Tables("SCR00002RptB")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSCR00002RptB = CType(MyBase.Tables("SCR00002RptB"),SCR00002RptBDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSCR00002RptB) Is Nothing) Then
                Me.tableSCR00002RptB.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet9"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet9.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSCR00002RptB = New SCR00002RptBDataTable
        MyBase.Tables.Add(Me.tableSCR00002RptB)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSCR00002RptB() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet9 = New DataSet9
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub SCR00002RptBRowChangeEventHandler(ByVal sender As Object, ByVal e As SCR00002RptBRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SCR00002RptBDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncocde As Global.System.Data.DataColumn
        
        Private columnCustFrom As Global.System.Data.DataColumn
        
        Private columnCustTo As Global.System.Data.DataColumn
        
        Private columnVenFm As Global.System.Data.DataColumn
        
        Private columnVenTo As Global.System.Data.DataColumn
        
        Private columnSCFm As Global.System.Data.DataColumn
        
        Private columnSCTo As Global.System.Data.DataColumn
        
        Private columnSTFm As Global.System.Data.DataColumn
        
        Private columnsTTo As Global.System.Data.DataColumn
        
        Private columnVentyp As Global.System.Data.DataColumn
        
        Private columnDateFrom As Global.System.Data.DataColumn
        
        Private columnDateTo As Global.System.Data.DataColumn
        
        Private columncbi_cusno As Global.System.Data.DataColumn
        
        Private columncbi_cussna As Global.System.Data.DataColumn
        
        Private columnSod_total As Global.System.Data.DataColumn
        
        Private columnSod_FDXM1 As Global.System.Data.DataColumn
        
        Private columnSod_FDXM2 As Global.System.Data.DataColumn
        
        Private columnSod_FDGP As Global.System.Data.DataColumn
        
        Private columnSod_HDAB1 As Global.System.Data.DataColumn
        
        Private columnSod_HDAB2 As Global.System.Data.DataColumn
        
        Private columnSod_HDAB3 As Global.System.Data.DataColumn
        
        Private columnSod_HDSC1 As Global.System.Data.DataColumn
        
        Private columnSod_HDIF1 As Global.System.Data.DataColumn
        
        Private columnSod_OTOT As Global.System.Data.DataColumn
        
        Private columncompName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SCR00002RptB"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cocdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncocde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CustFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CustToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VenFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVenFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VenToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVenTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sTToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsTTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VentypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVentyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cbi_cusnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncbi_cusno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cbi_cussnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncbi_cussna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_FDXM1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_FDXM1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_FDXM2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_FDXM2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_FDGPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_FDGP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_HDAB1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_HDAB1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_HDAB2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_HDAB2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_HDAB3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_HDAB3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_HDSC1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_HDSC1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_HDIF1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_HDIF1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sod_OTOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSod_OTOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property compNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SCR00002RptBRow
            Get
                Return CType(Me.Rows(index),SCR00002RptBRow)
            End Get
        End Property
        
        Public Event SCR00002RptBRowChanging As SCR00002RptBRowChangeEventHandler
        
        Public Event SCR00002RptBRowChanged As SCR00002RptBRowChangeEventHandler
        
        Public Event SCR00002RptBRowDeleting As SCR00002RptBRowChangeEventHandler
        
        Public Event SCR00002RptBRowDeleted As SCR00002RptBRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSCR00002RptBRow(ByVal row As SCR00002RptBRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSCR00002RptBRow( _
                    ByVal cocde As String,  _
                    ByVal CustFrom As String,  _
                    ByVal CustTo As String,  _
                    ByVal VenFm As String,  _
                    ByVal VenTo As String,  _
                    ByVal SCFm As String,  _
                    ByVal SCTo As String,  _
                    ByVal STFm As String,  _
                    ByVal sTTo As String,  _
                    ByVal Ventyp As String,  _
                    ByVal DateFrom As String,  _
                    ByVal DateTo As String,  _
                    ByVal cbi_cusno As String,  _
                    ByVal cbi_cussna As String,  _
                    ByVal Sod_total As Double,  _
                    ByVal Sod_FDXM1 As Double,  _
                    ByVal Sod_FDXM2 As Double,  _
                    ByVal Sod_FDGP As Double,  _
                    ByVal Sod_HDAB1 As Double,  _
                    ByVal Sod_HDAB2 As Double,  _
                    ByVal Sod_HDAB3 As Double,  _
                    ByVal Sod_HDSC1 As Double,  _
                    ByVal Sod_HDIF1 As Double,  _
                    ByVal Sod_OTOT As Double,  _
                    ByVal compName As String) As SCR00002RptBRow
            Dim rowSCR00002RptBRow As SCR00002RptBRow = CType(Me.NewRow,SCR00002RptBRow)
            Dim columnValuesArray() As Object = New Object() {cocde, CustFrom, CustTo, VenFm, VenTo, SCFm, SCTo, STFm, sTTo, Ventyp, DateFrom, DateTo, cbi_cusno, cbi_cussna, Sod_total, Sod_FDXM1, Sod_FDXM2, Sod_FDGP, Sod_HDAB1, Sod_HDAB2, Sod_HDAB3, Sod_HDSC1, Sod_HDIF1, Sod_OTOT, compName}
            rowSCR00002RptBRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSCR00002RptBRow)
            Return rowSCR00002RptBRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SCR00002RptBDataTable = CType(MyBase.Clone,SCR00002RptBDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SCR00002RptBDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncocde = MyBase.Columns("cocde")
            Me.columnCustFrom = MyBase.Columns("CustFrom")
            Me.columnCustTo = MyBase.Columns("CustTo")
            Me.columnVenFm = MyBase.Columns("VenFm")
            Me.columnVenTo = MyBase.Columns("VenTo")
            Me.columnSCFm = MyBase.Columns("SCFm")
            Me.columnSCTo = MyBase.Columns("SCTo")
            Me.columnSTFm = MyBase.Columns("STFm")
            Me.columnsTTo = MyBase.Columns("sTTo")
            Me.columnVentyp = MyBase.Columns("Ventyp")
            Me.columnDateFrom = MyBase.Columns("DateFrom")
            Me.columnDateTo = MyBase.Columns("DateTo")
            Me.columncbi_cusno = MyBase.Columns("cbi_cusno")
            Me.columncbi_cussna = MyBase.Columns("cbi_cussna")
            Me.columnSod_total = MyBase.Columns("Sod_total")
            Me.columnSod_FDXM1 = MyBase.Columns("Sod_FDXM1")
            Me.columnSod_FDXM2 = MyBase.Columns("Sod_FDXM2")
            Me.columnSod_FDGP = MyBase.Columns("Sod_FDGP")
            Me.columnSod_HDAB1 = MyBase.Columns("Sod_HDAB1")
            Me.columnSod_HDAB2 = MyBase.Columns("Sod_HDAB2")
            Me.columnSod_HDAB3 = MyBase.Columns("Sod_HDAB3")
            Me.columnSod_HDSC1 = MyBase.Columns("Sod_HDSC1")
            Me.columnSod_HDIF1 = MyBase.Columns("Sod_HDIF1")
            Me.columnSod_OTOT = MyBase.Columns("Sod_OTOT")
            Me.columncompName = MyBase.Columns("compName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncocde = New Global.System.Data.DataColumn("cocde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncocde)
            Me.columnCustFrom = New Global.System.Data.DataColumn("CustFrom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustFrom)
            Me.columnCustTo = New Global.System.Data.DataColumn("CustTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustTo)
            Me.columnVenFm = New Global.System.Data.DataColumn("VenFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVenFm)
            Me.columnVenTo = New Global.System.Data.DataColumn("VenTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVenTo)
            Me.columnSCFm = New Global.System.Data.DataColumn("SCFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCFm)
            Me.columnSCTo = New Global.System.Data.DataColumn("SCTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCTo)
            Me.columnSTFm = New Global.System.Data.DataColumn("STFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTFm)
            Me.columnsTTo = New Global.System.Data.DataColumn("sTTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsTTo)
            Me.columnVentyp = New Global.System.Data.DataColumn("Ventyp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVentyp)
            Me.columnDateFrom = New Global.System.Data.DataColumn("DateFrom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateFrom)
            Me.columnDateTo = New Global.System.Data.DataColumn("DateTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateTo)
            Me.columncbi_cusno = New Global.System.Data.DataColumn("cbi_cusno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncbi_cusno)
            Me.columncbi_cussna = New Global.System.Data.DataColumn("cbi_cussna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncbi_cussna)
            Me.columnSod_total = New Global.System.Data.DataColumn("Sod_total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_total)
            Me.columnSod_FDXM1 = New Global.System.Data.DataColumn("Sod_FDXM1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_FDXM1)
            Me.columnSod_FDXM2 = New Global.System.Data.DataColumn("Sod_FDXM2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_FDXM2)
            Me.columnSod_FDGP = New Global.System.Data.DataColumn("Sod_FDGP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_FDGP)
            Me.columnSod_HDAB1 = New Global.System.Data.DataColumn("Sod_HDAB1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_HDAB1)
            Me.columnSod_HDAB2 = New Global.System.Data.DataColumn("Sod_HDAB2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_HDAB2)
            Me.columnSod_HDAB3 = New Global.System.Data.DataColumn("Sod_HDAB3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_HDAB3)
            Me.columnSod_HDSC1 = New Global.System.Data.DataColumn("Sod_HDSC1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_HDSC1)
            Me.columnSod_HDIF1 = New Global.System.Data.DataColumn("Sod_HDIF1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_HDIF1)
            Me.columnSod_OTOT = New Global.System.Data.DataColumn("Sod_OTOT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSod_OTOT)
            Me.columncompName = New Global.System.Data.DataColumn("compName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompName)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSCR00002RptBRow() As SCR00002RptBRow
            Return CType(Me.NewRow,SCR00002RptBRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SCR00002RptBRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SCR00002RptBRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SCR00002RptBRowChangedEvent) Is Nothing) Then
                RaiseEvent SCR00002RptBRowChanged(Me, New SCR00002RptBRowChangeEvent(CType(e.Row,SCR00002RptBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SCR00002RptBRowChangingEvent) Is Nothing) Then
                RaiseEvent SCR00002RptBRowChanging(Me, New SCR00002RptBRowChangeEvent(CType(e.Row,SCR00002RptBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SCR00002RptBRowDeletedEvent) Is Nothing) Then
                RaiseEvent SCR00002RptBRowDeleted(Me, New SCR00002RptBRowChangeEvent(CType(e.Row,SCR00002RptBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SCR00002RptBRowDeletingEvent) Is Nothing) Then
                RaiseEvent SCR00002RptBRowDeleting(Me, New SCR00002RptBRowChangeEvent(CType(e.Row,SCR00002RptBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSCR00002RptBRow(ByVal row As SCR00002RptBRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSet9 = New DataSet9
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SCR00002RptBDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SCR00002RptBRow
        Inherits Global.System.Data.DataRow
        
        Private tableSCR00002RptB As SCR00002RptBDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSCR00002RptB = CType(Me.Table,SCR00002RptBDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cocde() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.cocdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cocde' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.cocdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CustFrom() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.CustFromColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustFrom' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.CustFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CustTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.CustToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustTo' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.CustToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VenFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.VenFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VenFm' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.VenFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VenTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.VenToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VenTo' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.VenToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.SCFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCFm' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.SCFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.SCToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCTo' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.SCToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property STFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.STFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STFm' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.STFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sTTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.sTToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sTTo' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.sTToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ventyp() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.VentypColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ventyp' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.VentypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateFrom() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.DateFromColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateFrom' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.DateFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.DateToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateTo' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.DateToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cbi_cusno() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.cbi_cusnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cbi_cusno' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.cbi_cusnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cbi_cussna() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.cbi_cussnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cbi_cussna' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.cbi_cussnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_total() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_totalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_total' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_FDXM1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_FDXM1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_FDXM1' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_FDXM1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_FDXM2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_FDXM2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_FDXM2' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_FDXM2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_FDGP() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_FDGPColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_FDGP' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_FDGPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_HDAB1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_HDAB1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_HDAB1' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_HDAB1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_HDAB2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_HDAB2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_HDAB2' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_HDAB2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_HDAB3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_HDAB3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_HDAB3' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_HDAB3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_HDSC1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_HDSC1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_HDSC1' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_HDSC1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_HDIF1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_HDIF1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_HDIF1' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_HDIF1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sod_OTOT() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.Sod_OTOTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sod_OTOT' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.Sod_OTOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property compName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCR00002RptB.compNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compName' in table 'SCR00002RptB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCR00002RptB.compNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscocdeNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.cocdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcocdeNull()
            Me(Me.tableSCR00002RptB.cocdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustFromNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.CustFromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustFromNull()
            Me(Me.tableSCR00002RptB.CustFromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustToNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.CustToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustToNull()
            Me(Me.tableSCR00002RptB.CustToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVenFmNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.VenFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVenFmNull()
            Me(Me.tableSCR00002RptB.VenFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVenToNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.VenToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVenToNull()
            Me(Me.tableSCR00002RptB.VenToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCFmNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.SCFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCFmNull()
            Me(Me.tableSCR00002RptB.SCFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCToNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.SCToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCToNull()
            Me(Me.tableSCR00002RptB.SCToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTFmNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.STFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTFmNull()
            Me(Me.tableSCR00002RptB.STFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssTToNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.sTToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsTToNull()
            Me(Me.tableSCR00002RptB.sTToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVentypNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.VentypColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVentypNull()
            Me(Me.tableSCR00002RptB.VentypColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateFromNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.DateFromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateFromNull()
            Me(Me.tableSCR00002RptB.DateFromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateToNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.DateToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateToNull()
            Me(Me.tableSCR00002RptB.DateToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscbi_cusnoNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.cbi_cusnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcbi_cusnoNull()
            Me(Me.tableSCR00002RptB.cbi_cusnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscbi_cussnaNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.cbi_cussnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcbi_cussnaNull()
            Me(Me.tableSCR00002RptB.cbi_cussnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_totalNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_totalNull()
            Me(Me.tableSCR00002RptB.Sod_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_FDXM1Null() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_FDXM1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_FDXM1Null()
            Me(Me.tableSCR00002RptB.Sod_FDXM1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_FDXM2Null() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_FDXM2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_FDXM2Null()
            Me(Me.tableSCR00002RptB.Sod_FDXM2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_FDGPNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_FDGPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_FDGPNull()
            Me(Me.tableSCR00002RptB.Sod_FDGPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_HDAB1Null() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_HDAB1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_HDAB1Null()
            Me(Me.tableSCR00002RptB.Sod_HDAB1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_HDAB2Null() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_HDAB2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_HDAB2Null()
            Me(Me.tableSCR00002RptB.Sod_HDAB2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_HDAB3Null() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_HDAB3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_HDAB3Null()
            Me(Me.tableSCR00002RptB.Sod_HDAB3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_HDSC1Null() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_HDSC1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_HDSC1Null()
            Me(Me.tableSCR00002RptB.Sod_HDSC1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_HDIF1Null() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_HDIF1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_HDIF1Null()
            Me(Me.tableSCR00002RptB.Sod_HDIF1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSod_OTOTNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.Sod_OTOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSod_OTOTNull()
            Me(Me.tableSCR00002RptB.Sod_OTOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscompNameNull() As Boolean
            Return Me.IsNull(Me.tableSCR00002RptB.compNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcompNameNull()
            Me(Me.tableSCR00002RptB.compNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SCR00002RptBRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SCR00002RptBRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SCR00002RptBRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SCR00002RptBRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
