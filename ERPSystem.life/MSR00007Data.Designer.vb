'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3655
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet10"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet10
    Inherits Global.System.Data.DataSet
    
    Private tableDataTable1 As DataTable1DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DataTable1")) Is Nothing) Then
                MyBase.Tables.Add(New DataTable1DataTable(ds.Tables("DataTable1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DataTable1() As DataTable1DataTable
        Get
            Return Me.tableDataTable1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet10 = CType(MyBase.Clone,DataSet10)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("DataTable1")) Is Nothing) Then
                MyBase.Tables.Add(New DataTable1DataTable(ds.Tables("DataTable1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDataTable1 = CType(MyBase.Tables("DataTable1"),DataTable1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableDataTable1) Is Nothing) Then
                Me.tableDataTable1.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet10"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet10.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDataTable1 = New DataTable1DataTable
        MyBase.Tables.Add(Me.tableDataTable1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDataTable1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet10 = New DataSet10
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub DataTable1RowChangeEventHandler(ByVal sender As Object, ByVal e As DataTable1RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DataTable1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncid_cocde As Global.System.Data.DataColumn
        
        Private columncid_cusno As Global.System.Data.DataColumn
        
        Private columncid_seccus As Global.System.Data.DataColumn
        
        Private columnIC As Global.System.Data.DataColumn
        
        Private columncid_itmno As Global.System.Data.DataColumn
        
        Private columncid_cusitm As Global.System.Data.DataColumn
        
        Private columncid_cussku As Global.System.Data.DataColumn
        
        Private columncid_itmdsc As Global.System.Data.DataColumn
        
        Private columncid_packing As Global.System.Data.DataColumn
        
        Private columnysi_dsc As Global.System.Data.DataColumn
        
        Private columncid_inrqty As Global.System.Data.DataColumn
        
        Private columncid_mtrqty As Global.System.Data.DataColumn
        
        Private columncid_cft As Global.System.Data.DataColumn
        
        Private columncid_colcde As Global.System.Data.DataColumn
        
        Private columncid_coldsc As Global.System.Data.DataColumn
        
        Private columncid_sumqty As Global.System.Data.DataColumn
        
        Private columncid_curcde As Global.System.Data.DataColumn
        
        Private columncid_selprc As Global.System.Data.DataColumn
        
        Private columncid_cususd As Global.System.Data.DataColumn
        
        Private columncid_cuscad As Global.System.Data.DataColumn
        
        Private columncid_ordqty As Global.System.Data.DataColumn
        
        Private columnsod_subcde As Global.System.Data.DataColumn
        
        Private columnsod_venno As Global.System.Data.DataColumn
        
        Private columnsod_venitm As Global.System.Data.DataColumn
        
        Private columncid_fcurcde As Global.System.Data.DataColumn
        
        Private columncid_ftyprc As Global.System.Data.DataColumn
        
        Private columncid_docdat As Global.System.Data.DataColumn
        
        Private columncbi_cussna As Global.System.Data.DataColumn
        
        Private columnSecCustNo As Global.System.Data.DataColumn
        
        Private columnSecCustShort As Global.System.Data.DataColumn
        
        Private columnvbi_vensna As Global.System.Data.DataColumn
        
        Private _column_fi As Global.System.Data.DataColumn
        
        Private _column_pcFm As Global.System.Data.DataColumn
        
        Private _column_pcTo As Global.System.Data.DataColumn
        
        Private _column_psFm As Global.System.Data.DataColumn
        
        Private _column_psTo As Global.System.Data.DataColumn
        
        Private _column_plFm As Global.System.Data.DataColumn
        
        Private _column_plTo As Global.System.Data.DataColumn
        
        Private _column_itmFm As Global.System.Data.DataColumn
        
        Private _column_itmTo As Global.System.Data.DataColumn
        
        Private _column_custItmFm As Global.System.Data.DataColumn
        
        Private _column_custItmTo As Global.System.Data.DataColumn
        
        Private _column_vnFm As Global.System.Data.DataColumn
        
        Private _column_vnTo As Global.System.Data.DataColumn
        
        Private _column_idFm As Global.System.Data.DataColumn
        
        Private _column_idTo As Global.System.Data.DataColumn
        
        Private _column_qs As Global.System.Data.DataColumn
        
        Private columncid_onetim As Global.System.Data.DataColumn
        
        Private columnsoh_ordno As Global.System.Data.DataColumn
        
        Private columncompName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DataTable1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_cocdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_cocde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_cusnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_cusno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_seccusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_seccus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_itmnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_itmno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_cusitmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_cusitm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_cusskuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_cussku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_itmdscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_itmdsc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_packingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_packing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ysi_dscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnysi_dsc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_inrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_inrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_mtrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_mtrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_cftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_cft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_colcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_colcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_coldscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_coldsc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_sumqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_sumqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_curcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_curcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_selprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_selprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_cususdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_cususd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_cuscadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_cuscad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_ordqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_ordqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sod_subcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsod_subcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sod_vennoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsod_venno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sod_venitmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsod_venitm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_fcurcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_fcurcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_ftyprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_ftyprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_docdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_docdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cbi_cussnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncbi_cussna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SecCustNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecCustNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SecCustShortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecCustShort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vbi_vensnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvbi_vensna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __fiColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_fi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __pcFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_pcFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __pcToColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_pcTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __psFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_psFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __psToColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_psTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __plFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_plFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __plToColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_plTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __itmFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_itmFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __itmToColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_itmTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __custItmFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_custItmFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __custItmToColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_custItmTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __vnFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_vnFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __vnToColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_vnTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __idFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_idFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __idToColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_idTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __qsColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_qs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cid_onetimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncid_onetim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property soh_ordnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsoh_ordno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property compNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DataTable1Row
            Get
                Return CType(Me.Rows(index),DataTable1Row)
            End Get
        End Property
        
        Public Event DataTable1RowChanging As DataTable1RowChangeEventHandler
        
        Public Event DataTable1RowChanged As DataTable1RowChangeEventHandler
        
        Public Event DataTable1RowDeleting As DataTable1RowChangeEventHandler
        
        Public Event DataTable1RowDeleted As DataTable1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDataTable1Row(ByVal row As DataTable1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDataTable1Row( _
                    ByVal cid_cocde As String,  _
                    ByVal cid_cusno As String,  _
                    ByVal cid_seccus As String,  _
                    ByVal IC As String,  _
                    ByVal cid_itmno As String,  _
                    ByVal cid_cusitm As String,  _
                    ByVal cid_cussku As String,  _
                    ByVal cid_itmdsc As String,  _
                    ByVal cid_packing As String,  _
                    ByVal ysi_dsc As String,  _
                    ByVal cid_inrqty As Double,  _
                    ByVal cid_mtrqty As Double,  _
                    ByVal cid_cft As Double,  _
                    ByVal cid_colcde As String,  _
                    ByVal cid_coldsc As String,  _
                    ByVal cid_sumqty As Double,  _
                    ByVal cid_curcde As String,  _
                    ByVal cid_selprc As Double,  _
                    ByVal cid_cususd As String,  _
                    ByVal cid_cuscad As String,  _
                    ByVal cid_ordqty As Double,  _
                    ByVal sod_subcde As String,  _
                    ByVal sod_venno As String,  _
                    ByVal sod_venitm As String,  _
                    ByVal cid_fcurcde As String,  _
                    ByVal cid_ftyprc As Double,  _
                    ByVal cid_docdat As String,  _
                    ByVal cbi_cussna As String,  _
                    ByVal SecCustNo As String,  _
                    ByVal SecCustShort As String,  _
                    ByVal vbi_vensna As String,  _
                    ByVal __fi As String,  _
                    ByVal __pcFm As String,  _
                    ByVal __pcTo As String,  _
                    ByVal __psFm As String,  _
                    ByVal __psTo As String,  _
                    ByVal __plFm As String,  _
                    ByVal __plTo As String,  _
                    ByVal __itmFm As String,  _
                    ByVal __itmTo As String,  _
                    ByVal __custItmFm As String,  _
                    ByVal __custItmTo As String,  _
                    ByVal __vnFm As String,  _
                    ByVal __vnTo As String,  _
                    ByVal __idFm As String,  _
                    ByVal __idTo As String,  _
                    ByVal __qs As String,  _
                    ByVal cid_onetim As String,  _
                    ByVal soh_ordno As String,  _
                    ByVal compName As String) As DataTable1Row
            Dim rowDataTable1Row As DataTable1Row = CType(Me.NewRow,DataTable1Row)
            Dim columnValuesArray() As Object = New Object() {cid_cocde, cid_cusno, cid_seccus, IC, cid_itmno, cid_cusitm, cid_cussku, cid_itmdsc, cid_packing, ysi_dsc, cid_inrqty, cid_mtrqty, cid_cft, cid_colcde, cid_coldsc, cid_sumqty, cid_curcde, cid_selprc, cid_cususd, cid_cuscad, cid_ordqty, sod_subcde, sod_venno, sod_venitm, cid_fcurcde, cid_ftyprc, cid_docdat, cbi_cussna, SecCustNo, SecCustShort, vbi_vensna, __fi, __pcFm, __pcTo, __psFm, __psTo, __plFm, __plTo, __itmFm, __itmTo, __custItmFm, __custItmTo, __vnFm, __vnTo, __idFm, __idTo, __qs, cid_onetim, soh_ordno, compName}
            rowDataTable1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowDataTable1Row)
            Return rowDataTable1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DataTable1DataTable = CType(MyBase.Clone,DataTable1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DataTable1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncid_cocde = MyBase.Columns("cid_cocde")
            Me.columncid_cusno = MyBase.Columns("cid_cusno")
            Me.columncid_seccus = MyBase.Columns("cid_seccus")
            Me.columnIC = MyBase.Columns("IC")
            Me.columncid_itmno = MyBase.Columns("cid_itmno")
            Me.columncid_cusitm = MyBase.Columns("cid_cusitm")
            Me.columncid_cussku = MyBase.Columns("cid_cussku")
            Me.columncid_itmdsc = MyBase.Columns("cid_itmdsc")
            Me.columncid_packing = MyBase.Columns("cid_packing")
            Me.columnysi_dsc = MyBase.Columns("ysi_dsc")
            Me.columncid_inrqty = MyBase.Columns("cid_inrqty")
            Me.columncid_mtrqty = MyBase.Columns("cid_mtrqty")
            Me.columncid_cft = MyBase.Columns("cid_cft")
            Me.columncid_colcde = MyBase.Columns("cid_colcde")
            Me.columncid_coldsc = MyBase.Columns("cid_coldsc")
            Me.columncid_sumqty = MyBase.Columns("cid_sumqty")
            Me.columncid_curcde = MyBase.Columns("cid_curcde")
            Me.columncid_selprc = MyBase.Columns("cid_selprc")
            Me.columncid_cususd = MyBase.Columns("cid_cususd")
            Me.columncid_cuscad = MyBase.Columns("cid_cuscad")
            Me.columncid_ordqty = MyBase.Columns("cid_ordqty")
            Me.columnsod_subcde = MyBase.Columns("sod_subcde")
            Me.columnsod_venno = MyBase.Columns("sod_venno")
            Me.columnsod_venitm = MyBase.Columns("sod_venitm")
            Me.columncid_fcurcde = MyBase.Columns("cid_fcurcde")
            Me.columncid_ftyprc = MyBase.Columns("cid_ftyprc")
            Me.columncid_docdat = MyBase.Columns("cid_docdat")
            Me.columncbi_cussna = MyBase.Columns("cbi_cussna")
            Me.columnSecCustNo = MyBase.Columns("SecCustNo")
            Me.columnSecCustShort = MyBase.Columns("SecCustShort")
            Me.columnvbi_vensna = MyBase.Columns("vbi_vensna")
            Me._column_fi = MyBase.Columns("@fi")
            Me._column_pcFm = MyBase.Columns("@pcFm")
            Me._column_pcTo = MyBase.Columns("@pcTo")
            Me._column_psFm = MyBase.Columns("@psFm")
            Me._column_psTo = MyBase.Columns("@psTo")
            Me._column_plFm = MyBase.Columns("@plFm")
            Me._column_plTo = MyBase.Columns("@plTo")
            Me._column_itmFm = MyBase.Columns("@itmFm")
            Me._column_itmTo = MyBase.Columns("@itmTo")
            Me._column_custItmFm = MyBase.Columns("@custItmFm")
            Me._column_custItmTo = MyBase.Columns("@custItmTo")
            Me._column_vnFm = MyBase.Columns("@vnFm")
            Me._column_vnTo = MyBase.Columns("@vnTo")
            Me._column_idFm = MyBase.Columns("@idFm")
            Me._column_idTo = MyBase.Columns("@idTo")
            Me._column_qs = MyBase.Columns("@qs")
            Me.columncid_onetim = MyBase.Columns("cid_onetim")
            Me.columnsoh_ordno = MyBase.Columns("soh_ordno")
            Me.columncompName = MyBase.Columns("compName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncid_cocde = New Global.System.Data.DataColumn("cid_cocde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_cocde)
            Me.columncid_cusno = New Global.System.Data.DataColumn("cid_cusno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_cusno)
            Me.columncid_seccus = New Global.System.Data.DataColumn("cid_seccus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_seccus)
            Me.columnIC = New Global.System.Data.DataColumn("IC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIC)
            Me.columncid_itmno = New Global.System.Data.DataColumn("cid_itmno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_itmno)
            Me.columncid_cusitm = New Global.System.Data.DataColumn("cid_cusitm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_cusitm)
            Me.columncid_cussku = New Global.System.Data.DataColumn("cid_cussku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_cussku)
            Me.columncid_itmdsc = New Global.System.Data.DataColumn("cid_itmdsc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_itmdsc)
            Me.columncid_packing = New Global.System.Data.DataColumn("cid_packing", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_packing)
            Me.columnysi_dsc = New Global.System.Data.DataColumn("ysi_dsc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnysi_dsc)
            Me.columncid_inrqty = New Global.System.Data.DataColumn("cid_inrqty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_inrqty)
            Me.columncid_mtrqty = New Global.System.Data.DataColumn("cid_mtrqty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_mtrqty)
            Me.columncid_cft = New Global.System.Data.DataColumn("cid_cft", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_cft)
            Me.columncid_colcde = New Global.System.Data.DataColumn("cid_colcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_colcde)
            Me.columncid_coldsc = New Global.System.Data.DataColumn("cid_coldsc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_coldsc)
            Me.columncid_sumqty = New Global.System.Data.DataColumn("cid_sumqty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_sumqty)
            Me.columncid_curcde = New Global.System.Data.DataColumn("cid_curcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_curcde)
            Me.columncid_selprc = New Global.System.Data.DataColumn("cid_selprc", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_selprc)
            Me.columncid_cususd = New Global.System.Data.DataColumn("cid_cususd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_cususd)
            Me.columncid_cuscad = New Global.System.Data.DataColumn("cid_cuscad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_cuscad)
            Me.columncid_ordqty = New Global.System.Data.DataColumn("cid_ordqty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_ordqty)
            Me.columnsod_subcde = New Global.System.Data.DataColumn("sod_subcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsod_subcde)
            Me.columnsod_venno = New Global.System.Data.DataColumn("sod_venno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsod_venno)
            Me.columnsod_venitm = New Global.System.Data.DataColumn("sod_venitm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsod_venitm)
            Me.columncid_fcurcde = New Global.System.Data.DataColumn("cid_fcurcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_fcurcde)
            Me.columncid_ftyprc = New Global.System.Data.DataColumn("cid_ftyprc", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_ftyprc)
            Me.columncid_docdat = New Global.System.Data.DataColumn("cid_docdat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_docdat)
            Me.columncbi_cussna = New Global.System.Data.DataColumn("cbi_cussna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncbi_cussna)
            Me.columnSecCustNo = New Global.System.Data.DataColumn("SecCustNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecCustNo)
            Me.columnSecCustShort = New Global.System.Data.DataColumn("SecCustShort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecCustShort)
            Me.columnvbi_vensna = New Global.System.Data.DataColumn("vbi_vensna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvbi_vensna)
            Me._column_fi = New Global.System.Data.DataColumn("@fi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_fi.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_fi")
            Me._column_fi.ExtendedProperties.Add("Generator_UserColumnName", "@fi")
            MyBase.Columns.Add(Me._column_fi)
            Me._column_pcFm = New Global.System.Data.DataColumn("@pcFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_pcFm.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_pcFm")
            Me._column_pcFm.ExtendedProperties.Add("Generator_UserColumnName", "@pcFm")
            MyBase.Columns.Add(Me._column_pcFm)
            Me._column_pcTo = New Global.System.Data.DataColumn("@pcTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_pcTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_pcTo")
            Me._column_pcTo.ExtendedProperties.Add("Generator_UserColumnName", "@pcTo")
            MyBase.Columns.Add(Me._column_pcTo)
            Me._column_psFm = New Global.System.Data.DataColumn("@psFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_psFm.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_psFm")
            Me._column_psFm.ExtendedProperties.Add("Generator_UserColumnName", "@psFm")
            MyBase.Columns.Add(Me._column_psFm)
            Me._column_psTo = New Global.System.Data.DataColumn("@psTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_psTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_psTo")
            Me._column_psTo.ExtendedProperties.Add("Generator_UserColumnName", "@psTo")
            MyBase.Columns.Add(Me._column_psTo)
            Me._column_plFm = New Global.System.Data.DataColumn("@plFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_plFm.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_plFm")
            Me._column_plFm.ExtendedProperties.Add("Generator_UserColumnName", "@plFm")
            MyBase.Columns.Add(Me._column_plFm)
            Me._column_plTo = New Global.System.Data.DataColumn("@plTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_plTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_plTo")
            Me._column_plTo.ExtendedProperties.Add("Generator_UserColumnName", "@plTo")
            MyBase.Columns.Add(Me._column_plTo)
            Me._column_itmFm = New Global.System.Data.DataColumn("@itmFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_itmFm.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_itmFm")
            Me._column_itmFm.ExtendedProperties.Add("Generator_UserColumnName", "@itmFm")
            MyBase.Columns.Add(Me._column_itmFm)
            Me._column_itmTo = New Global.System.Data.DataColumn("@itmTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_itmTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_itmTo")
            Me._column_itmTo.ExtendedProperties.Add("Generator_UserColumnName", "@itmTo")
            MyBase.Columns.Add(Me._column_itmTo)
            Me._column_custItmFm = New Global.System.Data.DataColumn("@custItmFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_custItmFm.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_custItmFm")
            Me._column_custItmFm.ExtendedProperties.Add("Generator_UserColumnName", "@custItmFm")
            MyBase.Columns.Add(Me._column_custItmFm)
            Me._column_custItmTo = New Global.System.Data.DataColumn("@custItmTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_custItmTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_custItmTo")
            Me._column_custItmTo.ExtendedProperties.Add("Generator_UserColumnName", "@custItmTo")
            MyBase.Columns.Add(Me._column_custItmTo)
            Me._column_vnFm = New Global.System.Data.DataColumn("@vnFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_vnFm.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_vnFm")
            Me._column_vnFm.ExtendedProperties.Add("Generator_UserColumnName", "@vnFm")
            MyBase.Columns.Add(Me._column_vnFm)
            Me._column_vnTo = New Global.System.Data.DataColumn("@vnTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_vnTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_vnTo")
            Me._column_vnTo.ExtendedProperties.Add("Generator_UserColumnName", "@vnTo")
            MyBase.Columns.Add(Me._column_vnTo)
            Me._column_idFm = New Global.System.Data.DataColumn("@idFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_idFm.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_idFm")
            Me._column_idFm.ExtendedProperties.Add("Generator_UserColumnName", "@idFm")
            MyBase.Columns.Add(Me._column_idFm)
            Me._column_idTo = New Global.System.Data.DataColumn("@idTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_idTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_idTo")
            Me._column_idTo.ExtendedProperties.Add("Generator_UserColumnName", "@idTo")
            MyBase.Columns.Add(Me._column_idTo)
            Me._column_qs = New Global.System.Data.DataColumn("@qs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_qs.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_qs")
            Me._column_qs.ExtendedProperties.Add("Generator_UserColumnName", "@qs")
            MyBase.Columns.Add(Me._column_qs)
            Me.columncid_onetim = New Global.System.Data.DataColumn("cid_onetim", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncid_onetim)
            Me.columnsoh_ordno = New Global.System.Data.DataColumn("soh_ordno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsoh_ordno)
            Me.columncompName = New Global.System.Data.DataColumn("compName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompName)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDataTable1Row() As DataTable1Row
            Return CType(Me.NewRow,DataTable1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DataTable1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DataTable1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DataTable1RowChangedEvent) Is Nothing) Then
                RaiseEvent DataTable1RowChanged(Me, New DataTable1RowChangeEvent(CType(e.Row,DataTable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DataTable1RowChangingEvent) Is Nothing) Then
                RaiseEvent DataTable1RowChanging(Me, New DataTable1RowChangeEvent(CType(e.Row,DataTable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DataTable1RowDeletedEvent) Is Nothing) Then
                RaiseEvent DataTable1RowDeleted(Me, New DataTable1RowChangeEvent(CType(e.Row,DataTable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DataTable1RowDeletingEvent) Is Nothing) Then
                RaiseEvent DataTable1RowDeleting(Me, New DataTable1RowChangeEvent(CType(e.Row,DataTable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDataTable1Row(ByVal row As DataTable1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSet10 = New DataSet10
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DataTable1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DataTable1Row
        Inherits Global.System.Data.DataRow
        
        Private tableDataTable1 As DataTable1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDataTable1 = CType(Me.Table,DataTable1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_cocde() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_cocdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_cocde' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_cocdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_cusno() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_cusnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_cusno' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_cusnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_seccus() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_seccusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_seccus' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_seccusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.ICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IC' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.ICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_itmno() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_itmnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_itmno' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_itmnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_cusitm() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_cusitmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_cusitm' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_cusitmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_cussku() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_cusskuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_cussku' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_cusskuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_itmdsc() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_itmdscColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_itmdsc' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_itmdscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_packing() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_packingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_packing' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_packingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ysi_dsc() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.ysi_dscColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ysi_dsc' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.ysi_dscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_inrqty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_inrqtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_inrqty' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_inrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_mtrqty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_mtrqtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_mtrqty' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_mtrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_cft() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_cftColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_cft' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_cftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_colcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_colcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_colcde' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_colcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_coldsc() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_coldscColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_coldsc' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_coldscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_sumqty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_sumqtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_sumqty' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_sumqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_curcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_curcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_curcde' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_curcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_selprc() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_selprcColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_selprc' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_selprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_cususd() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_cususdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_cususd' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_cususdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_cuscad() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_cuscadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_cuscad' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_cuscadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_ordqty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_ordqtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_ordqty' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_ordqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sod_subcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.sod_subcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sod_subcde' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.sod_subcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sod_venno() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.sod_vennoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sod_venno' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.sod_vennoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sod_venitm() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.sod_venitmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sod_venitm' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.sod_venitmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_fcurcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_fcurcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_fcurcde' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_fcurcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_ftyprc() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_ftyprcColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_ftyprc' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_ftyprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_docdat() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_docdatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_docdat' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_docdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cbi_cussna() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cbi_cussnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cbi_cussna' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cbi_cussnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SecCustNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.SecCustNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecCustNo' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.SecCustNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SecCustShort() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.SecCustShortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecCustShort' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.SecCustShortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vbi_vensna() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.vbi_vensnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vbi_vensna' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.vbi_vensnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __fi() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__fiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@fi' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__fiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __pcFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__pcFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@pcFm' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__pcFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __pcTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__pcToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@pcTo' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__pcToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __psFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__psFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@psFm' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__psFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __psTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__psToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@psTo' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__psToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __plFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__plFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@plFm' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__plFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __plTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__plToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@plTo' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__plToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __itmFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__itmFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@itmFm' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__itmFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __itmTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__itmToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@itmTo' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__itmToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __custItmFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__custItmFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@custItmFm' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__custItmFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __custItmTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__custItmToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@custItmTo' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__custItmToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __vnFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__vnFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@vnFm' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__vnFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __vnTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__vnToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@vnTo' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__vnToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __idFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__idFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@idFm' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__idFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __idTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__idToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@idTo' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__idToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __qs() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.__qsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '@qs' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.__qsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cid_onetim() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.cid_onetimColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cid_onetim' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.cid_onetimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property soh_ordno() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.soh_ordnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'soh_ordno' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.soh_ordnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property compName() As String
            Get
                Try 
                    Return CType(Me(Me.tableDataTable1.compNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compName' in table 'DataTable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDataTable1.compNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_cocdeNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_cocdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_cocdeNull()
            Me(Me.tableDataTable1.cid_cocdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_cusnoNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_cusnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_cusnoNull()
            Me(Me.tableDataTable1.cid_cusnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_seccusNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_seccusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_seccusNull()
            Me(Me.tableDataTable1.cid_seccusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsICNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.ICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetICNull()
            Me(Me.tableDataTable1.ICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_itmnoNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_itmnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_itmnoNull()
            Me(Me.tableDataTable1.cid_itmnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_cusitmNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_cusitmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_cusitmNull()
            Me(Me.tableDataTable1.cid_cusitmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_cusskuNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_cusskuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_cusskuNull()
            Me(Me.tableDataTable1.cid_cusskuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_itmdscNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_itmdscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_itmdscNull()
            Me(Me.tableDataTable1.cid_itmdscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_packingNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_packingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_packingNull()
            Me(Me.tableDataTable1.cid_packingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isysi_dscNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.ysi_dscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setysi_dscNull()
            Me(Me.tableDataTable1.ysi_dscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_inrqtyNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_inrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_inrqtyNull()
            Me(Me.tableDataTable1.cid_inrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_mtrqtyNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_mtrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_mtrqtyNull()
            Me(Me.tableDataTable1.cid_mtrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_cftNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_cftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_cftNull()
            Me(Me.tableDataTable1.cid_cftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_colcdeNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_colcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_colcdeNull()
            Me(Me.tableDataTable1.cid_colcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_coldscNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_coldscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_coldscNull()
            Me(Me.tableDataTable1.cid_coldscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_sumqtyNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_sumqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_sumqtyNull()
            Me(Me.tableDataTable1.cid_sumqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_curcdeNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_curcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_curcdeNull()
            Me(Me.tableDataTable1.cid_curcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_selprcNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_selprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_selprcNull()
            Me(Me.tableDataTable1.cid_selprcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_cususdNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_cususdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_cususdNull()
            Me(Me.tableDataTable1.cid_cususdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_cuscadNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_cuscadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_cuscadNull()
            Me(Me.tableDataTable1.cid_cuscadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_ordqtyNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_ordqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_ordqtyNull()
            Me(Me.tableDataTable1.cid_ordqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issod_subcdeNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.sod_subcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsod_subcdeNull()
            Me(Me.tableDataTable1.sod_subcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issod_vennoNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.sod_vennoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsod_vennoNull()
            Me(Me.tableDataTable1.sod_vennoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issod_venitmNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.sod_venitmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsod_venitmNull()
            Me(Me.tableDataTable1.sod_venitmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_fcurcdeNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_fcurcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_fcurcdeNull()
            Me(Me.tableDataTable1.cid_fcurcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_ftyprcNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_ftyprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_ftyprcNull()
            Me(Me.tableDataTable1.cid_ftyprcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_docdatNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_docdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_docdatNull()
            Me(Me.tableDataTable1.cid_docdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscbi_cussnaNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cbi_cussnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcbi_cussnaNull()
            Me(Me.tableDataTable1.cbi_cussnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSecCustNoNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.SecCustNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSecCustNoNull()
            Me(Me.tableDataTable1.SecCustNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSecCustShortNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.SecCustShortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSecCustShortNull()
            Me(Me.tableDataTable1.SecCustShortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isvbi_vensnaNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.vbi_vensnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setvbi_vensnaNull()
            Me(Me.tableDataTable1.vbi_vensnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__fiNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__fiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__fiNull()
            Me(Me.tableDataTable1.__fiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__pcFmNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__pcFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__pcFmNull()
            Me(Me.tableDataTable1.__pcFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__pcToNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__pcToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__pcToNull()
            Me(Me.tableDataTable1.__pcToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__psFmNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__psFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__psFmNull()
            Me(Me.tableDataTable1.__psFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__psToNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__psToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__psToNull()
            Me(Me.tableDataTable1.__psToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__plFmNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__plFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__plFmNull()
            Me(Me.tableDataTable1.__plFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__plToNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__plToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__plToNull()
            Me(Me.tableDataTable1.__plToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__itmFmNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__itmFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__itmFmNull()
            Me(Me.tableDataTable1.__itmFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__itmToNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__itmToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__itmToNull()
            Me(Me.tableDataTable1.__itmToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__custItmFmNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__custItmFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__custItmFmNull()
            Me(Me.tableDataTable1.__custItmFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__custItmToNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__custItmToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__custItmToNull()
            Me(Me.tableDataTable1.__custItmToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__vnFmNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__vnFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__vnFmNull()
            Me(Me.tableDataTable1.__vnFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__vnToNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__vnToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__vnToNull()
            Me(Me.tableDataTable1.__vnToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__idFmNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__idFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__idFmNull()
            Me(Me.tableDataTable1.__idFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__idToNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__idToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__idToNull()
            Me(Me.tableDataTable1.__idToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__qsNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.__qsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__qsNull()
            Me(Me.tableDataTable1.__qsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscid_onetimNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.cid_onetimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcid_onetimNull()
            Me(Me.tableDataTable1.cid_onetimColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issoh_ordnoNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.soh_ordnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsoh_ordnoNull()
            Me(Me.tableDataTable1.soh_ordnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscompNameNull() As Boolean
            Return Me.IsNull(Me.tableDataTable1.compNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcompNameNull()
            Me(Me.tableDataTable1.compNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DataTable1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DataTable1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DataTable1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DataTable1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
