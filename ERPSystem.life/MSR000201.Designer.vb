'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3655
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsMSR00020"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsMSR00020
    Inherits Global.System.Data.DataSet
    
    Private tableMSR00020Rpt As MSR00020RptDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MSR00020Rpt")) Is Nothing) Then
                MyBase.Tables.Add(New MSR00020RptDataTable(ds.Tables("MSR00020Rpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MSR00020Rpt() As MSR00020RptDataTable
        Get
            Return Me.tableMSR00020Rpt
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsMSR00020 = CType(MyBase.Clone,dsMSR00020)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("MSR00020Rpt")) Is Nothing) Then
                MyBase.Tables.Add(New MSR00020RptDataTable(ds.Tables("MSR00020Rpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMSR00020Rpt = CType(MyBase.Tables("MSR00020Rpt"),MSR00020RptDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMSR00020Rpt) Is Nothing) Then
                Me.tableMSR00020Rpt.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsMSR00020"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet10.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMSR00020Rpt = New MSR00020RptDataTable
        MyBase.Tables.Add(Me.tableMSR00020Rpt)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMSR00020Rpt() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsMSR00020 = New dsMSR00020
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub MSR00020RptRowChangeEventHandler(ByVal sender As Object, ByVal e As MSR00020RptRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MSR00020RptDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncocde As Global.System.Data.DataColumn
        
        Private columnVenFm As Global.System.Data.DataColumn
        
        Private columnVenTo As Global.System.Data.DataColumn
        
        Private columnPOfm As Global.System.Data.DataColumn
        
        Private columnPOto As Global.System.Data.DataColumn
        
        Private columnIssDateFm As Global.System.Data.DataColumn
        
        Private columnIssDateTo As Global.System.Data.DataColumn
        
        Private columnShipDateFm As Global.System.Data.DataColumn
        
        Private columnShipDateTo As Global.System.Data.DataColumn
        
        Private columnCustNOFm As Global.System.Data.DataColumn
        
        Private columnCustNoTo As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnSortby As Global.System.Data.DataColumn
        
        Private columnuser As Global.System.Data.DataColumn
        
        Private columnpoh_purord As Global.System.Data.DataColumn
        
        Private columnpoh_ordno As Global.System.Data.DataColumn
        
        Private columnpoh_issdat As Global.System.Data.DataColumn
        
        Private columnpoh_credat As Global.System.Data.DataColumn
        
        Private columnpoh_shpstr As Global.System.Data.DataColumn
        
        Private columnpoh_shpend As Global.System.Data.DataColumn
        
        Private columnpoh_curcde As Global.System.Data.DataColumn
        
        Private columnpoh_ttlamt As Global.System.Data.DataColumn
        
        Private columnpoh_netamt As Global.System.Data.DataColumn
        
        Private columnvbi_venno As Global.System.Data.DataColumn
        
        Private columnvbi_vensna As Global.System.Data.DataColumn
        
        Private columnPriCustNo As Global.System.Data.DataColumn
        
        Private _columnPri_name As Global.System.Data.DataColumn
        
        Private columnSecCustNo As Global.System.Data.DataColumn
        
        Private columnSec_name As Global.System.Data.DataColumn
        
        Private columnpoh_pursts As Global.System.Data.DataColumn
        
        Private columncompName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MSR00020Rpt"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cocdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncocde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VenFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVenFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VenToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVenTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POfmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOfm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IssDateFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssDateFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IssDateToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssDateTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShipDateFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShipDateFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShipDateToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShipDateTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CustNOFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustNOFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CustNoToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustNoTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SortbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSortby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property userColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_purordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_purord
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_ordnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_ordno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_issdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_issdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_credatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_credat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_shpstrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_shpstr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_shpendColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_shpend
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_curcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_curcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_ttlamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_ttlamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_netamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_netamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vbi_vennoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvbi_venno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vbi_vensnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvbi_vensna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PriCustNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriCustNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _Pri_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnPri_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SecCustNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecCustNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sec_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSec_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_purstsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_pursts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property compNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MSR00020RptRow
            Get
                Return CType(Me.Rows(index),MSR00020RptRow)
            End Get
        End Property
        
        Public Event MSR00020RptRowChanging As MSR00020RptRowChangeEventHandler
        
        Public Event MSR00020RptRowChanged As MSR00020RptRowChangeEventHandler
        
        Public Event MSR00020RptRowDeleting As MSR00020RptRowChangeEventHandler
        
        Public Event MSR00020RptRowDeleted As MSR00020RptRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMSR00020RptRow(ByVal row As MSR00020RptRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMSR00020RptRow( _
                    ByVal cocde As String,  _
                    ByVal VenFm As String,  _
                    ByVal VenTo As String,  _
                    ByVal POfm As String,  _
                    ByVal POto As String,  _
                    ByVal IssDateFm As String,  _
                    ByVal IssDateTo As String,  _
                    ByVal ShipDateFm As String,  _
                    ByVal ShipDateTo As String,  _
                    ByVal CustNOFm As String,  _
                    ByVal CustNoTo As String,  _
                    ByVal Status As String,  _
                    ByVal Sortby As String,  _
                    ByVal user As String,  _
                    ByVal poh_purord As String,  _
                    ByVal poh_ordno As String,  _
                    ByVal poh_issdat As String,  _
                    ByVal poh_credat As String,  _
                    ByVal poh_shpstr As String,  _
                    ByVal poh_shpend As String,  _
                    ByVal poh_curcde As String,  _
                    ByVal poh_ttlamt As Double,  _
                    ByVal poh_netamt As String,  _
                    ByVal vbi_venno As String,  _
                    ByVal vbi_vensna As String,  _
                    ByVal PriCustNo As String,  _
                    ByVal _Pri_name As String,  _
                    ByVal SecCustNo As String,  _
                    ByVal Sec_name As String,  _
                    ByVal poh_pursts As String,  _
                    ByVal compName As String) As MSR00020RptRow
            Dim rowMSR00020RptRow As MSR00020RptRow = CType(Me.NewRow,MSR00020RptRow)
            Dim columnValuesArray() As Object = New Object() {cocde, VenFm, VenTo, POfm, POto, IssDateFm, IssDateTo, ShipDateFm, ShipDateTo, CustNOFm, CustNoTo, Status, Sortby, user, poh_purord, poh_ordno, poh_issdat, poh_credat, poh_shpstr, poh_shpend, poh_curcde, poh_ttlamt, poh_netamt, vbi_venno, vbi_vensna, PriCustNo, _Pri_name, SecCustNo, Sec_name, poh_pursts, compName}
            rowMSR00020RptRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMSR00020RptRow)
            Return rowMSR00020RptRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MSR00020RptDataTable = CType(MyBase.Clone,MSR00020RptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MSR00020RptDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncocde = MyBase.Columns("cocde")
            Me.columnVenFm = MyBase.Columns("VenFm")
            Me.columnVenTo = MyBase.Columns("VenTo")
            Me.columnPOfm = MyBase.Columns("POfm")
            Me.columnPOto = MyBase.Columns("POto")
            Me.columnIssDateFm = MyBase.Columns("IssDateFm")
            Me.columnIssDateTo = MyBase.Columns("IssDateTo")
            Me.columnShipDateFm = MyBase.Columns("ShipDateFm")
            Me.columnShipDateTo = MyBase.Columns("ShipDateTo")
            Me.columnCustNOFm = MyBase.Columns("CustNOFm")
            Me.columnCustNoTo = MyBase.Columns("CustNoTo")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnSortby = MyBase.Columns("Sortby")
            Me.columnuser = MyBase.Columns("user")
            Me.columnpoh_purord = MyBase.Columns("poh_purord")
            Me.columnpoh_ordno = MyBase.Columns("poh_ordno")
            Me.columnpoh_issdat = MyBase.Columns("poh_issdat")
            Me.columnpoh_credat = MyBase.Columns("poh_credat")
            Me.columnpoh_shpstr = MyBase.Columns("poh_shpstr")
            Me.columnpoh_shpend = MyBase.Columns("poh_shpend")
            Me.columnpoh_curcde = MyBase.Columns("poh_curcde")
            Me.columnpoh_ttlamt = MyBase.Columns("poh_ttlamt")
            Me.columnpoh_netamt = MyBase.Columns("poh_netamt")
            Me.columnvbi_venno = MyBase.Columns("vbi_venno")
            Me.columnvbi_vensna = MyBase.Columns("vbi_vensna")
            Me.columnPriCustNo = MyBase.Columns("PriCustNo")
            Me._columnPri_name = MyBase.Columns("Pri_name")
            Me.columnSecCustNo = MyBase.Columns("SecCustNo")
            Me.columnSec_name = MyBase.Columns("Sec_name")
            Me.columnpoh_pursts = MyBase.Columns("poh_pursts")
            Me.columncompName = MyBase.Columns("compName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncocde = New Global.System.Data.DataColumn("cocde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncocde)
            Me.columnVenFm = New Global.System.Data.DataColumn("VenFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVenFm)
            Me.columnVenTo = New Global.System.Data.DataColumn("VenTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVenTo)
            Me.columnPOfm = New Global.System.Data.DataColumn("POfm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOfm)
            Me.columnPOto = New Global.System.Data.DataColumn("POto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOto)
            Me.columnIssDateFm = New Global.System.Data.DataColumn("IssDateFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssDateFm)
            Me.columnIssDateTo = New Global.System.Data.DataColumn("IssDateTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssDateTo)
            Me.columnShipDateFm = New Global.System.Data.DataColumn("ShipDateFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShipDateFm)
            Me.columnShipDateTo = New Global.System.Data.DataColumn("ShipDateTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShipDateTo)
            Me.columnCustNOFm = New Global.System.Data.DataColumn("CustNOFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustNOFm)
            Me.columnCustNoTo = New Global.System.Data.DataColumn("CustNoTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustNoTo)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnSortby = New Global.System.Data.DataColumn("Sortby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSortby)
            Me.columnuser = New Global.System.Data.DataColumn("user", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuser)
            Me.columnpoh_purord = New Global.System.Data.DataColumn("poh_purord", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_purord)
            Me.columnpoh_ordno = New Global.System.Data.DataColumn("poh_ordno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_ordno)
            Me.columnpoh_issdat = New Global.System.Data.DataColumn("poh_issdat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_issdat)
            Me.columnpoh_credat = New Global.System.Data.DataColumn("poh_credat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_credat)
            Me.columnpoh_shpstr = New Global.System.Data.DataColumn("poh_shpstr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_shpstr)
            Me.columnpoh_shpend = New Global.System.Data.DataColumn("poh_shpend", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_shpend)
            Me.columnpoh_curcde = New Global.System.Data.DataColumn("poh_curcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_curcde)
            Me.columnpoh_ttlamt = New Global.System.Data.DataColumn("poh_ttlamt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_ttlamt)
            Me.columnpoh_netamt = New Global.System.Data.DataColumn("poh_netamt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_netamt)
            Me.columnvbi_venno = New Global.System.Data.DataColumn("vbi_venno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvbi_venno)
            Me.columnvbi_vensna = New Global.System.Data.DataColumn("vbi_vensna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvbi_vensna)
            Me.columnPriCustNo = New Global.System.Data.DataColumn("PriCustNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriCustNo)
            Me._columnPri_name = New Global.System.Data.DataColumn("Pri_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPri_name.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_Pri_name")
            Me._columnPri_name.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_Pri_nameColumn")
            Me._columnPri_name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPri_name")
            Me._columnPri_name.ExtendedProperties.Add("Generator_UserColumnName", "Pri_name")
            MyBase.Columns.Add(Me._columnPri_name)
            Me.columnSecCustNo = New Global.System.Data.DataColumn("SecCustNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecCustNo)
            Me.columnSec_name = New Global.System.Data.DataColumn("Sec_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSec_name)
            Me.columnpoh_pursts = New Global.System.Data.DataColumn("poh_pursts", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_pursts)
            Me.columncompName = New Global.System.Data.DataColumn("compName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompName)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMSR00020RptRow() As MSR00020RptRow
            Return CType(Me.NewRow,MSR00020RptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MSR00020RptRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MSR00020RptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MSR00020RptRowChangedEvent) Is Nothing) Then
                RaiseEvent MSR00020RptRowChanged(Me, New MSR00020RptRowChangeEvent(CType(e.Row,MSR00020RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MSR00020RptRowChangingEvent) Is Nothing) Then
                RaiseEvent MSR00020RptRowChanging(Me, New MSR00020RptRowChangeEvent(CType(e.Row,MSR00020RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MSR00020RptRowDeletedEvent) Is Nothing) Then
                RaiseEvent MSR00020RptRowDeleted(Me, New MSR00020RptRowChangeEvent(CType(e.Row,MSR00020RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MSR00020RptRowDeletingEvent) Is Nothing) Then
                RaiseEvent MSR00020RptRowDeleting(Me, New MSR00020RptRowChangeEvent(CType(e.Row,MSR00020RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMSR00020RptRow(ByVal row As MSR00020RptRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMSR00020 = New dsMSR00020
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MSR00020RptDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MSR00020RptRow
        Inherits Global.System.Data.DataRow
        
        Private tableMSR00020Rpt As MSR00020RptDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMSR00020Rpt = CType(Me.Table,MSR00020RptDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cocde() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.cocdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cocde' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.cocdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VenFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.VenFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VenFm' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.VenFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VenTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.VenToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VenTo' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.VenToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POfm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.POfmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POfm' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.POfmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POto() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.POtoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POto' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.POtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IssDateFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.IssDateFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssDateFm' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.IssDateFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IssDateTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.IssDateToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssDateTo' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.IssDateToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShipDateFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.ShipDateFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShipDateFm' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.ShipDateFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ShipDateTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.ShipDateToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShipDateTo' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.ShipDateToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CustNOFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.CustNOFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustNOFm' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.CustNOFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CustNoTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.CustNoToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustNoTo' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.CustNoToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sortby() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.SortbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sortby' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.SortbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property user() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.userColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'user' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.userColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_purord() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_purordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_purord' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_purordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_ordno() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_ordnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_ordno' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_ordnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_issdat() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_issdatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_issdat' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_issdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_credat() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_credatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_credat' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_credatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_shpstr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_shpstrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_shpstr' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_shpstrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_shpend() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_shpendColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_shpend' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_shpendColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_curcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_curcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_curcde' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_curcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_ttlamt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_ttlamtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_ttlamt' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_ttlamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_netamt() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_netamtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_netamt' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_netamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vbi_venno() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.vbi_vennoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vbi_venno' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.vbi_vennoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vbi_vensna() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.vbi_vensnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vbi_vensna' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.vbi_vensnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PriCustNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.PriCustNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriCustNo' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.PriCustNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Pri_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt._Pri_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pri_name' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt._Pri_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SecCustNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.SecCustNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecCustNo' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.SecCustNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sec_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.Sec_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sec_name' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.Sec_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_pursts() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.poh_purstsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_pursts' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.poh_purstsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property compName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00020Rpt.compNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compName' in table 'MSR00020Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00020Rpt.compNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscocdeNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.cocdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcocdeNull()
            Me(Me.tableMSR00020Rpt.cocdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVenFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.VenFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVenFmNull()
            Me(Me.tableMSR00020Rpt.VenFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVenToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.VenToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVenToNull()
            Me(Me.tableMSR00020Rpt.VenToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOfmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.POfmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOfmNull()
            Me(Me.tableMSR00020Rpt.POfmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOtoNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.POtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOtoNull()
            Me(Me.tableMSR00020Rpt.POtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIssDateFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.IssDateFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIssDateFmNull()
            Me(Me.tableMSR00020Rpt.IssDateFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIssDateToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.IssDateToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIssDateToNull()
            Me(Me.tableMSR00020Rpt.IssDateToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShipDateFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.ShipDateFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShipDateFmNull()
            Me(Me.tableMSR00020Rpt.ShipDateFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShipDateToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.ShipDateToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShipDateToNull()
            Me(Me.tableMSR00020Rpt.ShipDateToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustNOFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.CustNOFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustNOFmNull()
            Me(Me.tableMSR00020Rpt.CustNOFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustNoToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.CustNoToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustNoToNull()
            Me(Me.tableMSR00020Rpt.CustNoToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNull()
            Me(Me.tableMSR00020Rpt.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSortbyNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.SortbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSortbyNull()
            Me(Me.tableMSR00020Rpt.SortbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsuserNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.userColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetuserNull()
            Me(Me.tableMSR00020Rpt.userColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_purordNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_purordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_purordNull()
            Me(Me.tableMSR00020Rpt.poh_purordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_ordnoNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_ordnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_ordnoNull()
            Me(Me.tableMSR00020Rpt.poh_ordnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_issdatNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_issdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_issdatNull()
            Me(Me.tableMSR00020Rpt.poh_issdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_credatNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_credatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_credatNull()
            Me(Me.tableMSR00020Rpt.poh_credatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_shpstrNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_shpstrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_shpstrNull()
            Me(Me.tableMSR00020Rpt.poh_shpstrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_shpendNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_shpendColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_shpendNull()
            Me(Me.tableMSR00020Rpt.poh_shpendColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_curcdeNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_curcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_curcdeNull()
            Me(Me.tableMSR00020Rpt.poh_curcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_ttlamtNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_ttlamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_ttlamtNull()
            Me(Me.tableMSR00020Rpt.poh_ttlamtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_netamtNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_netamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_netamtNull()
            Me(Me.tableMSR00020Rpt.poh_netamtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isvbi_vennoNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.vbi_vennoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setvbi_vennoNull()
            Me(Me.tableMSR00020Rpt.vbi_vennoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isvbi_vensnaNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.vbi_vensnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setvbi_vensnaNull()
            Me(Me.tableMSR00020Rpt.vbi_vensnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPriCustNoNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.PriCustNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPriCustNoNull()
            Me(Me.tableMSR00020Rpt.PriCustNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_Pri_nameNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt._Pri_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_Pri_nameNull()
            Me(Me.tableMSR00020Rpt._Pri_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSecCustNoNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.SecCustNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSecCustNoNull()
            Me(Me.tableMSR00020Rpt.SecCustNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSec_nameNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.Sec_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSec_nameNull()
            Me(Me.tableMSR00020Rpt.Sec_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_purstsNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.poh_purstsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_purstsNull()
            Me(Me.tableMSR00020Rpt.poh_purstsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscompNameNull() As Boolean
            Return Me.IsNull(Me.tableMSR00020Rpt.compNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcompNameNull()
            Me(Me.tableMSR00020Rpt.compNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MSR00020RptRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MSR00020RptRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MSR00020RptRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MSR00020RptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
