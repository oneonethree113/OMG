'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3634
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("SAR00007Report"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SAR00007Report
    Inherits Global.System.Data.DataSet
    
    Private tableSAR00007 As SAR00007DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SAR00007")) Is Nothing) Then
                MyBase.Tables.Add(New SAR00007DataTable(ds.Tables("SAR00007")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SAR00007() As SAR00007DataTable
        Get
            Return Me.tableSAR00007
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As SAR00007Report = CType(MyBase.Clone,SAR00007Report)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("SAR00007")) Is Nothing) Then
                MyBase.Tables.Add(New SAR00007DataTable(ds.Tables("SAR00007")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSAR00007 = CType(MyBase.Tables("SAR00007"),SAR00007DataTable)
        If (initTable = true) Then
            If (Not (Me.tableSAR00007) Is Nothing) Then
                Me.tableSAR00007.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "SAR00007Report"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SAR00007Report.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSAR00007 = New SAR00007DataTable
        MyBase.Tables.Add(Me.tableSAR00007)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSAR00007() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SAR00007Report = New SAR00007Report
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub SAR00007RowChangeEventHandler(ByVal sender As Object, ByVal e As SAR00007RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SAR00007DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnsih_invno As Global.System.Data.DataColumn
        
        Private columnsih_cocde As Global.System.Data.DataColumn
        
        Private columnsih_cus1no As Global.System.Data.DataColumn
        
        Private columnsih_cus1ad As Global.System.Data.DataColumn
        
        Private columnsih_cus1st As Global.System.Data.DataColumn
        
        Private columnsih_cus1cy As Global.System.Data.DataColumn
        
        Private columnsih_cus1zp As Global.System.Data.DataColumn
        
        Private columnsih_cus1cp As Global.System.Data.DataColumn
        
        Private columnsih_rvsdat As Global.System.Data.DataColumn
        
        Private columnsih_shprmk As Global.System.Data.DataColumn
        
        Private columnsih_rmk As Global.System.Data.DataColumn
        
        Private columnsid_itmno As Global.System.Data.DataColumn
        
        Private columnsid_smpunt As Global.System.Data.DataColumn
        
        Private columnsid_colcde As Global.System.Data.DataColumn
        
        Private columnsid_shpqty As Global.System.Data.DataColumn
        
        Private columnsid_shpqtyStr As Global.System.Data.DataColumn
        
        Private columncbi_cussna As Global.System.Data.DataColumn
        
        Private columncbi_cusnam As Global.System.Data.DataColumn
        
        Private columnsmpunt As Global.System.Data.DataColumn
        
        Private columnyco_conam As Global.System.Data.DataColumn
        
        Private columnyco_addr As Global.System.Data.DataColumn
        
        Private columnyco_addrc As Global.System.Data.DataColumn
        
        Private columnyco_phoneno As Global.System.Data.DataColumn
        
        Private columnyco_faxno As Global.System.Data.DataColumn
        
        Private columnyco_logoimgpth As Global.System.Data.DataColumn
        
        Private columncompLogo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SAR00007"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_invnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_invno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_cocdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_cocde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_cus1noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_cus1no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_cus1adColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_cus1ad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_cus1stColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_cus1st
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_cus1cyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_cus1cy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_cus1zpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_cus1zp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_cus1cpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_cus1cp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_rvsdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_rvsdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_shprmkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_shprmk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_rmkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_rmk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sid_itmnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsid_itmno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sid_smpuntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsid_smpunt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sid_colcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsid_colcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sid_shpqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsid_shpqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sid_shpqtyStrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsid_shpqtyStr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cbi_cussnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncbi_cussna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cbi_cusnamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncbi_cusnam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property smpuntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsmpunt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property yco_conamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyco_conam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property yco_addrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyco_addr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property yco_addrcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyco_addrc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property yco_phonenoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyco_phoneno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property yco_faxnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyco_faxno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property yco_logoimgpthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyco_logoimgpth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property compLogoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompLogo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SAR00007Row
            Get
                Return CType(Me.Rows(index),SAR00007Row)
            End Get
        End Property
        
        Public Event SAR00007RowChanging As SAR00007RowChangeEventHandler
        
        Public Event SAR00007RowChanged As SAR00007RowChangeEventHandler
        
        Public Event SAR00007RowDeleting As SAR00007RowChangeEventHandler
        
        Public Event SAR00007RowDeleted As SAR00007RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSAR00007Row(ByVal row As SAR00007Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSAR00007Row( _
                    ByVal sih_invno As String,  _
                    ByVal sih_cocde As String,  _
                    ByVal sih_cus1no As String,  _
                    ByVal sih_cus1ad As String,  _
                    ByVal sih_cus1st As String,  _
                    ByVal sih_cus1cy As String,  _
                    ByVal sih_cus1zp As String,  _
                    ByVal sih_cus1cp As String,  _
                    ByVal sih_rvsdat As Date,  _
                    ByVal sih_shprmk As String,  _
                    ByVal sih_rmk As String,  _
                    ByVal sid_itmno As String,  _
                    ByVal sid_smpunt As String,  _
                    ByVal sid_colcde As String,  _
                    ByVal sid_shpqty As Double,  _
                    ByVal sid_shpqtyStr As String,  _
                    ByVal cbi_cussna As String,  _
                    ByVal cbi_cusnam As String,  _
                    ByVal smpunt As String,  _
                    ByVal yco_conam As String,  _
                    ByVal yco_addr As String,  _
                    ByVal yco_addrc As String,  _
                    ByVal yco_phoneno As String,  _
                    ByVal yco_faxno As String,  _
                    ByVal yco_logoimgpth As String,  _
                    ByVal compLogo() As Byte) As SAR00007Row
            Dim rowSAR00007Row As SAR00007Row = CType(Me.NewRow,SAR00007Row)
            Dim columnValuesArray() As Object = New Object() {sih_invno, sih_cocde, sih_cus1no, sih_cus1ad, sih_cus1st, sih_cus1cy, sih_cus1zp, sih_cus1cp, sih_rvsdat, sih_shprmk, sih_rmk, sid_itmno, sid_smpunt, sid_colcde, sid_shpqty, sid_shpqtyStr, cbi_cussna, cbi_cusnam, smpunt, yco_conam, yco_addr, yco_addrc, yco_phoneno, yco_faxno, yco_logoimgpth, compLogo}
            rowSAR00007Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowSAR00007Row)
            Return rowSAR00007Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SAR00007DataTable = CType(MyBase.Clone,SAR00007DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SAR00007DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnsih_invno = MyBase.Columns("sih_invno")
            Me.columnsih_cocde = MyBase.Columns("sih_cocde")
            Me.columnsih_cus1no = MyBase.Columns("sih_cus1no")
            Me.columnsih_cus1ad = MyBase.Columns("sih_cus1ad")
            Me.columnsih_cus1st = MyBase.Columns("sih_cus1st")
            Me.columnsih_cus1cy = MyBase.Columns("sih_cus1cy")
            Me.columnsih_cus1zp = MyBase.Columns("sih_cus1zp")
            Me.columnsih_cus1cp = MyBase.Columns("sih_cus1cp")
            Me.columnsih_rvsdat = MyBase.Columns("sih_rvsdat")
            Me.columnsih_shprmk = MyBase.Columns("sih_shprmk")
            Me.columnsih_rmk = MyBase.Columns("sih_rmk")
            Me.columnsid_itmno = MyBase.Columns("sid_itmno")
            Me.columnsid_smpunt = MyBase.Columns("sid_smpunt")
            Me.columnsid_colcde = MyBase.Columns("sid_colcde")
            Me.columnsid_shpqty = MyBase.Columns("sid_shpqty")
            Me.columnsid_shpqtyStr = MyBase.Columns("sid_shpqtyStr")
            Me.columncbi_cussna = MyBase.Columns("cbi_cussna")
            Me.columncbi_cusnam = MyBase.Columns("cbi_cusnam")
            Me.columnsmpunt = MyBase.Columns("smpunt")
            Me.columnyco_conam = MyBase.Columns("yco_conam")
            Me.columnyco_addr = MyBase.Columns("yco_addr")
            Me.columnyco_addrc = MyBase.Columns("yco_addrc")
            Me.columnyco_phoneno = MyBase.Columns("yco_phoneno")
            Me.columnyco_faxno = MyBase.Columns("yco_faxno")
            Me.columnyco_logoimgpth = MyBase.Columns("yco_logoimgpth")
            Me.columncompLogo = MyBase.Columns("compLogo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnsih_invno = New Global.System.Data.DataColumn("sih_invno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_invno)
            Me.columnsih_cocde = New Global.System.Data.DataColumn("sih_cocde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_cocde)
            Me.columnsih_cus1no = New Global.System.Data.DataColumn("sih_cus1no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_cus1no)
            Me.columnsih_cus1ad = New Global.System.Data.DataColumn("sih_cus1ad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_cus1ad)
            Me.columnsih_cus1st = New Global.System.Data.DataColumn("sih_cus1st", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_cus1st)
            Me.columnsih_cus1cy = New Global.System.Data.DataColumn("sih_cus1cy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_cus1cy)
            Me.columnsih_cus1zp = New Global.System.Data.DataColumn("sih_cus1zp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_cus1zp)
            Me.columnsih_cus1cp = New Global.System.Data.DataColumn("sih_cus1cp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_cus1cp)
            Me.columnsih_rvsdat = New Global.System.Data.DataColumn("sih_rvsdat", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_rvsdat)
            Me.columnsih_shprmk = New Global.System.Data.DataColumn("sih_shprmk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_shprmk)
            Me.columnsih_rmk = New Global.System.Data.DataColumn("sih_rmk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_rmk)
            Me.columnsid_itmno = New Global.System.Data.DataColumn("sid_itmno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsid_itmno)
            Me.columnsid_smpunt = New Global.System.Data.DataColumn("sid_smpunt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsid_smpunt)
            Me.columnsid_colcde = New Global.System.Data.DataColumn("sid_colcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsid_colcde)
            Me.columnsid_shpqty = New Global.System.Data.DataColumn("sid_shpqty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsid_shpqty)
            Me.columnsid_shpqtyStr = New Global.System.Data.DataColumn("sid_shpqtyStr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsid_shpqtyStr)
            Me.columncbi_cussna = New Global.System.Data.DataColumn("cbi_cussna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncbi_cussna)
            Me.columncbi_cusnam = New Global.System.Data.DataColumn("cbi_cusnam", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncbi_cusnam)
            Me.columnsmpunt = New Global.System.Data.DataColumn("smpunt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsmpunt)
            Me.columnyco_conam = New Global.System.Data.DataColumn("yco_conam", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyco_conam)
            Me.columnyco_addr = New Global.System.Data.DataColumn("yco_addr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyco_addr)
            Me.columnyco_addrc = New Global.System.Data.DataColumn("yco_addrc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyco_addrc)
            Me.columnyco_phoneno = New Global.System.Data.DataColumn("yco_phoneno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyco_phoneno)
            Me.columnyco_faxno = New Global.System.Data.DataColumn("yco_faxno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyco_faxno)
            Me.columnyco_logoimgpth = New Global.System.Data.DataColumn("yco_logoimgpth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyco_logoimgpth)
            Me.columncompLogo = New Global.System.Data.DataColumn("compLogo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompLogo)
            Me.columnsih_invno.MaxLength = 20
            Me.columnsih_cocde.MaxLength = 6
            Me.columnsih_cus1no.MaxLength = 6
            Me.columnsih_cus1ad.MaxLength = 200
            Me.columnsih_cus1st.MaxLength = 20
            Me.columnsih_cus1cy.MaxLength = 6
            Me.columnsih_cus1zp.MaxLength = 20
            Me.columnsih_cus1cp.MaxLength = 50
            Me.columnsih_shprmk.MaxLength = 300
            Me.columnsih_rmk.MaxLength = 300
            Me.columnsid_itmno.MaxLength = 20
            Me.columnsid_smpunt.MaxLength = 6
            Me.columnsid_colcde.MaxLength = 30
            Me.columnsid_shpqtyStr.MaxLength = 10
            Me.columncbi_cussna.MaxLength = 20
            Me.columncbi_cusnam.MaxLength = 40
            Me.columnsmpunt.MaxLength = 10
            Me.columnyco_conam.MaxLength = 100
            Me.columnyco_addr.MaxLength = 200
            Me.columnyco_addrc.MaxLength = 200
            Me.columnyco_phoneno.MaxLength = 50
            Me.columnyco_faxno.MaxLength = 50
            Me.columnyco_logoimgpth.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSAR00007Row() As SAR00007Row
            Return CType(Me.NewRow,SAR00007Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SAR00007Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SAR00007Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SAR00007RowChangedEvent) Is Nothing) Then
                RaiseEvent SAR00007RowChanged(Me, New SAR00007RowChangeEvent(CType(e.Row,SAR00007Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SAR00007RowChangingEvent) Is Nothing) Then
                RaiseEvent SAR00007RowChanging(Me, New SAR00007RowChangeEvent(CType(e.Row,SAR00007Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SAR00007RowDeletedEvent) Is Nothing) Then
                RaiseEvent SAR00007RowDeleted(Me, New SAR00007RowChangeEvent(CType(e.Row,SAR00007Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SAR00007RowDeletingEvent) Is Nothing) Then
                RaiseEvent SAR00007RowDeleting(Me, New SAR00007RowChangeEvent(CType(e.Row,SAR00007Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSAR00007Row(ByVal row As SAR00007Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As SAR00007Report = New SAR00007Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SAR00007DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SAR00007Row
        Inherits Global.System.Data.DataRow
        
        Private tableSAR00007 As SAR00007DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSAR00007 = CType(Me.Table,SAR00007DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_invno() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_invnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_invno' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_invnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_cocde() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_cocdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_cocde' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_cocdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_cus1no() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_cus1noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_cus1no' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_cus1noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_cus1ad() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_cus1adColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_cus1ad' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_cus1adColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_cus1st() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_cus1stColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_cus1st' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_cus1stColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_cus1cy() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_cus1cyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_cus1cy' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_cus1cyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_cus1zp() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_cus1zpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_cus1zp' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_cus1zpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_cus1cp() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_cus1cpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_cus1cp' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_cus1cpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_rvsdat() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_rvsdatColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_rvsdat' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_rvsdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_shprmk() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_shprmkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_shprmk' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_shprmkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_rmk() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sih_rmkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_rmk' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sih_rmkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sid_itmno() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sid_itmnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sid_itmno' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sid_itmnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sid_smpunt() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sid_smpuntColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sid_smpunt' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sid_smpuntColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sid_colcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sid_colcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sid_colcde' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sid_colcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sid_shpqty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sid_shpqtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sid_shpqty' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sid_shpqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sid_shpqtyStr() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.sid_shpqtyStrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sid_shpqtyStr' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.sid_shpqtyStrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cbi_cussna() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.cbi_cussnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cbi_cussna' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.cbi_cussnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cbi_cusnam() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.cbi_cusnamColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cbi_cusnam' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.cbi_cusnamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property smpunt() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.smpuntColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'smpunt' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.smpuntColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property yco_conam() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.yco_conamColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yco_conam' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.yco_conamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property yco_addr() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.yco_addrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yco_addr' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.yco_addrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property yco_addrc() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.yco_addrcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yco_addrc' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.yco_addrcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property yco_phoneno() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.yco_phonenoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yco_phoneno' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.yco_phonenoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property yco_faxno() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.yco_faxnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yco_faxno' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.yco_faxnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property yco_logoimgpth() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.yco_logoimgpthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yco_logoimgpth' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.yco_logoimgpthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property compLogo() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableSAR00007.compLogoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compLogo' in table 'SAR00007' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAR00007.compLogoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_invnoNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_invnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_invnoNull()
            Me(Me.tableSAR00007.sih_invnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_cocdeNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_cocdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_cocdeNull()
            Me(Me.tableSAR00007.sih_cocdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_cus1noNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_cus1noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_cus1noNull()
            Me(Me.tableSAR00007.sih_cus1noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_cus1adNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_cus1adColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_cus1adNull()
            Me(Me.tableSAR00007.sih_cus1adColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_cus1stNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_cus1stColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_cus1stNull()
            Me(Me.tableSAR00007.sih_cus1stColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_cus1cyNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_cus1cyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_cus1cyNull()
            Me(Me.tableSAR00007.sih_cus1cyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_cus1zpNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_cus1zpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_cus1zpNull()
            Me(Me.tableSAR00007.sih_cus1zpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_cus1cpNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_cus1cpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_cus1cpNull()
            Me(Me.tableSAR00007.sih_cus1cpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_rvsdatNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_rvsdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_rvsdatNull()
            Me(Me.tableSAR00007.sih_rvsdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_shprmkNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_shprmkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_shprmkNull()
            Me(Me.tableSAR00007.sih_shprmkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_rmkNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sih_rmkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_rmkNull()
            Me(Me.tableSAR00007.sih_rmkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issid_itmnoNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sid_itmnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsid_itmnoNull()
            Me(Me.tableSAR00007.sid_itmnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issid_smpuntNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sid_smpuntColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsid_smpuntNull()
            Me(Me.tableSAR00007.sid_smpuntColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issid_colcdeNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sid_colcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsid_colcdeNull()
            Me(Me.tableSAR00007.sid_colcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issid_shpqtyNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sid_shpqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsid_shpqtyNull()
            Me(Me.tableSAR00007.sid_shpqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issid_shpqtyStrNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.sid_shpqtyStrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsid_shpqtyStrNull()
            Me(Me.tableSAR00007.sid_shpqtyStrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscbi_cussnaNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.cbi_cussnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcbi_cussnaNull()
            Me(Me.tableSAR00007.cbi_cussnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscbi_cusnamNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.cbi_cusnamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcbi_cusnamNull()
            Me(Me.tableSAR00007.cbi_cusnamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssmpuntNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.smpuntColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsmpuntNull()
            Me(Me.tableSAR00007.smpuntColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isyco_conamNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.yco_conamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setyco_conamNull()
            Me(Me.tableSAR00007.yco_conamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isyco_addrNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.yco_addrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setyco_addrNull()
            Me(Me.tableSAR00007.yco_addrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isyco_addrcNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.yco_addrcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setyco_addrcNull()
            Me(Me.tableSAR00007.yco_addrcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isyco_phonenoNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.yco_phonenoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setyco_phonenoNull()
            Me(Me.tableSAR00007.yco_phonenoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isyco_faxnoNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.yco_faxnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setyco_faxnoNull()
            Me(Me.tableSAR00007.yco_faxnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isyco_logoimgpthNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.yco_logoimgpthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setyco_logoimgpthNull()
            Me(Me.tableSAR00007.yco_logoimgpthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscompLogoNull() As Boolean
            Return Me.IsNull(Me.tableSAR00007.compLogoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcompLogoNull()
            Me(Me.tableSAR00007.compLogoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SAR00007RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SAR00007Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SAR00007Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SAR00007Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
