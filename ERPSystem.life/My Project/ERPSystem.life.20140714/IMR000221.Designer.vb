'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3655
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsIMR00022"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsIMR00022
    Inherits Global.System.Data.DataSet
    
    Private tableIMR00022Rpt As IMR00022RptDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("IMR00022Rpt")) Is Nothing) Then
                MyBase.Tables.Add(New IMR00022RptDataTable(ds.Tables("IMR00022Rpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IMR00022Rpt() As IMR00022RptDataTable
        Get
            Return Me.tableIMR00022Rpt
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsIMR00022 = CType(MyBase.Clone,dsIMR00022)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("IMR00022Rpt")) Is Nothing) Then
                MyBase.Tables.Add(New IMR00022RptDataTable(ds.Tables("IMR00022Rpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableIMR00022Rpt = CType(MyBase.Tables("IMR00022Rpt"),IMR00022RptDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIMR00022Rpt) Is Nothing) Then
                Me.tableIMR00022Rpt.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsIMR00022"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet15.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableIMR00022Rpt = New IMR00022RptDataTable
        MyBase.Tables.Add(Me.tableIMR00022Rpt)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIMR00022Rpt() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsIMR00022 = New dsIMR00022
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub IMR00022RptRowChangeEventHandler(ByVal sender As Object, ByVal e As IMR00022RptRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IMR00022RptDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnpbh_bompo As Global.System.Data.DataColumn
        
        Private columnvendor As Global.System.Data.DataColumn
        
        Private columnpbh_purord As Global.System.Data.DataColumn
        
        Private _columnOvendor_ As Global.System.Data.DataColumn
        
        Private columncustomer As Global.System.Data.DataColumn
        
        Private columnpbh_issdat As Global.System.Data.DataColumn
        
        Private columnpbh_shpstr As Global.System.Data.DataColumn
        
        Private columnpbh_shpend As Global.System.Data.DataColumn
        
        Private columnpbh_curcde As Global.System.Data.DataColumn
        
        Private columnpbh_disamt As Global.System.Data.DataColumn
        
        Private _columninput_cocde_ As Global.System.Data.DataColumn
        
        Private columninput_venFm As Global.System.Data.DataColumn
        
        Private columnDataColumn1 As Global.System.Data.DataColumn
        
        Private columninput_venTo As Global.System.Data.DataColumn
        
        Private columninput_bomPOFm As Global.System.Data.DataColumn
        
        Private columninput_bomPOTo As Global.System.Data.DataColumn
        
        Private columninput_dateFm As Global.System.Data.DataColumn
        
        Private columninput_dateTo As Global.System.Data.DataColumn
        
        Private columninput_sort As Global.System.Data.DataColumn
        
        Private columninput_creusr As Global.System.Data.DataColumn
        
        Private columncompName As Global.System.Data.DataColumn
        
        Private columnpoh_shpstr As Global.System.Data.DataColumn
        
        Private columnpoh_shpend As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IMR00022Rpt"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pbh_bompoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpbh_bompo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vendorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pbh_purordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpbh_purord
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _Ovendor_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnOvendor_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pbh_issdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpbh_issdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pbh_shpstrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpbh_shpstr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pbh_shpendColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpbh_shpend
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pbh_curcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpbh_curcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pbh_disamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpbh_disamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _input_cocde_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columninput_cocde_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_venFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_venFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DataColumn1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_venToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_venTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_bomPOFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_bomPOFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_bomPOToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_bomPOTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_dateFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_dateFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_dateToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_dateTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_sortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_sort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_creusrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_creusr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property compNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_shpstrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_shpstr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_shpendColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_shpend
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IMR00022RptRow
            Get
                Return CType(Me.Rows(index),IMR00022RptRow)
            End Get
        End Property
        
        Public Event IMR00022RptRowChanging As IMR00022RptRowChangeEventHandler
        
        Public Event IMR00022RptRowChanged As IMR00022RptRowChangeEventHandler
        
        Public Event IMR00022RptRowDeleting As IMR00022RptRowChangeEventHandler
        
        Public Event IMR00022RptRowDeleted As IMR00022RptRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIMR00022RptRow(ByVal row As IMR00022RptRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIMR00022RptRow( _
                    ByVal pbh_bompo As String,  _
                    ByVal vendor As String,  _
                    ByVal pbh_purord As String,  _
                    ByVal _Ovendor_ As String,  _
                    ByVal customer As String,  _
                    ByVal pbh_issdat As String,  _
                    ByVal pbh_shpstr As String,  _
                    ByVal pbh_shpend As String,  _
                    ByVal pbh_curcde As String,  _
                    ByVal pbh_disamt As String,  _
                    ByVal _input_cocde_ As String,  _
                    ByVal input_venFm As String,  _
                    ByVal DataColumn1 As String,  _
                    ByVal input_venTo As String,  _
                    ByVal input_bomPOFm As String,  _
                    ByVal input_bomPOTo As String,  _
                    ByVal input_dateFm As String,  _
                    ByVal input_dateTo As String,  _
                    ByVal input_sort As String,  _
                    ByVal input_creusr As String,  _
                    ByVal compName As String,  _
                    ByVal poh_shpstr As String,  _
                    ByVal poh_shpend As String) As IMR00022RptRow
            Dim rowIMR00022RptRow As IMR00022RptRow = CType(Me.NewRow,IMR00022RptRow)
            Dim columnValuesArray() As Object = New Object() {pbh_bompo, vendor, pbh_purord, _Ovendor_, customer, pbh_issdat, pbh_shpstr, pbh_shpend, pbh_curcde, pbh_disamt, _input_cocde_, input_venFm, DataColumn1, input_venTo, input_bomPOFm, input_bomPOTo, input_dateFm, input_dateTo, input_sort, input_creusr, compName, poh_shpstr, poh_shpend}
            rowIMR00022RptRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIMR00022RptRow)
            Return rowIMR00022RptRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IMR00022RptDataTable = CType(MyBase.Clone,IMR00022RptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IMR00022RptDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnpbh_bompo = MyBase.Columns("pbh_bompo")
            Me.columnvendor = MyBase.Columns("vendor")
            Me.columnpbh_purord = MyBase.Columns("pbh_purord")
            Me._columnOvendor_ = MyBase.Columns("Ovendor"&Global.Microsoft.VisualBasic.ChrW(9))
            Me.columncustomer = MyBase.Columns("customer")
            Me.columnpbh_issdat = MyBase.Columns("pbh_issdat")
            Me.columnpbh_shpstr = MyBase.Columns("pbh_shpstr")
            Me.columnpbh_shpend = MyBase.Columns("pbh_shpend")
            Me.columnpbh_curcde = MyBase.Columns("pbh_curcde")
            Me.columnpbh_disamt = MyBase.Columns("pbh_disamt")
            Me._columninput_cocde_ = MyBase.Columns("input_cocde"&Global.Microsoft.VisualBasic.ChrW(9))
            Me.columninput_venFm = MyBase.Columns("input_venFm")
            Me.columnDataColumn1 = MyBase.Columns("DataColumn1")
            Me.columninput_venTo = MyBase.Columns("input_venTo")
            Me.columninput_bomPOFm = MyBase.Columns("input_bomPOFm")
            Me.columninput_bomPOTo = MyBase.Columns("input_bomPOTo")
            Me.columninput_dateFm = MyBase.Columns("input_dateFm")
            Me.columninput_dateTo = MyBase.Columns("input_dateTo")
            Me.columninput_sort = MyBase.Columns("input_sort")
            Me.columninput_creusr = MyBase.Columns("input_creusr")
            Me.columncompName = MyBase.Columns("compName")
            Me.columnpoh_shpstr = MyBase.Columns("poh_shpstr")
            Me.columnpoh_shpend = MyBase.Columns("poh_shpend")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnpbh_bompo = New Global.System.Data.DataColumn("pbh_bompo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpbh_bompo)
            Me.columnvendor = New Global.System.Data.DataColumn("vendor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendor)
            Me.columnpbh_purord = New Global.System.Data.DataColumn("pbh_purord", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpbh_purord)
            Me._columnOvendor_ = New Global.System.Data.DataColumn("Ovendor"&Global.Microsoft.VisualBasic.ChrW(9), GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnOvendor_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnOvendor_")
            Me._columnOvendor_.ExtendedProperties.Add("Generator_UserColumnName", "Ovendor"&Global.Microsoft.VisualBasic.ChrW(9))
            MyBase.Columns.Add(Me._columnOvendor_)
            Me.columncustomer = New Global.System.Data.DataColumn("customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomer)
            Me.columnpbh_issdat = New Global.System.Data.DataColumn("pbh_issdat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpbh_issdat)
            Me.columnpbh_shpstr = New Global.System.Data.DataColumn("pbh_shpstr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpbh_shpstr)
            Me.columnpbh_shpend = New Global.System.Data.DataColumn("pbh_shpend", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpbh_shpend)
            Me.columnpbh_curcde = New Global.System.Data.DataColumn("pbh_curcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpbh_curcde)
            Me.columnpbh_disamt = New Global.System.Data.DataColumn("pbh_disamt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpbh_disamt)
            Me._columninput_cocde_ = New Global.System.Data.DataColumn("input_cocde"&Global.Microsoft.VisualBasic.ChrW(9), GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columninput_cocde_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columninput_cocde_")
            Me._columninput_cocde_.ExtendedProperties.Add("Generator_UserColumnName", "input_cocde"&Global.Microsoft.VisualBasic.ChrW(9))
            MyBase.Columns.Add(Me._columninput_cocde_)
            Me.columninput_venFm = New Global.System.Data.DataColumn("input_venFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_venFm)
            Me.columnDataColumn1 = New Global.System.Data.DataColumn("DataColumn1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataColumn1)
            Me.columninput_venTo = New Global.System.Data.DataColumn("input_venTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_venTo)
            Me.columninput_bomPOFm = New Global.System.Data.DataColumn("input_bomPOFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_bomPOFm)
            Me.columninput_bomPOTo = New Global.System.Data.DataColumn("input_bomPOTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_bomPOTo)
            Me.columninput_dateFm = New Global.System.Data.DataColumn("input_dateFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_dateFm)
            Me.columninput_dateTo = New Global.System.Data.DataColumn("input_dateTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_dateTo)
            Me.columninput_sort = New Global.System.Data.DataColumn("input_sort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_sort)
            Me.columninput_creusr = New Global.System.Data.DataColumn("input_creusr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_creusr)
            Me.columncompName = New Global.System.Data.DataColumn("compName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompName)
            Me.columnpoh_shpstr = New Global.System.Data.DataColumn("poh_shpstr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_shpstr)
            Me.columnpoh_shpend = New Global.System.Data.DataColumn("poh_shpend", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_shpend)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIMR00022RptRow() As IMR00022RptRow
            Return CType(Me.NewRow,IMR00022RptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IMR00022RptRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IMR00022RptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IMR00022RptRowChangedEvent) Is Nothing) Then
                RaiseEvent IMR00022RptRowChanged(Me, New IMR00022RptRowChangeEvent(CType(e.Row,IMR00022RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IMR00022RptRowChangingEvent) Is Nothing) Then
                RaiseEvent IMR00022RptRowChanging(Me, New IMR00022RptRowChangeEvent(CType(e.Row,IMR00022RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IMR00022RptRowDeletedEvent) Is Nothing) Then
                RaiseEvent IMR00022RptRowDeleted(Me, New IMR00022RptRowChangeEvent(CType(e.Row,IMR00022RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IMR00022RptRowDeletingEvent) Is Nothing) Then
                RaiseEvent IMR00022RptRowDeleting(Me, New IMR00022RptRowChangeEvent(CType(e.Row,IMR00022RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIMR00022RptRow(ByVal row As IMR00022RptRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsIMR00022 = New dsIMR00022
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IMR00022RptDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IMR00022RptRow
        Inherits Global.System.Data.DataRow
        
        Private tableIMR00022Rpt As IMR00022RptDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIMR00022Rpt = CType(Me.Table,IMR00022RptDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pbh_bompo() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.pbh_bompoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pbh_bompo' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.pbh_bompoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vendor() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.vendorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vendor' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.vendorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pbh_purord() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.pbh_purordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pbh_purord' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.pbh_purordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Ovendor_() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt._Ovendor_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ovendor"&Global.Microsoft.VisualBasic.ChrW(9)&"' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt._Ovendor_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customer() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.customerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customer' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.customerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pbh_issdat() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.pbh_issdatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pbh_issdat' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.pbh_issdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pbh_shpstr() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.pbh_shpstrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pbh_shpstr' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.pbh_shpstrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pbh_shpend() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.pbh_shpendColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pbh_shpend' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.pbh_shpendColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pbh_curcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.pbh_curcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pbh_curcde' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.pbh_curcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pbh_disamt() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.pbh_disamtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pbh_disamt' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.pbh_disamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _input_cocde_() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt._input_cocde_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_cocde"&Global.Microsoft.VisualBasic.ChrW(9)&"' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt._input_cocde_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_venFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.input_venFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_venFm' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.input_venFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DataColumn1() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.DataColumn1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataColumn1' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.DataColumn1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_venTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.input_venToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_venTo' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.input_venToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_bomPOFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.input_bomPOFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_bomPOFm' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.input_bomPOFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_bomPOTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.input_bomPOToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_bomPOTo' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.input_bomPOToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_dateFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.input_dateFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_dateFm' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.input_dateFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_dateTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.input_dateToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_dateTo' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.input_dateToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_sort() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.input_sortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_sort' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.input_sortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_creusr() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.input_creusrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_creusr' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.input_creusrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property compName() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.compNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compName' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.compNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_shpstr() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.poh_shpstrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_shpstr' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.poh_shpstrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_shpend() As String
            Get
                Try 
                    Return CType(Me(Me.tableIMR00022Rpt.poh_shpendColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_shpend' in table 'IMR00022Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIMR00022Rpt.poh_shpendColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispbh_bompoNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.pbh_bompoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpbh_bompoNull()
            Me(Me.tableIMR00022Rpt.pbh_bompoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsvendorNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.vendorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetvendorNull()
            Me(Me.tableIMR00022Rpt.vendorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispbh_purordNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.pbh_purordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpbh_purordNull()
            Me(Me.tableIMR00022Rpt.pbh_purordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_Ovendor_Null() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt._Ovendor_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_Ovendor_Null()
            Me(Me.tableIMR00022Rpt._Ovendor_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscustomerNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.customerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcustomerNull()
            Me(Me.tableIMR00022Rpt.customerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispbh_issdatNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.pbh_issdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpbh_issdatNull()
            Me(Me.tableIMR00022Rpt.pbh_issdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispbh_shpstrNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.pbh_shpstrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpbh_shpstrNull()
            Me(Me.tableIMR00022Rpt.pbh_shpstrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispbh_shpendNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.pbh_shpendColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpbh_shpendNull()
            Me(Me.tableIMR00022Rpt.pbh_shpendColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispbh_curcdeNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.pbh_curcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpbh_curcdeNull()
            Me(Me.tableIMR00022Rpt.pbh_curcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispbh_disamtNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.pbh_disamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpbh_disamtNull()
            Me(Me.tableIMR00022Rpt.pbh_disamtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_input_cocde_Null() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt._input_cocde_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_input_cocde_Null()
            Me(Me.tableIMR00022Rpt._input_cocde_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_venFmNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.input_venFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_venFmNull()
            Me(Me.tableIMR00022Rpt.input_venFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDataColumn1Null() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.DataColumn1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDataColumn1Null()
            Me(Me.tableIMR00022Rpt.DataColumn1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_venToNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.input_venToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_venToNull()
            Me(Me.tableIMR00022Rpt.input_venToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_bomPOFmNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.input_bomPOFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_bomPOFmNull()
            Me(Me.tableIMR00022Rpt.input_bomPOFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_bomPOToNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.input_bomPOToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_bomPOToNull()
            Me(Me.tableIMR00022Rpt.input_bomPOToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_dateFmNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.input_dateFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_dateFmNull()
            Me(Me.tableIMR00022Rpt.input_dateFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_dateToNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.input_dateToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_dateToNull()
            Me(Me.tableIMR00022Rpt.input_dateToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_sortNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.input_sortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_sortNull()
            Me(Me.tableIMR00022Rpt.input_sortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_creusrNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.input_creusrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_creusrNull()
            Me(Me.tableIMR00022Rpt.input_creusrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscompNameNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.compNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcompNameNull()
            Me(Me.tableIMR00022Rpt.compNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_shpstrNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.poh_shpstrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_shpstrNull()
            Me(Me.tableIMR00022Rpt.poh_shpstrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_shpendNull() As Boolean
            Return Me.IsNull(Me.tableIMR00022Rpt.poh_shpendColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_shpendNull()
            Me(Me.tableIMR00022Rpt.poh_shpendColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IMR00022RptRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IMR00022RptRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IMR00022RptRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IMR00022RptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
