'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3655
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsMSR00033"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsMSR00033
    Inherits Global.System.Data.DataSet
    
    Private tableMSR00033Rpt As MSR00033RptDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MSR00033Rpt")) Is Nothing) Then
                MyBase.Tables.Add(New MSR00033RptDataTable(ds.Tables("MSR00033Rpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MSR00033Rpt() As MSR00033RptDataTable
        Get
            Return Me.tableMSR00033Rpt
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsMSR00033 = CType(MyBase.Clone,dsMSR00033)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("MSR00033Rpt")) Is Nothing) Then
                MyBase.Tables.Add(New MSR00033RptDataTable(ds.Tables("MSR00033Rpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMSR00033Rpt = CType(MyBase.Tables("MSR00033Rpt"),MSR00033RptDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMSR00033Rpt) Is Nothing) Then
                Me.tableMSR00033Rpt.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsMSR00033"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet9.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMSR00033Rpt = New MSR00033RptDataTable
        MyBase.Tables.Add(Me.tableMSR00033Rpt)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMSR00033Rpt() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsMSR00033 = New dsMSR00033
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub MSR00033RptRowChangeEventHandler(ByVal sender As Object, ByVal e As MSR00033RptRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MSR00033RptDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnInput_Cocde As Global.System.Data.DataColumn
        
        Private columnInput_CUFm As Global.System.Data.DataColumn
        
        Private columnInput_CUTo As Global.System.Data.DataColumn
        
        Private columnInput_SIFm As Global.System.Data.DataColumn
        
        Private columnInput_SITo As Global.System.Data.DataColumn
        
        Private columnInput_VenCdeFm As Global.System.Data.DataColumn
        
        Private columnInput_VenCdeTo As Global.System.Data.DataColumn
        
        Private columnInput_VenSubCdeFm As Global.System.Data.DataColumn
        
        Private columnInput_VenSubCdeTo As Global.System.Data.DataColumn
        
        Private columnInput_VenTypFm As Global.System.Data.DataColumn
        
        Private columnInput_VenTypTo As Global.System.Data.DataColumn
        
        Private columnInput_IssFm_ As Global.System.Data.DataColumn
        
        Private columnInput_IssTo_ As Global.System.Data.DataColumn
        
        Private columnInput_Status_ As Global.System.Data.DataColumn
        
        Private columnInput_Sort_ As Global.System.Data.DataColumn
        
        Private columnsih_invno As Global.System.Data.DataColumn
        
        Private columnsih_invsts As Global.System.Data.DataColumn
        
        Private columnPri_Cust As Global.System.Data.DataColumn
        
        Private columnSec_Cust As Global.System.Data.DataColumn
        
        Private columnsih_issdat As Global.System.Data.DataColumn
        
        Private columnsih_curcde As Global.System.Data.DataColumn
        
        Private columnsih_netamt As Global.System.Data.DataColumn
        
        Private columnsih_ttlamt As Global.System.Data.DataColumn
        
        Private columnUSD_Net As Global.System.Data.DataColumn
        
        Private columnHKD_Net As Global.System.Data.DataColumn
        
        Private columnUSD_TTL As Global.System.Data.DataColumn
        
        Private columnHKD_TTL As Global.System.Data.DataColumn
        
        Private columnVenCde As Global.System.Data.DataColumn
        
        Private columnVenTyp As Global.System.Data.DataColumn
        
        Private columncompName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MSR00033Rpt"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_CocdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_Cocde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_CUFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_CUFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_CUToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_CUTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_SIFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_SIFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_SIToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_SITo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_VenCdeFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_VenCdeFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_VenCdeToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_VenCdeTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_VenSubCdeFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_VenSubCdeFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_VenSubCdeToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_VenSubCdeTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_VenTypFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_VenTypFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_VenTypToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_VenTypTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_IssFm_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_IssFm_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_IssTo_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_IssTo_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_Status_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_Status_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Input_Sort_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInput_Sort_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_invnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_invno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_invstsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_invsts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Pri_CustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPri_Cust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sec_CustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSec_Cust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_issdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_issdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_curcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_curcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_netamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_netamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sih_ttlamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsih_ttlamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USD_NetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSD_Net
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HKD_NetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHKD_Net
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USD_TTLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSD_TTL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HKD_TTLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHKD_TTL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VenCdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVenCde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VenTypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVenTyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property compNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MSR00033RptRow
            Get
                Return CType(Me.Rows(index),MSR00033RptRow)
            End Get
        End Property
        
        Public Event MSR00033RptRowChanging As MSR00033RptRowChangeEventHandler
        
        Public Event MSR00033RptRowChanged As MSR00033RptRowChangeEventHandler
        
        Public Event MSR00033RptRowDeleting As MSR00033RptRowChangeEventHandler
        
        Public Event MSR00033RptRowDeleted As MSR00033RptRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMSR00033RptRow(ByVal row As MSR00033RptRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMSR00033RptRow( _
                    ByVal Input_Cocde As String,  _
                    ByVal Input_CUFm As String,  _
                    ByVal Input_CUTo As String,  _
                    ByVal Input_SIFm As String,  _
                    ByVal Input_SITo As String,  _
                    ByVal Input_VenCdeFm As String,  _
                    ByVal Input_VenCdeTo As String,  _
                    ByVal Input_VenSubCdeFm As String,  _
                    ByVal Input_VenSubCdeTo As String,  _
                    ByVal Input_VenTypFm As String,  _
                    ByVal Input_VenTypTo As String,  _
                    ByVal Input_IssFm_ As String,  _
                    ByVal Input_IssTo_ As String,  _
                    ByVal Input_Status_ As String,  _
                    ByVal Input_Sort_ As String,  _
                    ByVal sih_invno As String,  _
                    ByVal sih_invsts As String,  _
                    ByVal Pri_Cust As String,  _
                    ByVal Sec_Cust As String,  _
                    ByVal sih_issdat As String,  _
                    ByVal sih_curcde As String,  _
                    ByVal sih_netamt As Double,  _
                    ByVal sih_ttlamt As Double,  _
                    ByVal USD_Net As Double,  _
                    ByVal HKD_Net As Double,  _
                    ByVal USD_TTL As Double,  _
                    ByVal HKD_TTL As Double,  _
                    ByVal VenCde As String,  _
                    ByVal VenTyp As String,  _
                    ByVal compName As String) As MSR00033RptRow
            Dim rowMSR00033RptRow As MSR00033RptRow = CType(Me.NewRow,MSR00033RptRow)
            Dim columnValuesArray() As Object = New Object() {Input_Cocde, Input_CUFm, Input_CUTo, Input_SIFm, Input_SITo, Input_VenCdeFm, Input_VenCdeTo, Input_VenSubCdeFm, Input_VenSubCdeTo, Input_VenTypFm, Input_VenTypTo, Input_IssFm_, Input_IssTo_, Input_Status_, Input_Sort_, sih_invno, sih_invsts, Pri_Cust, Sec_Cust, sih_issdat, sih_curcde, sih_netamt, sih_ttlamt, USD_Net, HKD_Net, USD_TTL, HKD_TTL, VenCde, VenTyp, compName}
            rowMSR00033RptRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMSR00033RptRow)
            Return rowMSR00033RptRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MSR00033RptDataTable = CType(MyBase.Clone,MSR00033RptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MSR00033RptDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnInput_Cocde = MyBase.Columns("Input_Cocde")
            Me.columnInput_CUFm = MyBase.Columns("Input_CUFm")
            Me.columnInput_CUTo = MyBase.Columns("Input_CUTo")
            Me.columnInput_SIFm = MyBase.Columns("Input_SIFm")
            Me.columnInput_SITo = MyBase.Columns("Input_SITo")
            Me.columnInput_VenCdeFm = MyBase.Columns("Input_VenCdeFm")
            Me.columnInput_VenCdeTo = MyBase.Columns("Input_VenCdeTo")
            Me.columnInput_VenSubCdeFm = MyBase.Columns("Input_VenSubCdeFm")
            Me.columnInput_VenSubCdeTo = MyBase.Columns("Input_VenSubCdeTo")
            Me.columnInput_VenTypFm = MyBase.Columns("Input_VenTypFm")
            Me.columnInput_VenTypTo = MyBase.Columns("Input_VenTypTo")
            Me.columnInput_IssFm_ = MyBase.Columns("Input_IssFm ")
            Me.columnInput_IssTo_ = MyBase.Columns("Input_IssTo ")
            Me.columnInput_Status_ = MyBase.Columns("Input_Status ")
            Me.columnInput_Sort_ = MyBase.Columns("Input_Sort ")
            Me.columnsih_invno = MyBase.Columns("sih_invno")
            Me.columnsih_invsts = MyBase.Columns("sih_invsts")
            Me.columnPri_Cust = MyBase.Columns("Pri_Cust")
            Me.columnSec_Cust = MyBase.Columns("Sec_Cust")
            Me.columnsih_issdat = MyBase.Columns("sih_issdat")
            Me.columnsih_curcde = MyBase.Columns("sih_curcde")
            Me.columnsih_netamt = MyBase.Columns("sih_netamt")
            Me.columnsih_ttlamt = MyBase.Columns("sih_ttlamt")
            Me.columnUSD_Net = MyBase.Columns("USD_Net")
            Me.columnHKD_Net = MyBase.Columns("HKD_Net")
            Me.columnUSD_TTL = MyBase.Columns("USD_TTL")
            Me.columnHKD_TTL = MyBase.Columns("HKD_TTL")
            Me.columnVenCde = MyBase.Columns("VenCde")
            Me.columnVenTyp = MyBase.Columns("VenTyp")
            Me.columncompName = MyBase.Columns("compName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnInput_Cocde = New Global.System.Data.DataColumn("Input_Cocde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_Cocde)
            Me.columnInput_CUFm = New Global.System.Data.DataColumn("Input_CUFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_CUFm)
            Me.columnInput_CUTo = New Global.System.Data.DataColumn("Input_CUTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_CUTo)
            Me.columnInput_SIFm = New Global.System.Data.DataColumn("Input_SIFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_SIFm)
            Me.columnInput_SITo = New Global.System.Data.DataColumn("Input_SITo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_SITo)
            Me.columnInput_VenCdeFm = New Global.System.Data.DataColumn("Input_VenCdeFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_VenCdeFm)
            Me.columnInput_VenCdeTo = New Global.System.Data.DataColumn("Input_VenCdeTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_VenCdeTo)
            Me.columnInput_VenSubCdeFm = New Global.System.Data.DataColumn("Input_VenSubCdeFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_VenSubCdeFm)
            Me.columnInput_VenSubCdeTo = New Global.System.Data.DataColumn("Input_VenSubCdeTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_VenSubCdeTo)
            Me.columnInput_VenTypFm = New Global.System.Data.DataColumn("Input_VenTypFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_VenTypFm)
            Me.columnInput_VenTypTo = New Global.System.Data.DataColumn("Input_VenTypTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_VenTypTo)
            Me.columnInput_IssFm_ = New Global.System.Data.DataColumn("Input_IssFm ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_IssFm_)
            Me.columnInput_IssTo_ = New Global.System.Data.DataColumn("Input_IssTo ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_IssTo_)
            Me.columnInput_Status_ = New Global.System.Data.DataColumn("Input_Status ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_Status_)
            Me.columnInput_Sort_ = New Global.System.Data.DataColumn("Input_Sort ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInput_Sort_)
            Me.columnsih_invno = New Global.System.Data.DataColumn("sih_invno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_invno)
            Me.columnsih_invsts = New Global.System.Data.DataColumn("sih_invsts", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_invsts)
            Me.columnPri_Cust = New Global.System.Data.DataColumn("Pri_Cust", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPri_Cust)
            Me.columnSec_Cust = New Global.System.Data.DataColumn("Sec_Cust", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSec_Cust)
            Me.columnsih_issdat = New Global.System.Data.DataColumn("sih_issdat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_issdat)
            Me.columnsih_curcde = New Global.System.Data.DataColumn("sih_curcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_curcde)
            Me.columnsih_netamt = New Global.System.Data.DataColumn("sih_netamt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_netamt)
            Me.columnsih_ttlamt = New Global.System.Data.DataColumn("sih_ttlamt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsih_ttlamt)
            Me.columnUSD_Net = New Global.System.Data.DataColumn("USD_Net", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSD_Net)
            Me.columnHKD_Net = New Global.System.Data.DataColumn("HKD_Net", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHKD_Net)
            Me.columnUSD_TTL = New Global.System.Data.DataColumn("USD_TTL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSD_TTL)
            Me.columnHKD_TTL = New Global.System.Data.DataColumn("HKD_TTL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHKD_TTL)
            Me.columnVenCde = New Global.System.Data.DataColumn("VenCde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVenCde)
            Me.columnVenTyp = New Global.System.Data.DataColumn("VenTyp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVenTyp)
            Me.columncompName = New Global.System.Data.DataColumn("compName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompName)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMSR00033RptRow() As MSR00033RptRow
            Return CType(Me.NewRow,MSR00033RptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MSR00033RptRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MSR00033RptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MSR00033RptRowChangedEvent) Is Nothing) Then
                RaiseEvent MSR00033RptRowChanged(Me, New MSR00033RptRowChangeEvent(CType(e.Row,MSR00033RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MSR00033RptRowChangingEvent) Is Nothing) Then
                RaiseEvent MSR00033RptRowChanging(Me, New MSR00033RptRowChangeEvent(CType(e.Row,MSR00033RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MSR00033RptRowDeletedEvent) Is Nothing) Then
                RaiseEvent MSR00033RptRowDeleted(Me, New MSR00033RptRowChangeEvent(CType(e.Row,MSR00033RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MSR00033RptRowDeletingEvent) Is Nothing) Then
                RaiseEvent MSR00033RptRowDeleting(Me, New MSR00033RptRowChangeEvent(CType(e.Row,MSR00033RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMSR00033RptRow(ByVal row As MSR00033RptRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMSR00033 = New dsMSR00033
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MSR00033RptDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MSR00033RptRow
        Inherits Global.System.Data.DataRow
        
        Private tableMSR00033Rpt As MSR00033RptDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMSR00033Rpt = CType(Me.Table,MSR00033RptDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_Cocde() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_CocdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_Cocde' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_CocdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_CUFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_CUFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_CUFm' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_CUFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_CUTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_CUToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_CUTo' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_CUToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_SIFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_SIFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_SIFm' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_SIFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_SITo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_SIToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_SITo' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_SIToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_VenCdeFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_VenCdeFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_VenCdeFm' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_VenCdeFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_VenCdeTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_VenCdeToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_VenCdeTo' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_VenCdeToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_VenSubCdeFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_VenSubCdeFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_VenSubCdeFm' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_VenSubCdeFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_VenSubCdeTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_VenSubCdeToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_VenSubCdeTo' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_VenSubCdeToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_VenTypFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_VenTypFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_VenTypFm' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_VenTypFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_VenTypTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_VenTypToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_VenTypTo' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_VenTypToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_IssFm_() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_IssFm_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_IssFm ' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_IssFm_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_IssTo_() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_IssTo_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_IssTo ' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_IssTo_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_Status_() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_Status_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_Status ' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_Status_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Input_Sort_() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Input_Sort_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Input_Sort ' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Input_Sort_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_invno() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.sih_invnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_invno' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.sih_invnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_invsts() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.sih_invstsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_invsts' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.sih_invstsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pri_Cust() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Pri_CustColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pri_Cust' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Pri_CustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sec_Cust() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.Sec_CustColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sec_Cust' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.Sec_CustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_issdat() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.sih_issdatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_issdat' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.sih_issdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_curcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.sih_curcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_curcde' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.sih_curcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_netamt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.sih_netamtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_netamt' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.sih_netamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sih_ttlamt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.sih_ttlamtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sih_ttlamt' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.sih_ttlamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USD_Net() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.USD_NetColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USD_Net' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.USD_NetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HKD_Net() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.HKD_NetColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HKD_Net' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.HKD_NetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USD_TTL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.USD_TTLColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USD_TTL' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.USD_TTLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HKD_TTL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.HKD_TTLColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HKD_TTL' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.HKD_TTLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VenCde() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.VenCdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VenCde' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.VenCdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VenTyp() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.VenTypColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VenTyp' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.VenTypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property compName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00033Rpt.compNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compName' in table 'MSR00033Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00033Rpt.compNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_CocdeNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_CocdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_CocdeNull()
            Me(Me.tableMSR00033Rpt.Input_CocdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_CUFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_CUFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_CUFmNull()
            Me(Me.tableMSR00033Rpt.Input_CUFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_CUToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_CUToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_CUToNull()
            Me(Me.tableMSR00033Rpt.Input_CUToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_SIFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_SIFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_SIFmNull()
            Me(Me.tableMSR00033Rpt.Input_SIFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_SIToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_SIToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_SIToNull()
            Me(Me.tableMSR00033Rpt.Input_SIToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_VenCdeFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_VenCdeFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_VenCdeFmNull()
            Me(Me.tableMSR00033Rpt.Input_VenCdeFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_VenCdeToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_VenCdeToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_VenCdeToNull()
            Me(Me.tableMSR00033Rpt.Input_VenCdeToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_VenSubCdeFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_VenSubCdeFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_VenSubCdeFmNull()
            Me(Me.tableMSR00033Rpt.Input_VenSubCdeFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_VenSubCdeToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_VenSubCdeToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_VenSubCdeToNull()
            Me(Me.tableMSR00033Rpt.Input_VenSubCdeToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_VenTypFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_VenTypFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_VenTypFmNull()
            Me(Me.tableMSR00033Rpt.Input_VenTypFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_VenTypToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_VenTypToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_VenTypToNull()
            Me(Me.tableMSR00033Rpt.Input_VenTypToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_IssFm_Null() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_IssFm_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_IssFm_Null()
            Me(Me.tableMSR00033Rpt.Input_IssFm_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_IssTo_Null() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_IssTo_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_IssTo_Null()
            Me(Me.tableMSR00033Rpt.Input_IssTo_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_Status_Null() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_Status_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_Status_Null()
            Me(Me.tableMSR00033Rpt.Input_Status_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInput_Sort_Null() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Input_Sort_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInput_Sort_Null()
            Me(Me.tableMSR00033Rpt.Input_Sort_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_invnoNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.sih_invnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_invnoNull()
            Me(Me.tableMSR00033Rpt.sih_invnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_invstsNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.sih_invstsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_invstsNull()
            Me(Me.tableMSR00033Rpt.sih_invstsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPri_CustNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Pri_CustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPri_CustNull()
            Me(Me.tableMSR00033Rpt.Pri_CustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSec_CustNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.Sec_CustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSec_CustNull()
            Me(Me.tableMSR00033Rpt.Sec_CustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_issdatNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.sih_issdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_issdatNull()
            Me(Me.tableMSR00033Rpt.sih_issdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_curcdeNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.sih_curcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_curcdeNull()
            Me(Me.tableMSR00033Rpt.sih_curcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_netamtNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.sih_netamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_netamtNull()
            Me(Me.tableMSR00033Rpt.sih_netamtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issih_ttlamtNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.sih_ttlamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsih_ttlamtNull()
            Me(Me.tableMSR00033Rpt.sih_ttlamtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSD_NetNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.USD_NetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSD_NetNull()
            Me(Me.tableMSR00033Rpt.USD_NetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHKD_NetNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.HKD_NetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHKD_NetNull()
            Me(Me.tableMSR00033Rpt.HKD_NetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSD_TTLNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.USD_TTLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSD_TTLNull()
            Me(Me.tableMSR00033Rpt.USD_TTLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHKD_TTLNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.HKD_TTLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHKD_TTLNull()
            Me(Me.tableMSR00033Rpt.HKD_TTLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVenCdeNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.VenCdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVenCdeNull()
            Me(Me.tableMSR00033Rpt.VenCdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVenTypNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.VenTypColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVenTypNull()
            Me(Me.tableMSR00033Rpt.VenTypColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscompNameNull() As Boolean
            Return Me.IsNull(Me.tableMSR00033Rpt.compNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcompNameNull()
            Me(Me.tableMSR00033Rpt.compNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MSR00033RptRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MSR00033RptRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MSR00033RptRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MSR00033RptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
