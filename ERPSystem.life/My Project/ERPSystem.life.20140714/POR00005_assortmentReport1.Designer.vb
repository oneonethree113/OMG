'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3634
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("POR00005_assortmentReport"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class POR00005_assortmentReport
    Inherits Global.System.Data.DataSet
    
    Private tablePOR00005_assortment As POR00005_assortmentDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("POR00005_assortment")) Is Nothing) Then
                MyBase.Tables.Add(New POR00005_assortmentDataTable(ds.Tables("POR00005_assortment")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property POR00005_assortment() As POR00005_assortmentDataTable
        Get
            Return Me.tablePOR00005_assortment
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As POR00005_assortmentReport = CType(MyBase.Clone,POR00005_assortmentReport)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("POR00005_assortment")) Is Nothing) Then
                MyBase.Tables.Add(New POR00005_assortmentDataTable(ds.Tables("POR00005_assortment")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePOR00005_assortment = CType(MyBase.Tables("POR00005_assortment"),POR00005_assortmentDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePOR00005_assortment) Is Nothing) Then
                Me.tablePOR00005_assortment.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "POR00005_assortmentReport"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/POR00005_assortmentReport.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePOR00005_assortment = New POR00005_assortmentDataTable
        MyBase.Tables.Add(Me.tablePOR00005_assortment)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePOR00005_assortment() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As POR00005_assortmentReport = New POR00005_assortmentReport
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub POR00005_assortmentRowChangeEventHandler(ByVal sender As Object, ByVal e As POR00005_assortmentRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class POR00005_assortmentDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnivi_venitm As Global.System.Data.DataColumn
        
        Private columnpda_purord As Global.System.Data.DataColumn
        
        Private columnpda_itmno As Global.System.Data.DataColumn
        
        Private columnpda_assitm As Global.System.Data.DataColumn
        
        Private columnpda_assdsc As Global.System.Data.DataColumn
        
        Private columnpda_coldsc As Global.System.Data.DataColumn
        
        Private columnpda_cussku As Global.System.Data.DataColumn
        
        Private columnpda_upcean As Global.System.Data.DataColumn
        
        Private columnpda_cusrtl As Global.System.Data.DataColumn
        
        Private columnpda_pckunt As Global.System.Data.DataColumn
        
        Private columnpda_cusitm As Global.System.Data.DataColumn
        
        Private columnpda_colcde As Global.System.Data.DataColumn
        
        Private columnpda_inrqty As Global.System.Data.DataColumn
        
        Private columnpda_mtrqty As Global.System.Data.DataColumn
        
        Private columnpod_purseq As Global.System.Data.DataColumn
        
        Private columnunit As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "POR00005_assortment"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ivi_venitmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnivi_venitm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_purordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_purord
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_itmnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_itmno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_assitmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_assitm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_assdscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_assdsc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_coldscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_coldsc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_cusskuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_cussku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_upceanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_upcean
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_cusrtlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_cusrtl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_pckuntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_pckunt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_cusitmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_cusitm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_colcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_colcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_inrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_inrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pda_mtrqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpda_mtrqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_purseqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_purseq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property unitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As POR00005_assortmentRow
            Get
                Return CType(Me.Rows(index),POR00005_assortmentRow)
            End Get
        End Property
        
        Public Event POR00005_assortmentRowChanging As POR00005_assortmentRowChangeEventHandler
        
        Public Event POR00005_assortmentRowChanged As POR00005_assortmentRowChangeEventHandler
        
        Public Event POR00005_assortmentRowDeleting As POR00005_assortmentRowChangeEventHandler
        
        Public Event POR00005_assortmentRowDeleted As POR00005_assortmentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPOR00005_assortmentRow(ByVal row As POR00005_assortmentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPOR00005_assortmentRow( _
                    ByVal ivi_venitm As String,  _
                    ByVal pda_purord As String,  _
                    ByVal pda_itmno As String,  _
                    ByVal pda_assitm As String,  _
                    ByVal pda_assdsc As String,  _
                    ByVal pda_coldsc As String,  _
                    ByVal pda_cussku As String,  _
                    ByVal pda_upcean As String,  _
                    ByVal pda_cusrtl As String,  _
                    ByVal pda_pckunt As String,  _
                    ByVal pda_cusitm As String,  _
                    ByVal pda_colcde As String,  _
                    ByVal pda_inrqty As String,  _
                    ByVal pda_mtrqty As String,  _
                    ByVal pod_purseq As Integer,  _
                    ByVal unit As String) As POR00005_assortmentRow
            Dim rowPOR00005_assortmentRow As POR00005_assortmentRow = CType(Me.NewRow,POR00005_assortmentRow)
            Dim columnValuesArray() As Object = New Object() {ivi_venitm, pda_purord, pda_itmno, pda_assitm, pda_assdsc, pda_coldsc, pda_cussku, pda_upcean, pda_cusrtl, pda_pckunt, pda_cusitm, pda_colcde, pda_inrqty, pda_mtrqty, pod_purseq, unit}
            rowPOR00005_assortmentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPOR00005_assortmentRow)
            Return rowPOR00005_assortmentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As POR00005_assortmentDataTable = CType(MyBase.Clone,POR00005_assortmentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New POR00005_assortmentDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnivi_venitm = MyBase.Columns("ivi_venitm")
            Me.columnpda_purord = MyBase.Columns("pda_purord")
            Me.columnpda_itmno = MyBase.Columns("pda_itmno")
            Me.columnpda_assitm = MyBase.Columns("pda_assitm")
            Me.columnpda_assdsc = MyBase.Columns("pda_assdsc")
            Me.columnpda_coldsc = MyBase.Columns("pda_coldsc")
            Me.columnpda_cussku = MyBase.Columns("pda_cussku")
            Me.columnpda_upcean = MyBase.Columns("pda_upcean")
            Me.columnpda_cusrtl = MyBase.Columns("pda_cusrtl")
            Me.columnpda_pckunt = MyBase.Columns("pda_pckunt")
            Me.columnpda_cusitm = MyBase.Columns("pda_cusitm")
            Me.columnpda_colcde = MyBase.Columns("pda_colcde")
            Me.columnpda_inrqty = MyBase.Columns("pda_inrqty")
            Me.columnpda_mtrqty = MyBase.Columns("pda_mtrqty")
            Me.columnpod_purseq = MyBase.Columns("pod_purseq")
            Me.columnunit = MyBase.Columns("unit")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnivi_venitm = New Global.System.Data.DataColumn("ivi_venitm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnivi_venitm)
            Me.columnpda_purord = New Global.System.Data.DataColumn("pda_purord", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_purord)
            Me.columnpda_itmno = New Global.System.Data.DataColumn("pda_itmno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_itmno)
            Me.columnpda_assitm = New Global.System.Data.DataColumn("pda_assitm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_assitm)
            Me.columnpda_assdsc = New Global.System.Data.DataColumn("pda_assdsc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_assdsc)
            Me.columnpda_coldsc = New Global.System.Data.DataColumn("pda_coldsc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_coldsc)
            Me.columnpda_cussku = New Global.System.Data.DataColumn("pda_cussku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_cussku)
            Me.columnpda_upcean = New Global.System.Data.DataColumn("pda_upcean", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_upcean)
            Me.columnpda_cusrtl = New Global.System.Data.DataColumn("pda_cusrtl", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_cusrtl)
            Me.columnpda_pckunt = New Global.System.Data.DataColumn("pda_pckunt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_pckunt)
            Me.columnpda_cusitm = New Global.System.Data.DataColumn("pda_cusitm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_cusitm)
            Me.columnpda_colcde = New Global.System.Data.DataColumn("pda_colcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_colcde)
            Me.columnpda_inrqty = New Global.System.Data.DataColumn("pda_inrqty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_inrqty)
            Me.columnpda_mtrqty = New Global.System.Data.DataColumn("pda_mtrqty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpda_mtrqty)
            Me.columnpod_purseq = New Global.System.Data.DataColumn("pod_purseq", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_purseq)
            Me.columnunit = New Global.System.Data.DataColumn("unit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunit)
            Me.columnivi_venitm.MaxLength = 20
            Me.columnpda_purord.MaxLength = 20
            Me.columnpda_itmno.MaxLength = 20
            Me.columnpda_assitm.MaxLength = 20
            Me.columnpda_assdsc.MaxLength = 800
            Me.columnpda_coldsc.MaxLength = 300
            Me.columnpda_cussku.MaxLength = 20
            Me.columnpda_upcean.MaxLength = 15
            Me.columnpda_cusrtl.MaxLength = 20
            Me.columnpda_pckunt.MaxLength = 6
            Me.columnpda_cusitm.MaxLength = 20
            Me.columnpda_colcde.MaxLength = 30
            Me.columnpda_inrqty.MaxLength = 10
            Me.columnpda_mtrqty.MaxLength = 10
            Me.columnunit.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPOR00005_assortmentRow() As POR00005_assortmentRow
            Return CType(Me.NewRow,POR00005_assortmentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New POR00005_assortmentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(POR00005_assortmentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.POR00005_assortmentRowChangedEvent) Is Nothing) Then
                RaiseEvent POR00005_assortmentRowChanged(Me, New POR00005_assortmentRowChangeEvent(CType(e.Row,POR00005_assortmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.POR00005_assortmentRowChangingEvent) Is Nothing) Then
                RaiseEvent POR00005_assortmentRowChanging(Me, New POR00005_assortmentRowChangeEvent(CType(e.Row,POR00005_assortmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.POR00005_assortmentRowDeletedEvent) Is Nothing) Then
                RaiseEvent POR00005_assortmentRowDeleted(Me, New POR00005_assortmentRowChangeEvent(CType(e.Row,POR00005_assortmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.POR00005_assortmentRowDeletingEvent) Is Nothing) Then
                RaiseEvent POR00005_assortmentRowDeleting(Me, New POR00005_assortmentRowChangeEvent(CType(e.Row,POR00005_assortmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePOR00005_assortmentRow(ByVal row As POR00005_assortmentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As POR00005_assortmentReport = New POR00005_assortmentReport
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "POR00005_assortmentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class POR00005_assortmentRow
        Inherits Global.System.Data.DataRow
        
        Private tablePOR00005_assortment As POR00005_assortmentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePOR00005_assortment = CType(Me.Table,POR00005_assortmentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ivi_venitm() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.ivi_venitmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ivi_venitm' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.ivi_venitmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_purord() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_purordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_purord' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_purordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_itmno() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_itmnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_itmno' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_itmnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_assitm() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_assitmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_assitm' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_assitmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_assdsc() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_assdscColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_assdsc' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_assdscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_coldsc() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_coldscColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_coldsc' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_coldscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_cussku() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_cusskuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_cussku' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_cusskuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_upcean() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_upceanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_upcean' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_upceanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_cusrtl() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_cusrtlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_cusrtl' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_cusrtlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_pckunt() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_pckuntColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_pckunt' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_pckuntColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_cusitm() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_cusitmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_cusitm' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_cusitmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_colcde() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_colcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_colcde' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_colcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_inrqty() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_inrqtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_inrqty' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_inrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pda_mtrqty() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pda_mtrqtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pda_mtrqty' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pda_mtrqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_purseq() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.pod_purseqColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_purseq' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.pod_purseqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property unit() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOR00005_assortment.unitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unit' in table 'POR00005_assortment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOR00005_assortment.unitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isivi_venitmNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.ivi_venitmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setivi_venitmNull()
            Me(Me.tablePOR00005_assortment.ivi_venitmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_purordNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_purordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_purordNull()
            Me(Me.tablePOR00005_assortment.pda_purordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_itmnoNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_itmnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_itmnoNull()
            Me(Me.tablePOR00005_assortment.pda_itmnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_assitmNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_assitmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_assitmNull()
            Me(Me.tablePOR00005_assortment.pda_assitmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_assdscNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_assdscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_assdscNull()
            Me(Me.tablePOR00005_assortment.pda_assdscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_coldscNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_coldscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_coldscNull()
            Me(Me.tablePOR00005_assortment.pda_coldscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_cusskuNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_cusskuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_cusskuNull()
            Me(Me.tablePOR00005_assortment.pda_cusskuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_upceanNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_upceanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_upceanNull()
            Me(Me.tablePOR00005_assortment.pda_upceanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_cusrtlNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_cusrtlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_cusrtlNull()
            Me(Me.tablePOR00005_assortment.pda_cusrtlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_pckuntNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_pckuntColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_pckuntNull()
            Me(Me.tablePOR00005_assortment.pda_pckuntColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_cusitmNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_cusitmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_cusitmNull()
            Me(Me.tablePOR00005_assortment.pda_cusitmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_colcdeNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_colcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_colcdeNull()
            Me(Me.tablePOR00005_assortment.pda_colcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_inrqtyNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_inrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_inrqtyNull()
            Me(Me.tablePOR00005_assortment.pda_inrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispda_mtrqtyNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pda_mtrqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpda_mtrqtyNull()
            Me(Me.tablePOR00005_assortment.pda_mtrqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_purseqNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.pod_purseqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_purseqNull()
            Me(Me.tablePOR00005_assortment.pod_purseqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsunitNull() As Boolean
            Return Me.IsNull(Me.tablePOR00005_assortment.unitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetunitNull()
            Me(Me.tablePOR00005_assortment.unitColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class POR00005_assortmentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As POR00005_assortmentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As POR00005_assortmentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As POR00005_assortmentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
