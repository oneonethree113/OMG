'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3655
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet4"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet4
    Inherits Global.System.Data.DataSet
    
    Private tableMPR00003_cust As MPR00003_custDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MPR00003_cust")) Is Nothing) Then
                MyBase.Tables.Add(New MPR00003_custDataTable(ds.Tables("MPR00003_cust")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MPR00003_cust() As MPR00003_custDataTable
        Get
            Return Me.tableMPR00003_cust
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet4 = CType(MyBase.Clone,DataSet4)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("MPR00003_cust")) Is Nothing) Then
                MyBase.Tables.Add(New MPR00003_custDataTable(ds.Tables("MPR00003_cust")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMPR00003_cust = CType(MyBase.Tables("MPR00003_cust"),MPR00003_custDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMPR00003_cust) Is Nothing) Then
                Me.tableMPR00003_cust.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet4"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet4.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMPR00003_cust = New MPR00003_custDataTable
        MyBase.Tables.Add(Me.tableMPR00003_cust)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMPR00003_cust() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet4 = New DataSet4
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub MPR00003_custRowChangeEventHandler(ByVal sender As Object, ByVal e As MPR00003_custRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MPR00003_custDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnGrh_GrnNo As Global.System.Data.DataColumn
        
        Private column_Bill_Chin As Global.System.Data.DataColumn
        
        Private columnGrh_ShpPlc As Global.System.Data.DataColumn
        
        Private columnGrh_ArgNo As Global.System.Data.DataColumn
        
        Private columnGrh_TrdCty As Global.System.Data.DataColumn
        
        Private columnCtyLst As Global.System.Data.DataColumn
        
        Private columnCty As Global.System.Data.DataColumn
        
        Private columnCustType As Global.System.Data.DataColumn
        
        Private columnUM As Global.System.Data.DataColumn
        
        Private columnTtlNW As Global.System.Data.DataColumn
        
        Private columnUntPrc As Global.System.Data.DataColumn
        
        Private columnTtl_Amt As Global.System.Data.DataColumn
        
        Private columnGrd_TtlCtn As Global.System.Data.DataColumn
        
        Private columnGrd_TtlNW As Global.System.Data.DataColumn
        
        Private columnGrd_TtlGW As Global.System.Data.DataColumn
        
        Private columnstrCurr As Global.System.Data.DataColumn
        
        Private columnCTNFM As Global.System.Data.DataColumn
        
        Private columnCUSTUM As Global.System.Data.DataColumn
        
        Private columnINVUM As Global.System.Data.DataColumn
        
        Private columnDP As Global.System.Data.DataColumn
        
        Private columnHIDDEN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MPR00003_cust"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Grh_GrnNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrh_GrnNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _Bill_ChinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_Bill_Chin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Grh_ShpPlcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrh_ShpPlc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Grh_ArgNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrh_ArgNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Grh_TrdCtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrh_TrdCty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CtyLstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCtyLst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CustTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TtlNWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTtlNW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UntPrcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUntPrc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Ttl_AmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTtl_Amt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Grd_TtlCtnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrd_TtlCtn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Grd_TtlNWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrd_TtlNW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Grd_TtlGWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrd_TtlGW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strCurrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstrCurr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CTNFMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTNFM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUSTUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INVUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HIDDENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHIDDEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MPR00003_custRow
            Get
                Return CType(Me.Rows(index),MPR00003_custRow)
            End Get
        End Property
        
        Public Event MPR00003_custRowChanging As MPR00003_custRowChangeEventHandler
        
        Public Event MPR00003_custRowChanged As MPR00003_custRowChangeEventHandler
        
        Public Event MPR00003_custRowDeleting As MPR00003_custRowChangeEventHandler
        
        Public Event MPR00003_custRowDeleted As MPR00003_custRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMPR00003_custRow(ByVal row As MPR00003_custRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMPR00003_custRow( _
                    ByVal Grh_GrnNo As String,  _
                    ByVal _Bill_Chin As String,  _
                    ByVal Grh_ShpPlc As String,  _
                    ByVal Grh_ArgNo As String,  _
                    ByVal Grh_TrdCty As String,  _
                    ByVal CtyLst As String,  _
                    ByVal Cty As String,  _
                    ByVal CustType As String,  _
                    ByVal UM As String,  _
                    ByVal TtlNW As String,  _
                    ByVal UntPrc As String,  _
                    ByVal Ttl_Amt As Double,  _
                    ByVal Grd_TtlCtn As Double,  _
                    ByVal Grd_TtlNW As Double,  _
                    ByVal Grd_TtlGW As Double,  _
                    ByVal strCurr As String,  _
                    ByVal CTNFM As String,  _
                    ByVal CUSTUM As String,  _
                    ByVal INVUM As String,  _
                    ByVal DP As Double,  _
                    ByVal HIDDEN As String) As MPR00003_custRow
            Dim rowMPR00003_custRow As MPR00003_custRow = CType(Me.NewRow,MPR00003_custRow)
            Dim columnValuesArray() As Object = New Object() {Grh_GrnNo, _Bill_Chin, Grh_ShpPlc, Grh_ArgNo, Grh_TrdCty, CtyLst, Cty, CustType, UM, TtlNW, UntPrc, Ttl_Amt, Grd_TtlCtn, Grd_TtlNW, Grd_TtlGW, strCurr, CTNFM, CUSTUM, INVUM, DP, HIDDEN}
            rowMPR00003_custRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMPR00003_custRow)
            Return rowMPR00003_custRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MPR00003_custDataTable = CType(MyBase.Clone,MPR00003_custDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MPR00003_custDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnGrh_GrnNo = MyBase.Columns("Grh_GrnNo")
            Me.column_Bill_Chin = MyBase.Columns("_Bill_Chin")
            Me.columnGrh_ShpPlc = MyBase.Columns("Grh_ShpPlc")
            Me.columnGrh_ArgNo = MyBase.Columns("Grh_ArgNo")
            Me.columnGrh_TrdCty = MyBase.Columns("Grh_TrdCty")
            Me.columnCtyLst = MyBase.Columns("CtyLst")
            Me.columnCty = MyBase.Columns("Cty")
            Me.columnCustType = MyBase.Columns("CustType")
            Me.columnUM = MyBase.Columns("UM")
            Me.columnTtlNW = MyBase.Columns("TtlNW")
            Me.columnUntPrc = MyBase.Columns("UntPrc")
            Me.columnTtl_Amt = MyBase.Columns("Ttl_Amt")
            Me.columnGrd_TtlCtn = MyBase.Columns("Grd_TtlCtn")
            Me.columnGrd_TtlNW = MyBase.Columns("Grd_TtlNW")
            Me.columnGrd_TtlGW = MyBase.Columns("Grd_TtlGW")
            Me.columnstrCurr = MyBase.Columns("strCurr")
            Me.columnCTNFM = MyBase.Columns("CTNFM")
            Me.columnCUSTUM = MyBase.Columns("CUSTUM")
            Me.columnINVUM = MyBase.Columns("INVUM")
            Me.columnDP = MyBase.Columns("DP")
            Me.columnHIDDEN = MyBase.Columns("HIDDEN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnGrh_GrnNo = New Global.System.Data.DataColumn("Grh_GrnNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrh_GrnNo)
            Me.column_Bill_Chin = New Global.System.Data.DataColumn("_Bill_Chin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_Bill_Chin)
            Me.columnGrh_ShpPlc = New Global.System.Data.DataColumn("Grh_ShpPlc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrh_ShpPlc)
            Me.columnGrh_ArgNo = New Global.System.Data.DataColumn("Grh_ArgNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrh_ArgNo)
            Me.columnGrh_TrdCty = New Global.System.Data.DataColumn("Grh_TrdCty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrh_TrdCty)
            Me.columnCtyLst = New Global.System.Data.DataColumn("CtyLst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCtyLst)
            Me.columnCty = New Global.System.Data.DataColumn("Cty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCty)
            Me.columnCustType = New Global.System.Data.DataColumn("CustType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustType)
            Me.columnUM = New Global.System.Data.DataColumn("UM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUM)
            Me.columnTtlNW = New Global.System.Data.DataColumn("TtlNW", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTtlNW)
            Me.columnUntPrc = New Global.System.Data.DataColumn("UntPrc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUntPrc)
            Me.columnTtl_Amt = New Global.System.Data.DataColumn("Ttl_Amt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTtl_Amt)
            Me.columnGrd_TtlCtn = New Global.System.Data.DataColumn("Grd_TtlCtn", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrd_TtlCtn)
            Me.columnGrd_TtlNW = New Global.System.Data.DataColumn("Grd_TtlNW", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrd_TtlNW)
            Me.columnGrd_TtlGW = New Global.System.Data.DataColumn("Grd_TtlGW", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrd_TtlGW)
            Me.columnstrCurr = New Global.System.Data.DataColumn("strCurr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrCurr)
            Me.columnCTNFM = New Global.System.Data.DataColumn("CTNFM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTNFM)
            Me.columnCUSTUM = New Global.System.Data.DataColumn("CUSTUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTUM)
            Me.columnINVUM = New Global.System.Data.DataColumn("INVUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVUM)
            Me.columnDP = New Global.System.Data.DataColumn("DP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDP)
            Me.columnHIDDEN = New Global.System.Data.DataColumn("HIDDEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHIDDEN)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMPR00003_custRow() As MPR00003_custRow
            Return CType(Me.NewRow,MPR00003_custRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MPR00003_custRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MPR00003_custRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MPR00003_custRowChangedEvent) Is Nothing) Then
                RaiseEvent MPR00003_custRowChanged(Me, New MPR00003_custRowChangeEvent(CType(e.Row,MPR00003_custRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MPR00003_custRowChangingEvent) Is Nothing) Then
                RaiseEvent MPR00003_custRowChanging(Me, New MPR00003_custRowChangeEvent(CType(e.Row,MPR00003_custRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MPR00003_custRowDeletedEvent) Is Nothing) Then
                RaiseEvent MPR00003_custRowDeleted(Me, New MPR00003_custRowChangeEvent(CType(e.Row,MPR00003_custRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MPR00003_custRowDeletingEvent) Is Nothing) Then
                RaiseEvent MPR00003_custRowDeleting(Me, New MPR00003_custRowChangeEvent(CType(e.Row,MPR00003_custRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMPR00003_custRow(ByVal row As MPR00003_custRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSet4 = New DataSet4
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MPR00003_custDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MPR00003_custRow
        Inherits Global.System.Data.DataRow
        
        Private tableMPR00003_cust As MPR00003_custDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMPR00003_cust = CType(Me.Table,MPR00003_custDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Grh_GrnNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.Grh_GrnNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grh_GrnNo' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.Grh_GrnNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Bill_Chin() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust._Bill_ChinColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '_Bill_Chin' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust._Bill_ChinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Grh_ShpPlc() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.Grh_ShpPlcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grh_ShpPlc' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.Grh_ShpPlcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Grh_ArgNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.Grh_ArgNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grh_ArgNo' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.Grh_ArgNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Grh_TrdCty() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.Grh_TrdCtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grh_TrdCty' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.Grh_TrdCtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CtyLst() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.CtyLstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CtyLst' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.CtyLstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cty() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.CtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cty' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.CtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CustType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.CustTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustType' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.CustTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UM() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.UMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UM' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.UMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TtlNW() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.TtlNWColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TtlNW' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.TtlNWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UntPrc() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.UntPrcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UntPrc' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.UntPrcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ttl_Amt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.Ttl_AmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ttl_Amt' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.Ttl_AmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Grd_TtlCtn() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.Grd_TtlCtnColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grd_TtlCtn' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.Grd_TtlCtnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Grd_TtlNW() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.Grd_TtlNWColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grd_TtlNW' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.Grd_TtlNWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Grd_TtlGW() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.Grd_TtlGWColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grd_TtlGW' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.Grd_TtlGWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strCurr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.strCurrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'strCurr' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.strCurrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CTNFM() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.CTNFMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CTNFM' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.CTNFMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUSTUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.CUSTUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTUM' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.CUSTUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INVUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.INVUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVUM' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.INVUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DP() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.DPColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DP' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.DPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HIDDEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableMPR00003_cust.HIDDENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HIDDEN' in table 'MPR00003_cust' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMPR00003_cust.HIDDENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGrh_GrnNoNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.Grh_GrnNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGrh_GrnNoNull()
            Me(Me.tableMPR00003_cust.Grh_GrnNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_Bill_ChinNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust._Bill_ChinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_Bill_ChinNull()
            Me(Me.tableMPR00003_cust._Bill_ChinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGrh_ShpPlcNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.Grh_ShpPlcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGrh_ShpPlcNull()
            Me(Me.tableMPR00003_cust.Grh_ShpPlcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGrh_ArgNoNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.Grh_ArgNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGrh_ArgNoNull()
            Me(Me.tableMPR00003_cust.Grh_ArgNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGrh_TrdCtyNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.Grh_TrdCtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGrh_TrdCtyNull()
            Me(Me.tableMPR00003_cust.Grh_TrdCtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCtyLstNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.CtyLstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCtyLstNull()
            Me(Me.tableMPR00003_cust.CtyLstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCtyNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.CtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCtyNull()
            Me(Me.tableMPR00003_cust.CtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCustTypeNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.CustTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCustTypeNull()
            Me(Me.tableMPR00003_cust.CustTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUMNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.UMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUMNull()
            Me(Me.tableMPR00003_cust.UMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTtlNWNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.TtlNWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTtlNWNull()
            Me(Me.tableMPR00003_cust.TtlNWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUntPrcNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.UntPrcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUntPrcNull()
            Me(Me.tableMPR00003_cust.UntPrcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTtl_AmtNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.Ttl_AmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTtl_AmtNull()
            Me(Me.tableMPR00003_cust.Ttl_AmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGrd_TtlCtnNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.Grd_TtlCtnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGrd_TtlCtnNull()
            Me(Me.tableMPR00003_cust.Grd_TtlCtnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGrd_TtlNWNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.Grd_TtlNWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGrd_TtlNWNull()
            Me(Me.tableMPR00003_cust.Grd_TtlNWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGrd_TtlGWNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.Grd_TtlGWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGrd_TtlGWNull()
            Me(Me.tableMPR00003_cust.Grd_TtlGWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrCurrNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.strCurrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrCurrNull()
            Me(Me.tableMPR00003_cust.strCurrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCTNFMNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.CTNFMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCTNFMNull()
            Me(Me.tableMPR00003_cust.CTNFMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUSTUMNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.CUSTUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUSTUMNull()
            Me(Me.tableMPR00003_cust.CUSTUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINVUMNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.INVUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINVUMNull()
            Me(Me.tableMPR00003_cust.INVUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDPNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.DPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDPNull()
            Me(Me.tableMPR00003_cust.DPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHIDDENNull() As Boolean
            Return Me.IsNull(Me.tableMPR00003_cust.HIDDENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHIDDENNull()
            Me(Me.tableMPR00003_cust.HIDDENColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MPR00003_custRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MPR00003_custRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MPR00003_custRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MPR00003_custRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
