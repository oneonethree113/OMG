'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3655
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsMSR00002"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsMSR00002
    Inherits Global.System.Data.DataSet
    
    Private tableMSR00002Rpt As MSR00002RptDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MSR00002Rpt")) Is Nothing) Then
                MyBase.Tables.Add(New MSR00002RptDataTable(ds.Tables("MSR00002Rpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MSR00002Rpt() As MSR00002RptDataTable
        Get
            Return Me.tableMSR00002Rpt
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsMSR00002 = CType(MyBase.Clone,dsMSR00002)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("MSR00002Rpt")) Is Nothing) Then
                MyBase.Tables.Add(New MSR00002RptDataTable(ds.Tables("MSR00002Rpt")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMSR00002Rpt = CType(MyBase.Tables("MSR00002Rpt"),MSR00002RptDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMSR00002Rpt) Is Nothing) Then
                Me.tableMSR00002Rpt.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsMSR00002"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet13.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMSR00002Rpt = New MSR00002RptDataTable
        MyBase.Tables.Add(Me.tableMSR00002Rpt)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMSR00002Rpt() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsMSR00002 = New dsMSR00002
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub MSR00002RptRowChangeEventHandler(ByVal sender As Object, ByVal e As MSR00002RptRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MSR00002RptDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columninput_CustNoFm As Global.System.Data.DataColumn
        
        Private columninput_CustNoTo As Global.System.Data.DataColumn
        
        Private columninput_fromdate As Global.System.Data.DataColumn
        
        Private columninput_todate As Global.System.Data.DataColumn
        
        Private columninput_status As Global.System.Data.DataColumn
        
        Private columninput_cocde As Global.System.Data.DataColumn
        
        Private columnCust1_No As Global.System.Data.DataColumn
        
        Private columnCust1_ShortName As Global.System.Data.DataColumn
        
        Private columnCust2_No As Global.System.Data.DataColumn
        
        Private columnCust2_ShortName As Global.System.Data.DataColumn
        
        Private columnquh_qutno As Global.System.Data.DataColumn
        
        Private columnquh_qutsts As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnquh_issdat As Global.System.Data.DataColumn
        
        Private columncompName As Global.System.Data.DataColumn
        
        Private columnSortby As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MSR00002Rpt"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_CustNoFmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_CustNoFm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_CustNoToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_CustNoTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_fromdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_fromdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_todateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_todate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property input_cocdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninput_cocde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cust1_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCust1_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cust1_ShortNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCust1_ShortName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cust2_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCust2_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cust2_ShortNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCust2_ShortName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_qutnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_qutno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_qutstsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_qutsts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_issdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_issdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property compNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SortbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSortby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MSR00002RptRow
            Get
                Return CType(Me.Rows(index),MSR00002RptRow)
            End Get
        End Property
        
        Public Event MSR00002RptRowChanging As MSR00002RptRowChangeEventHandler
        
        Public Event MSR00002RptRowChanged As MSR00002RptRowChangeEventHandler
        
        Public Event MSR00002RptRowDeleting As MSR00002RptRowChangeEventHandler
        
        Public Event MSR00002RptRowDeleted As MSR00002RptRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMSR00002RptRow(ByVal row As MSR00002RptRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMSR00002RptRow( _
                    ByVal input_CustNoFm As String,  _
                    ByVal input_CustNoTo As String,  _
                    ByVal input_fromdate As String,  _
                    ByVal input_todate As String,  _
                    ByVal input_status As String,  _
                    ByVal input_cocde As String,  _
                    ByVal Cust1_No As String,  _
                    ByVal Cust1_ShortName As String,  _
                    ByVal Cust2_No As String,  _
                    ByVal Cust2_ShortName As String,  _
                    ByVal quh_qutno As String,  _
                    ByVal quh_qutsts As String,  _
                    ByVal Status As String,  _
                    ByVal quh_issdat As String,  _
                    ByVal compName As String,  _
                    ByVal Sortby As String) As MSR00002RptRow
            Dim rowMSR00002RptRow As MSR00002RptRow = CType(Me.NewRow,MSR00002RptRow)
            Dim columnValuesArray() As Object = New Object() {input_CustNoFm, input_CustNoTo, input_fromdate, input_todate, input_status, input_cocde, Cust1_No, Cust1_ShortName, Cust2_No, Cust2_ShortName, quh_qutno, quh_qutsts, Status, quh_issdat, compName, Sortby}
            rowMSR00002RptRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMSR00002RptRow)
            Return rowMSR00002RptRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MSR00002RptDataTable = CType(MyBase.Clone,MSR00002RptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MSR00002RptDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columninput_CustNoFm = MyBase.Columns("input_CustNoFm")
            Me.columninput_CustNoTo = MyBase.Columns("input_CustNoTo")
            Me.columninput_fromdate = MyBase.Columns("input_fromdate")
            Me.columninput_todate = MyBase.Columns("input_todate")
            Me.columninput_status = MyBase.Columns("input_status")
            Me.columninput_cocde = MyBase.Columns("input_cocde")
            Me.columnCust1_No = MyBase.Columns("Cust1_No")
            Me.columnCust1_ShortName = MyBase.Columns("Cust1_ShortName")
            Me.columnCust2_No = MyBase.Columns("Cust2_No")
            Me.columnCust2_ShortName = MyBase.Columns("Cust2_ShortName")
            Me.columnquh_qutno = MyBase.Columns("quh_qutno")
            Me.columnquh_qutsts = MyBase.Columns("quh_qutsts")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnquh_issdat = MyBase.Columns("quh_issdat")
            Me.columncompName = MyBase.Columns("compName")
            Me.columnSortby = MyBase.Columns("Sortby")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columninput_CustNoFm = New Global.System.Data.DataColumn("input_CustNoFm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_CustNoFm)
            Me.columninput_CustNoTo = New Global.System.Data.DataColumn("input_CustNoTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_CustNoTo)
            Me.columninput_fromdate = New Global.System.Data.DataColumn("input_fromdate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_fromdate)
            Me.columninput_todate = New Global.System.Data.DataColumn("input_todate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_todate)
            Me.columninput_status = New Global.System.Data.DataColumn("input_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_status)
            Me.columninput_cocde = New Global.System.Data.DataColumn("input_cocde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninput_cocde)
            Me.columnCust1_No = New Global.System.Data.DataColumn("Cust1_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCust1_No)
            Me.columnCust1_ShortName = New Global.System.Data.DataColumn("Cust1_ShortName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCust1_ShortName)
            Me.columnCust2_No = New Global.System.Data.DataColumn("Cust2_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCust2_No)
            Me.columnCust2_ShortName = New Global.System.Data.DataColumn("Cust2_ShortName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCust2_ShortName)
            Me.columnquh_qutno = New Global.System.Data.DataColumn("quh_qutno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_qutno)
            Me.columnquh_qutsts = New Global.System.Data.DataColumn("quh_qutsts", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_qutsts)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnquh_issdat = New Global.System.Data.DataColumn("quh_issdat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_issdat)
            Me.columncompName = New Global.System.Data.DataColumn("compName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompName)
            Me.columnSortby = New Global.System.Data.DataColumn("Sortby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSortby)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMSR00002RptRow() As MSR00002RptRow
            Return CType(Me.NewRow,MSR00002RptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MSR00002RptRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MSR00002RptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MSR00002RptRowChangedEvent) Is Nothing) Then
                RaiseEvent MSR00002RptRowChanged(Me, New MSR00002RptRowChangeEvent(CType(e.Row,MSR00002RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MSR00002RptRowChangingEvent) Is Nothing) Then
                RaiseEvent MSR00002RptRowChanging(Me, New MSR00002RptRowChangeEvent(CType(e.Row,MSR00002RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MSR00002RptRowDeletedEvent) Is Nothing) Then
                RaiseEvent MSR00002RptRowDeleted(Me, New MSR00002RptRowChangeEvent(CType(e.Row,MSR00002RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MSR00002RptRowDeletingEvent) Is Nothing) Then
                RaiseEvent MSR00002RptRowDeleting(Me, New MSR00002RptRowChangeEvent(CType(e.Row,MSR00002RptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMSR00002RptRow(ByVal row As MSR00002RptRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMSR00002 = New dsMSR00002
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MSR00002RptDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MSR00002RptRow
        Inherits Global.System.Data.DataRow
        
        Private tableMSR00002Rpt As MSR00002RptDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMSR00002Rpt = CType(Me.Table,MSR00002RptDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_CustNoFm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.input_CustNoFmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_CustNoFm' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.input_CustNoFmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_CustNoTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.input_CustNoToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_CustNoTo' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.input_CustNoToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_fromdate() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.input_fromdateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_fromdate' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.input_fromdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_todate() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.input_todateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_todate' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.input_todateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_status() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.input_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_status' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.input_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property input_cocde() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.input_cocdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'input_cocde' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.input_cocdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cust1_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.Cust1_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cust1_No' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.Cust1_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cust1_ShortName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.Cust1_ShortNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cust1_ShortName' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.Cust1_ShortNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cust2_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.Cust2_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cust2_No' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.Cust2_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cust2_ShortName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.Cust2_ShortNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cust2_ShortName' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.Cust2_ShortNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_qutno() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.quh_qutnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_qutno' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.quh_qutnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_qutsts() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.quh_qutstsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_qutsts' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.quh_qutstsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_issdat() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.quh_issdatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_issdat' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.quh_issdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property compName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.compNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compName' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.compNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sortby() As String
            Get
                Try 
                    Return CType(Me(Me.tableMSR00002Rpt.SortbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sortby' in table 'MSR00002Rpt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMSR00002Rpt.SortbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_CustNoFmNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.input_CustNoFmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_CustNoFmNull()
            Me(Me.tableMSR00002Rpt.input_CustNoFmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_CustNoToNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.input_CustNoToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_CustNoToNull()
            Me(Me.tableMSR00002Rpt.input_CustNoToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_fromdateNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.input_fromdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_fromdateNull()
            Me(Me.tableMSR00002Rpt.input_fromdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_todateNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.input_todateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_todateNull()
            Me(Me.tableMSR00002Rpt.input_todateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_statusNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.input_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_statusNull()
            Me(Me.tableMSR00002Rpt.input_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isinput_cocdeNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.input_cocdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setinput_cocdeNull()
            Me(Me.tableMSR00002Rpt.input_cocdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCust1_NoNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.Cust1_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCust1_NoNull()
            Me(Me.tableMSR00002Rpt.Cust1_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCust1_ShortNameNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.Cust1_ShortNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCust1_ShortNameNull()
            Me(Me.tableMSR00002Rpt.Cust1_ShortNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCust2_NoNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.Cust2_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCust2_NoNull()
            Me(Me.tableMSR00002Rpt.Cust2_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCust2_ShortNameNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.Cust2_ShortNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCust2_ShortNameNull()
            Me(Me.tableMSR00002Rpt.Cust2_ShortNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_qutnoNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.quh_qutnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_qutnoNull()
            Me(Me.tableMSR00002Rpt.quh_qutnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_qutstsNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.quh_qutstsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_qutstsNull()
            Me(Me.tableMSR00002Rpt.quh_qutstsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNull()
            Me(Me.tableMSR00002Rpt.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_issdatNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.quh_issdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_issdatNull()
            Me(Me.tableMSR00002Rpt.quh_issdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscompNameNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.compNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcompNameNull()
            Me(Me.tableMSR00002Rpt.compNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSortbyNull() As Boolean
            Return Me.IsNull(Me.tableMSR00002Rpt.SortbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSortbyNull()
            Me(Me.tableMSR00002Rpt.SortbyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MSR00002RptRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MSR00002RptRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MSR00002RptRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MSR00002RptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
