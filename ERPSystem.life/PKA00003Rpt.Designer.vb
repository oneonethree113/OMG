'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3655
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsPKA00003"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPKA00003
    Inherits Global.System.Data.DataSet
    
    Private tablePKA00003 As PKA00003DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PKA00003")) Is Nothing) Then
                MyBase.Tables.Add(New PKA00003DataTable(ds.Tables("PKA00003")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PKA00003() As PKA00003DataTable
        Get
            Return Me.tablePKA00003
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsPKA00003 = CType(MyBase.Clone,dsPKA00003)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("PKA00003")) Is Nothing) Then
                MyBase.Tables.Add(New PKA00003DataTable(ds.Tables("PKA00003")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePKA00003 = CType(MyBase.Tables("PKA00003"),PKA00003DataTable)
        If (initTable = true) Then
            If (Not (Me.tablePKA00003) Is Nothing) Then
                Me.tablePKA00003.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPKA00003"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PKA00003.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePKA00003 = New PKA00003DataTable
        MyBase.Tables.Add(Me.tablePKA00003)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePKA00003() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPKA00003 = New dsPKA00003
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub PKA00003RowChangeEventHandler(ByVal sender As Object, ByVal e As PKA00003RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PKA00003DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnpoh_cocde As Global.System.Data.DataColumn
        
        Private columnyco_conam As Global.System.Data.DataColumn
        
        Private columnpoh_ordno As Global.System.Data.DataColumn
        
        Private columnpoh_pkgven As Global.System.Data.DataColumn
        
        Private columnvbi_vensna As Global.System.Data.DataColumn
        
        Private columnpoh_issdat As Global.System.Data.DataColumn
        
        Private columnpoh_revdat As Global.System.Data.DataColumn
        
        Private columnpod_seq As Global.System.Data.DataColumn
        
        Private columnpod_pkgitm As Global.System.Data.DataColumn
        
        Private columnpod_engdsc As Global.System.Data.DataColumn
        
        Private columnpod_status As Global.System.Data.DataColumn
        
        Private columnpod_ordqty As Global.System.Data.DataColumn
        
        Private columnpod_stkqty As Global.System.Data.DataColumn
        
        Private columnpod_wasper As Global.System.Data.DataColumn
        
        Private columnpod_bonqty As Global.System.Data.DataColumn
        
        Private columnpod_ttlordqty As Global.System.Data.DataColumn
        
        Private columnum As Global.System.Data.DataColumn
        
        Private columnpod_curcde As Global.System.Data.DataColumn
        
        Private columnpod_untprc As Global.System.Data.DataColumn
        
        Private columnpod_ttlamtqty As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PKA00003"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_cocdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_cocde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property yco_conamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyco_conam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_ordnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_ordno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_pkgvenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_pkgven
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vbi_vensnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvbi_vensna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_issdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_issdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poh_revdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpoh_revdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_seqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_seq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_pkgitmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_pkgitm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_engdscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_engdsc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_ordqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_ordqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_stkqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_stkqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_wasperColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_wasper
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_bonqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_bonqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_ttlordqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_ttlordqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property umColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_curcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_curcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_untprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_untprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_ttlamtqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_ttlamtqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PKA00003Row
            Get
                Return CType(Me.Rows(index),PKA00003Row)
            End Get
        End Property
        
        Public Event PKA00003RowChanging As PKA00003RowChangeEventHandler
        
        Public Event PKA00003RowChanged As PKA00003RowChangeEventHandler
        
        Public Event PKA00003RowDeleting As PKA00003RowChangeEventHandler
        
        Public Event PKA00003RowDeleted As PKA00003RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPKA00003Row(ByVal row As PKA00003Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPKA00003Row( _
                    ByVal poh_cocde As String,  _
                    ByVal yco_conam As String,  _
                    ByVal poh_ordno As String,  _
                    ByVal poh_pkgven As String,  _
                    ByVal vbi_vensna As String,  _
                    ByVal poh_issdat As Date,  _
                    ByVal poh_revdat As Date,  _
                    ByVal pod_seq As Integer,  _
                    ByVal pod_pkgitm As String,  _
                    ByVal pod_engdsc As String,  _
                    ByVal pod_status As String,  _
                    ByVal pod_ordqty As Integer,  _
                    ByVal pod_stkqty As Integer,  _
                    ByVal pod_wasper As Integer,  _
                    ByVal pod_bonqty As Integer,  _
                    ByVal pod_ttlordqty As Integer,  _
                    ByVal um As String,  _
                    ByVal pod_curcde As String,  _
                    ByVal pod_untprc As Double,  _
                    ByVal pod_ttlamtqty As Double) As PKA00003Row
            Dim rowPKA00003Row As PKA00003Row = CType(Me.NewRow,PKA00003Row)
            Dim columnValuesArray() As Object = New Object() {poh_cocde, yco_conam, poh_ordno, poh_pkgven, vbi_vensna, poh_issdat, poh_revdat, pod_seq, pod_pkgitm, pod_engdsc, pod_status, pod_ordqty, pod_stkqty, pod_wasper, pod_bonqty, pod_ttlordqty, um, pod_curcde, pod_untprc, pod_ttlamtqty}
            rowPKA00003Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowPKA00003Row)
            Return rowPKA00003Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PKA00003DataTable = CType(MyBase.Clone,PKA00003DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PKA00003DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnpoh_cocde = MyBase.Columns("poh_cocde")
            Me.columnyco_conam = MyBase.Columns("yco_conam")
            Me.columnpoh_ordno = MyBase.Columns("poh_ordno")
            Me.columnpoh_pkgven = MyBase.Columns("poh_pkgven")
            Me.columnvbi_vensna = MyBase.Columns("vbi_vensna")
            Me.columnpoh_issdat = MyBase.Columns("poh_issdat")
            Me.columnpoh_revdat = MyBase.Columns("poh_revdat")
            Me.columnpod_seq = MyBase.Columns("pod_seq")
            Me.columnpod_pkgitm = MyBase.Columns("pod_pkgitm")
            Me.columnpod_engdsc = MyBase.Columns("pod_engdsc")
            Me.columnpod_status = MyBase.Columns("pod_status")
            Me.columnpod_ordqty = MyBase.Columns("pod_ordqty")
            Me.columnpod_stkqty = MyBase.Columns("pod_stkqty")
            Me.columnpod_wasper = MyBase.Columns("pod_wasper")
            Me.columnpod_bonqty = MyBase.Columns("pod_bonqty")
            Me.columnpod_ttlordqty = MyBase.Columns("pod_ttlordqty")
            Me.columnum = MyBase.Columns("um")
            Me.columnpod_curcde = MyBase.Columns("pod_curcde")
            Me.columnpod_untprc = MyBase.Columns("pod_untprc")
            Me.columnpod_ttlamtqty = MyBase.Columns("pod_ttlamtqty")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnpoh_cocde = New Global.System.Data.DataColumn("poh_cocde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_cocde)
            Me.columnyco_conam = New Global.System.Data.DataColumn("yco_conam", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyco_conam)
            Me.columnpoh_ordno = New Global.System.Data.DataColumn("poh_ordno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_ordno)
            Me.columnpoh_pkgven = New Global.System.Data.DataColumn("poh_pkgven", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_pkgven)
            Me.columnvbi_vensna = New Global.System.Data.DataColumn("vbi_vensna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvbi_vensna)
            Me.columnpoh_issdat = New Global.System.Data.DataColumn("poh_issdat", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_issdat)
            Me.columnpoh_revdat = New Global.System.Data.DataColumn("poh_revdat", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpoh_revdat)
            Me.columnpod_seq = New Global.System.Data.DataColumn("pod_seq", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_seq)
            Me.columnpod_pkgitm = New Global.System.Data.DataColumn("pod_pkgitm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_pkgitm)
            Me.columnpod_engdsc = New Global.System.Data.DataColumn("pod_engdsc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_engdsc)
            Me.columnpod_status = New Global.System.Data.DataColumn("pod_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_status)
            Me.columnpod_ordqty = New Global.System.Data.DataColumn("pod_ordqty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_ordqty)
            Me.columnpod_stkqty = New Global.System.Data.DataColumn("pod_stkqty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_stkqty)
            Me.columnpod_wasper = New Global.System.Data.DataColumn("pod_wasper", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_wasper)
            Me.columnpod_bonqty = New Global.System.Data.DataColumn("pod_bonqty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_bonqty)
            Me.columnpod_ttlordqty = New Global.System.Data.DataColumn("pod_ttlordqty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_ttlordqty)
            Me.columnum = New Global.System.Data.DataColumn("um", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnum)
            Me.columnpod_curcde = New Global.System.Data.DataColumn("pod_curcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_curcde)
            Me.columnpod_untprc = New Global.System.Data.DataColumn("pod_untprc", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_untprc)
            Me.columnpod_ttlamtqty = New Global.System.Data.DataColumn("pod_ttlamtqty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_ttlamtqty)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPKA00003Row() As PKA00003Row
            Return CType(Me.NewRow,PKA00003Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PKA00003Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PKA00003Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PKA00003RowChangedEvent) Is Nothing) Then
                RaiseEvent PKA00003RowChanged(Me, New PKA00003RowChangeEvent(CType(e.Row,PKA00003Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PKA00003RowChangingEvent) Is Nothing) Then
                RaiseEvent PKA00003RowChanging(Me, New PKA00003RowChangeEvent(CType(e.Row,PKA00003Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PKA00003RowDeletedEvent) Is Nothing) Then
                RaiseEvent PKA00003RowDeleted(Me, New PKA00003RowChangeEvent(CType(e.Row,PKA00003Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PKA00003RowDeletingEvent) Is Nothing) Then
                RaiseEvent PKA00003RowDeleting(Me, New PKA00003RowChangeEvent(CType(e.Row,PKA00003Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePKA00003Row(ByVal row As PKA00003Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPKA00003 = New dsPKA00003
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PKA00003DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PKA00003Row
        Inherits Global.System.Data.DataRow
        
        Private tablePKA00003 As PKA00003DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePKA00003 = CType(Me.Table,PKA00003DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_cocde() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.poh_cocdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_cocde' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.poh_cocdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property yco_conam() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.yco_conamColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yco_conam' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.yco_conamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_ordno() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.poh_ordnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_ordno' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.poh_ordnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_pkgven() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.poh_pkgvenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_pkgven' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.poh_pkgvenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vbi_vensna() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.vbi_vensnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vbi_vensna' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.vbi_vensnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_issdat() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.poh_issdatColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_issdat' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.poh_issdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poh_revdat() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.poh_revdatColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poh_revdat' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.poh_revdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_seq() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_seqColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_seq' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_seqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_pkgitm() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_pkgitmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_pkgitm' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_pkgitmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_engdsc() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_engdscColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_engdsc' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_engdscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_status() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_status' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_ordqty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_ordqtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_ordqty' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_ordqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_stkqty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_stkqtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_stkqty' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_stkqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_wasper() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_wasperColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_wasper' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_wasperColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_bonqty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_bonqtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_bonqty' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_bonqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_ttlordqty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_ttlordqtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_ttlordqty' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_ttlordqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property um() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.umColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'um' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.umColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_curcde() As String
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_curcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_curcde' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_curcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_untprc() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_untprcColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_untprc' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_untprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_ttlamtqty() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePKA00003.pod_ttlamtqtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_ttlamtqty' in table 'PKA00003' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePKA00003.pod_ttlamtqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_cocdeNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.poh_cocdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_cocdeNull()
            Me(Me.tablePKA00003.poh_cocdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isyco_conamNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.yco_conamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setyco_conamNull()
            Me(Me.tablePKA00003.yco_conamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_ordnoNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.poh_ordnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_ordnoNull()
            Me(Me.tablePKA00003.poh_ordnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_pkgvenNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.poh_pkgvenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_pkgvenNull()
            Me(Me.tablePKA00003.poh_pkgvenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isvbi_vensnaNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.vbi_vensnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setvbi_vensnaNull()
            Me(Me.tablePKA00003.vbi_vensnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_issdatNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.poh_issdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_issdatNull()
            Me(Me.tablePKA00003.poh_issdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispoh_revdatNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.poh_revdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpoh_revdatNull()
            Me(Me.tablePKA00003.poh_revdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_seqNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_seqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_seqNull()
            Me(Me.tablePKA00003.pod_seqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_pkgitmNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_pkgitmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_pkgitmNull()
            Me(Me.tablePKA00003.pod_pkgitmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_engdscNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_engdscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_engdscNull()
            Me(Me.tablePKA00003.pod_engdscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_statusNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_statusNull()
            Me(Me.tablePKA00003.pod_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_ordqtyNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_ordqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_ordqtyNull()
            Me(Me.tablePKA00003.pod_ordqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_stkqtyNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_stkqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_stkqtyNull()
            Me(Me.tablePKA00003.pod_stkqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_wasperNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_wasperColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_wasperNull()
            Me(Me.tablePKA00003.pod_wasperColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_bonqtyNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_bonqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_bonqtyNull()
            Me(Me.tablePKA00003.pod_bonqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_ttlordqtyNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_ttlordqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_ttlordqtyNull()
            Me(Me.tablePKA00003.pod_ttlordqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsumNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.umColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetumNull()
            Me(Me.tablePKA00003.umColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_curcdeNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_curcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_curcdeNull()
            Me(Me.tablePKA00003.pod_curcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_untprcNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_untprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_untprcNull()
            Me(Me.tablePKA00003.pod_untprcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_ttlamtqtyNull() As Boolean
            Return Me.IsNull(Me.tablePKA00003.pod_ttlamtqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_ttlamtqtyNull()
            Me(Me.tablePKA00003.pod_ttlamtqtyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PKA00003RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PKA00003Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PKA00003Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PKA00003Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
