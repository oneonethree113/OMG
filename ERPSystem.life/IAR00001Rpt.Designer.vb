'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3634
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsIAR00001Rpt"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsIAR00001Rpt
    Inherits Global.System.Data.DataSet
    
    Private tableIAR00001 As IAR00001DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("IAR00001")) Is Nothing) Then
                MyBase.Tables.Add(New IAR00001DataTable(ds.Tables("IAR00001")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IAR00001() As IAR00001DataTable
        Get
            Return Me.tableIAR00001
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsIAR00001Rpt = CType(MyBase.Clone,dsIAR00001Rpt)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("IAR00001")) Is Nothing) Then
                MyBase.Tables.Add(New IAR00001DataTable(ds.Tables("IAR00001")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableIAR00001 = CType(MyBase.Tables("IAR00001"),IAR00001DataTable)
        If (initTable = true) Then
            If (Not (Me.tableIAR00001) Is Nothing) Then
                Me.tableIAR00001.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsIAR00001Rpt"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/IAR00001Rpt.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableIAR00001 = New IAR00001DataTable
        MyBase.Tables.Add(Me.tableIAR00001)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIAR00001() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsIAR00001Rpt = New dsIAR00001Rpt
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub IAR00001RowChangeEventHandler(ByVal sender As Object, ByVal e As IAR00001RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IAR00001DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columntype As Global.System.Data.DataColumn
        
        Private columnibi_itmno As Global.System.Data.DataColumn
        
        Private columnibi_engdsc As Global.System.Data.DataColumn
        
        Private columniid_venitm As Global.System.Data.DataColumn
        
        Private columnibi_venno As Global.System.Data.DataColumn
        
        Private columnvbi_vensna As Global.System.Data.DataColumn
        
        Private columnibi_upddat As Global.System.Data.DataColumn
        
        Private columnipi_pckseq As Global.System.Data.DataColumn
        
        Private columnpck_packing As Global.System.Data.DataColumn
        
        Private columndat_packing As Global.System.Data.DataColumn
        
        Private columnimu_basprc As Global.System.Data.DataColumn
        
        Private columniid_ftyprc As Global.System.Data.DataColumn
        
        Private columnnewbasicprice As Global.System.Data.DataColumn
        
        Private columnnewbasicprice2 As Global.System.Data.DataColumn
        
        Private columnpck_qutdat As Global.System.Data.DataColumn
        
        Private columndat_qutdat As Global.System.Data.DataColumn
        
        Private columnbomlist_bef As Global.System.Data.DataColumn
        
        Private columnbomlist_aft As Global.System.Data.DataColumn
        
        Private columnquh_cus1no As Global.System.Data.DataColumn
        
        Private columncbi_cussna_pri As Global.System.Data.DataColumn
        
        Private columnquh_cus2no As Global.System.Data.DataColumn
        
        Private columncbi_cussna_sec As Global.System.Data.DataColumn
        
        Private columnquh_qutno As Global.System.Data.DataColumn
        
        Private columnquh_rvsdat As Global.System.Data.DataColumn
        
        Private columnquh_shpstr As Global.System.Data.DataColumn
        
        Private columnquh_shpend As Global.System.Data.DataColumn
        
        Private columnquh_curcde As Global.System.Data.DataColumn
        
        Private columnqud_basprc As Global.System.Data.DataColumn
        
        Private columnselprc As Global.System.Data.DataColumn
        
        Private columnordqty As Global.System.Data.DataColumn
        
        Private columnyfi_prcfml As Global.System.Data.DataColumn
        
        Private columnsod_fcurcde As Global.System.Data.DataColumn
        
        Private columnsod_ftyprc As Global.System.Data.DataColumn
        
        Private columnsod_shpqty As Global.System.Data.DataColumn
        
        Private columnpod_jobord As Global.System.Data.DataColumn
        
        Private columnibi_cocde As Global.System.Data.DataColumn
        
        Private columncocde As Global.System.Data.DataColumn
        
        Private columncompName As Global.System.Data.DataColumn
        
        Private columnStage As Global.System.Data.DataColumn
        
        Private columnmup_curftyprc As Global.System.Data.DataColumn
        
        Private columndat_curftyprc As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IAR00001"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ibi_itmnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnibi_itmno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ibi_engdscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnibi_engdsc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property iid_venitmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniid_venitm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ibi_vennoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnibi_venno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vbi_vensnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvbi_vensna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ibi_upddatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnibi_upddat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ipi_pckseqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnipi_pckseq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pck_packingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpck_packing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dat_packingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndat_packing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imu_basprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimu_basprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property iid_ftyprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniid_ftyprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property newbasicpriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewbasicprice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property newbasicprice2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewbasicprice2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pck_qutdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpck_qutdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dat_qutdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndat_qutdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bomlist_befColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbomlist_bef
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bomlist_aftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbomlist_aft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_cus1noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_cus1no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cbi_cussna_priColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncbi_cussna_pri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_cus2noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_cus2no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cbi_cussna_secColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncbi_cussna_sec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_qutnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_qutno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_rvsdatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_rvsdat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_shpstrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_shpstr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_shpendColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_shpend
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quh_curcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquh_curcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property qud_basprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnqud_basprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property selprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnselprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ordqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnordqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property yfi_prcfmlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnyfi_prcfml
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sod_fcurcdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsod_fcurcde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sod_ftyprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsod_ftyprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sod_shpqtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsod_shpqty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pod_jobordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpod_jobord
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ibi_cocdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnibi_cocde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cocdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncocde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property compNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mup_curftyprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmup_curftyprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dat_curftyprcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndat_curftyprc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IAR00001Row
            Get
                Return CType(Me.Rows(index),IAR00001Row)
            End Get
        End Property
        
        Public Event IAR00001RowChanging As IAR00001RowChangeEventHandler
        
        Public Event IAR00001RowChanged As IAR00001RowChangeEventHandler
        
        Public Event IAR00001RowDeleting As IAR00001RowChangeEventHandler
        
        Public Event IAR00001RowDeleted As IAR00001RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIAR00001Row(ByVal row As IAR00001Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIAR00001Row( _
                    ByVal type As String,  _
                    ByVal ibi_itmno As String,  _
                    ByVal ibi_engdsc As String,  _
                    ByVal iid_venitm As String,  _
                    ByVal ibi_venno As String,  _
                    ByVal vbi_vensna As String,  _
                    ByVal ibi_upddat As String,  _
                    ByVal ipi_pckseq As String,  _
                    ByVal pck_packing As String,  _
                    ByVal dat_packing As String,  _
                    ByVal imu_basprc As String,  _
                    ByVal iid_ftyprc As String,  _
                    ByVal newbasicprice As String,  _
                    ByVal newbasicprice2 As String,  _
                    ByVal pck_qutdat As String,  _
                    ByVal dat_qutdat As String,  _
                    ByVal bomlist_bef As String,  _
                    ByVal bomlist_aft As String,  _
                    ByVal quh_cus1no As String,  _
                    ByVal cbi_cussna_pri As String,  _
                    ByVal quh_cus2no As String,  _
                    ByVal cbi_cussna_sec As String,  _
                    ByVal quh_qutno As String,  _
                    ByVal quh_rvsdat As String,  _
                    ByVal quh_shpstr As String,  _
                    ByVal quh_shpend As String,  _
                    ByVal quh_curcde As String,  _
                    ByVal qud_basprc As String,  _
                    ByVal selprc As String,  _
                    ByVal ordqty As String,  _
                    ByVal yfi_prcfml As String,  _
                    ByVal sod_fcurcde As String,  _
                    ByVal sod_ftyprc As String,  _
                    ByVal sod_shpqty As String,  _
                    ByVal pod_jobord As String,  _
                    ByVal ibi_cocde As String,  _
                    ByVal cocde As String,  _
                    ByVal compName As String,  _
                    ByVal Stage As String,  _
                    ByVal mup_curftyprc As String,  _
                    ByVal dat_curftyprc As String) As IAR00001Row
            Dim rowIAR00001Row As IAR00001Row = CType(Me.NewRow,IAR00001Row)
            Dim columnValuesArray() As Object = New Object() {type, ibi_itmno, ibi_engdsc, iid_venitm, ibi_venno, vbi_vensna, ibi_upddat, ipi_pckseq, pck_packing, dat_packing, imu_basprc, iid_ftyprc, newbasicprice, newbasicprice2, pck_qutdat, dat_qutdat, bomlist_bef, bomlist_aft, quh_cus1no, cbi_cussna_pri, quh_cus2no, cbi_cussna_sec, quh_qutno, quh_rvsdat, quh_shpstr, quh_shpend, quh_curcde, qud_basprc, selprc, ordqty, yfi_prcfml, sod_fcurcde, sod_ftyprc, sod_shpqty, pod_jobord, ibi_cocde, cocde, compName, Stage, mup_curftyprc, dat_curftyprc}
            rowIAR00001Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowIAR00001Row)
            Return rowIAR00001Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IAR00001DataTable = CType(MyBase.Clone,IAR00001DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IAR00001DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columntype = MyBase.Columns("type")
            Me.columnibi_itmno = MyBase.Columns("ibi_itmno")
            Me.columnibi_engdsc = MyBase.Columns("ibi_engdsc")
            Me.columniid_venitm = MyBase.Columns("iid_venitm")
            Me.columnibi_venno = MyBase.Columns("ibi_venno")
            Me.columnvbi_vensna = MyBase.Columns("vbi_vensna")
            Me.columnibi_upddat = MyBase.Columns("ibi_upddat")
            Me.columnipi_pckseq = MyBase.Columns("ipi_pckseq")
            Me.columnpck_packing = MyBase.Columns("pck_packing")
            Me.columndat_packing = MyBase.Columns("dat_packing")
            Me.columnimu_basprc = MyBase.Columns("imu_basprc")
            Me.columniid_ftyprc = MyBase.Columns("iid_ftyprc")
            Me.columnnewbasicprice = MyBase.Columns("newbasicprice")
            Me.columnnewbasicprice2 = MyBase.Columns("newbasicprice2")
            Me.columnpck_qutdat = MyBase.Columns("pck_qutdat")
            Me.columndat_qutdat = MyBase.Columns("dat_qutdat")
            Me.columnbomlist_bef = MyBase.Columns("bomlist_bef")
            Me.columnbomlist_aft = MyBase.Columns("bomlist_aft")
            Me.columnquh_cus1no = MyBase.Columns("quh_cus1no")
            Me.columncbi_cussna_pri = MyBase.Columns("cbi_cussna_pri")
            Me.columnquh_cus2no = MyBase.Columns("quh_cus2no")
            Me.columncbi_cussna_sec = MyBase.Columns("cbi_cussna_sec")
            Me.columnquh_qutno = MyBase.Columns("quh_qutno")
            Me.columnquh_rvsdat = MyBase.Columns("quh_rvsdat")
            Me.columnquh_shpstr = MyBase.Columns("quh_shpstr")
            Me.columnquh_shpend = MyBase.Columns("quh_shpend")
            Me.columnquh_curcde = MyBase.Columns("quh_curcde")
            Me.columnqud_basprc = MyBase.Columns("qud_basprc")
            Me.columnselprc = MyBase.Columns("selprc")
            Me.columnordqty = MyBase.Columns("ordqty")
            Me.columnyfi_prcfml = MyBase.Columns("yfi_prcfml")
            Me.columnsod_fcurcde = MyBase.Columns("sod_fcurcde")
            Me.columnsod_ftyprc = MyBase.Columns("sod_ftyprc")
            Me.columnsod_shpqty = MyBase.Columns("sod_shpqty")
            Me.columnpod_jobord = MyBase.Columns("pod_jobord")
            Me.columnibi_cocde = MyBase.Columns("ibi_cocde")
            Me.columncocde = MyBase.Columns("cocde")
            Me.columncompName = MyBase.Columns("compName")
            Me.columnStage = MyBase.Columns("Stage")
            Me.columnmup_curftyprc = MyBase.Columns("mup_curftyprc")
            Me.columndat_curftyprc = MyBase.Columns("dat_curftyprc")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columntype = New Global.System.Data.DataColumn("type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype)
            Me.columnibi_itmno = New Global.System.Data.DataColumn("ibi_itmno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnibi_itmno)
            Me.columnibi_engdsc = New Global.System.Data.DataColumn("ibi_engdsc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnibi_engdsc)
            Me.columniid_venitm = New Global.System.Data.DataColumn("iid_venitm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniid_venitm)
            Me.columnibi_venno = New Global.System.Data.DataColumn("ibi_venno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnibi_venno)
            Me.columnvbi_vensna = New Global.System.Data.DataColumn("vbi_vensna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvbi_vensna)
            Me.columnibi_upddat = New Global.System.Data.DataColumn("ibi_upddat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnibi_upddat)
            Me.columnipi_pckseq = New Global.System.Data.DataColumn("ipi_pckseq", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnipi_pckseq)
            Me.columnpck_packing = New Global.System.Data.DataColumn("pck_packing", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpck_packing)
            Me.columndat_packing = New Global.System.Data.DataColumn("dat_packing", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndat_packing)
            Me.columnimu_basprc = New Global.System.Data.DataColumn("imu_basprc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimu_basprc)
            Me.columniid_ftyprc = New Global.System.Data.DataColumn("iid_ftyprc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniid_ftyprc)
            Me.columnnewbasicprice = New Global.System.Data.DataColumn("newbasicprice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewbasicprice)
            Me.columnnewbasicprice2 = New Global.System.Data.DataColumn("newbasicprice2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewbasicprice2)
            Me.columnpck_qutdat = New Global.System.Data.DataColumn("pck_qutdat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpck_qutdat)
            Me.columndat_qutdat = New Global.System.Data.DataColumn("dat_qutdat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndat_qutdat)
            Me.columnbomlist_bef = New Global.System.Data.DataColumn("bomlist_bef", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbomlist_bef)
            Me.columnbomlist_aft = New Global.System.Data.DataColumn("bomlist_aft", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbomlist_aft)
            Me.columnquh_cus1no = New Global.System.Data.DataColumn("quh_cus1no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_cus1no)
            Me.columncbi_cussna_pri = New Global.System.Data.DataColumn("cbi_cussna_pri", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncbi_cussna_pri)
            Me.columnquh_cus2no = New Global.System.Data.DataColumn("quh_cus2no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_cus2no)
            Me.columncbi_cussna_sec = New Global.System.Data.DataColumn("cbi_cussna_sec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncbi_cussna_sec)
            Me.columnquh_qutno = New Global.System.Data.DataColumn("quh_qutno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_qutno)
            Me.columnquh_rvsdat = New Global.System.Data.DataColumn("quh_rvsdat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_rvsdat)
            Me.columnquh_shpstr = New Global.System.Data.DataColumn("quh_shpstr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_shpstr)
            Me.columnquh_shpend = New Global.System.Data.DataColumn("quh_shpend", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_shpend)
            Me.columnquh_curcde = New Global.System.Data.DataColumn("quh_curcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquh_curcde)
            Me.columnqud_basprc = New Global.System.Data.DataColumn("qud_basprc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnqud_basprc)
            Me.columnselprc = New Global.System.Data.DataColumn("selprc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnselprc)
            Me.columnordqty = New Global.System.Data.DataColumn("ordqty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnordqty)
            Me.columnyfi_prcfml = New Global.System.Data.DataColumn("yfi_prcfml", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyfi_prcfml)
            Me.columnsod_fcurcde = New Global.System.Data.DataColumn("sod_fcurcde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsod_fcurcde)
            Me.columnsod_ftyprc = New Global.System.Data.DataColumn("sod_ftyprc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsod_ftyprc)
            Me.columnsod_shpqty = New Global.System.Data.DataColumn("sod_shpqty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsod_shpqty)
            Me.columnpod_jobord = New Global.System.Data.DataColumn("pod_jobord", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpod_jobord)
            Me.columnibi_cocde = New Global.System.Data.DataColumn("ibi_cocde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnibi_cocde)
            Me.columncocde = New Global.System.Data.DataColumn("cocde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncocde)
            Me.columncompName = New Global.System.Data.DataColumn("compName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompName)
            Me.columnStage = New Global.System.Data.DataColumn("Stage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStage)
            Me.columnmup_curftyprc = New Global.System.Data.DataColumn("mup_curftyprc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmup_curftyprc)
            Me.columndat_curftyprc = New Global.System.Data.DataColumn("dat_curftyprc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndat_curftyprc)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIAR00001Row() As IAR00001Row
            Return CType(Me.NewRow,IAR00001Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IAR00001Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IAR00001Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IAR00001RowChangedEvent) Is Nothing) Then
                RaiseEvent IAR00001RowChanged(Me, New IAR00001RowChangeEvent(CType(e.Row,IAR00001Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IAR00001RowChangingEvent) Is Nothing) Then
                RaiseEvent IAR00001RowChanging(Me, New IAR00001RowChangeEvent(CType(e.Row,IAR00001Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IAR00001RowDeletedEvent) Is Nothing) Then
                RaiseEvent IAR00001RowDeleted(Me, New IAR00001RowChangeEvent(CType(e.Row,IAR00001Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IAR00001RowDeletingEvent) Is Nothing) Then
                RaiseEvent IAR00001RowDeleting(Me, New IAR00001RowChangeEvent(CType(e.Row,IAR00001Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIAR00001Row(ByVal row As IAR00001Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsIAR00001Rpt = New dsIAR00001Rpt
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IAR00001DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IAR00001Row
        Inherits Global.System.Data.DataRow
        
        Private tableIAR00001 As IAR00001DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIAR00001 = CType(Me.Table,IAR00001DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property type() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'type' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ibi_itmno() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.ibi_itmnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ibi_itmno' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.ibi_itmnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ibi_engdsc() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.ibi_engdscColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ibi_engdsc' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.ibi_engdscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property iid_venitm() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.iid_venitmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'iid_venitm' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.iid_venitmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ibi_venno() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.ibi_vennoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ibi_venno' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.ibi_vennoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vbi_vensna() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.vbi_vensnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vbi_vensna' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.vbi_vensnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ibi_upddat() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.ibi_upddatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ibi_upddat' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.ibi_upddatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ipi_pckseq() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.ipi_pckseqColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ipi_pckseq' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.ipi_pckseqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pck_packing() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.pck_packingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pck_packing' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.pck_packingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dat_packing() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.dat_packingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dat_packing' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.dat_packingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imu_basprc() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.imu_basprcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'imu_basprc' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.imu_basprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property iid_ftyprc() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.iid_ftyprcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'iid_ftyprc' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.iid_ftyprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property newbasicprice() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.newbasicpriceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newbasicprice' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.newbasicpriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property newbasicprice2() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.newbasicprice2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newbasicprice2' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.newbasicprice2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pck_qutdat() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.pck_qutdatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pck_qutdat' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.pck_qutdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dat_qutdat() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.dat_qutdatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dat_qutdat' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.dat_qutdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bomlist_bef() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.bomlist_befColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bomlist_bef' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.bomlist_befColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bomlist_aft() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.bomlist_aftColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bomlist_aft' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.bomlist_aftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_cus1no() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.quh_cus1noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_cus1no' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.quh_cus1noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cbi_cussna_pri() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.cbi_cussna_priColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cbi_cussna_pri' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.cbi_cussna_priColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_cus2no() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.quh_cus2noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_cus2no' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.quh_cus2noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cbi_cussna_sec() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.cbi_cussna_secColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cbi_cussna_sec' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.cbi_cussna_secColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_qutno() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.quh_qutnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_qutno' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.quh_qutnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_rvsdat() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.quh_rvsdatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_rvsdat' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.quh_rvsdatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_shpstr() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.quh_shpstrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_shpstr' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.quh_shpstrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_shpend() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.quh_shpendColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_shpend' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.quh_shpendColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quh_curcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.quh_curcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quh_curcde' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.quh_curcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property qud_basprc() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.qud_basprcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'qud_basprc' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.qud_basprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property selprc() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.selprcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'selprc' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.selprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ordqty() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.ordqtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ordqty' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.ordqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property yfi_prcfml() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.yfi_prcfmlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'yfi_prcfml' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.yfi_prcfmlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sod_fcurcde() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.sod_fcurcdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sod_fcurcde' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.sod_fcurcdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sod_ftyprc() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.sod_ftyprcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sod_ftyprc' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.sod_ftyprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sod_shpqty() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.sod_shpqtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sod_shpqty' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.sod_shpqtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pod_jobord() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.pod_jobordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pod_jobord' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.pod_jobordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ibi_cocde() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.ibi_cocdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ibi_cocde' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.ibi_cocdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cocde() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.cocdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cocde' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.cocdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property compName() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.compNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compName' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.compNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Stage() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.StageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stage' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.StageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mup_curftyprc() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.mup_curftyprcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mup_curftyprc' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.mup_curftyprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dat_curftyprc() As String
            Get
                Try 
                    Return CType(Me(Me.tableIAR00001.dat_curftyprcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dat_curftyprc' in table 'IAR00001' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableIAR00001.dat_curftyprcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstypeNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettypeNull()
            Me(Me.tableIAR00001.typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isibi_itmnoNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.ibi_itmnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setibi_itmnoNull()
            Me(Me.tableIAR00001.ibi_itmnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isibi_engdscNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.ibi_engdscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setibi_engdscNull()
            Me(Me.tableIAR00001.ibi_engdscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isiid_venitmNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.iid_venitmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setiid_venitmNull()
            Me(Me.tableIAR00001.iid_venitmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isibi_vennoNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.ibi_vennoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setibi_vennoNull()
            Me(Me.tableIAR00001.ibi_vennoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isvbi_vensnaNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.vbi_vensnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setvbi_vensnaNull()
            Me(Me.tableIAR00001.vbi_vensnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isibi_upddatNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.ibi_upddatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setibi_upddatNull()
            Me(Me.tableIAR00001.ibi_upddatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isipi_pckseqNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.ipi_pckseqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setipi_pckseqNull()
            Me(Me.tableIAR00001.ipi_pckseqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispck_packingNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.pck_packingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpck_packingNull()
            Me(Me.tableIAR00001.pck_packingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdat_packingNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.dat_packingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdat_packingNull()
            Me(Me.tableIAR00001.dat_packingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isimu_basprcNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.imu_basprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setimu_basprcNull()
            Me(Me.tableIAR00001.imu_basprcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isiid_ftyprcNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.iid_ftyprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setiid_ftyprcNull()
            Me(Me.tableIAR00001.iid_ftyprcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnewbasicpriceNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.newbasicpriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnewbasicpriceNull()
            Me(Me.tableIAR00001.newbasicpriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnewbasicprice2Null() As Boolean
            Return Me.IsNull(Me.tableIAR00001.newbasicprice2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnewbasicprice2Null()
            Me(Me.tableIAR00001.newbasicprice2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispck_qutdatNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.pck_qutdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpck_qutdatNull()
            Me(Me.tableIAR00001.pck_qutdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdat_qutdatNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.dat_qutdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdat_qutdatNull()
            Me(Me.tableIAR00001.dat_qutdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbomlist_befNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.bomlist_befColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbomlist_befNull()
            Me(Me.tableIAR00001.bomlist_befColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbomlist_aftNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.bomlist_aftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbomlist_aftNull()
            Me(Me.tableIAR00001.bomlist_aftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_cus1noNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.quh_cus1noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_cus1noNull()
            Me(Me.tableIAR00001.quh_cus1noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscbi_cussna_priNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.cbi_cussna_priColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcbi_cussna_priNull()
            Me(Me.tableIAR00001.cbi_cussna_priColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_cus2noNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.quh_cus2noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_cus2noNull()
            Me(Me.tableIAR00001.quh_cus2noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscbi_cussna_secNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.cbi_cussna_secColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcbi_cussna_secNull()
            Me(Me.tableIAR00001.cbi_cussna_secColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_qutnoNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.quh_qutnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_qutnoNull()
            Me(Me.tableIAR00001.quh_qutnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_rvsdatNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.quh_rvsdatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_rvsdatNull()
            Me(Me.tableIAR00001.quh_rvsdatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_shpstrNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.quh_shpstrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_shpstrNull()
            Me(Me.tableIAR00001.quh_shpstrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_shpendNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.quh_shpendColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_shpendNull()
            Me(Me.tableIAR00001.quh_shpendColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquh_curcdeNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.quh_curcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquh_curcdeNull()
            Me(Me.tableIAR00001.quh_curcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isqud_basprcNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.qud_basprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setqud_basprcNull()
            Me(Me.tableIAR00001.qud_basprcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsselprcNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.selprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetselprcNull()
            Me(Me.tableIAR00001.selprcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsordqtyNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.ordqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetordqtyNull()
            Me(Me.tableIAR00001.ordqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isyfi_prcfmlNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.yfi_prcfmlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setyfi_prcfmlNull()
            Me(Me.tableIAR00001.yfi_prcfmlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issod_fcurcdeNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.sod_fcurcdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsod_fcurcdeNull()
            Me(Me.tableIAR00001.sod_fcurcdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issod_ftyprcNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.sod_ftyprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsod_ftyprcNull()
            Me(Me.tableIAR00001.sod_ftyprcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issod_shpqtyNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.sod_shpqtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsod_shpqtyNull()
            Me(Me.tableIAR00001.sod_shpqtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispod_jobordNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.pod_jobordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpod_jobordNull()
            Me(Me.tableIAR00001.pod_jobordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isibi_cocdeNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.ibi_cocdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setibi_cocdeNull()
            Me(Me.tableIAR00001.ibi_cocdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscocdeNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.cocdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcocdeNull()
            Me(Me.tableIAR00001.cocdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscompNameNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.compNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcompNameNull()
            Me(Me.tableIAR00001.compNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStageNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.StageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStageNull()
            Me(Me.tableIAR00001.StageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismup_curftyprcNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.mup_curftyprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmup_curftyprcNull()
            Me(Me.tableIAR00001.mup_curftyprcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdat_curftyprcNull() As Boolean
            Return Me.IsNull(Me.tableIAR00001.dat_curftyprcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdat_curftyprcNull()
            Me(Me.tableIAR00001.dat_curftyprcColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IAR00001RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IAR00001Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IAR00001Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IAR00001Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
